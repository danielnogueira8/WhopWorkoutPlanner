// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../core/resource.mjs";
import { CursorPage } from "../core/pagination.mjs";
import { path } from "../internal/utils/path.mjs";
export class Memberships extends APIResource {
    /**
     * Retrieves a membership by ID or license key
     *
     * Required permissions:
     *
     * - `member:basic:read`
     */
    retrieve(id, options) {
        return this._client.get(path `/memberships/${id}`, options);
    }
    /**
     * Update a membership
     *
     * Required permissions:
     *
     * - `member:manage`
     * - `member:basic:read`
     */
    update(id, body = {}, options) {
        return this._client.patch(path `/memberships/${id}`, { body, ...options });
    }
    /**
     * Lists memberships
     *
     * Required permissions:
     *
     * - `member:basic:read`
     */
    list(query, options) {
        return this._client.getAPIList('/memberships', (CursorPage), { query, ...options });
    }
    /**
     * Cancels a membership either immediately or at the end of the current billing
     * period
     *
     * Required permissions:
     *
     * - `member:manage`
     * - `member:basic:read`
     */
    cancel(id, body = {}, options) {
        return this._client.post(path `/memberships/${id}/cancel`, { body, ...options });
    }
    /**
     * Pauses a membership's payments
     *
     * Required permissions:
     *
     * - `member:manage`
     * - `member:basic:read`
     */
    pause(id, body = {}, options) {
        return this._client.post(path `/memberships/${id}/pause`, { body, ...options });
    }
    /**
     * Resumes a membership's payments
     *
     * Required permissions:
     *
     * - `member:manage`
     * - `member:basic:read`
     */
    resume(id, options) {
        return this._client.post(path `/memberships/${id}/resume`, options);
    }
}
//# sourceMappingURL=memberships.mjs.map