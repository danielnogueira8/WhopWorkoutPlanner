"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Payments = void 0;
const resource_1 = require("../core/resource.js");
const pagination_1 = require("../core/pagination.js");
const path_1 = require("../internal/utils/path.js");
class Payments extends resource_1.APIResource {
    /**
     * Retrieves a payment by ID
     *
     * Required permissions:
     *
     * - `payment:basic:read`
     * - `plan:basic:read`
     * - `access_pass:basic:read`
     * - `member:email:read`
     * - `member:basic:read`
     * - `member:phone:read`
     * - `promo_code:basic:read`
     *
     * @example
     * ```ts
     * const payment = await client.payments.retrieve(
     *   'pay_xxxxxxxxxxxxxx',
     * );
     * ```
     */
    retrieve(id, options) {
        return this._client.get((0, path_1.path) `/payments/${id}`, options);
    }
    /**
     * Lists payments
     *
     * Required permissions:
     *
     * - `payment:basic:read`
     * - `plan:basic:read`
     * - `access_pass:basic:read`
     * - `member:email:read`
     * - `member:basic:read`
     * - `member:phone:read`
     * - `promo_code:basic:read`
     *
     * @example
     * ```ts
     * // Automatically fetches more pages as needed.
     * for await (const paymentListResponse of client.payments.list(
     *   { company_id: 'biz_xxxxxxxxxxxxxx' },
     * )) {
     *   // ...
     * }
     * ```
     */
    list(query, options) {
        return this._client.getAPIList('/payments', (pagination_1.CursorPage), { query, ...options });
    }
    /**
     * Refunds a payment
     *
     * Required permissions:
     *
     * - `payment:manage`
     * - `plan:basic:read`
     * - `access_pass:basic:read`
     * - `member:email:read`
     * - `member:basic:read`
     * - `member:phone:read`
     * - `promo_code:basic:read`
     *
     * @example
     * ```ts
     * const payment = await client.payments.refund(
     *   'pay_xxxxxxxxxxxxxx',
     * );
     * ```
     */
    refund(id, body = {}, options) {
        return this._client.post((0, path_1.path) `/payments/${id}/refund`, { body, ...options });
    }
    /**
     * Retries a payment
     *
     * Required permissions:
     *
     * - `payment:manage`
     * - `plan:basic:read`
     * - `access_pass:basic:read`
     * - `member:email:read`
     * - `member:basic:read`
     * - `member:phone:read`
     * - `promo_code:basic:read`
     *
     * @example
     * ```ts
     * const payment = await client.payments.retry(
     *   'pay_xxxxxxxxxxxxxx',
     * );
     * ```
     */
    retry(id, options) {
        return this._client.post((0, path_1.path) `/payments/${id}/retry`, options);
    }
    /**
     * Voids a payment
     *
     * Required permissions:
     *
     * - `payment:manage`
     * - `plan:basic:read`
     * - `access_pass:basic:read`
     * - `member:email:read`
     * - `member:basic:read`
     * - `member:phone:read`
     * - `promo_code:basic:read`
     *
     * @example
     * ```ts
     * const payment = await client.payments.void(
     *   'pay_xxxxxxxxxxxxxx',
     * );
     * ```
     */
    void(id, options) {
        return this._client.post((0, path_1.path) `/payments/${id}/void`, options);
    }
}
exports.Payments = Payments;
//# sourceMappingURL=payments.js.map