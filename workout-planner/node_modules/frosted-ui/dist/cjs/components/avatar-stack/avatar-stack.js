"use strict";
'use client';
Object.defineProperty(exports, "__esModule", { value: true });
exports.Root = exports.Avatar = void 0;
const tslib_1 = require("tslib");
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const React = tslib_1.__importStar(require("react"));
const avatar_1 = require("../avatar");
const avatar_stack_props_1 = require("./avatar-stack.props");
const AvatarStackContext = React.createContext({
    size: avatar_stack_props_1.avatarStackPropDefs.size.default,
});
const AvatarStackRoot = (props) => {
    const { className, children, size = avatar_stack_props_1.avatarStackPropDefs.size.default, ...rootProps } = props;
    // Convert children to array and reverse it only once during render
    const reversedChildren = React.useMemo(() => React.Children.toArray(children).reverse(), [children]);
    return (React.createElement("div", { ...rootProps, className: (0, classnames_1.default)('fui-AvatarStackRoot', className, `fui-r-size-${size}`) },
        React.createElement(AvatarStackContext.Provider, { value: { size } }, reversedChildren)));
};
exports.Root = AvatarStackRoot;
AvatarStackRoot.displayName = 'AvatarStackRoot';
const AvatarStackAvatar = ({ className, ...props }) => {
    const { size } = React.useContext(AvatarStackContext);
    return React.createElement(avatar_1.Avatar, { size: size, className: (0, classnames_1.default)('fui-AvatarStackAvatar', className), ...props });
};
exports.Avatar = AvatarStackAvatar;
AvatarStackAvatar.displayName = 'AvatarStackAvatar';
//# sourceMappingURL=avatar-stack.js.map