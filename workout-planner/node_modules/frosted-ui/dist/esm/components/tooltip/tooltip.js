'use client';
import classNames from 'classnames';
import { Tooltip as TooltipPrimitive } from 'radix-ui';
import * as React from 'react';
import { Theme } from '../../theme';
import { Text } from '../text';
const Tooltip = (props) => {
    const { children, className, open, defaultOpen, onOpenChange, delayDuration, disableHoverableContent, content, container, forceMount, ...tooltipContentProps } = props;
    const rootProps = {
        open,
        defaultOpen,
        onOpenChange,
        delayDuration,
        disableHoverableContent,
    };
    return (React.createElement(TooltipPrimitive.Root, { ...rootProps },
        React.createElement(TooltipPrimitive.Trigger, { asChild: true }, children),
        React.createElement(TooltipPrimitive.Portal, { container: container, forceMount: forceMount },
            React.createElement(Theme, { asChild: true },
                React.createElement(TooltipPrimitive.Content, { sideOffset: 4, collisionPadding: 10, ...tooltipContentProps, className: classNames('fui-TooltipContent', className) },
                    React.createElement(Text, { as: "p", className: "fui-TooltipText", size: "1" }, content),
                    React.createElement(TooltipPrimitive.Arrow, { className: "fui-TooltipArrow" }))))));
};
Tooltip.displayName = 'Tooltip';
export { Tooltip };
//# sourceMappingURL=tooltip.js.map