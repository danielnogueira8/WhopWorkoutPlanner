/// <reference types="node" />
/// <reference types="node" />
import http from "node:http";
export * from "./parse-cli-options";
export type RunOptions = {
    proxyPort?: number;
    upstreamPort?: number;
    npmCommand?: string;
    command?: string;
    appComponentOrigins?: Record<string, string>;
    standalone?: boolean;
};
export declare function runAndKill(opts: RunOptions): Promise<void>;
export declare function run(opts: RunOptions): Promise<{
    process: import("child_process").ChildProcessWithoutNullStreams | undefined;
    proxy: http.Server<typeof http.IncomingMessage, typeof http.ServerResponse>;
    kill: () => void;
}>;
export declare function runDevServer({ upstreamPort: port, npmCommand, command, }: RunOptions): Promise<{
    process: import("child_process").ChildProcessWithoutNullStreams;
    port: number;
}>;
export declare function runProxy({ upstreamPort, proxyPort: proxyPortParam, appComponentOriginOverrides, standalone, }: {
    proxyPort?: number;
    upstreamPort: number;
    appComponentOriginOverrides?: Record<string, string>;
    standalone?: boolean;
}): Promise<http.Server<typeof http.IncomingMessage, typeof http.ServerResponse>>;
//# sourceMappingURL=index.d.ts.map