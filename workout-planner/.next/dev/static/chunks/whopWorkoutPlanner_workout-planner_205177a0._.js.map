{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/src/components/workouts/queries.ts"],"sourcesContent":["import { getApiUrl } from '~/components/whop-context/whop-queries'\n\nexport type WorkoutPlanSummary = {\n\tid: string\n\ttitle: string\n\tdescription: string | null\n\tupdatedAt: string\n\tdaysCount: number\n\tassignedCount: number\n}\n\nexport const plansQuery = (experienceId: string) => ({\n\tqueryKey: ['workout-plans', experienceId],\n\tqueryFn: async () => {\n\t\tconst res = await fetch(getApiUrl(`/api/experience/${experienceId}/workouts`))\n\t\tif (!res.ok) throw new Error('Failed to fetch plans')\n\t\treturn res.json() as Promise<WorkoutPlanSummary[]>\n\t},\n})\n\nexport type WorkoutExercise = {\n\tid: string\n\tdayId: string\n\tname: string\n\treps: number\n\tsets: number\n\tcurrentWeight: number\n\tmaxWeight: number\n\torderIndex: number\n}\n\nexport type WorkoutDay = {\n\tid: string\n\tplanId: string\n\tname: string\n\tdayIndex: number\n\texercises: WorkoutExercise[]\n}\n\nexport type WorkoutPlanDetail = {\n\tid: string\n\ttitle: string\n\tdescription: string | null\n\tcreatedByWhopUserId: string\n\tcreatedAt: string\n\tupdatedAt: string\n\tdays: WorkoutDay[]\n}\n\nexport const planDetailQuery = (experienceId: string, planId: string) => ({\n\tqueryKey: ['workout-plan', experienceId, planId],\n\tqueryFn: async () => {\n\t\tconst res = await fetch(\n\t\t\tgetApiUrl(`/api/experience/${experienceId}/workouts/${planId}`),\n\t\t)\n\t\tif (!res.ok) throw new Error('Failed to fetch plan')\n\t\treturn res.json() as Promise<WorkoutPlanDetail>\n\t},\n})\n\nexport const createPlanMutation = (experienceId: string) => ({\n\tmutationFn: async (payload: { title: string; description?: string }) => {\n\t\tconst res = await fetch(getApiUrl(`/api/experience/${experienceId}/workouts`), {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tif (!res.ok) throw new Error('Failed to create plan')\n\t\treturn res.json()\n\t},\n})\n\nexport const assignPlanMutation = (experienceId: string, planId: string) => ({\n\tmutationFn: async (payload: { whopUserId: string }) => {\n\t\tconst res = await fetch(\n\t\t\tgetApiUrl(`/api/experience/${experienceId}/workouts/${planId}/assign`),\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t},\n\t\t)\n\t\tif (!res.ok) throw new Error('Failed to assign plan')\n\t\treturn res.json()\n\t},\n})\n\nexport const updatePlanMutation = (experienceId: string, planId: string) => ({\n\tmutationFn: async (payload: { title?: string; description?: string | null }) => {\n\t\tconst res = await fetch(\n\t\t\tgetApiUrl(`/api/experience/${experienceId}/workouts/${planId}`),\n\t\t\t{\n\t\t\t\tmethod: 'PUT',\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\tbody: JSON.stringify(payload),\n\t\t\t},\n\t\t)\n\t\tif (!res.ok) throw new Error('Failed to update plan')\n\t\treturn res.json()\n\t},\n})\n\nexport type CompanyUser = { id: string; username: string; name: string }\n\nexport const usersQuery = (experienceId: string, q?: string) => ({\n\tqueryKey: ['users', experienceId, q ?? ''],\n\tqueryFn: async () => {\n\t\tconst url = new URL(getApiUrl(`/api/experience/${experienceId}/users`), 'http://localhost')\n\t\tif (q) url.searchParams.set('q', q)\n\t\tconst path = url.pathname + (url.search ? `?${url.searchParams.toString()}` : '')\n\t\tconst res = await fetch(getApiUrl(path))\n\t\tif (!res.ok) throw new Error('Failed to fetch users')\n\t\treturn res.json() as Promise<CompanyUser[]>\n\t},\n})\n\nexport type InboxMessage = {\n\tid: string\n\tconversationUserId: string\n\tsenderUserId: string\n\tcontent: string\n\tcreatedAt: string\n}\n\nexport const inboxQuery = (experienceId: string, conversationUserId?: string) => ({\n\tqueryKey: ['inbox', experienceId, conversationUserId ?? 'me'],\n\tqueryFn: async () => {\n\t\tconst url = new URL(getApiUrl(`/api/experience/${experienceId}/inbox`), 'http://localhost')\n\t\tif (conversationUserId) url.searchParams.set('userId', conversationUserId)\n\t\tconst path = url.pathname + (url.search ? `?${url.searchParams.toString()}` : '')\n\t\tconst res = await fetch(getApiUrl(path))\n\t\tif (!res.ok) throw new Error('Failed to fetch messages')\n\t\treturn res.json() as Promise<InboxMessage[]>\n\t},\n})\n\nexport const sendMessageMutation = (experienceId: string) => ({\n\tmutationFn: async (payload: { content: string; userId?: string }) => {\n\t\tconst res = await fetch(getApiUrl(`/api/experience/${experienceId}/inbox`), {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload),\n\t\t})\n\t\tif (!res.ok) throw new Error('Failed to send message')\n\t\treturn res.json()\n\t},\n})\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/src/app/experiences/%5BexperienceId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useIframeSdk } from \"@whop/react\";\nimport Link from \"next/link\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Button, Card, TextField, Dialog } from \"frosted-ui\";\nimport { useRouter } from \"next/navigation\";\nimport { useWhop } from \"~/components/whop-context\";\nimport { receiptsQuery } from \"~/components/whop-context/whop-queries\";\nimport { assignPlanMutation, createPlanMutation, plansQuery, updatePlanMutation, usersQuery } from \"~/components/workouts/queries\";\n\nexport default function Page() {\n  const iframeSdk = useIframeSdk();\n  const { experience, user, access } = useWhop();\n  const isAdmin = access.accessLevel === \"owner\" || access.accessLevel === \"admin\";\n  const [newPlanOpen, setNewPlanOpen] = useState(false);\n  const [newPlanTitle, setNewPlanTitle] = useState(\"\");\n  const [assignUserId, setAssignUserId] = useState(\"\");\n  const [editPlanId, setEditPlanId] = useState<string | null>(null);\n  const [editPlanTitle, setEditPlanTitle] = useState(\"\");\n  const [userSearch, setUserSearch] = useState(\"\");\n  const qc = useQueryClient();\n  const router = useRouter();\n\n  const { data: plans, isLoading: isLoadingPlans } = useQuery(plansQuery(experience.id));\n  const { data: users, isLoading: isLoadingUsers } = useQuery({ ...usersQuery(experience.id, userSearch), enabled: isAdmin });\n\n  const createPlan = useMutation({\n    mutationFn: createPlanMutation(experience.id).mutationFn,\n    onSuccess: () => {\n      qc.invalidateQueries({ queryKey: [\"workout-plans\", experience.id] });\n      setNewPlanOpen(false);\n      setNewPlanTitle(\"\");\n    },\n  });\n\n  const assignPlan = useMutation({\n    mutationFn: async (vars: { planId: string; whopUserId: string }) =>\n      assignPlanMutation(experience.id, vars.planId).mutationFn({ whopUserId: vars.whopUserId }),\n    onSuccess: () => {\n      qc.invalidateQueries({ queryKey: [\"workout-plans\", experience.id] });\n      setAssignUserId(\"\");\n    },\n  });\n\n  const updatePlan = useMutation({\n    mutationFn: async () => {\n      if (!editPlanId) return\n      return updatePlanMutation(experience.id, editPlanId).mutationFn({ title: editPlanTitle })\n    },\n    onSuccess: () => {\n      qc.invalidateQueries({ queryKey: [\"workout-plans\", experience.id] });\n      setEditPlanId(null);\n      setEditPlanTitle(\"\");\n    },\n  });\n\n  const userPlans = useMemo(() => plans ?? [], [plans]);\n\n  useEffect(() => {\n    if (!access) return;\n    const isAdmin = access.accessLevel === \"owner\" || access.accessLevel === \"admin\";\n    const target = isAdmin\n      ? `/experiences/${experience.id}/dashboard`\n      : `/experiences/${experience.id}/workouts`;\n    router.replace(target);\n  }, [access, experience.id, router]);\n\n  return (\n    <div className=\"min-h-screen w-full p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <div className=\"text-sm opacity-70\">Experience</div>\n          <div className=\"text-xl font-semibold\">{experience.name}</div>\n        </div>\n        {isAdmin && (\n          <Dialog.Root open={newPlanOpen} onOpenChange={setNewPlanOpen}>\n            <Dialog.Trigger asChild>\n              <Button variant=\"solid\">New Plan</Button>\n            </Dialog.Trigger>\n            <Dialog.Content>\n              <Dialog.Title>Create plan</Dialog.Title>\n              <div className=\"mt-4\">\n                <TextField.Input\n                  placeholder=\"Plan title\"\n                  value={newPlanTitle}\n                  onChange={(e: any) => setNewPlanTitle(e.target.value)}\n                />\n              </div>\n              <div className=\"mt-4 flex justify-end\">\n                <Button\n                  disabled={!newPlanTitle || createPlan.isPending}\n                  onClick={() => createPlan.mutate({ title: newPlanTitle })}\n                >\n                  {createPlan.isPending ? \"Creating...\" : \"Create\"}\n                </Button>\n              </div>\n            </Dialog.Content>\n          </Dialog.Root>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card>\n          <div className=\"p-4\">\n            <div className=\"text-sm opacity-70 mb-1\">Signed in as</div>\n            <div className=\"font-medium\">{user.name} (@{user.username})</div>\n            <div className=\"text-xs opacity-70 mt-1\">Access: {access.accessLevel}</div>\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-4\">\n            <div className=\"text-sm opacity-70 mb-1\">My Workouts</div>\n            {isLoadingPlans ? (\n              <div className=\"text-sm opacity-70\">Loading...</div>\n            ) : userPlans.length === 0 ? (\n              <div className=\"text-sm opacity-70\">No workouts assigned yet.</div>\n            ) : (\n              <div className=\"space-y-2\">\n                {userPlans.map((p) => (\n                  <div key={p.id} className=\"flex items-center justify-between\">\n                    <div>\n                      <div className=\"font-medium\">{p.title}</div>\n                      <div className=\"text-xs opacity-70\">\n                        {p.daysCount} days • {p.assignedCount} assigned\n                      </div>\n                    </div>\n                    {isAdmin && (\n                      <div className=\"flex items-center gap-2\">\n                        <Button size=\"sm\" variant=\"soft\" onClick={() => { setEditPlanId(p.id); setEditPlanTitle(p.title); }}>\n                          Edit\n                        </Button>\n                        <TextField.Input\n                          placeholder=\"Whop user id\"\n                          value={assignUserId}\n                          onChange={(e: any) => setAssignUserId(e.target.value)}\n                          style={{ width: 160 }}\n                        />\n                        <Button\n                          size=\"sm\"\n                          disabled={!assignUserId || assignPlan.isPending}\n                          onClick={() => assignPlan.mutate({ planId: p.id, whopUserId: assignUserId })}\n                        >\n                          Assign\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </Card>\n\n        {isAdmin && (\n          <Card>\n            <div className=\"p-4\">\n              <div className=\"text-sm opacity-70 mb-2\">Users</div>\n              <div className=\"mb-3\">\n                <TextField.Input placeholder=\"Search users\" value={userSearch} onChange={(e: any) => setUserSearch(e.target.value)} />\n              </div>\n              {isLoadingUsers ? (\n                <div className=\"text-sm opacity-70\">Loading users...</div>\n              ) : (\n                <div className=\"space-y-2 max-h-80 overflow-auto\">\n                  {(users ?? []).map((u) => (\n                    <div key={u.id} className=\"flex items-center justify-between text-sm\">\n                      <div>\n                        <div className=\"font-medium\">{u.name || u.username}</div>\n                        <div className=\"opacity-70\">{u.username}</div>\n                      </div>\n                      <Button size=\"sm\" onClick={() => setAssignUserId(u.id)}>Use ID</Button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </Card>\n        )}\n      </div>\n\n      {isAdmin && (\n        <Dialog.Root open={!!editPlanId} onOpenChange={(open) => { if (!open) { setEditPlanId(null); setEditPlanTitle(\"\"); } }}>\n          <Dialog.Content>\n            <Dialog.Title>Edit plan</Dialog.Title>\n            <div className=\"mt-4\">\n              <TextField.Input value={editPlanTitle} onChange={(e: any) => setEditPlanTitle(e.target.value)} />\n            </div>\n            <div className=\"mt-4 flex justify-end gap-2\">\n              <Button variant=\"soft\" onClick={() => { setEditPlanId(null); setEditPlanTitle(\"\"); }}>Cancel</Button>\n              <Button disabled={!editPlanTitle || updatePlan.isPending} onClick={() => updatePlan.mutate()}>\n                {updatePlan.isPending ? \"Saving...\" : \"Save\"}\n              </Button>\n            </div>\n          </Dialog.Content>\n        </Dialog.Root>\n      )}\n\n      <div className=\"mt-6 text-sm\">\n        Need help? <Link className=\"underline\" href=\"https://docs.whop.com/sdk/whop-api-client\" target=\"_blank\" rel=\"noopener noreferrer\">Whop Docs</Link>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;;;AAVA;;;;;;;;;AAYe,SAAS;;IACtB,MAAM,YAAY,IAAA,yOAAY;IAC9B,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAA,kNAAO;IAC5C,MAAM,UAAU,OAAO,WAAW,KAAK,WAAW,OAAO,WAAW,KAAK;IACzE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,qNAAQ,EAAC;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,qNAAQ,EAAC;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,qNAAQ,EAAC;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,qNAAQ,EAAgB;IAC5D,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,qNAAQ,EAAC;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,qNAAQ,EAAC;IAC7C,MAAM,KAAK,IAAA,uPAAc;IACzB,MAAM,SAAS,IAAA,8LAAS;IAExB,MAAM,EAAE,MAAM,KAAK,EAAE,WAAW,cAAc,EAAE,GAAG,IAAA,sOAAQ,EAAC,IAAA,qMAAU,EAAC,WAAW,EAAE;IACpF,MAAM,EAAE,MAAM,KAAK,EAAE,WAAW,cAAc,EAAE,GAAG,IAAA,sOAAQ,EAAC;QAAE,GAAG,IAAA,qMAAU,EAAC,WAAW,EAAE,EAAE,WAAW;QAAE,SAAS;IAAQ;IAEzH,MAAM,aAAa,IAAA,4OAAW,EAAC;QAC7B,YAAY,IAAA,6MAAkB,EAAC,WAAW,EAAE,EAAE,UAAU;QACxD,SAAS;4CAAE;gBACT,GAAG,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,WAAW,EAAE;qBAAC;gBAAC;gBAClE,eAAe;gBACf,gBAAgB;YAClB;;IACF;IAEA,MAAM,aAAa,IAAA,4OAAW,EAAC;QAC7B,UAAU;4CAAE,OAAO,OACjB,IAAA,6MAAkB,EAAC,WAAW,EAAE,EAAE,KAAK,MAAM,EAAE,UAAU,CAAC;oBAAE,YAAY,KAAK,UAAU;gBAAC;;QAC1F,SAAS;4CAAE;gBACT,GAAG,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,WAAW,EAAE;qBAAC;gBAAC;gBAClE,gBAAgB;YAClB;;IACF;IAEA,MAAM,aAAa,IAAA,4OAAW,EAAC;QAC7B,UAAU;4CAAE;gBACV,IAAI,CAAC,YAAY;gBACjB,OAAO,IAAA,6MAAkB,EAAC,WAAW,EAAE,EAAE,YAAY,UAAU,CAAC;oBAAE,OAAO;gBAAc;YACzF;;QACA,SAAS;4CAAE;gBACT,GAAG,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,WAAW,EAAE;qBAAC;gBAAC;gBAClE,cAAc;gBACd,iBAAiB;YACnB;;IACF;IAEA,MAAM,YAAY,IAAA,oNAAO;mCAAC,IAAM,SAAS,EAAE;kCAAE;QAAC;KAAM;IAEpD,IAAA,sNAAS;0BAAC;YACR,IAAI,CAAC,QAAQ;YACb,MAAM,UAAU,OAAO,WAAW,KAAK,WAAW,OAAO,WAAW,KAAK;YACzE,MAAM,SAAS,UACX,CAAC,aAAa,EAAE,WAAW,EAAE,CAAC,UAAU,CAAC,GACzC,CAAC,aAAa,EAAE,WAAW,EAAE,CAAC,SAAS,CAAC;YAC5C,OAAO,OAAO,CAAC;QACjB;yBAAG;QAAC;QAAQ,WAAW,EAAE;QAAE;KAAO;IAElC,qBACE,yOAAC;QAAI,WAAU;;0BACb,yOAAC;gBAAI,WAAU;;kCACb,yOAAC;;0CACC,yOAAC;gCAAI,WAAU;0CAAqB;;;;;;0CACpC,yOAAC;gCAAI,WAAU;0CAAyB,WAAW,IAAI;;;;;;;;;;;;oBAExD,yBACC,yOAAC,yQAAM,CAAC,IAAI;wBAAC,MAAM;wBAAa,cAAc;;0CAC5C,yOAAC,yQAAM,CAAC,OAAO;gCAAC,OAAO;0CACrB,cAAA,yOAAC,uOAAM;oCAAC,SAAQ;8CAAQ;;;;;;;;;;;0CAE1B,yOAAC,yQAAM,CAAC,OAAO;;kDACb,yOAAC,yQAAM,CAAC,KAAK;kDAAC;;;;;;kDACd,yOAAC;wCAAI,WAAU;kDACb,cAAA,yOAAC,6RAAS,CAAC,KAAK;4CACd,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAW,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;kDAGxD,yOAAC;wCAAI,WAAU;kDACb,cAAA,yOAAC,uOAAM;4CACL,UAAU,CAAC,gBAAgB,WAAW,SAAS;4CAC/C,SAAS,IAAM,WAAW,MAAM,CAAC;oDAAE,OAAO;gDAAa;sDAEtD,WAAW,SAAS,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQpD,yOAAC;gBAAI,WAAU;;kCACb,yOAAC,iOAAI;kCACH,cAAA,yOAAC;4BAAI,WAAU;;8CACb,yOAAC;oCAAI,WAAU;8CAA0B;;;;;;8CACzC,yOAAC;oCAAI,WAAU;;wCAAe,KAAK,IAAI;wCAAC;wCAAI,KAAK,QAAQ;wCAAC;;;;;;;8CAC1D,yOAAC;oCAAI,WAAU;;wCAA0B;wCAAS,OAAO,WAAW;;;;;;;;;;;;;;;;;;kCAIxE,yOAAC,iOAAI;kCACH,cAAA,yOAAC;4BAAI,WAAU;;8CACb,yOAAC;oCAAI,WAAU;8CAA0B;;;;;;gCACxC,+BACC,yOAAC;oCAAI,WAAU;8CAAqB;;;;;2CAClC,UAAU,MAAM,KAAK,kBACvB,yOAAC;oCAAI,WAAU;8CAAqB;;;;;yDAEpC,yOAAC;oCAAI,WAAU;8CACZ,UAAU,GAAG,CAAC,CAAC,kBACd,yOAAC;4CAAe,WAAU;;8DACxB,yOAAC;;sEACC,yOAAC;4DAAI,WAAU;sEAAe,EAAE,KAAK;;;;;;sEACrC,yOAAC;4DAAI,WAAU;;gEACZ,EAAE,SAAS;gEAAC;gEAAS,EAAE,aAAa;gEAAC;;;;;;;;;;;;;gDAGzC,yBACC,yOAAC;oDAAI,WAAU;;sEACb,yOAAC,uOAAM;4DAAC,MAAK;4DAAK,SAAQ;4DAAO,SAAS;gEAAQ,cAAc,EAAE,EAAE;gEAAG,iBAAiB,EAAE,KAAK;4DAAG;sEAAG;;;;;;sEAGrG,yOAAC,6RAAS,CAAC,KAAK;4DACd,aAAY;4DACZ,OAAO;4DACP,UAAU,CAAC,IAAW,gBAAgB,EAAE,MAAM,CAAC,KAAK;4DACpD,OAAO;gEAAE,OAAO;4DAAI;;;;;;sEAEtB,yOAAC,uOAAM;4DACL,MAAK;4DACL,UAAU,CAAC,gBAAgB,WAAW,SAAS;4DAC/C,SAAS,IAAM,WAAW,MAAM,CAAC;oEAAE,QAAQ,EAAE,EAAE;oEAAE,YAAY;gEAAa;sEAC3E;;;;;;;;;;;;;2CAtBG,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;oBAkCvB,yBACC,yOAAC,iOAAI;kCACH,cAAA,yOAAC;4BAAI,WAAU;;8CACb,yOAAC;oCAAI,WAAU;8CAA0B;;;;;;8CACzC,yOAAC;oCAAI,WAAU;8CACb,cAAA,yOAAC,6RAAS,CAAC,KAAK;wCAAC,aAAY;wCAAe,OAAO;wCAAY,UAAU,CAAC,IAAW,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;gCAElH,+BACC,yOAAC;oCAAI,WAAU;8CAAqB;;;;;yDAEpC,yOAAC;oCAAI,WAAU;8CACZ,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,kBAClB,yOAAC;4CAAe,WAAU;;8DACxB,yOAAC;;sEACC,yOAAC;4DAAI,WAAU;sEAAe,EAAE,IAAI,IAAI,EAAE,QAAQ;;;;;;sEAClD,yOAAC;4DAAI,WAAU;sEAAc,EAAE,QAAQ;;;;;;;;;;;;8DAEzC,yOAAC,uOAAM;oDAAC,MAAK;oDAAK,SAAS,IAAM,gBAAgB,EAAE,EAAE;8DAAG;;;;;;;2CALhD,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;YAe3B,yBACC,yOAAC,yQAAM,CAAC,IAAI;gBAAC,MAAM,CAAC,CAAC;gBAAY,cAAc,CAAC;oBAAW,IAAI,CAAC,MAAM;wBAAE,cAAc;wBAAO,iBAAiB;oBAAK;gBAAE;0BACnH,cAAA,yOAAC,yQAAM,CAAC,OAAO;;sCACb,yOAAC,yQAAM,CAAC,KAAK;sCAAC;;;;;;sCACd,yOAAC;4BAAI,WAAU;sCACb,cAAA,yOAAC,6RAAS,CAAC,KAAK;gCAAC,OAAO;gCAAe,UAAU,CAAC,IAAW,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sCAE9F,yOAAC;4BAAI,WAAU;;8CACb,yOAAC,uOAAM;oCAAC,SAAQ;oCAAO,SAAS;wCAAQ,cAAc;wCAAO,iBAAiB;oCAAK;8CAAG;;;;;;8CACtF,yOAAC,uOAAM;oCAAC,UAAU,CAAC,iBAAiB,WAAW,SAAS;oCAAE,SAAS,IAAM,WAAW,MAAM;8CACvF,WAAW,SAAS,GAAG,cAAc;;;;;;;;;;;;;;;;;;;;;;;0BAOhD,yOAAC;gBAAI,WAAU;;oBAAe;kCACjB,yOAAC,sNAAI;wBAAC,WAAU;wBAAY,MAAK;wBAA4C,QAAO;wBAAS,KAAI;kCAAsB;;;;;;;;;;;;;;;;;;AAI1I;GAjMwB;;QACJ,yOAAY;QACO,kNAAO;QAQjC,uPAAc;QACV,8LAAS;QAE2B,sOAAQ;QACR,sOAAQ;QAExC,4OAAW;QASX,4OAAW;QASX,4OAAW;;;KAlCR","debugId":null}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40tanstack/query-core/src/mutationObserver.ts"],"sourcesContent":["import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationFunctionContext,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TOnMutateResult> = (\n  result: MutationObserverResult<TData, TError, TVariables, TOnMutateResult>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TOnMutateResult = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TOnMutateResult>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TOnMutateResult\n  > = undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TOnMutateResult>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TOnMutateResult>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<\n      TData,\n      TError,\n      TVariables,\n      TOnMutateResult\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<\n      TData,\n      TError,\n      TVariables,\n      TOnMutateResult\n    >,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    } else if (this.#currentMutation?.state.status === 'pending') {\n      this.#currentMutation.setOptions(this.options)\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(\n    action: Action<TData, TError, TVariables, TOnMutateResult>,\n  ): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TOnMutateResult\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TOnMutateResult>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TOnMutateResult>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TOnMutateResult>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TOnMutateResult>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const onMutateResult = this.#currentResult.context\n\n        const context = {\n          client: this.#client,\n          meta: this.options.meta,\n          mutationKey: this.options.mutationKey,\n        } satisfies MutationFunctionContext\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(\n            action.data,\n            variables,\n            onMutateResult,\n            context,\n          )\n          this.#mutateOptions.onSettled?.(\n            action.data,\n            null,\n            variables,\n            onMutateResult,\n            context,\n          )\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(\n            action.error,\n            variables,\n            onMutateResult,\n            context,\n          )\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            onMutateResult,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 883, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40tanstack/react-query/src/useMutation.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TOnMutateResult = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TOnMutateResult>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TOnMutateResult> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TOnMutateResult>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TOnMutateResult>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n"],"names":[],"mappings":";;;;;AACA,YAAY,WAAW;;;AACvB;AAMA,SAAS,sBAAsB;;;;;AAUxB,SAAS,YAMd,OAAA,EACA,WAAA,EAC+D;IAC/D,MAAM,aAAS,uPAAA,EAAe,WAAW;IAEzC,MAAM,CAAC,QAAQ,CAAA,GAAU,qNAAA;gCACvB,IACE,IAAI,qPAAA,CACF,QACA;;IAIA,sNAAA;iCAAU,MAAM;YACpB,SAAS,UAAA,CAAW,OAAO;QAC7B;gCAAG;QAAC;QAAU,OAAO;KAAC;IAEtB,MAAM,SAAe,iOAAA,CACb,wNAAA;oDACJ,CAAC,gBACC,SAAS,SAAA,CAAU,+OAAA,CAAc,UAAA,CAAW,aAAa,CAAC;mDAC5D;QAAC,QAAQ;KAAA;oDAEX,IAAM,SAAS,gBAAA,CAAiB;;oDAChC,IAAM,SAAS,gBAAA,CAAiB;;IAGlC,MAAM,SAAe,wNAAA;2CAGnB,CAAC,WAAW,kBAAkB;YAC5B,SAAS,MAAA,CAAO,WAAW,aAAa,EAAE,KAAA,CAAM,8NAAI;QACtD;0CACA;QAAC,QAAQ;KAAA;IAGX,IACE,OAAO,KAAA,QACP,0OAAA,EAAiB,SAAS,OAAA,CAAQ,YAAA,EAAc;QAAC,OAAO,KAAK;KAAC,GAC9D;QACA,MAAM,OAAO,KAAA;IACf;IAEA,OAAO;QAAE,GAAG,MAAA;QAAQ;QAAQ,aAAa,OAAO,MAAA;IAAO;AACzD","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/theme/script.mjs"],"sourcesContent":["export function script() {\n    const cookie = document.cookie.match(/whop-frosted-theme=appearance:(?<appearance>light|dark)/)?.groups;\n    const el = document.documentElement;\n    const classes = [\n        \"light\",\n        \"dark\"\n    ];\n    const theme = cookie ? cookie.appearance : getSystemTheme();\n    function updateDOM(theme) {\n        el.classList.remove(...classes);\n        el.classList.add(theme);\n        el.style.colorScheme = theme;\n    }\n    function getSystemTheme() {\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n    }\n    updateDOM(theme);\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS;IACZ,MAAM,SAAS,SAAS,MAAM,CAAC,KAAK,CAAC,4DAA4D;IACjG,MAAM,KAAK,SAAS,eAAe;IACnC,MAAM,UAAU;QACZ;QACA;KACH;IACD,MAAM,QAAQ,SAAS,OAAO,UAAU,GAAG;IAC3C,SAAS,UAAU,KAAK;QACpB,GAAG,SAAS,CAAC,MAAM,IAAI;QACvB,GAAG,SAAS,CAAC,GAAG,CAAC;QACjB,GAAG,KAAK,CAAC,WAAW,GAAG;IAC3B;IACA,SAAS;QACL,OAAO,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;IAChF;IACA,UAAU;AACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/theme/index.mjs"],"sourcesContent":["import React from \"react\";\nimport { script } from \"./script.mjs\";\nexport function WhopThemeScript() {\n    const scriptString = `(${script.toString()})()`;\n    return React.createElement(React.Fragment, null, React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n            __html: scriptString\n        }\n    }));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,SAAS;IACZ,MAAM,eAAe,CAAC,CAAC,EAAE,oNAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;IAC/C,OAAO,oNAAK,CAAC,aAAa,CAAC,oNAAK,CAAC,QAAQ,EAAE,MAAM,oNAAK,CAAC,aAAa,CAAC,UAAU;QAC3E,yBAAyB;YACrB,QAAQ;QACZ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 989, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/iframe/use-iframe-sdk.mjs"],"sourcesContent":["import { use } from \"react\";\nimport { WhopIframeSdkContext } from \"./context.mjs\";\nexport function useIframeSdk() {\n    const sdk = use(WhopIframeSdkContext);\n    if (!sdk) {\n        throw new Error(\"useIframeSdk must be used within a WhopIframeSdkProvider\");\n    }\n    return sdk;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,SAAS;IACZ,MAAM,MAAM,IAAA,gNAAG,EAAC,oOAAoB;IACpC,IAAI,CAAC,KAAK;QACN,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/iframe/index.mjs"],"sourcesContent":["export * from \"./context.mjs\";\nexport * from \"./provider.mjs\";\nexport * from \"./use-iframe-sdk.mjs\";\n"],"names":[],"mappings":";AAAA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/index.mjs"],"sourcesContent":["export * from \"./provider.mjs\";\nexport * from \"./use-websocket.mjs\";\nexport * from \"./use-websocket-status.mjs\";\nexport * from \"./use-send-websocket-message.mjs\";\nexport * from \"./use-broadcast-websocket-message.mjs\";\nexport * from \"./use-on-websocket-message.mjs\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1036, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/index.mjs"],"sourcesContent":["export * from \"./theme/index.mjs\";\nexport * from \"./iframe/index.mjs\";\nexport * from \"./websockets/index.mjs\";\n"],"names":[],"mappings":";AAAA;AACA;AACA","ignoreList":[0],"debugId":null}}]
}