{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/buffer_utils.js"],"sourcesContent":["export const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,UAAU,IAAI;AACpB,MAAM,UAAU,IAAI;AAC3B,MAAM,YAAY,KAAK;AAChB,SAAS,OAAO,GAAG,OAAO;IAC7B,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,GAAK,MAAM,QAAQ;IAC/D,MAAM,MAAM,IAAI,WAAW;IAC3B,IAAI,IAAI;IACR,KAAK,MAAM,UAAU,QAAS;QAC1B,IAAI,GAAG,CAAC,QAAQ;QAChB,KAAK,OAAO,MAAM;IACtB;IACA,OAAO;AACX;AACA,SAAS,cAAc,GAAG,EAAE,KAAK,EAAE,MAAM;IACrC,IAAI,QAAQ,KAAK,SAAS,WAAW;QACjC,MAAM,IAAI,WAAW,CAAC,0BAA0B,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO;IACxF;IACA,IAAI,GAAG,CAAC;QAAC,UAAU;QAAI,UAAU;QAAI,UAAU;QAAG,QAAQ;KAAK,EAAE;AACrE;AACO,SAAS,SAAS,KAAK;IAC1B,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ;IAChC,MAAM,MAAM,QAAQ;IACpB,MAAM,MAAM,IAAI,WAAW;IAC3B,cAAc,KAAK,MAAM;IACzB,cAAc,KAAK,KAAK;IACxB,OAAO;AACX;AACO,SAAS,SAAS,KAAK;IAC1B,MAAM,MAAM,IAAI,WAAW;IAC3B,cAAc,KAAK;IACnB,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/base64.js"],"sourcesContent":["export function encodeBase64(input) {\n    if (Uint8Array.prototype.toBase64) {\n        return input.toBase64();\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < input.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n}\nexport function decodeBase64(encoded) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(encoded);\n    }\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,aAAa,KAAK;IAC9B,IAAI,WAAW,SAAS,CAAC,QAAQ,EAAE;QAC/B,OAAO,MAAM,QAAQ;IACzB;IACA,MAAM,aAAa;IACnB,MAAM,MAAM,EAAE;IACd,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,KAAK,WAAY;QAC/C,IAAI,IAAI,CAAC,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,MAAM,QAAQ,CAAC,GAAG,IAAI;IACnE;IACA,OAAO,KAAK,IAAI,IAAI,CAAC;AACzB;AACO,SAAS,aAAa,OAAO;IAChC,IAAI,WAAW,UAAU,EAAE;QACvB,OAAO,WAAW,UAAU,CAAC;IACjC;IACA,MAAM,SAAS,KAAK;IACpB,MAAM,QAAQ,IAAI,WAAW,OAAO,MAAM;IAC1C,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACpC,KAAK,CAAC,EAAE,GAAG,OAAO,UAAU,CAAC;IACjC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/util/base64url.js"],"sourcesContent":["import { encoder, decoder } from '../lib/buffer_utils.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nexport function decode(input) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(typeof input === 'string' ? input : decoder.decode(input), {\n            alphabet: 'base64url',\n        });\n    }\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n}\nexport function encode(input) {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    if (Uint8Array.prototype.toBase64) {\n        return unencoded.toBase64({ alphabet: 'base64url', omitPadding: true });\n    }\n    return encodeBase64(unencoded).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,SAAS,OAAO,KAAK;IACxB,IAAI,WAAW,UAAU,EAAE;QACvB,OAAO,WAAW,UAAU,CAAC,OAAO,UAAU,WAAW,QAAQ,uPAAO,CAAC,MAAM,CAAC,QAAQ;YACpF,UAAU;QACd;IACJ;IACA,IAAI,UAAU;IACd,IAAI,mBAAmB,YAAY;QAC/B,UAAU,uPAAO,CAAC,MAAM,CAAC;IAC7B;IACA,UAAU,QAAQ,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO;IACvE,IAAI;QACA,OAAO,IAAA,sPAAY,EAAC;IACxB,EACA,OAAM;QACF,MAAM,IAAI,UAAU;IACxB;AACJ;AACO,SAAS,OAAO,KAAK;IACxB,IAAI,YAAY;IAChB,IAAI,OAAO,cAAc,UAAU;QAC/B,YAAY,uPAAO,CAAC,MAAM,CAAC;IAC/B;IACA,IAAI,WAAW,SAAS,CAAC,QAAQ,EAAE;QAC/B,OAAO,UAAU,QAAQ,CAAC;YAAE,UAAU;YAAa,aAAa;QAAK;IACzE;IACA,OAAO,IAAA,sPAAY,EAAC,WAAW,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO;AACxF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/invalid_key_input.js"],"sourcesContent":["function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,QAAQ,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK;IAClC,QAAQ,MAAM,MAAM,CAAC;IACrB,IAAI,MAAM,MAAM,GAAG,GAAG;QAClB,MAAM,OAAO,MAAM,GAAG;QACtB,OAAO,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,MAAM,KAAK,EAAE,KAAK,CAAC,CAAC;IACzD,OACK,IAAI,MAAM,MAAM,KAAK,GAAG;QACzB,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,OACK;QACD,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC;IACA,IAAI,UAAU,MAAM;QAChB,OAAO,CAAC,UAAU,EAAE,QAAQ;IAChC,OACK,IAAI,OAAO,WAAW,cAAc,OAAO,IAAI,EAAE;QAClD,OAAO,CAAC,mBAAmB,EAAE,OAAO,IAAI,EAAE;IAC9C,OACK,IAAI,OAAO,WAAW,YAAY,UAAU,MAAM;QACnD,IAAI,OAAO,WAAW,EAAE,MAAM;YAC1B,OAAO,CAAC,yBAAyB,EAAE,OAAO,WAAW,CAAC,IAAI,EAAE;QAChE;IACJ;IACA,OAAO;AACX;uCACe,CAAC,QAAQ,GAAG;IACvB,OAAO,QAAQ,gBAAgB,WAAW;AAC9C;AACO,SAAS,QAAQ,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK;IACzC,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,mBAAmB,CAAC,EAAE,WAAW;AACvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/util/errors.js"],"sourcesContent":["export class JOSEError extends Error {\n    static code = 'ERR_JOSE_GENERIC';\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static code = 'ERR_JWT_EXPIRED';\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    static code = 'ERR_JWE_INVALID';\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static code = 'ERR_JWS_INVALID';\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static code = 'ERR_JWT_INVALID';\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static code = 'ERR_JWK_INVALID';\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static code = 'ERR_JWKS_INVALID';\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    static code = 'ERR_JWKS_TIMEOUT';\n    code = 'ERR_JWKS_TIMEOUT';\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAC3B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;IAC1B,YAAY,OAAO,EAAE,OAAO,CAAE;QAC1B,KAAK,CAAC,SAAS;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;QACjC,MAAM,iBAAiB,GAAG,IAAI,EAAE,IAAI,CAAC,WAAW;IACpD;AACJ;AACO,MAAM,iCAAiC;IAC1C,OAAO,OAAO,kCAAkC;IAChD,OAAO,kCAAkC;IACzC,MAAM;IACN,OAAO;IACP,QAAQ;IACR,YAAY,OAAO,EAAE,OAAO,EAAE,QAAQ,aAAa,EAAE,SAAS,aAAa,CAAE;QACzE,KAAK,CAAC,SAAS;YAAE,OAAO;gBAAE;gBAAO;gBAAQ;YAAQ;QAAE;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;AACJ;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;IACzB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,YAAY,OAAO,EAAE,OAAO,EAAE,QAAQ,aAAa,EAAE,SAAS,aAAa,CAAE;QACzE,KAAK,CAAC,SAAS;YAAE,OAAO;gBAAE;gBAAO;gBAAQ;YAAQ;QAAE;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;AACJ;AACO,MAAM,0BAA0B;IACnC,OAAO,OAAO,2BAA2B;IACzC,OAAO,2BAA2B;AACtC;AACO,MAAM,yBAAyB;IAClC,OAAO,OAAO,yBAAyB;IACvC,OAAO,yBAAyB;AACpC;AACO,MAAM,4BAA4B;IACrC,OAAO,OAAO,4BAA4B;IAC1C,OAAO,4BAA4B;IACnC,YAAY,UAAU,6BAA6B,EAAE,OAAO,CAAE;QAC1D,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,oBAAoB;IAC7B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;AAC9B;AACO,MAAM,0BAA0B;IACnC,OAAO,OAAO,2BAA2B;IACzC,OAAO,2BAA2B;IAClC,YAAY,UAAU,iDAAiD,EAAE,OAAO,CAAE;QAC9E,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,iCAAiC;IAC1C,CAAC,OAAO,aAAa,CAAC,CAAC;IACvB,OAAO,OAAO,kCAAkC;IAChD,OAAO,kCAAkC;IACzC,YAAY,UAAU,sDAAsD,EAAE,OAAO,CAAE;QACnF,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,oBAAoB;IAC7B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;IAC1B,YAAY,UAAU,mBAAmB,EAAE,OAAO,CAAE;QAChD,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,uCAAuC;IAChD,OAAO,OAAO,wCAAwC;IACtD,OAAO,wCAAwC;IAC/C,YAAY,UAAU,+BAA+B,EAAE,OAAO,CAAE;QAC5D,KAAK,CAAC,SAAS;IACnB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_key_like.js"],"sourcesContent":["export function assertCryptoKey(key) {\n    if (!isCryptoKey(key)) {\n        throw new Error('CryptoKey instance expected');\n    }\n}\nexport function isCryptoKey(key) {\n    return key?.[Symbol.toStringTag] === 'CryptoKey';\n}\nexport function isKeyObject(key) {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n}\nexport default (key) => {\n    return isCryptoKey(key) || isKeyObject(key);\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAO,SAAS,gBAAgB,GAAG;IAC/B,IAAI,CAAC,YAAY,MAAM;QACnB,MAAM,IAAI,MAAM;IACpB;AACJ;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK;AACzC;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK;AACzC;uCACe,CAAC;IACZ,OAAO,YAAY,QAAQ,YAAY;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/asn1.js"],"sourcesContent":["import invalidKeyInput from './invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nconst formatPEM = (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (isKeyObject(key)) {\n        if (key.type !== keyType) {\n            throw new TypeError(`key is not a ${keyType} key`);\n        }\n        return key.export({ format: 'pem', type: keyFormat });\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    const i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        default:\n            return undefined;\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve?.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: 'X25519' };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA':\n            algorithm = { name: 'Ed25519' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, options?.extractable ?? (isPublic ? true : false), keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    const result = [];\n    let next = 0;\n    while (next < seq.length) {\n        const nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        const numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nlet createPublicKey;\nfunction getSPKI(x509) {\n    try {\n        createPublicKey ??= globalThis.process?.getBuiltinModule?.('node:crypto')?.createPublicKey;\n    }\n    catch {\n        createPublicKey = 0;\n    }\n    if (createPublicKey) {\n        try {\n            return new createPublicKey(x509).export({ format: 'pem', type: 'spki' });\n        }\n        catch { }\n    }\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/jwk_to_key.js"],"sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                case 'EdDSA':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nexport default async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, algorithm, jwk.ext ?? (jwk.d ? false : true), jwk.key_ops ?? keyUsages);\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_object.js"],"sourcesContent":["function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default (input) => {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n};\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa,KAAK;IACvB,OAAO,OAAO,UAAU,YAAY,UAAU;AAClD;uCACe,CAAC;IACZ,IAAI,CAAC,aAAa,UAAU,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,mBAAmB;QACrF,OAAO;IACX;IACA,IAAI,OAAO,cAAc,CAAC,WAAW,MAAM;QACvC,OAAO;IACX;IACA,IAAI,QAAQ;IACZ,MAAO,OAAO,cAAc,CAAC,WAAW,KAAM;QAC1C,QAAQ,OAAO,cAAc,CAAC;IAClC;IACA,OAAO,OAAO,cAAc,CAAC,WAAW;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 846, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/key/import.js"],"sourcesContent":["import { decode as decodeBase64URL } from '../util/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../lib/asn1.js';\nimport toCryptoKey from '../lib/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, options) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    let ext;\n    alg ??= jwk.alg;\n    ext ??= options?.extractable ?? jwk.ext;\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return toCryptoKey({ ...jwk, alg, ext });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AACO,eAAe,WAAW,IAAI,EAAE,GAAG,EAAE,OAAO;IAC/C,IAAI,OAAO,SAAS,YAAY,KAAK,OAAO,CAAC,kCAAkC,GAAG;QAC9E,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,gPAAQ,EAAC,MAAM,KAAK;AAC/B;AACO,eAAe,WAAW,IAAI,EAAE,GAAG,EAAE,OAAO;IAC/C,IAAI,OAAO,SAAS,YAAY,KAAK,OAAO,CAAC,mCAAmC,GAAG;QAC/E,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,gPAAQ,EAAC,MAAM,KAAK;AAC/B;AACO,eAAe,YAAY,KAAK,EAAE,GAAG,EAAE,OAAO;IACjD,IAAI,OAAO,UAAU,YAAY,MAAM,OAAO,CAAC,mCAAmC,GAAG;QACjF,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,iPAAS,EAAC,OAAO,KAAK;AACjC;AACO,eAAe,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO;IAC7C,IAAI,CAAC,IAAA,oPAAQ,EAAC,MAAM;QAChB,MAAM,IAAI,UAAU;IACxB;IACA,IAAI;IACJ,QAAQ,IAAI,GAAG;IACf,QAAQ,SAAS,eAAe,IAAI,GAAG;IACvC,OAAQ,IAAI,GAAG;QACX,KAAK;YACD,IAAI,OAAO,IAAI,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,EAAE;gBACrC,MAAM,IAAI,UAAU;YACxB;YACA,OAAO,IAAA,oPAAe,EAAC,IAAI,CAAC;QAChC,KAAK;YACD,IAAI,SAAS,OAAO,IAAI,GAAG,KAAK,WAAW;gBACvC,MAAM,IAAI,2PAAgB,CAAC;YAC/B;QACJ,KAAK;QACL,KAAK;YACD,OAAO,IAAA,qPAAW,EAAC;gBAAE,GAAG,GAAG;gBAAE;gBAAK;YAAI;QAC1C;YACI,MAAM,IAAI,2PAAgB,CAAC;IACnC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/subtle_dsa.js"],"sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nexport default (alg, algorithm) => {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: parseInt(alg.slice(-3), 10) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n        case 'EdDSA':\n            return { name: 'Ed25519' };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAC,KAAK;IACjB,MAAM,OAAO,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;IACnC,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;YAAO;QAChC,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;gBAAW,YAAY,SAAS,IAAI,KAAK,CAAC,CAAC,IAAI,OAAO;YAAE;QACjF,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;YAAoB;QAC7C,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;gBAAS,YAAY,UAAU,UAAU;YAAC;QACnE,KAAK;QACL,KAAK;YACD,OAAO;gBAAE,MAAM;YAAU;QAC7B;YACI,MAAM,IAAI,2PAAgB,CAAC,CAAC,IAAI,EAAE,IAAI,2DAA2D,CAAC;IAC1G;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/check_key_length.js"],"sourcesContent":["export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,KAAK;IACjB,IAAI,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,OAAO;QAC9C,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,SAAS;QACvC,IAAI,OAAO,kBAAkB,YAAY,gBAAgB,MAAM;YAC3D,MAAM,IAAI,UAAU,GAAG,IAAI,qDAAqD,CAAC;QACrF;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/crypto_key.js"],"sourcesContent":["function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usage) {\n    if (usage && !key.usages.includes(usage)) {\n        throw new TypeError(`CryptoKey does not support this operation, its usages must include ${usage}.`);\n    }\n}\nexport function checkSigCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\nexport function checkEncCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                    break;\n                default:\n                    throw unusable('ECDH or X25519');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/get_sign_verify_key.js"],"sourcesContent":["import { checkSigCryptoKey } from './crypto_key.js';\nimport invalidKeyInput from './invalid_key_input.js';\nexport default async (alg, key, usage) => {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    checkSigCryptoKey(key, alg, usage);\n    return key;\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;uCACe,OAAO,KAAK,KAAK;IAC5B,IAAI,eAAe,YAAY;QAC3B,IAAI,CAAC,IAAI,UAAU,CAAC,OAAO;YACvB,MAAM,IAAI,UAAU,IAAA,4PAAe,EAAC,KAAK,aAAa,aAAa;QACvE;QACA,OAAO,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK;YAAE,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;YAAE,MAAM;QAAO,GAAG,OAAO;YAAC;SAAM;IAC7G;IACA,IAAA,+PAAiB,EAAC,KAAK,KAAK;IAC5B,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/verify.js"],"sourcesContent":["import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nexport default async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;uCACe,OAAO,KAAK,KAAK,WAAW;IACvC,MAAM,YAAY,MAAM,IAAA,8PAAY,EAAC,KAAK,KAAK;IAC/C,IAAA,2PAAc,EAAC,KAAK;IACpB,MAAM,YAAY,IAAA,qPAAe,EAAC,KAAK,UAAU,SAAS;IAC1D,IAAI;QACA,OAAO,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW,WAAW,WAAW;IACvE,EACA,OAAM;QACF,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1178, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_disjoint.js"],"sourcesContent":["export default (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,GAAG;IACf,MAAM,UAAU,QAAQ,MAAM,CAAC;IAC/B,IAAI,QAAQ,MAAM,KAAK,KAAK,QAAQ,MAAM,KAAK,GAAG;QAC9C,OAAO;IACX;IACA,IAAI;IACJ,KAAK,MAAM,UAAU,QAAS;QAC1B,MAAM,aAAa,OAAO,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,IAAI,IAAI,KAAK,GAAG;YACxB,MAAM,IAAI,IAAI;YACd;QACJ;QACA,KAAK,MAAM,aAAa,WAAY;YAChC,IAAI,IAAI,GAAG,CAAC,YAAY;gBACpB,OAAO;YACX;YACA,IAAI,GAAG,CAAC;QACZ;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_jwk.js"],"sourcesContent":["import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return key.kty === 'oct' && typeof key.k === 'string';\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,SAAS,MAAM,GAAG;IACrB,OAAO,IAAA,oPAAQ,EAAC,QAAQ,OAAO,IAAI,GAAG,KAAK;AAC/C;AACO,SAAS,aAAa,GAAG;IAC5B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1235, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/check_key_type.js"],"sourcesContent":["import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike from './is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined) {\n        let expected;\n        switch (usage) {\n            case 'sign':\n            case 'verify':\n                expected = 'sig';\n                break;\n            case 'encrypt':\n            case 'decrypt':\n                expected = 'enc';\n                break;\n        }\n        if (key.use !== expected) {\n            throw new TypeError(`Invalid key for this operation, its \"use\" must be \"${expected}\" when present`);\n        }\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, its \"alg\" must be \"${alg}\" when present`);\n    }\n    if (Array.isArray(key.key_ops)) {\n        let expectedKeyOp;\n        switch (true) {\n            case usage === 'sign' || usage === 'verify':\n            case alg === 'dir':\n            case alg.includes('CBC-HS'):\n                expectedKeyOp = usage;\n                break;\n            case alg.startsWith('PBES2'):\n                expectedKeyOp = 'deriveBits';\n                break;\n            case /^A\\d{3}(?:GCM)?(?:KW)?$/.test(alg):\n                if (!alg.includes('GCM') && alg.endsWith('KW')) {\n                    expectedKeyOp = usage === 'encrypt' ? 'wrapKey' : 'unwrapKey';\n                }\n                else {\n                    expectedKeyOp = usage;\n                }\n                break;\n            case usage === 'encrypt' && alg.startsWith('RSA'):\n                expectedKeyOp = 'wrapKey';\n                break;\n            case usage === 'decrypt':\n                expectedKeyOp = alg.startsWith('RSA') ? 'unwrapKey' : 'deriveBits';\n                break;\n        }\n        if (expectedKeyOp && key.key_ops?.includes?.(expectedKeyOp) === false) {\n            throw new TypeError(`Invalid key for this operation, its \"key_ops\" must include \"${expectedKeyOp}\" when present`);\n        }\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key', 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (jwk.isJWK(key)) {\n        switch (usage) {\n            case 'decrypt':\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'encrypt':\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (key.type === 'public') {\n        switch (usage) {\n            case 'sign':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n            case 'decrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n            default:\n                break;\n        }\n    }\n    if (key.type === 'private') {\n        switch (usage) {\n            case 'verify':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n            case 'encrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n            default:\n                break;\n        }\n    }\n};\nexport default (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(alg) ||\n        /^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/validate_crit.js"],"sourcesContent":["import { JOSENotSupported, JWEInvalid, JWSInvalid } from '../util/errors.js';\nexport default (Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) => {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n};\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAC,KAAK,mBAAmB,kBAAkB,iBAAiB;IACvE,IAAI,WAAW,IAAI,KAAK,aAAa,iBAAiB,SAAS,WAAW;QACtE,MAAM,IAAI,IAAI;IAClB;IACA,IAAI,CAAC,mBAAmB,gBAAgB,IAAI,KAAK,WAAW;QACxD,OAAO,IAAI;IACf;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,gBAAgB,IAAI,KACnC,gBAAgB,IAAI,CAAC,MAAM,KAAK,KAChC,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,QAAU,OAAO,UAAU,YAAY,MAAM,MAAM,KAAK,IAAI;QACvF,MAAM,IAAI,IAAI;IAClB;IACA,IAAI;IACJ,IAAI,qBAAqB,WAAW;QAChC,aAAa,IAAI,IAAI;eAAI,OAAO,OAAO,CAAC;eAAsB,kBAAkB,OAAO;SAAG;IAC9F,OACK;QACD,aAAa;IACjB;IACA,KAAK,MAAM,aAAa,gBAAgB,IAAI,CAAE;QAC1C,IAAI,CAAC,WAAW,GAAG,CAAC,YAAY;YAC5B,MAAM,IAAI,2PAAgB,CAAC,CAAC,4BAA4B,EAAE,UAAU,mBAAmB,CAAC;QAC5F;QACA,IAAI,UAAU,CAAC,UAAU,KAAK,WAAW;YACrC,MAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE,UAAU,YAAY,CAAC;QACxE;QACA,IAAI,WAAW,GAAG,CAAC,cAAc,eAAe,CAAC,UAAU,KAAK,WAAW;YACvE,MAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE,UAAU,6BAA6B,CAAC;QACzF;IACJ;IACA,OAAO,IAAI,IAAI,gBAAgB,IAAI;AACvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/validate_algorithms.js"],"sourcesContent":["export default (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,QAAQ;IACpB,IAAI,eAAe,aACf,CAAC,CAAC,MAAM,OAAO,CAAC,eAAe,WAAW,IAAI,CAAC,CAAC,IAAM,OAAO,MAAM,SAAS,GAAG;QAC/E,MAAM,IAAI,UAAU,CAAC,CAAC,EAAE,OAAO,oCAAoC,CAAC;IACxE;IACA,IAAI,CAAC,YAAY;QACb,OAAO;IACX;IACA,OAAO,IAAI,IAAI;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/normalize_key.js"],"sourcesContent":["import { isJWK } from './is_jwk.js';\nimport { decode } from '../util/base64url.js';\nimport importJWK from './jwk_to_key.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nlet cache;\nconst handleJWK = async (key, jwk, alg, freeze = false) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst handleKeyObject = (keyObject, alg) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(keyObject);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const isPublic = keyObject.type === 'public';\n    const extractable = isPublic ? true : false;\n    let cryptoKey;\n    if (keyObject.asymmetricKeyType === 'x25519') {\n        switch (alg) {\n            case 'ECDH-ES':\n            case 'ECDH-ES+A128KW':\n            case 'ECDH-ES+A192KW':\n            case 'ECDH-ES+A256KW':\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, isPublic ? [] : ['deriveBits']);\n    }\n    if (keyObject.asymmetricKeyType === 'ed25519') {\n        if (alg !== 'EdDSA' && alg !== 'Ed25519') {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\n            isPublic ? 'verify' : 'sign',\n        ]);\n    }\n    if (keyObject.asymmetricKeyType === 'rsa') {\n        let hash;\n        switch (alg) {\n            case 'RSA-OAEP':\n                hash = 'SHA-1';\n                break;\n            case 'RS256':\n            case 'PS256':\n            case 'RSA-OAEP-256':\n                hash = 'SHA-256';\n                break;\n            case 'RS384':\n            case 'PS384':\n            case 'RSA-OAEP-384':\n                hash = 'SHA-384';\n                break;\n            case 'RS512':\n            case 'PS512':\n            case 'RSA-OAEP-512':\n                hash = 'SHA-512';\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg.startsWith('RSA-OAEP')) {\n            return keyObject.toCryptoKey({\n                name: 'RSA-OAEP',\n                hash,\n            }, extractable, isPublic ? ['encrypt'] : ['decrypt']);\n        }\n        cryptoKey = keyObject.toCryptoKey({\n            name: alg.startsWith('PS') ? 'RSA-PSS' : 'RSASSA-PKCS1-v1_5',\n            hash,\n        }, extractable, [isPublic ? 'verify' : 'sign']);\n    }\n    if (keyObject.asymmetricKeyType === 'ec') {\n        const nist = new Map([\n            ['prime256v1', 'P-256'],\n            ['secp384r1', 'P-384'],\n            ['secp521r1', 'P-521'],\n        ]);\n        const namedCurve = nist.get(keyObject.asymmetricKeyDetails?.namedCurve);\n        if (!namedCurve) {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg === 'ES256' && namedCurve === 'P-256') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES384' && namedCurve === 'P-384') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES512' && namedCurve === 'P-521') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg.startsWith('ECDH-ES')) {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDH',\n                namedCurve,\n            }, extractable, isPublic ? [] : ['deriveBits']);\n        }\n    }\n    if (!cryptoKey) {\n        throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n    }\n    if (!cached) {\n        cache.set(keyObject, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nexport default async (key, alg) => {\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (isKeyObject(key)) {\n        if (key.type === 'secret') {\n            return key.export();\n        }\n        if ('toCryptoKey' in key && typeof key.toCryptoKey === 'function') {\n            try {\n                return handleKeyObject(key, alg);\n            }\n            catch (err) {\n                if (err instanceof TypeError) {\n                    throw err;\n                }\n            }\n        }\n        let jwk = key.export({ format: 'jwk' });\n        return handleJWK(key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k) {\n            return decode(key.k);\n        }\n        return handleJWK(key, key, alg, true);\n    }\n    throw new Error('unreachable');\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1627, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jws/flattened/verify.js"],"sourcesContent":["import { decode as b64u } from '../../util/base64url.js';\nimport verify from '../../lib/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = b64u(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = b64u(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const k = await normalizeKey(key, alg);\n    const verified = await verify(alg, k, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = b64u(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key: k };\n    }\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1765, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jws/compact/verify.js"],"sourcesContent":["import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACO,eAAe,cAAc,GAAG,EAAE,GAAG,EAAE,OAAO;IACjD,IAAI,eAAe,YAAY;QAC3B,MAAM,uPAAO,CAAC,MAAM,CAAC;IACzB;IACA,IAAI,OAAO,QAAQ,UAAU;QACzB,MAAM,IAAI,qPAAU,CAAC;IACzB;IACA,MAAM,EAAE,GAAG,eAAe,EAAE,GAAG,OAAO,EAAE,GAAG,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC;IAC3E,IAAI,WAAW,GAAG;QACd,MAAM,IAAI,qPAAU,CAAC;IACzB;IACA,MAAM,WAAW,MAAM,IAAA,sQAAe,EAAC;QAAE;QAAS,WAAW;QAAiB;IAAU,GAAG,KAAK;IAChG,MAAM,SAAS;QAAE,SAAS,SAAS,OAAO;QAAE,iBAAiB,SAAS,eAAe;IAAC;IACtF,IAAI,OAAO,QAAQ,YAAY;QAC3B,OAAO;YAAE,GAAG,MAAM;YAAE,KAAK,SAAS,GAAG;QAAC;IAC1C;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1807, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/epoch.js"],"sourcesContent":["export default (date) => Math.floor(date.getTime() / 1000);\n"],"names":[],"mappings":";;;;uCAAe,CAAC,OAAS,KAAK,KAAK,CAAC,KAAK,OAAO,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/secs.js"],"sourcesContent":["const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n"],"names":[],"mappings":";;;;AAAA,MAAM,SAAS;AACf,MAAM,OAAO,SAAS;AACtB,MAAM,MAAM,OAAO;AACnB,MAAM,OAAO,MAAM;AACnB,MAAM,OAAO,MAAM;AACnB,MAAM,QAAQ;uCACC,CAAC;IACZ,MAAM,UAAU,MAAM,IAAI,CAAC;IAC3B,IAAI,CAAC,WAAY,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,EAAG;QACxC,MAAM,IAAI,UAAU;IACxB;IACA,MAAM,QAAQ,WAAW,OAAO,CAAC,EAAE;IACnC,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,WAAW;IACnC,IAAI;IACJ,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC;YACzB;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ;YACI,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;IACR;IACA,IAAI,OAAO,CAAC,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE,KAAK,OAAO;QAC5C,OAAO,CAAC;IACZ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1879, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/jwt_claims_set.js"],"sourcesContent":["import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nimport { encoder } from './buffer_utils.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nconst normalizeTyp = (value) => {\n    if (value.includes('/')) {\n        return value.toLowerCase();\n    }\n    return `application/${value.toLowerCase()}`;\n};\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n}\nexport class JWTClaimsBuilder {\n    #payload;\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this.#payload = structuredClone(payload);\n    }\n    data() {\n        return encoder.encode(JSON.stringify(this.#payload));\n    }\n    get iss() {\n        return this.#payload.iss;\n    }\n    set iss(value) {\n        this.#payload.iss = value;\n    }\n    get sub() {\n        return this.#payload.sub;\n    }\n    set sub(value) {\n        this.#payload.sub = value;\n    }\n    get aud() {\n        return this.#payload.aud;\n    }\n    set aud(value) {\n        this.#payload.aud = value;\n    }\n    set jti(value) {\n        this.#payload.jti = value;\n    }\n    set nbf(value) {\n        if (typeof value === 'number') {\n            this.#payload.nbf = validateInput('setNotBefore', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\n        }\n        else {\n            this.#payload.nbf = epoch(new Date()) + secs(value);\n        }\n    }\n    set exp(value) {\n        if (typeof value === 'number') {\n            this.#payload.exp = validateInput('setExpirationTime', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\n        }\n        else {\n            this.#payload.exp = epoch(new Date()) + secs(value);\n        }\n    }\n    set iat(value) {\n        if (typeof value === 'undefined') {\n            this.#payload.iat = epoch(new Date());\n        }\n        else if (value instanceof Date) {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\n        }\n        else if (typeof value === 'string') {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\n        }\n        else {\n            this.#payload.iat = validateInput('setIssuedAt', value);\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2068, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jwt/verify.js"],"sourcesContent":["import { compactVerify } from '../jws/compact/verify.js';\nimport { validateClaimsSet } from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = validateClaimsSet(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACO,eAAe,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO;IAC7C,MAAM,WAAW,MAAM,IAAA,kQAAa,EAAC,KAAK,KAAK;IAC/C,IAAI,SAAS,eAAe,CAAC,IAAI,EAAE,SAAS,UAAU,SAAS,eAAe,CAAC,GAAG,KAAK,OAAO;QAC1F,MAAM,IAAI,qPAAU,CAAC;IACzB;IACA,MAAM,UAAU,IAAA,mQAAiB,EAAC,SAAS,eAAe,EAAE,SAAS,OAAO,EAAE;IAC9E,MAAM,SAAS;QAAE;QAAS,iBAAiB,SAAS,eAAe;IAAC;IACpE,IAAI,OAAO,QAAQ,YAAY;QAC3B,OAAO;YAAE,GAAG,MAAM;YAAE,KAAK,SAAS,GAAG;QAAC;IAC1C;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2099, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/js-md5/src/md5.js"],"sourcesContent":["/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.8.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2023\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  var isArray = Array.isArray;\n  if (root.JS_MD5_NO_NODE_JS || !isArray) {\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  var isView = ArrayBuffer.isView;\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !isView)) {\n    isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var bufferFrom;\n    if (Buffer.from && !root.JS_MD5_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(INPUT_ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (isArray(message) || isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * @namespace md5.hmac\n   */\n  /**\n   * @method hex\n   * @memberof md5.hmac\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hmac.hex('key', 'The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5.hmac('key', 'The quick brown fox jumps over the lazy dog');\n   */\n\n  /**\n   * @method digest\n   * @memberof md5.hmac\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.hmac.digest('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5.hmac\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.hmac.array('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5.hmac\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.hmac.arrayBuffer('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5.hmac\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.hmac.buffer('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5.hmac\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.hmac.base64('key', 'The quick brown fox jumps over the lazy dog');\n   */\n  var createHmacOutputMethod = function (outputType) {\n    return function (key, message) {\n      return new HmacMd5(key, true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5.hmac\n   * @description Create HmacMd5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @returns {HmacMd5} HmacMd5 object.\n   * @example\n   * var hash = md5.hmac.create('key');\n   */\n  /**\n   * @method update\n   * @memberof md5.hmac\n   * @description Create and update HmacMd5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} key key\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {HmacMd5} HmacMd5 object.\n   * @example\n   * var hash = md5.hmac.update('key', 'The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.hmac.create('key');\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createHmacMethod = function () {\n    var method = createHmacOutputMethod('hex');\n    method.create = function (key) {\n      return new HmacMd5(key);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type);\n    }\n    return method;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (isString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >>> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >>> 12);\n              buffer8[i++] = 0x80 | ((code >>> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >>> 18);\n              buffer8[i++] = 0x80 | ((code >>> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >>> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n      HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n      HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n      HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n      HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n      HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n      HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n      HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n      HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n      HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n      HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n      HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >>> 8) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 24) & 0xFF,\n      h1 & 0xFF, (h1 >>> 8) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 24) & 0xFF,\n      h2 & 0xFF, (h2 >>> 8) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 24) & 0xFF,\n      h3 & 0xFF, (h3 >>> 8) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  /**\n   * HmacMd5 class\n   * @class HmacMd5\n   * @extends Md5\n   * @description This is internal class.\n   * @see {@link md5.hmac.create}\n   */\n  function HmacMd5(key, sharedMemory) {\n    var i, result = formatMessage(key);\n    key = result[0];\n    if (result[1]) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 64) {\n      key = (new Md5(true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Md5.call(this, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacMd5.prototype = new Md5();\n\n  HmacMd5.prototype.finalize = function () {\n    Md5.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Md5.call(this, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Md5.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.md5 = exports;\n  exports.md5.hmac = createHmacMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2936, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/tiny-typed-emitter/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedEmitter = require(\"events\").EventEmitter;\n"],"names":[],"mappings":"AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG,uEAAkB,YAAY","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2944, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/verify-user-token.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/users.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/feed.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/notifications.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/product_surface.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/websockets.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.google.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.google.protobuf.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/google/protobuf/struct.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.bounties_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/bounties_app/bounties_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.courses_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.games.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.games.quizzes.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/games/quizzes/quizzes.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.content_rewards_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/content_rewards_app/content_rewards_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.events_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/events_app/events_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.diagnostics.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/diagnostics/client_commands.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.content_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.calendar_bookings_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.wheel_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/wheel_app/wheel_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.experience.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.data_platform.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/data_platform/dispute_rates_query.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/webhooks.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/retry.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload-parts.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/sum.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/analyze.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/with-awaitable-params.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/b64.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/md5.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/prepare.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/partial-file-sdk-extensions.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/file-sdk-extensions.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/graphql/client.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/sdk-common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.browser.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/client-sdk-shared.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/graphql/server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/oauth/index.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/server-sdk-shared.ts"],"sourcesContent":["import { importJWK, jwtVerify } from \"jose\";\n\nconst USER_TOKEN_HEADER_NAME = \"x-whop-user-token\";\nconst USER_TOKEN_VERIFICATION_KEY =\n\t'{\"kty\":\"EC\",\"x\":\"rz8a8vxvexHC0TLT91g7llOdDOsNuYiGEfic4Qhni-E\",\"y\":\"zH0QblKYToexd5PEIMGXPVJS9AB5smKrW4S_TbiXrOs\",\"crv\":\"P-256\"}';\n\nexport function getUserToken(token: string): string;\nexport function getUserToken(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n): string | null;\nexport function getUserToken(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n): string | null {\n\tif (typeof tokenOrHeadersOrRequest === \"string\")\n\t\treturn tokenOrHeadersOrRequest;\n\n\tif (tokenOrHeadersOrRequest instanceof Headers)\n\t\treturn tokenOrHeadersOrRequest.get(USER_TOKEN_HEADER_NAME);\n\n\tif (tokenOrHeadersOrRequest instanceof Request)\n\t\treturn tokenOrHeadersOrRequest.headers.get(USER_TOKEN_HEADER_NAME);\n\n\treturn null;\n}\n\nexport interface UserTokenPayload {\n\t/// The user id of the user who is making the request.\n\tuserId: string;\n\n\t/// The app id of the app that is making the request.\n\t/// This will always be the same as the app id passed in the options.\n\tappId: string;\n}\n\nexport interface VerifyUserTokenOptions<DontThrow extends boolean = false> {\n\t/// This is the app id of your app. You can find it in the app settings dashboard.\n\tappId: string;\n\n\t/// The public key used to verify the user token. You don't need to provide this by default.\n\tpublicKey?: string;\n\n\t/// If true, the function will instead return null if the user token is invalid.\n\t/// Otherwise, it will throw an error.\n\tdontThrow?: DontThrow;\n}\n\nexport function makeUserTokenVerifier<DontThrow extends boolean = false>(\n\toptions: VerifyUserTokenOptions<DontThrow>,\n) {\n\treturn async function verifyUserToken<DT extends boolean = DontThrow>(\n\t\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\t\toverrideOptions?: Partial<VerifyUserTokenOptions<DT>>,\n\t) {\n\t\treturn await internalVerifyUserToken<DT>(tokenOrHeadersOrRequest, {\n\t\t\t...options,\n\t\t\t...overrideOptions,\n\t\t} as VerifyUserTokenOptions<DT>);\n\t};\n}\n\nexport function verifyUserToken<DontThrow extends boolean = false>(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\toverrideOptions?: Partial<VerifyUserTokenOptions<DontThrow>>,\n) {\n\treturn internalVerifyUserToken<DontThrow>(tokenOrHeadersOrRequest, {\n\t\t...overrideOptions,\n\t} as VerifyUserTokenOptions<DontThrow>);\n}\n\nasync function internalVerifyUserToken<DontThrow extends boolean = false>(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\toptions: Partial<VerifyUserTokenOptions<DontThrow>>,\n): Promise<\n\tPromise<DontThrow extends true ? UserTokenPayload | null : UserTokenPayload>\n> {\n\ttry {\n\t\tconst tokenString = getUserToken(tokenOrHeadersOrRequest);\n\n\t\tif (!tokenString) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Whop user token not found. If you are the app developer, ensure you are developing in the whop.com iframe and have the dev proxy enabled.\",\n\t\t\t);\n\t\t}\n\n\t\tconst jwkString = options.publicKey ?? USER_TOKEN_VERIFICATION_KEY;\n\t\tconst key = await importJWK(JSON.parse(jwkString), \"ES256\").catch(() => {\n\t\t\tthrow new Error(\"Invalid public key provided to verifyUserToken\");\n\t\t});\n\t\tconst token = await jwtVerify(tokenString, key, {\n\t\t\tissuer: \"urn:whopcom:exp-proxy\",\n\t\t}).catch((_e) => {\n\t\t\tthrow new Error(\"Invalid user token provided to verifyUserToken\");\n\t\t});\n\t\tif (\n\t\t\t!(token.payload.sub && token.payload.aud) ||\n\t\t\tArray.isArray(token.payload.aud)\n\t\t) {\n\t\t\tthrow new Error(\"Invalid user token provided to verifyUserToken\");\n\t\t}\n\t\tif (options.appId && token.payload.aud !== options.appId)\n\t\t\tthrow new Error(\"Invalid app id provided to verifyUserToken\");\n\t\treturn {\n\t\t\tappId: token.payload.aud,\n\t\t\tuserId: token.payload.sub,\n\t\t};\n\t} catch (e) {\n\t\tif (options.dontThrow) {\n\t\t\treturn null as DontThrow extends true ? UserTokenPayload | null : never;\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * as common from \"./index.common\";\nexport * as google from \"./index.google\";\nexport * as bounties_app from \"./index.bounties_app\";\nexport * as courses_app from \"./index.courses_app\";\nexport * as games from \"./index.games\";\nexport * as content_rewards_app from \"./index.content_rewards_app\";\nexport * as events_app from \"./index.events_app\";\nexport * as diagnostics from \"./index.diagnostics\";\nexport * as content_app from \"./index.content_app\";\nexport * as calendar_bookings_app from \"./index.calendar_bookings_app\";\nexport * as wheel_app from \"./index.wheel_app\";\nexport * as experience from \"./index.experience\";\nexport * as data_platform from \"./index.data_platform\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./common/money\";\nexport * from \"./common/attachment\";\nexport * from \"./common/users\";\nexport * from \"./common/common\";\nexport * from \"./common/feed\";\nexport * from \"./common/notifications\";\nexport * from \"./common/product_surface\";\nexport * from \"./common/websockets\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/users.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\n\nexport const UserType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  HUMAN: \"HUMAN\",\n  SYSTEM: \"SYSTEM\",\n  AGENT: \"AGENT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type UserType = typeof UserType[keyof typeof UserType];\n\nexport namespace UserType {\n  export type UNKNOWN_TYPE = typeof UserType.UNKNOWN_TYPE;\n  export type HUMAN = typeof UserType.HUMAN;\n  export type SYSTEM = typeof UserType.SYSTEM;\n  export type AGENT = typeof UserType.AGENT;\n  export type UNRECOGNIZED = typeof UserType.UNRECOGNIZED;\n}\n\nexport interface User {\n  id: string;\n  email?: string | undefined;\n  name?: string | undefined;\n  username: string;\n  /** @deprecated */\n  profilePicUrl?: string | undefined;\n  userType: UserType;\n  roles: User_PlatformRole[];\n  profilePicture: FileAttachment | undefined;\n  banner: FileAttachment | undefined;\n  createdAt: string | undefined;\n  isSuspended: boolean;\n  isPlatformPolice: boolean;\n}\n\nexport const User_PlatformRole = {\n  UNKNOWN_ROLE: \"UNKNOWN_ROLE\",\n  SUPER_ADMIN: \"SUPER_ADMIN\",\n  ADMIN: \"ADMIN\",\n  TRUST_AND_SAFETY_MANAGER: \"TRUST_AND_SAFETY_MANAGER\",\n  MANAGER: \"MANAGER\",\n  SUPPORT: \"SUPPORT\",\n  TESTER: \"TESTER\",\n  SEO_MANAGER: \"SEO_MANAGER\",\n  TEMPLATE_USER: \"TEMPLATE_USER\",\n  MARKETPLACE_MANAGER: \"MARKETPLACE_MANAGER\",\n  DEVELOPER: \"DEVELOPER\",\n  FINANCE_MANAGER: \"FINANCE_MANAGER\",\n  RESOLUTION_CENTER_MANAGER: \"RESOLUTION_CENTER_MANAGER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type User_PlatformRole = typeof User_PlatformRole[keyof typeof User_PlatformRole];\n\nexport namespace User_PlatformRole {\n  export type UNKNOWN_ROLE = typeof User_PlatformRole.UNKNOWN_ROLE;\n  export type SUPER_ADMIN = typeof User_PlatformRole.SUPER_ADMIN;\n  export type ADMIN = typeof User_PlatformRole.ADMIN;\n  export type TRUST_AND_SAFETY_MANAGER = typeof User_PlatformRole.TRUST_AND_SAFETY_MANAGER;\n  export type MANAGER = typeof User_PlatformRole.MANAGER;\n  export type SUPPORT = typeof User_PlatformRole.SUPPORT;\n  export type TESTER = typeof User_PlatformRole.TESTER;\n  export type SEO_MANAGER = typeof User_PlatformRole.SEO_MANAGER;\n  export type TEMPLATE_USER = typeof User_PlatformRole.TEMPLATE_USER;\n  export type MARKETPLACE_MANAGER = typeof User_PlatformRole.MARKETPLACE_MANAGER;\n  export type DEVELOPER = typeof User_PlatformRole.DEVELOPER;\n  export type FINANCE_MANAGER = typeof User_PlatformRole.FINANCE_MANAGER;\n  export type RESOLUTION_CENTER_MANAGER = typeof User_PlatformRole.RESOLUTION_CENTER_MANAGER;\n  export type UNRECOGNIZED = typeof User_PlatformRole.UNRECOGNIZED;\n}\n\nexport interface UserStat {\n  userId: string;\n  moneyEarned24Hours: Money | undefined;\n  moneyEarned30Days: Money | undefined;\n  moneyEarned7Days: Money | undefined;\n  moneyEarnedLifetime: Money | undefined;\n}\n\nexport interface UserPresence {\n  userId: string;\n  lastSeenAt?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/common.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\nimport type { User } from \"./users\";\n\nexport const AppViewType = {\n  APP_VIEW_TYPE_UNKNOWN: \"APP_VIEW_TYPE_UNKNOWN\",\n  /**\n   * APP_VIEW_TYPE_HUB - This view shows in the consumer facing side of a creator's whop.\n   * It is scoped to an \"experience\" and can be seen by customer of a creator.\n   * Clients know this as the \"consumer\" view. (consumer_view_url_template)\n   */\n  APP_VIEW_TYPE_HUB: \"APP_VIEW_TYPE_HUB\",\n  /**\n   * APP_VIEW_TYPE_DASH - Deprecated - used only by legacy whop internal apps.\n   * This represents the \"experience admin\" view where a creator could customise settings for each experience powered by the app.\n   * Clients know this as the \"admin\" view. (admin_view_url_template)\n   *\n   * @deprecated\n   */\n  APP_VIEW_TYPE_DASH: \"APP_VIEW_TYPE_DASH\",\n  /**\n   * APP_VIEW_TYPE_ANALYTICS - Deprecated - used only by legacy whop internal apps.\n   *\n   * @deprecated\n   */\n  APP_VIEW_TYPE_ANALYTICS: \"APP_VIEW_TYPE_ANALYTICS\",\n  /**\n   * APP_VIEW_TYPE_DASHBOARD - New. This view shows up in the creator dashboard for each company that installs the app.\n   * One view is rendered per company per app. Only the companyId is available in the URL template.\n   */\n  APP_VIEW_TYPE_DASHBOARD: \"APP_VIEW_TYPE_DASHBOARD\",\n  /**\n   * APP_VIEW_TYPE_DISCOVER - Discover view shows up on the marketplace that allows an app to drive traffics to communities on whop.\n   * Essentially it is an unscoped view for an app.\n   */\n  APP_VIEW_TYPE_DISCOVER: \"APP_VIEW_TYPE_DISCOVER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AppViewType = typeof AppViewType[keyof typeof AppViewType];\n\nexport namespace AppViewType {\n  export type APP_VIEW_TYPE_UNKNOWN = typeof AppViewType.APP_VIEW_TYPE_UNKNOWN;\n  export type APP_VIEW_TYPE_HUB = typeof AppViewType.APP_VIEW_TYPE_HUB;\n  export type APP_VIEW_TYPE_DASH = typeof AppViewType.APP_VIEW_TYPE_DASH;\n  export type APP_VIEW_TYPE_ANALYTICS = typeof AppViewType.APP_VIEW_TYPE_ANALYTICS;\n  export type APP_VIEW_TYPE_DASHBOARD = typeof AppViewType.APP_VIEW_TYPE_DASHBOARD;\n  export type APP_VIEW_TYPE_DISCOVER = typeof AppViewType.APP_VIEW_TYPE_DISCOVER;\n  export type UNRECOGNIZED = typeof AppViewType.UNRECOGNIZED;\n}\n\nexport const AccessType = {\n  UNKNOWN_ACCESS_TYPE: \"UNKNOWN_ACCESS_TYPE\",\n  NO_ACCESS: \"NO_ACCESS\",\n  CUSTOMER: \"CUSTOMER\",\n  ADMIN: \"ADMIN\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessType = typeof AccessType[keyof typeof AccessType];\n\nexport namespace AccessType {\n  export type UNKNOWN_ACCESS_TYPE = typeof AccessType.UNKNOWN_ACCESS_TYPE;\n  export type NO_ACCESS = typeof AccessType.NO_ACCESS;\n  export type CUSTOMER = typeof AccessType.CUSTOMER;\n  export type ADMIN = typeof AccessType.ADMIN;\n  export type UNRECOGNIZED = typeof AccessType.UNRECOGNIZED;\n}\n\nexport const Platform = {\n  UNKNOWN: \"UNKNOWN\",\n  WEB: \"WEB\",\n  IOS: \"IOS\",\n  ANDROID: \"ANDROID\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Platform = typeof Platform[keyof typeof Platform];\n\nexport namespace Platform {\n  export type UNKNOWN = typeof Platform.UNKNOWN;\n  export type WEB = typeof Platform.WEB;\n  export type IOS = typeof Platform.IOS;\n  export type ANDROID = typeof Platform.ANDROID;\n  export type UNRECOGNIZED = typeof Platform.UNRECOGNIZED;\n}\n\nexport interface App {\n  id: string;\n  name: string;\n  internalIdentifier: string;\n  imageUrl: string;\n  icon?: FileAttachment | undefined;\n  consumerViewUrlTemplate?: string | undefined;\n  adminViewUrlTemplate?: string | undefined;\n  analyticsViewUrlTemplate?: string | undefined;\n  discoverViewUrlTemplate?: string | undefined;\n  dashboardViewUrlTemplate?: string | undefined;\n  description?: string | undefined;\n  prodIosBuildId?: string | undefined;\n  prodAndroidBuildId?: string | undefined;\n  prodWebBuildId?: string | undefined;\n  botId: string;\n}\n\nexport interface AppBuild {\n  id: string;\n  appId: string;\n  checksum: string;\n  platform: Platform;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  status: AppBuild_Status;\n  fileUrl: string;\n  reviewMessage?: string | undefined;\n  supportedAppViewTypes: AppViewType[];\n}\n\nexport const AppBuild_Status = {\n  STATUS_UNKNOWN: \"STATUS_UNKNOWN\",\n  STATUS_DRAFT: \"STATUS_DRAFT\",\n  STATUS_PENDING: \"STATUS_PENDING\",\n  STATUS_APPROVED: \"STATUS_APPROVED\",\n  STATUS_REJECTED: \"STATUS_REJECTED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AppBuild_Status = typeof AppBuild_Status[keyof typeof AppBuild_Status];\n\nexport namespace AppBuild_Status {\n  export type STATUS_UNKNOWN = typeof AppBuild_Status.STATUS_UNKNOWN;\n  export type STATUS_DRAFT = typeof AppBuild_Status.STATUS_DRAFT;\n  export type STATUS_PENDING = typeof AppBuild_Status.STATUS_PENDING;\n  export type STATUS_APPROVED = typeof AppBuild_Status.STATUS_APPROVED;\n  export type STATUS_REJECTED = typeof AppBuild_Status.STATUS_REJECTED;\n  export type UNRECOGNIZED = typeof AppBuild_Status.UNRECOGNIZED;\n}\n\nexport interface Bot {\n  id: string;\n  /** @deprecated */\n  hubRoute: string;\n  title: string;\n  imageUrl: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  isVerified: boolean;\n  installedFirstAppAt?: string | undefined;\n  whopFourFiveEnabledAt?: string | undefined;\n  logo?: FileAttachment | undefined;\n  bannerImage?: FileAttachment | undefined;\n  route?: string | undefined;\n  opengraphImage?: FileAttachment | undefined;\n  opengraphImageVariant?: Bot_OpengraphImageVariant | undefined;\n  useLogoAsOpengraphImageFallback: boolean;\n  features: string[];\n  activeMembersCount: number;\n}\n\nexport const Bot_OpengraphImageVariant = {\n  VARIANT_UNKNOWN: \"VARIANT_UNKNOWN\",\n  VARIANT_WHITE: \"VARIANT_WHITE\",\n  VARIANT_BLACK: \"VARIANT_BLACK\",\n  VARIANT_ORANGE: \"VARIANT_ORANGE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bot_OpengraphImageVariant = typeof Bot_OpengraphImageVariant[keyof typeof Bot_OpengraphImageVariant];\n\nexport namespace Bot_OpengraphImageVariant {\n  export type VARIANT_UNKNOWN = typeof Bot_OpengraphImageVariant.VARIANT_UNKNOWN;\n  export type VARIANT_WHITE = typeof Bot_OpengraphImageVariant.VARIANT_WHITE;\n  export type VARIANT_BLACK = typeof Bot_OpengraphImageVariant.VARIANT_BLACK;\n  export type VARIANT_ORANGE = typeof Bot_OpengraphImageVariant.VARIANT_ORANGE;\n  export type UNRECOGNIZED = typeof Bot_OpengraphImageVariant.UNRECOGNIZED;\n}\n\nexport interface NotificationTopic {\n  id: string;\n}\n\nexport interface CfLocation {\n  ipAddress?: string | undefined;\n  city?: string | undefined;\n  country?: string | undefined;\n  continent?: string | undefined;\n  longitude?: number | undefined;\n  latitude?: number | undefined;\n  region?: string | undefined;\n  regionCode?: string | undefined;\n  metroCode?: string | undefined;\n  postalCode?: string | undefined;\n  timezone?: string | undefined;\n}\n\nexport interface AccessPass {\n  id: string;\n  route: string;\n  /** @deprecated */\n  name: string;\n  headline: string;\n  imageUrl: string;\n  title: string;\n  botId: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  shortenedDescription?: string | undefined;\n  visibility: AccessPass_Visibility;\n  discoverableAt?: string | undefined;\n  logo?: FileAttachment | undefined;\n  bannerImage?: FileAttachment | undefined;\n  accessPassType: AccessPass_AccessPassType;\n  activeMembersCount: number;\n}\n\nexport const AccessPass_Visibility = {\n  VISIBILITY_UNKNOWN: \"VISIBILITY_UNKNOWN\",\n  VISIBLE: \"VISIBLE\",\n  HIDDEN: \"HIDDEN\",\n  ARCHIVED: \"ARCHIVED\",\n  QUICK_LINK: \"QUICK_LINK\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPass_Visibility = typeof AccessPass_Visibility[keyof typeof AccessPass_Visibility];\n\nexport namespace AccessPass_Visibility {\n  export type VISIBILITY_UNKNOWN = typeof AccessPass_Visibility.VISIBILITY_UNKNOWN;\n  export type VISIBLE = typeof AccessPass_Visibility.VISIBLE;\n  export type HIDDEN = typeof AccessPass_Visibility.HIDDEN;\n  export type ARCHIVED = typeof AccessPass_Visibility.ARCHIVED;\n  export type QUICK_LINK = typeof AccessPass_Visibility.QUICK_LINK;\n  export type UNRECOGNIZED = typeof AccessPass_Visibility.UNRECOGNIZED;\n}\n\nexport const AccessPass_AccessPassType = {\n  ACCESS_PASS_TYPE_UNKNOWN: \"ACCESS_PASS_TYPE_UNKNOWN\",\n  REGULAR: \"REGULAR\",\n  APP: \"APP\",\n  EXPERIENCE_UPSELL: \"EXPERIENCE_UPSELL\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPass_AccessPassType = typeof AccessPass_AccessPassType[keyof typeof AccessPass_AccessPassType];\n\nexport namespace AccessPass_AccessPassType {\n  export type ACCESS_PASS_TYPE_UNKNOWN = typeof AccessPass_AccessPassType.ACCESS_PASS_TYPE_UNKNOWN;\n  export type REGULAR = typeof AccessPass_AccessPassType.REGULAR;\n  export type APP = typeof AccessPass_AccessPassType.APP;\n  export type EXPERIENCE_UPSELL = typeof AccessPass_AccessPassType.EXPERIENCE_UPSELL;\n  export type UNRECOGNIZED = typeof AccessPass_AccessPassType.UNRECOGNIZED;\n}\n\nexport interface Plan {\n  id: string;\n  baseCurrency: string;\n  renewalPrice: Money | undefined;\n  initialPrice: Money | undefined;\n  initialPriceDue: Money | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  billingPeriod?: number | undefined;\n  trialPeriodDays?: number | undefined;\n  expirationDays?: number | undefined;\n  unlimitedStock: boolean;\n  paymentLinkDescription?: string | undefined;\n  releaseMethod: Plan_ReleaseMethod;\n  stock?: number | undefined;\n  visibility: Plan_Visibility;\n  planType: Plan_PlanType;\n}\n\nexport const Plan_Visibility = {\n  VISIBILITY_UNKNOWN: \"VISIBILITY_UNKNOWN\",\n  VISIBLE: \"VISIBLE\",\n  HIDDEN: \"HIDDEN\",\n  ARCHIVED: \"ARCHIVED\",\n  QUICK_LINK: \"QUICK_LINK\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_Visibility = typeof Plan_Visibility[keyof typeof Plan_Visibility];\n\nexport namespace Plan_Visibility {\n  export type VISIBILITY_UNKNOWN = typeof Plan_Visibility.VISIBILITY_UNKNOWN;\n  export type VISIBLE = typeof Plan_Visibility.VISIBLE;\n  export type HIDDEN = typeof Plan_Visibility.HIDDEN;\n  export type ARCHIVED = typeof Plan_Visibility.ARCHIVED;\n  export type QUICK_LINK = typeof Plan_Visibility.QUICK_LINK;\n  export type UNRECOGNIZED = typeof Plan_Visibility.UNRECOGNIZED;\n}\n\nexport const Plan_ReleaseMethod = {\n  RELEASE_METHOD_UNKNOWN: \"RELEASE_METHOD_UNKNOWN\",\n  BUY_NOW: \"BUY_NOW\",\n  WAITLIST: \"WAITLIST\",\n  RAFFLE: \"RAFFLE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_ReleaseMethod = typeof Plan_ReleaseMethod[keyof typeof Plan_ReleaseMethod];\n\nexport namespace Plan_ReleaseMethod {\n  export type RELEASE_METHOD_UNKNOWN = typeof Plan_ReleaseMethod.RELEASE_METHOD_UNKNOWN;\n  export type BUY_NOW = typeof Plan_ReleaseMethod.BUY_NOW;\n  export type WAITLIST = typeof Plan_ReleaseMethod.WAITLIST;\n  export type RAFFLE = typeof Plan_ReleaseMethod.RAFFLE;\n  export type UNRECOGNIZED = typeof Plan_ReleaseMethod.UNRECOGNIZED;\n}\n\nexport const Plan_PlanType = {\n  PLAN_TYPE_UNKNOWN: \"PLAN_TYPE_UNKNOWN\",\n  RENEWAL: \"RENEWAL\",\n  ONE_TIME: \"ONE_TIME\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_PlanType = typeof Plan_PlanType[keyof typeof Plan_PlanType];\n\nexport namespace Plan_PlanType {\n  export type PLAN_TYPE_UNKNOWN = typeof Plan_PlanType.PLAN_TYPE_UNKNOWN;\n  export type RENEWAL = typeof Plan_PlanType.RENEWAL;\n  export type ONE_TIME = typeof Plan_PlanType.ONE_TIME;\n  export type UNRECOGNIZED = typeof Plan_PlanType.UNRECOGNIZED;\n}\n\nexport interface Entry {\n  id: string;\n  status: Entry_EntryStatus;\n  userId: string;\n  botId: string;\n  planId: string;\n  accessPassId: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n}\n\nexport const Entry_EntryStatus = {\n  ENTRY_STATUS_UNKNOWN: \"ENTRY_STATUS_UNKNOWN\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  DENIED: \"DENIED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Entry_EntryStatus = typeof Entry_EntryStatus[keyof typeof Entry_EntryStatus];\n\nexport namespace Entry_EntryStatus {\n  export type ENTRY_STATUS_UNKNOWN = typeof Entry_EntryStatus.ENTRY_STATUS_UNKNOWN;\n  export type PENDING = typeof Entry_EntryStatus.PENDING;\n  export type APPROVED = typeof Entry_EntryStatus.APPROVED;\n  export type DENIED = typeof Entry_EntryStatus.DENIED;\n  export type UNRECOGNIZED = typeof Entry_EntryStatus.UNRECOGNIZED;\n}\n\nexport interface AccessPassMember {\n  id: string;\n  accessPassId: string;\n  userId: string;\n  botId: string;\n  accessLevel: AccessType;\n  createdAt: string | undefined;\n  updatedAt:\n    | string\n    | undefined;\n  /** @deprecated */\n  orderOld?: number | undefined;\n  order?: number | undefined;\n}\n\nexport interface Member {\n  id: string;\n  userId: string;\n  botId: string;\n  accessLevel: AccessType;\n  order?: number | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport interface AccessPassExperience {\n  id: string;\n  accessPassId: string;\n  experienceId: string;\n  botId: string;\n  /** @deprecated */\n  isDeleted: boolean;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  upsellType?: AccessPassExperience_UpsellType | undefined;\n  upsellPlan?: Plan | undefined;\n  order: number;\n  sectionId?: string | undefined;\n}\n\nexport const AccessPassExperience_UpsellType = {\n  UPSELL_TYPE_UNKNOWN: \"UPSELL_TYPE_UNKNOWN\",\n  BEFORE_CHECKOUT: \"BEFORE_CHECKOUT\",\n  AFTER_CHECKOUT: \"AFTER_CHECKOUT\",\n  ONLY_IN_WHOP: \"ONLY_IN_WHOP\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPassExperience_UpsellType =\n  typeof AccessPassExperience_UpsellType[keyof typeof AccessPassExperience_UpsellType];\n\nexport namespace AccessPassExperience_UpsellType {\n  export type UPSELL_TYPE_UNKNOWN = typeof AccessPassExperience_UpsellType.UPSELL_TYPE_UNKNOWN;\n  export type BEFORE_CHECKOUT = typeof AccessPassExperience_UpsellType.BEFORE_CHECKOUT;\n  export type AFTER_CHECKOUT = typeof AccessPassExperience_UpsellType.AFTER_CHECKOUT;\n  export type ONLY_IN_WHOP = typeof AccessPassExperience_UpsellType.ONLY_IN_WHOP;\n  export type UNRECOGNIZED = typeof AccessPassExperience_UpsellType.UNRECOGNIZED;\n}\n\nexport interface AccessPassExperienceSection {\n  id: string;\n  accessPassId: string;\n  botId: string;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  order?: number | undefined;\n}\n\nexport interface BotExperienceSection {\n  id: string;\n  botId: string;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  order?: number | undefined;\n}\n\nexport interface Purchase {\n  amount: number;\n  currencyCode: string;\n  userName: string;\n  product: AccessPass | undefined;\n  createdAt: number;\n  id: string;\n  releaseMethod: Purchase_ReleaseMethod;\n  formattedAmount: string;\n}\n\nexport const Purchase_ReleaseMethod = {\n  UNKNOWN: \"UNKNOWN\",\n  BUY_NOW: \"BUY_NOW\",\n  WAITLIST: \"WAITLIST\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Purchase_ReleaseMethod = typeof Purchase_ReleaseMethod[keyof typeof Purchase_ReleaseMethod];\n\nexport namespace Purchase_ReleaseMethod {\n  export type UNKNOWN = typeof Purchase_ReleaseMethod.UNKNOWN;\n  export type BUY_NOW = typeof Purchase_ReleaseMethod.BUY_NOW;\n  export type WAITLIST = typeof Purchase_ReleaseMethod.WAITLIST;\n  export type UNRECOGNIZED = typeof Purchase_ReleaseMethod.UNRECOGNIZED;\n}\n\nexport interface MarketplaceStats {\n  totalGmvUsd: number;\n  usersCount: number;\n}\n\nexport interface ConnectedId {\n  type: ConnectedId_Type;\n  id: string;\n  deviceId: string;\n}\n\nexport const ConnectedId_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  ANONYMOUS: \"ANONYMOUS\",\n  USER: \"USER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ConnectedId_Type = typeof ConnectedId_Type[keyof typeof ConnectedId_Type];\n\nexport namespace ConnectedId_Type {\n  export type UNKNOWN = typeof ConnectedId_Type.UNKNOWN;\n  export type ANONYMOUS = typeof ConnectedId_Type.ANONYMOUS;\n  export type USER = typeof ConnectedId_Type.USER;\n  export type UNRECOGNIZED = typeof ConnectedId_Type.UNRECOGNIZED;\n}\n\nexport interface Channel {\n  type: Channel_Type;\n  id: string;\n}\n\nexport const Channel_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  /** EXPERIENCE - / A channel to which all users of an experience are subscribed, only when vieweing that experience in the UI. The ID is the experience.tag (exp_XXXXX) */\n  EXPERIENCE: \"EXPERIENCE\",\n  /** NOTIFICATIONS - / Not used right now. */\n  NOTIFICATIONS: \"NOTIFICATIONS\",\n  /** DMS - / A channel to which all users in a dms_feed are subscribed. Id is the dms_feed.external_id (feed_XXXXX) */\n  DMS: \"DMS\",\n  /** USER - / A channel to which a single user is subscribed. (Id is the user's id) */\n  USER: \"USER\",\n  /** EVERYONE - / A single channel to which all connections are subscribed. (Id is empty) */\n  EVERYONE: \"EVERYONE\",\n  /** AUTHENTICATED - / A single channel to which all authenticated users are subscribed. (Id is empty) */\n  AUTHENTICATED: \"AUTHENTICATED\",\n  /** ANONYMOUS - / A channel that is created for every anonymous connection. The id is 128bits of random data. */\n  ANONYMOUS: \"ANONYMOUS\",\n  /** PUBLIC - / A channel type that can be connected to by anyone without authentication. Allows anything after the `public_` prefix. */\n  PUBLIC: \"PUBLIC\",\n  /** ACCESS_PASS - / A channel to which all users of an access pass are subscribed. The ID is the access_pass.tag (pass_XXXX or prod_XXXX) */\n  ACCESS_PASS: \"ACCESS_PASS\",\n  /** APP - / A channel that is used by an app to broadcast data to all of its websocket connections. It may look like: app_XXX or app_XXX_exp_XXX or app_XXX_custom_suffix */\n  APP: \"APP\",\n  /** BOT - / A channel to which all members with valid access to a bot are subscribed. The ID is the bot.id (biz_XXX) */\n  BOT: \"BOT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Channel_Type = typeof Channel_Type[keyof typeof Channel_Type];\n\nexport namespace Channel_Type {\n  export type UNKNOWN = typeof Channel_Type.UNKNOWN;\n  export type EXPERIENCE = typeof Channel_Type.EXPERIENCE;\n  export type NOTIFICATIONS = typeof Channel_Type.NOTIFICATIONS;\n  export type DMS = typeof Channel_Type.DMS;\n  export type USER = typeof Channel_Type.USER;\n  export type EVERYONE = typeof Channel_Type.EVERYONE;\n  export type AUTHENTICATED = typeof Channel_Type.AUTHENTICATED;\n  export type ANONYMOUS = typeof Channel_Type.ANONYMOUS;\n  export type PUBLIC = typeof Channel_Type.PUBLIC;\n  export type ACCESS_PASS = typeof Channel_Type.ACCESS_PASS;\n  export type APP = typeof Channel_Type.APP;\n  export type BOT = typeof Channel_Type.BOT;\n  export type UNRECOGNIZED = typeof Channel_Type.UNRECOGNIZED;\n}\n\nexport interface ChannelSubscriptionState {\n  channel: Channel | undefined;\n  isSubscribed: boolean;\n  wasAlreadySubscribed: boolean;\n  disconnectionReason?: ChannelSubscriptionState_DisconnectionReason | undefined;\n}\n\nexport const ChannelSubscriptionState_DisconnectionReason = {\n  UNKNOWN: \"UNKNOWN\",\n  NO_ACCESS: \"NO_ACCESS\",\n  REQUESTED_DISCONNECT: \"REQUESTED_DISCONNECT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ChannelSubscriptionState_DisconnectionReason =\n  typeof ChannelSubscriptionState_DisconnectionReason[keyof typeof ChannelSubscriptionState_DisconnectionReason];\n\nexport namespace ChannelSubscriptionState_DisconnectionReason {\n  export type UNKNOWN = typeof ChannelSubscriptionState_DisconnectionReason.UNKNOWN;\n  export type NO_ACCESS = typeof ChannelSubscriptionState_DisconnectionReason.NO_ACCESS;\n  export type REQUESTED_DISCONNECT = typeof ChannelSubscriptionState_DisconnectionReason.REQUESTED_DISCONNECT;\n  export type UNRECOGNIZED = typeof ChannelSubscriptionState_DisconnectionReason.UNRECOGNIZED;\n}\n\nexport interface Reconnect {\n}\n\nexport interface ReloadClient {\n  versionId: string;\n  force: boolean;\n}\n\nexport interface BroadcastRequest {\n  channel: Channel | undefined;\n  typingIndicator?: TypingIndicator | undefined;\n  markAsRead?: MarkAsRead | undefined;\n  position?: Position | undefined;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n  type: Position_Type;\n  url: string;\n  message: string;\n}\n\nexport const Position_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  MOUSE: \"MOUSE\",\n  PLAYER: \"PLAYER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Position_Type = typeof Position_Type[keyof typeof Position_Type];\n\nexport namespace Position_Type {\n  export type UNKNOWN = typeof Position_Type.UNKNOWN;\n  export type MOUSE = typeof Position_Type.MOUSE;\n  export type PLAYER = typeof Position_Type.PLAYER;\n  export type UNRECOGNIZED = typeof Position_Type.UNRECOGNIZED;\n}\n\nexport interface TypingIndicator {\n  expireAfter: string | undefined;\n}\n\nexport interface MarkAsRead {\n  experienceId?: string | undefined;\n  isGlobal: boolean;\n  timestamp: string | undefined;\n}\n\nexport interface BroadcastResponse {\n  channel: Channel | undefined;\n  fromUserId: string;\n  serverForwardedAt: string | undefined;\n  typingIndicator?: TypingIndicator | undefined;\n  markAsRead?: MarkAsRead | undefined;\n  position?: Position | undefined;\n}\n\nexport interface DiscoveryAccessPassLiveData {\n  accessPassId: string;\n  last24HoursGmv?: Money | undefined;\n  last24HoursAffiliateEarnings?: Money | undefined;\n  last24HoursNewUsers?: number | undefined;\n  last24HoursAverageTimePerUser?: string | undefined;\n  globalWhopRanking?: number | undefined;\n  totalPublishedReviewsCount?: number | undefined;\n  lastReview?: AccessPassReview | undefined;\n  last7DaysPublishedReviewsCount?: number | undefined;\n  activeUsersCount?: number | undefined;\n  last30DaysNewUsers?: number | undefined;\n  accessPassActivityItem?: AccessPassActivityItem | undefined;\n}\n\nexport interface AccessPassActivityItem {\n  id: string;\n  createdAt: string | undefined;\n  eventType: string;\n  user?: User | undefined;\n}\n\nexport interface AccessPassReview {\n  id: string;\n  createdAt: string | undefined;\n  publishedAt: string | undefined;\n}\n\nexport interface FeedContentItem {\n  id: string;\n  eventType: string;\n  metadata: { [key: string]: any } | undefined;\n  restPath: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  appId: string;\n  botId: string;\n  experienceId: string;\n  externalId: string;\n  parentExternalId: string;\n  userId: string;\n  attachments: FileAttachment[];\n  gifs: FeedContentItem_GiphyGif[];\n}\n\nexport interface FeedContentItem_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface UserReferralMarketRates {\n  previousRates?: UserReferralMarketRate | undefined;\n  currentRates?: UserReferralMarketRate | undefined;\n}\n\nexport interface UserReferralMarketRate {\n  percentOfPlatformSpend?: number | undefined;\n  percentOfSellerPayment?: number | undefined;\n  percentOfContentRewardsCampaignMaker?: number | undefined;\n  percentOfContentRewardsEarner?: number | undefined;\n}\n\nexport interface GoFetchExperienceList {\n  accessPassId: string;\n}\n\nexport interface GoFetchUserExperiences {\n  experienceId: string;\n}\n\nexport interface BusinessActivityEvent {\n  eventType: BusinessActivityEvent_EventType;\n  user: User | undefined;\n  accessPass: AccessPass | undefined;\n  description: string;\n  createdAt: string | undefined;\n  member: Member | undefined;\n  metadata: { [key: string]: any } | undefined;\n}\n\nexport const BusinessActivityEvent_EventType = {\n  UNKNOWN: \"UNKNOWN\",\n  MEMBER_JOINED: \"MEMBER_JOINED\",\n  NEW_PAYMENT: \"NEW_PAYMENT\",\n  NEW_DISPUTE: \"NEW_DISPUTE\",\n  MEMBER_CANCELED: \"MEMBER_CANCELED\",\n  MEMBER_CHURNED: \"MEMBER_CHURNED\",\n  NEW_MARKETPLACE_SALE: \"NEW_MARKETPLACE_SALE\",\n  NEW_RESOLUTION_CENTER_CASE: \"NEW_RESOLUTION_CENTER_CASE\",\n  NEW_REVIEW: \"NEW_REVIEW\",\n  TEAM_MEMBER_JOINED: \"TEAM_MEMBER_JOINED\",\n  BANNED_USER: \"BANNED_USER\",\n  FAILED_PAYMENT: \"FAILED_PAYMENT\",\n  PAYOUT_REQUESTED: \"PAYOUT_REQUESTED\",\n  PAYOUT_COMPLETED: \"PAYOUT_COMPLETED\",\n  PAYOUT_FAILED: \"PAYOUT_FAILED\",\n  COMPETITION_ALERT: \"COMPETITION_ALERT\",\n  NEW_WAITLIST_ENTRY: \"NEW_WAITLIST_ENTRY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type BusinessActivityEvent_EventType =\n  typeof BusinessActivityEvent_EventType[keyof typeof BusinessActivityEvent_EventType];\n\nexport namespace BusinessActivityEvent_EventType {\n  export type UNKNOWN = typeof BusinessActivityEvent_EventType.UNKNOWN;\n  export type MEMBER_JOINED = typeof BusinessActivityEvent_EventType.MEMBER_JOINED;\n  export type NEW_PAYMENT = typeof BusinessActivityEvent_EventType.NEW_PAYMENT;\n  export type NEW_DISPUTE = typeof BusinessActivityEvent_EventType.NEW_DISPUTE;\n  export type MEMBER_CANCELED = typeof BusinessActivityEvent_EventType.MEMBER_CANCELED;\n  export type MEMBER_CHURNED = typeof BusinessActivityEvent_EventType.MEMBER_CHURNED;\n  export type NEW_MARKETPLACE_SALE = typeof BusinessActivityEvent_EventType.NEW_MARKETPLACE_SALE;\n  export type NEW_RESOLUTION_CENTER_CASE = typeof BusinessActivityEvent_EventType.NEW_RESOLUTION_CENTER_CASE;\n  export type NEW_REVIEW = typeof BusinessActivityEvent_EventType.NEW_REVIEW;\n  export type TEAM_MEMBER_JOINED = typeof BusinessActivityEvent_EventType.TEAM_MEMBER_JOINED;\n  export type BANNED_USER = typeof BusinessActivityEvent_EventType.BANNED_USER;\n  export type FAILED_PAYMENT = typeof BusinessActivityEvent_EventType.FAILED_PAYMENT;\n  export type PAYOUT_REQUESTED = typeof BusinessActivityEvent_EventType.PAYOUT_REQUESTED;\n  export type PAYOUT_COMPLETED = typeof BusinessActivityEvent_EventType.PAYOUT_COMPLETED;\n  export type PAYOUT_FAILED = typeof BusinessActivityEvent_EventType.PAYOUT_FAILED;\n  export type COMPETITION_ALERT = typeof BusinessActivityEvent_EventType.COMPETITION_ALERT;\n  export type NEW_WAITLIST_ENTRY = typeof BusinessActivityEvent_EventType.NEW_WAITLIST_ENTRY;\n  export type UNRECOGNIZED = typeof BusinessActivityEvent_EventType.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/feed.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\nimport type { User, User_PlatformRole, UserType } from \"./users\";\n\nexport interface FeedEntity {\n  dmsPost?: FeedDmsPost | undefined;\n  dmsFeed?: FeedDmsFeed | undefined;\n  dmsFeedMember?: FeedDmsFeedMember | undefined;\n  reaction?: FeedReaction | undefined;\n  user?: FeedUser | undefined;\n  chatFeed?: FeedChatFeed | undefined;\n  mutedUser?: FeedMutedUser | undefined;\n  forumFeed?: FeedForumFeed | undefined;\n  forumPost?: FeedForumPost | undefined;\n  postReactionCountUpdate?: FeedPostReactionCountUpdate | undefined;\n  livestreamFeed?: FeedLivestreamFeed | undefined;\n  dmsUnreadBadgeUpdate?: FeedDmsUnreadBadgeUpdate | undefined;\n}\n\nexport interface SendFeedEntityToUserRequest {\n  userId: string;\n  feedEntity: FeedEntity | undefined;\n  userIds: string[];\n}\n\nexport interface SendFeedEntityToUserResponse {\n  sent: boolean;\n}\n\nexport interface FeedSyncError {\n  message: string;\n}\n\nexport interface FeedDmsPost {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  sortKey: string;\n  /** Custom Fields */\n  feedId: string;\n  feedType: string;\n  userId: string;\n  parentId: string;\n  isEdited: boolean;\n  title: string;\n  content: string;\n  richContent: string;\n  childrenCount: number;\n  /** @deprecated */\n  reactionCounts:\n    | FeedDmsPost_ReactionCounts\n    | undefined;\n  /**\n   * use files instead\n   *\n   * @deprecated\n   */\n  attachments: FeedDmsPost_PostAttachment[];\n  gifs: FeedDmsPost_GiphyGif[];\n  replyingToPostId: string;\n  links: FeedDmsPost_LinkEmbed[];\n  isPinned: boolean;\n  everyoneMentioned: boolean;\n  mentionedUserIds: string[];\n  viewCount: number;\n  postReactionCounts: PostReactionCount[];\n  isPosterAdmin: boolean;\n  messageType: FeedDmsPost_MessageType;\n  embed?: PostEmbed | undefined;\n  user: User | undefined;\n  files: FileAttachment[];\n  experienceId?: string | undefined;\n  poll?: Poll | undefined;\n  markdownContent: string;\n  replyingToPost?: FeedDmsPost | undefined;\n}\n\nexport const FeedDmsPost_MessageType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  REGULAR: \"REGULAR\",\n  SYSTEM: \"SYSTEM\",\n  AUTOMATED: \"AUTOMATED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsPost_MessageType = typeof FeedDmsPost_MessageType[keyof typeof FeedDmsPost_MessageType];\n\nexport namespace FeedDmsPost_MessageType {\n  export type UNKNOWN_TYPE = typeof FeedDmsPost_MessageType.UNKNOWN_TYPE;\n  export type REGULAR = typeof FeedDmsPost_MessageType.REGULAR;\n  export type SYSTEM = typeof FeedDmsPost_MessageType.SYSTEM;\n  export type AUTOMATED = typeof FeedDmsPost_MessageType.AUTOMATED;\n  export type UNRECOGNIZED = typeof FeedDmsPost_MessageType.UNRECOGNIZED;\n}\n\nexport interface FeedDmsPost_ImageAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  blurDataUrl: string;\n  aspectRatio: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_DocumentAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_VideoAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  blurDataUrl: string;\n  aspectRatio: number;\n  thumbnailUrl: string;\n  height: number;\n  width: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface FeedDmsPost_PostAttachment {\n  image?: FeedDmsPost_ImageAttachment | undefined;\n  document?: FeedDmsPost_DocumentAttachment | undefined;\n  video?: FeedDmsPost_VideoAttachment | undefined;\n}\n\nexport interface FeedDmsPost_ReactionCount {\n  score: number;\n  count: number;\n}\n\nexport interface FeedDmsPost_ReactionCounts {\n  counts: { [key: string]: FeedDmsPost_ReactionCount };\n}\n\nexport interface FeedDmsPost_ReactionCounts_CountsEntry {\n  key: string;\n  value: FeedDmsPost_ReactionCount | undefined;\n}\n\nexport interface FeedDmsPost_LinkEmbed {\n  url: string;\n  title: string;\n  description: string;\n  image: string;\n  favicon: string;\n  processing: boolean;\n}\n\nexport interface FeedDmsFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  customName: string;\n  botId?: string | undefined;\n  customerUserId?: string | undefined;\n  botLogo?: FileAttachment | undefined;\n  resolvedAt?: string | undefined;\n}\n\nexport interface FeedChatFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  experienceId: string;\n  banUrls: boolean;\n  whoCanReact: FeedChatFeed_MemberPermissionType;\n  whoCanPost: FeedChatFeed_MemberPermissionType;\n  requiredProductIdsToWrite: string[];\n  banMedia: boolean;\n  userPostsCooldownSeconds: number;\n  banUnverifiedUsers: boolean;\n}\n\nexport const FeedChatFeed_MemberPermissionType = {\n  UNKNOWN: \"UNKNOWN\",\n  NONE: \"NONE\",\n  EVERYONE: \"EVERYONE\",\n  MEMBERS: \"MEMBERS\",\n  ADMINS: \"ADMINS\",\n  PRODUCT_OWNERS: \"PRODUCT_OWNERS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedChatFeed_MemberPermissionType =\n  typeof FeedChatFeed_MemberPermissionType[keyof typeof FeedChatFeed_MemberPermissionType];\n\nexport namespace FeedChatFeed_MemberPermissionType {\n  export type UNKNOWN = typeof FeedChatFeed_MemberPermissionType.UNKNOWN;\n  export type NONE = typeof FeedChatFeed_MemberPermissionType.NONE;\n  export type EVERYONE = typeof FeedChatFeed_MemberPermissionType.EVERYONE;\n  export type MEMBERS = typeof FeedChatFeed_MemberPermissionType.MEMBERS;\n  export type ADMINS = typeof FeedChatFeed_MemberPermissionType.ADMINS;\n  export type PRODUCT_OWNERS = typeof FeedChatFeed_MemberPermissionType.PRODUCT_OWNERS;\n  export type UNRECOGNIZED = typeof FeedChatFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport interface FeedLivestreamFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /**\n   * Custom Fields\n   *\n   * @deprecated\n   */\n  experienceId: string;\n  banUrls: boolean;\n  banMedia: boolean;\n  banUnverifiedUsers: boolean;\n  bannedWords: string[];\n  userPostsCooldownSeconds: number;\n  whoCanReact: FeedLivestreamFeed_MemberPermissionType;\n  whoCanPost: FeedLivestreamFeed_MemberPermissionType;\n  recordingUrl?: string | undefined;\n  thumbnailUrl?: string | undefined;\n  experienceIds: string[];\n  reactionsEnabled: boolean;\n  /** Livekit fields */\n  title: string;\n  description: string;\n  emptyTimeout: number;\n  maxParticipants: number;\n  scheduledAt: number;\n  startedAt: number;\n  endedAt: number;\n  metadata: { [key: string]: string };\n  hostId: string;\n  recording?: FileAttachment | undefined;\n  recordingStatus?: FeedLivestreamFeed_RecordingStatus | undefined;\n}\n\nexport const FeedLivestreamFeed_RecordingStatus = {\n  UNKNOWN_RECORDING_STATUS: \"UNKNOWN_RECORDING_STATUS\",\n  RECORDING: \"RECORDING\",\n  PROCESSING: \"PROCESSING\",\n  COMPLETED: \"COMPLETED\",\n  FAILED: \"FAILED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedLivestreamFeed_RecordingStatus =\n  typeof FeedLivestreamFeed_RecordingStatus[keyof typeof FeedLivestreamFeed_RecordingStatus];\n\nexport namespace FeedLivestreamFeed_RecordingStatus {\n  export type UNKNOWN_RECORDING_STATUS = typeof FeedLivestreamFeed_RecordingStatus.UNKNOWN_RECORDING_STATUS;\n  export type RECORDING = typeof FeedLivestreamFeed_RecordingStatus.RECORDING;\n  export type PROCESSING = typeof FeedLivestreamFeed_RecordingStatus.PROCESSING;\n  export type COMPLETED = typeof FeedLivestreamFeed_RecordingStatus.COMPLETED;\n  export type FAILED = typeof FeedLivestreamFeed_RecordingStatus.FAILED;\n  export type UNRECOGNIZED = typeof FeedLivestreamFeed_RecordingStatus.UNRECOGNIZED;\n}\n\nexport const FeedLivestreamFeed_MemberPermissionType = {\n  UNKNOWN: \"UNKNOWN\",\n  NONE: \"NONE\",\n  EVERYONE: \"EVERYONE\",\n  ADMINS: \"ADMINS\",\n  PRODUCT_OWNERS: \"PRODUCT_OWNERS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedLivestreamFeed_MemberPermissionType =\n  typeof FeedLivestreamFeed_MemberPermissionType[keyof typeof FeedLivestreamFeed_MemberPermissionType];\n\nexport namespace FeedLivestreamFeed_MemberPermissionType {\n  export type UNKNOWN = typeof FeedLivestreamFeed_MemberPermissionType.UNKNOWN;\n  export type NONE = typeof FeedLivestreamFeed_MemberPermissionType.NONE;\n  export type EVERYONE = typeof FeedLivestreamFeed_MemberPermissionType.EVERYONE;\n  export type ADMINS = typeof FeedLivestreamFeed_MemberPermissionType.ADMINS;\n  export type PRODUCT_OWNERS = typeof FeedLivestreamFeed_MemberPermissionType.PRODUCT_OWNERS;\n  export type UNRECOGNIZED = typeof FeedLivestreamFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport interface FeedLivestreamFeed_MetadataEntry {\n  key: string;\n  value: string;\n}\n\nexport interface FeedMutedUser {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  userId: string;\n  feedId: string;\n  feedType: string;\n  mutedUntil: number;\n}\n\nexport interface FeedDmsFeedMember {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Member Fields */\n  feedId: string;\n  userId: string;\n  companyId: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  status: FeedDmsFeedMember_DmsFeedMemberStatus;\n  lastViewedAt: number;\n  lastTypedAt: number;\n  notificationPreference: FeedDmsFeedMember_NotificationPreference;\n  pinnedPosition?: number | undefined;\n}\n\nexport const FeedDmsFeedMember_DmsFeedMemberStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  REQUESTED: \"REQUESTED\",\n  ACCEPTED: \"ACCEPTED\",\n  REJECTED: \"REJECTED\",\n  CLOSED: \"CLOSED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsFeedMember_DmsFeedMemberStatus =\n  typeof FeedDmsFeedMember_DmsFeedMemberStatus[keyof typeof FeedDmsFeedMember_DmsFeedMemberStatus];\n\nexport namespace FeedDmsFeedMember_DmsFeedMemberStatus {\n  export type UNKNOWN_STATUS = typeof FeedDmsFeedMember_DmsFeedMemberStatus.UNKNOWN_STATUS;\n  export type REQUESTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.REQUESTED;\n  export type ACCEPTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.ACCEPTED;\n  export type REJECTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.REJECTED;\n  export type CLOSED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.CLOSED;\n  export type ARCHIVED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.ARCHIVED;\n  export type UNRECOGNIZED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.UNRECOGNIZED;\n}\n\nexport const FeedDmsFeedMember_NotificationPreference = {\n  UNKNOWN_PREFERENCE: \"UNKNOWN_PREFERENCE\",\n  ALL: \"ALL\",\n  MENTIONS: \"MENTIONS\",\n  NONE: \"NONE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsFeedMember_NotificationPreference =\n  typeof FeedDmsFeedMember_NotificationPreference[keyof typeof FeedDmsFeedMember_NotificationPreference];\n\nexport namespace FeedDmsFeedMember_NotificationPreference {\n  export type UNKNOWN_PREFERENCE = typeof FeedDmsFeedMember_NotificationPreference.UNKNOWN_PREFERENCE;\n  export type ALL = typeof FeedDmsFeedMember_NotificationPreference.ALL;\n  export type MENTIONS = typeof FeedDmsFeedMember_NotificationPreference.MENTIONS;\n  export type NONE = typeof FeedDmsFeedMember_NotificationPreference.NONE;\n  export type UNRECOGNIZED = typeof FeedDmsFeedMember_NotificationPreference.UNRECOGNIZED;\n}\n\nexport interface FeedReaction {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  postId: string;\n  postType: string;\n  userId: string;\n  feedId: string;\n  feedType: string;\n  reactionType: FeedReaction_ReactionType;\n  value: string;\n  score: number;\n}\n\nexport const FeedReaction_ReactionType = {\n  UNKNOWN: \"UNKNOWN\",\n  LIKE: \"LIKE\",\n  EMOJI: \"EMOJI\",\n  VIEW: \"VIEW\",\n  VOTE: \"VOTE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedReaction_ReactionType = typeof FeedReaction_ReactionType[keyof typeof FeedReaction_ReactionType];\n\nexport namespace FeedReaction_ReactionType {\n  export type UNKNOWN = typeof FeedReaction_ReactionType.UNKNOWN;\n  export type LIKE = typeof FeedReaction_ReactionType.LIKE;\n  export type EMOJI = typeof FeedReaction_ReactionType.EMOJI;\n  export type VIEW = typeof FeedReaction_ReactionType.VIEW;\n  export type VOTE = typeof FeedReaction_ReactionType.VOTE;\n  export type UNRECOGNIZED = typeof FeedReaction_ReactionType.UNRECOGNIZED;\n}\n\nexport interface FeedUser {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  name: string;\n  profilePic: string;\n  username: string;\n  profilePic32: string;\n  profilePic64: string;\n  profilePic128: string;\n  userType: UserType;\n  roles: User_PlatformRole[];\n  isPlatformPolice: boolean;\n}\n\nexport interface FeedForumFeed {\n  /** Entity Base */\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  isDeleted: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  bannerImage: FileAttachment | undefined;\n  whoCanPost: FeedForumFeed_MemberPermissionType;\n  whoCanComment: FeedForumFeed_MemberPermissionType;\n  layoutType: FeedForumFeed_LayoutType;\n  discordWebhookUrl: string;\n  telegramChannelId: string;\n  emailNotificationPreference: FeedForumFeed_EmailNotificationPreferenceType;\n}\n\nexport const FeedForumFeed_MemberPermissionType = {\n  UNKNOWN_PERMISSION: \"UNKNOWN_PERMISSION\",\n  EVERYONE: \"EVERYONE\",\n  ADMINS: \"ADMINS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_MemberPermissionType =\n  typeof FeedForumFeed_MemberPermissionType[keyof typeof FeedForumFeed_MemberPermissionType];\n\nexport namespace FeedForumFeed_MemberPermissionType {\n  export type UNKNOWN_PERMISSION = typeof FeedForumFeed_MemberPermissionType.UNKNOWN_PERMISSION;\n  export type EVERYONE = typeof FeedForumFeed_MemberPermissionType.EVERYONE;\n  export type ADMINS = typeof FeedForumFeed_MemberPermissionType.ADMINS;\n  export type UNRECOGNIZED = typeof FeedForumFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport const FeedForumFeed_LayoutType = {\n  UNKNOWN_LAYOUT: \"UNKNOWN_LAYOUT\",\n  FEED: \"FEED\",\n  BLOG: \"BLOG\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_LayoutType = typeof FeedForumFeed_LayoutType[keyof typeof FeedForumFeed_LayoutType];\n\nexport namespace FeedForumFeed_LayoutType {\n  export type UNKNOWN_LAYOUT = typeof FeedForumFeed_LayoutType.UNKNOWN_LAYOUT;\n  export type FEED = typeof FeedForumFeed_LayoutType.FEED;\n  export type BLOG = typeof FeedForumFeed_LayoutType.BLOG;\n  export type UNRECOGNIZED = typeof FeedForumFeed_LayoutType.UNRECOGNIZED;\n}\n\nexport const FeedForumFeed_EmailNotificationPreferenceType = {\n  UNKNOWN_PREFERENCE: \"UNKNOWN_PREFERENCE\",\n  ALL_ADMIN_POSTS: \"ALL_ADMIN_POSTS\",\n  ONLY_WEEKLY_SUMMARY: \"ONLY_WEEKLY_SUMMARY\",\n  NONE: \"NONE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_EmailNotificationPreferenceType =\n  typeof FeedForumFeed_EmailNotificationPreferenceType[keyof typeof FeedForumFeed_EmailNotificationPreferenceType];\n\nexport namespace FeedForumFeed_EmailNotificationPreferenceType {\n  export type UNKNOWN_PREFERENCE = typeof FeedForumFeed_EmailNotificationPreferenceType.UNKNOWN_PREFERENCE;\n  export type ALL_ADMIN_POSTS = typeof FeedForumFeed_EmailNotificationPreferenceType.ALL_ADMIN_POSTS;\n  export type ONLY_WEEKLY_SUMMARY = typeof FeedForumFeed_EmailNotificationPreferenceType.ONLY_WEEKLY_SUMMARY;\n  export type NONE = typeof FeedForumFeed_EmailNotificationPreferenceType.NONE;\n  export type UNRECOGNIZED = typeof FeedForumFeed_EmailNotificationPreferenceType.UNRECOGNIZED;\n}\n\nexport interface MuxAsset {\n  assetId?: string | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  duration?: string | undefined;\n  finishedUploadingAt?: string | undefined;\n  id: string;\n  playbackId?: string | undefined;\n  resourceId?: string | undefined;\n  resourceType?: string | undefined;\n  signedPlaybackId?: string | undefined;\n  status: MuxAsset_MuxAssetStatus;\n  signedVideoPlaybackToken?: string | undefined;\n  signedStoryboardPlaybackToken?: string | undefined;\n  signedThumbnailPlaybackToken?: string | undefined;\n}\n\nexport const MuxAsset_MuxAssetStatus = {\n  UNKNOWN: \"UNKNOWN\",\n  UPLOADING: \"UPLOADING\",\n  CREATED: \"CREATED\",\n  READY: \"READY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type MuxAsset_MuxAssetStatus = typeof MuxAsset_MuxAssetStatus[keyof typeof MuxAsset_MuxAssetStatus];\n\nexport namespace MuxAsset_MuxAssetStatus {\n  export type UNKNOWN = typeof MuxAsset_MuxAssetStatus.UNKNOWN;\n  export type UPLOADING = typeof MuxAsset_MuxAssetStatus.UPLOADING;\n  export type CREATED = typeof MuxAsset_MuxAssetStatus.CREATED;\n  export type READY = typeof MuxAsset_MuxAssetStatus.READY;\n  export type UNRECOGNIZED = typeof MuxAsset_MuxAssetStatus.UNRECOGNIZED;\n}\n\nexport interface Poll {\n  options: Poll_PollOption[];\n}\n\nexport interface Poll_PollOption {\n  id: string;\n  text: string;\n}\n\nexport interface PostReactionCount {\n  reactionType: PostReactionCount_ReactionType;\n  value: string;\n  totalScore: number;\n  userCount: number;\n}\n\nexport const PostReactionCount_ReactionType = {\n  UNKNOWN: \"UNKNOWN\",\n  LIKE: \"LIKE\",\n  EMOJI: \"EMOJI\",\n  VIEW: \"VIEW\",\n  VOTE: \"VOTE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type PostReactionCount_ReactionType =\n  typeof PostReactionCount_ReactionType[keyof typeof PostReactionCount_ReactionType];\n\nexport namespace PostReactionCount_ReactionType {\n  export type UNKNOWN = typeof PostReactionCount_ReactionType.UNKNOWN;\n  export type LIKE = typeof PostReactionCount_ReactionType.LIKE;\n  export type EMOJI = typeof PostReactionCount_ReactionType.EMOJI;\n  export type VIEW = typeof PostReactionCount_ReactionType.VIEW;\n  export type VOTE = typeof PostReactionCount_ReactionType.VOTE;\n  export type UNRECOGNIZED = typeof PostReactionCount_ReactionType.UNRECOGNIZED;\n}\n\nexport interface FeedPostReactionCountUpdate {\n  postId: string;\n  postType: string;\n  feedId: string;\n  feedType: string;\n  /**\n   * Contains a bitmask of the fields that were updated.\n   * Only apply the fields that were updated.\n   * Eg if this contains the number 3 (0b00000011), then the view count and post reaction counts were updated.\n   * If this contains the number 1 (0b00000001), then only the view count was updated.\n   * If this contains the number 2 (0b00000010), then only the post reaction counts were updated.\n   * This is needed because \"optional repeated\" fields are not supported in the protobuf spec.\n   */\n  updatedFieldsBitmask: number;\n  /** Position zero in the bitmask (0b00000001) is the view count */\n  viewCount?:\n    | number\n    | undefined;\n  /** Position one in the bitmask (0b00000010) is the post reaction counts */\n  postReactionCounts: PostReactionCount[];\n  /**\n   * Position two in the bitmask (0b00000100) is the single post reaction count\n   * This may be sent by the backend to indicate that a single post reaction count was updated. The frontend should keep all other post reaction counts the same.\n   * Only the score and user_count fields may be updated by the backend, the rest indicate which reaction was updated\n   */\n  singleReactionCountUpdate?:\n    | PostReactionCount\n    | undefined;\n  /** Position three in the bitmask (0b00001000) is the comment count */\n  commentCount?: number | undefined;\n}\n\nexport interface FeedForumPost {\n  /** Entity Base */\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  isDeleted: boolean;\n  sortKey: string;\n  /** Custom Fields */\n  feedId: string;\n  userId: string;\n  parentId?: string | undefined;\n  isEdited: boolean;\n  title?: string | undefined;\n  content: string;\n  richContent: string;\n  childrenCount: number;\n  /**\n   * Deprecated in favor of post_reaction_counts\n   *\n   * @deprecated\n   */\n  reactionCounts: FeedForumPost_ReactionCounts | undefined;\n  attachments: FileAttachment[];\n  gifs: FeedForumPost_GiphyGif[];\n  links: FeedForumPost_LinkEmbed[];\n  isPinned: boolean;\n  mentionedUserIds: string[];\n  lineItem?: FeedForumPost_LineItem | undefined;\n  muxAssets: MuxAsset[];\n  poll?: Poll | undefined;\n  isPosterAdmin: boolean;\n  postReactionCounts: PostReactionCount[];\n  forumPostType: FeedForumPost_ForumPostType;\n  embed?: PostEmbed | undefined;\n  user: User | undefined;\n  commentCount: number;\n  viewCount: number;\n  experienceId?: string | undefined;\n  markdownContent: string;\n}\n\nexport const FeedForumPost_ForumPostType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  REGULAR: \"REGULAR\",\n  AUTOMATED: \"AUTOMATED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumPost_ForumPostType = typeof FeedForumPost_ForumPostType[keyof typeof FeedForumPost_ForumPostType];\n\nexport namespace FeedForumPost_ForumPostType {\n  export type UNKNOWN_TYPE = typeof FeedForumPost_ForumPostType.UNKNOWN_TYPE;\n  export type REGULAR = typeof FeedForumPost_ForumPostType.REGULAR;\n  export type AUTOMATED = typeof FeedForumPost_ForumPostType.AUTOMATED;\n  export type UNRECOGNIZED = typeof FeedForumPost_ForumPostType.UNRECOGNIZED;\n}\n\nexport interface FeedForumPost_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface FeedForumPost_ReactionCount {\n  score: number;\n  count: number;\n}\n\nexport interface FeedForumPost_ReactionCounts {\n  counts: { [key: string]: FeedForumPost_ReactionCount };\n}\n\nexport interface FeedForumPost_ReactionCounts_CountsEntry {\n  key: string;\n  value: FeedForumPost_ReactionCount | undefined;\n}\n\nexport interface FeedForumPost_LinkEmbed {\n  url: string;\n  title: string;\n  description: string;\n  image: string;\n  favicon: string;\n  processing: boolean;\n}\n\nexport interface FeedForumPost_LineItem {\n  id: string;\n  title: string;\n  amount: Money | undefined;\n  redirectUrl: string;\n}\n\nexport interface PostEmbed {\n  richEmbeds?: RichEmbedContainer | undefined;\n}\n\nexport interface RichEmbedContainer {\n  embeds: RichEmbed[];\n}\n\n/** close enough to mirror a discord style rich embed. https://discord.com/developers/docs/resources/message#embed-object */\nexport interface RichEmbed {\n  color?: number | undefined;\n  title?: string | undefined;\n  url?: string | undefined;\n  description?: string | undefined;\n  timestamp?: string | undefined;\n  thumbnail?: FileAttachment | undefined;\n  image?: FileAttachment | undefined;\n  footer?: RichEmbed_Footer | undefined;\n  fields: RichEmbed_Field[];\n}\n\nexport interface RichEmbed_Field {\n  name: string;\n  value: string;\n  inline: boolean;\n}\n\nexport interface RichEmbed_Footer {\n  text: string;\n  icon?: FileAttachment | undefined;\n}\n\nexport interface FeedDmsUnreadBadgeUpdate {\n  count: number;\n  feedId: string;\n  lastViewedAt: string | undefined;\n}\n\nexport interface SupportTicketBadgeUpdate {\n  openCount: number;\n  botId: string;\n}\n\nexport interface FeedService {\n  /** @deprecated */\n  SendFeedEntityToUser(request: SendFeedEntityToUserRequest): Promise<SendFeedEntityToUserResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/notifications.proto\n\n/* eslint-disable */\nimport type { Experience } from \"../experience/experience\";\nimport type { Bot, NotificationTopic } from \"./common\";\nimport type { User } from \"./users\";\n\nexport interface Notification {\n  id: string;\n  subject: string;\n  content: string;\n  primaryImage: string;\n  secondaryImage: string;\n  restPath: string;\n  createdAt: string | undefined;\n  bot?: Bot | undefined;\n  experience?: Experience | undefined;\n  notificationTopic: NotificationTopic | undefined;\n  link?: string | undefined;\n  iframeLink?: string | undefined;\n  senderUser?: User | undefined;\n}\n\nexport interface GoFetchNotifications {\n  entityId: string;\n  entityType: GoFetchNotifications_NotifyingEntityType;\n  /** If true, the client should refetch the badge for this entity. */\n  mayIncrementBadgeCount: boolean;\n  /** A unique identifier that can be used to fetch the associated notification from the backend. */\n  notificationId: string;\n}\n\nexport const GoFetchNotifications_NotifyingEntityType = {\n  UNKNOWN: \"UNKNOWN\",\n  GENERIC: \"GENERIC\",\n  EXPERIENCE: \"EXPERIENCE\",\n  COMPANY: \"COMPANY\",\n  COMPANY_TEAM: \"COMPANY_TEAM\",\n  ACCESS_PASS: \"ACCESS_PASS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type GoFetchNotifications_NotifyingEntityType =\n  typeof GoFetchNotifications_NotifyingEntityType[keyof typeof GoFetchNotifications_NotifyingEntityType];\n\nexport namespace GoFetchNotifications_NotifyingEntityType {\n  export type UNKNOWN = typeof GoFetchNotifications_NotifyingEntityType.UNKNOWN;\n  export type GENERIC = typeof GoFetchNotifications_NotifyingEntityType.GENERIC;\n  export type EXPERIENCE = typeof GoFetchNotifications_NotifyingEntityType.EXPERIENCE;\n  export type COMPANY = typeof GoFetchNotifications_NotifyingEntityType.COMPANY;\n  export type COMPANY_TEAM = typeof GoFetchNotifications_NotifyingEntityType.COMPANY_TEAM;\n  export type ACCESS_PASS = typeof GoFetchNotifications_NotifyingEntityType.ACCESS_PASS;\n  export type UNRECOGNIZED = typeof GoFetchNotifications_NotifyingEntityType.UNRECOGNIZED;\n}\n\nexport interface SendNotificationToUserRequest {\n  userId: string;\n  notification: Notification | undefined;\n  userIds: string[];\n}\n\nexport interface SendNotificationToUserResponse {\n  sent: boolean;\n}\n\nexport interface NotificationService {\n  SendNotificationToUser(request: SendNotificationToUserRequest): Promise<SendNotificationToUserResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/product_surface.proto\n\n/* eslint-disable */\nimport type { AccessType, CfLocation } from \"./common\";\n\nexport interface ProductSurface {\n  surfaceType: ProductSurface_SurfaceType;\n  botId?: string | undefined;\n  accessPassId?: string | undefined;\n  appId?: string | undefined;\n  experienceId?: string | undefined;\n  accessType?: AccessType | undefined;\n  planId?: string | undefined;\n  profileUserId?: string | undefined;\n  viewContext?: ProductSurface_ViewContext | undefined;\n  discoverSection?: ProductSurface_DiscoverSection | undefined;\n  universalPostId?: string | undefined;\n  feedTab?: ProductSurface_FeedTab | undefined;\n}\n\nexport const ProductSurface_ViewContext = {\n  VIEW_CTX_UNKNOWN: \"VIEW_CTX_UNKNOWN\",\n  /** VIEW_CTX_WHOP - / The user is viewing from inside a whop view. */\n  VIEW_CTX_WHOP: \"VIEW_CTX_WHOP\",\n  /** VIEW_CTX_HOME_FEED - / The user is viewing from the home feed */\n  VIEW_CTX_HOME_FEED: \"VIEW_CTX_HOME_FEED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_ViewContext = typeof ProductSurface_ViewContext[keyof typeof ProductSurface_ViewContext];\n\nexport namespace ProductSurface_ViewContext {\n  export type VIEW_CTX_UNKNOWN = typeof ProductSurface_ViewContext.VIEW_CTX_UNKNOWN;\n  export type VIEW_CTX_WHOP = typeof ProductSurface_ViewContext.VIEW_CTX_WHOP;\n  export type VIEW_CTX_HOME_FEED = typeof ProductSurface_ViewContext.VIEW_CTX_HOME_FEED;\n  export type UNRECOGNIZED = typeof ProductSurface_ViewContext.UNRECOGNIZED;\n}\n\nexport const ProductSurface_DiscoverSection = {\n  DISCOVER_UNKNOWN: \"DISCOVER_UNKNOWN\",\n  DISCOVER_LEADERBOARDS: \"DISCOVER_LEADERBOARDS\",\n  DISCOVER_FOR_YOU: \"DISCOVER_FOR_YOU\",\n  DISCOVER_EXPLORE: \"DISCOVER_EXPLORE\",\n  DISCOVER_SEARCH: \"DISCOVER_SEARCH\",\n  DISCOVER_CATEGORIES: \"DISCOVER_CATEGORIES\",\n  DISCOVER_COLLECTIONS: \"DISCOVER_COLLECTIONS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_DiscoverSection =\n  typeof ProductSurface_DiscoverSection[keyof typeof ProductSurface_DiscoverSection];\n\nexport namespace ProductSurface_DiscoverSection {\n  export type DISCOVER_UNKNOWN = typeof ProductSurface_DiscoverSection.DISCOVER_UNKNOWN;\n  export type DISCOVER_LEADERBOARDS = typeof ProductSurface_DiscoverSection.DISCOVER_LEADERBOARDS;\n  export type DISCOVER_FOR_YOU = typeof ProductSurface_DiscoverSection.DISCOVER_FOR_YOU;\n  export type DISCOVER_EXPLORE = typeof ProductSurface_DiscoverSection.DISCOVER_EXPLORE;\n  export type DISCOVER_SEARCH = typeof ProductSurface_DiscoverSection.DISCOVER_SEARCH;\n  export type DISCOVER_CATEGORIES = typeof ProductSurface_DiscoverSection.DISCOVER_CATEGORIES;\n  export type DISCOVER_COLLECTIONS = typeof ProductSurface_DiscoverSection.DISCOVER_COLLECTIONS;\n  export type UNRECOGNIZED = typeof ProductSurface_DiscoverSection.UNRECOGNIZED;\n}\n\nexport const ProductSurface_FeedTab = {\n  FEED_TAB_UNKNOWN: \"FEED_TAB_UNKNOWN\",\n  FEED_TAB_HOME: \"FEED_TAB_HOME\",\n  FEED_TAB_EARN: \"FEED_TAB_EARN\",\n  FEED_TAB_CHAT: \"FEED_TAB_CHAT\",\n  FEED_TAB_LEARN: \"FEED_TAB_LEARN\",\n  FEED_TAB_CALENDAR: \"FEED_TAB_CALENDAR\",\n  FEED_TAB_PLAY: \"FEED_TAB_PLAY\",\n  FEED_TAB_INTEGRATIONS: \"FEED_TAB_INTEGRATIONS\",\n  FEED_TAB_TOOLS: \"FEED_TAB_TOOLS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_FeedTab = typeof ProductSurface_FeedTab[keyof typeof ProductSurface_FeedTab];\n\nexport namespace ProductSurface_FeedTab {\n  export type FEED_TAB_UNKNOWN = typeof ProductSurface_FeedTab.FEED_TAB_UNKNOWN;\n  export type FEED_TAB_HOME = typeof ProductSurface_FeedTab.FEED_TAB_HOME;\n  export type FEED_TAB_EARN = typeof ProductSurface_FeedTab.FEED_TAB_EARN;\n  export type FEED_TAB_CHAT = typeof ProductSurface_FeedTab.FEED_TAB_CHAT;\n  export type FEED_TAB_LEARN = typeof ProductSurface_FeedTab.FEED_TAB_LEARN;\n  export type FEED_TAB_CALENDAR = typeof ProductSurface_FeedTab.FEED_TAB_CALENDAR;\n  export type FEED_TAB_PLAY = typeof ProductSurface_FeedTab.FEED_TAB_PLAY;\n  export type FEED_TAB_INTEGRATIONS = typeof ProductSurface_FeedTab.FEED_TAB_INTEGRATIONS;\n  export type FEED_TAB_TOOLS = typeof ProductSurface_FeedTab.FEED_TAB_TOOLS;\n  export type UNRECOGNIZED = typeof ProductSurface_FeedTab.UNRECOGNIZED;\n}\n\nexport const ProductSurface_SurfaceType = {\n  UNKNOWN: \"UNKNOWN\",\n  EXPERIENCE: \"EXPERIENCE\",\n  WHOP: \"WHOP\",\n  CREATOR_DASHBOARD: \"CREATOR_DASHBOARD\",\n  AFFILIATE_DASHBOARD: \"AFFILIATE_DASHBOARD\",\n  DISCOVER: \"DISCOVER\",\n  HOME_FEED: \"HOME_FEED\",\n  MESSAGES: \"MESSAGES\",\n  PROFILE: \"PROFILE\",\n  NOTIFICATIONS: \"NOTIFICATIONS\",\n  USER_SETTINGS: \"USER_SETTINGS\",\n  CHECKOUT: \"CHECKOUT\",\n  AUTH: \"AUTH\",\n  OTHER: \"OTHER\",\n  USER_ONBOARDING: \"USER_ONBOARDING\",\n  LEADERBOARD: \"LEADERBOARD\",\n  SUPPORT_CHATS: \"SUPPORT_CHATS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_SurfaceType = typeof ProductSurface_SurfaceType[keyof typeof ProductSurface_SurfaceType];\n\nexport namespace ProductSurface_SurfaceType {\n  export type UNKNOWN = typeof ProductSurface_SurfaceType.UNKNOWN;\n  export type EXPERIENCE = typeof ProductSurface_SurfaceType.EXPERIENCE;\n  export type WHOP = typeof ProductSurface_SurfaceType.WHOP;\n  export type CREATOR_DASHBOARD = typeof ProductSurface_SurfaceType.CREATOR_DASHBOARD;\n  export type AFFILIATE_DASHBOARD = typeof ProductSurface_SurfaceType.AFFILIATE_DASHBOARD;\n  export type DISCOVER = typeof ProductSurface_SurfaceType.DISCOVER;\n  export type HOME_FEED = typeof ProductSurface_SurfaceType.HOME_FEED;\n  export type MESSAGES = typeof ProductSurface_SurfaceType.MESSAGES;\n  export type PROFILE = typeof ProductSurface_SurfaceType.PROFILE;\n  export type NOTIFICATIONS = typeof ProductSurface_SurfaceType.NOTIFICATIONS;\n  export type USER_SETTINGS = typeof ProductSurface_SurfaceType.USER_SETTINGS;\n  export type CHECKOUT = typeof ProductSurface_SurfaceType.CHECKOUT;\n  export type AUTH = typeof ProductSurface_SurfaceType.AUTH;\n  export type OTHER = typeof ProductSurface_SurfaceType.OTHER;\n  export type USER_ONBOARDING = typeof ProductSurface_SurfaceType.USER_ONBOARDING;\n  export type LEADERBOARD = typeof ProductSurface_SurfaceType.LEADERBOARD;\n  export type SUPPORT_CHATS = typeof ProductSurface_SurfaceType.SUPPORT_CHATS;\n  export type UNRECOGNIZED = typeof ProductSurface_SurfaceType.UNRECOGNIZED;\n}\n\nexport interface ProductSurfaceUpdate {\n  productSurface: ProductSurface | undefined;\n  isAppForegrounded: boolean;\n  /** The current url or screen that the user is on - used for debugging \"other\" screen views. */\n  currentUrl?: string | undefined;\n}\n\nexport interface ActiveUserBucket {\n  userBucketType: ActiveUserBucket_UserBucketType;\n  id?: string | undefined;\n}\n\nexport const ActiveUserBucket_UserBucketType = {\n  UNKNOWN: \"UNKNOWN\",\n  EXPERIENCE: \"EXPERIENCE\",\n  WHOP: \"WHOP\",\n  STORE_PAGE: \"STORE_PAGE\",\n  MESSAGES: \"MESSAGES\",\n  HOME_FEED: \"HOME_FEED\",\n  DISCOVER: \"DISCOVER\",\n  BOT: \"BOT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ActiveUserBucket_UserBucketType =\n  typeof ActiveUserBucket_UserBucketType[keyof typeof ActiveUserBucket_UserBucketType];\n\nexport namespace ActiveUserBucket_UserBucketType {\n  export type UNKNOWN = typeof ActiveUserBucket_UserBucketType.UNKNOWN;\n  export type EXPERIENCE = typeof ActiveUserBucket_UserBucketType.EXPERIENCE;\n  export type WHOP = typeof ActiveUserBucket_UserBucketType.WHOP;\n  export type STORE_PAGE = typeof ActiveUserBucket_UserBucketType.STORE_PAGE;\n  export type MESSAGES = typeof ActiveUserBucket_UserBucketType.MESSAGES;\n  export type HOME_FEED = typeof ActiveUserBucket_UserBucketType.HOME_FEED;\n  export type DISCOVER = typeof ActiveUserBucket_UserBucketType.DISCOVER;\n  export type BOT = typeof ActiveUserBucket_UserBucketType.BOT;\n  export type UNRECOGNIZED = typeof ActiveUserBucket_UserBucketType.UNRECOGNIZED;\n}\n\nexport interface ActiveUsersInBucket {\n  activeUserBucket:\n    | ActiveUserBucket\n    | undefined;\n  /** / The number of users in the bucket. Always set to the total number of users in the bucket. */\n  userCount: number;\n  /** / The list of user ids that joined the bucket. Sent only on realtime pushes */\n  joinedUsers: ActiveUsersInBucket_UserData[];\n  /** / The list of user ids that left the bucket. Sent only on realtime pushes */\n  leftUsers: ActiveUsersInBucket_UserData[];\n  /** / The list of user ids in the bucket. Only populated if requested by the backend. */\n  users: ActiveUsersInBucket_UserData[];\n  /** / The offset used when making the request */\n  offset?:\n    | number\n    | undefined;\n  /** / The limit used when making the request */\n  limit?: number | undefined;\n}\n\nexport interface ActiveUsersInBucket_UserData {\n  userId: string;\n  cfLocation?: CfLocation | undefined;\n}\n\nexport interface GetUserLastSeenAtBatchRequest {\n  userIds: string[];\n}\n\nexport interface GetUserLastSeenAtBatchResponse {\n  usersLastSeenAt: { [key: string]: GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse };\n}\n\nexport interface GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse {\n  lastSeenAt: string | undefined;\n}\n\nexport interface GetUserLastSeenAtBatchResponse_UsersLastSeenAtEntry {\n  key: string;\n  value: GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse | undefined;\n}\n\nexport interface GetActiveUsersInBucketBatchRequest {\n  requests: GetActiveUsersInBucketBatchRequest_Request[];\n}\n\nexport interface GetActiveUsersInBucketBatchRequest_Request {\n  activeUserBucket:\n    | ActiveUserBucket\n    | undefined;\n  /** / Whether to include the user ids in the response. */\n  includeUserIds: boolean;\n  /** / The maximum number of user ids to return. MAX=5000. Ordering = lexicographic by user_id */\n  limit: number;\n  /** / The offset used when making the request. */\n  offset: number;\n}\n\nexport interface GetActiveUsersInBucketBatchResponse {\n  activeUsersInBuckets: ActiveUsersInBucket[];\n}\n\nexport interface GetUserProductSurfacesBatchRequest {\n  userIds: string[];\n}\n\nexport interface GetUserProductSurfacesBatchResponse {\n  /**\n   * / This returns a single product surface per user for simplicity.\n   * / If they are currently active on multiple devices, this may change rapidly.\n   * / If they are active on multiple devices, but only a single device is foregrounded,\n   * / that device's product surface will be prioritized.\n   */\n  userProductSurfaces: { [key: string]: GetUserProductSurfacesBatchResponse_ProductSurfaceState };\n}\n\nexport interface GetUserProductSurfacesBatchResponse_ProductSurfaceState {\n  productSurface: ProductSurface | undefined;\n  isAppForegrounded: boolean;\n  lastUpdatedAt: string | undefined;\n  firstSeenAt: string | undefined;\n}\n\nexport interface GetUserProductSurfacesBatchResponse_UserProductSurfacesEntry {\n  key: string;\n  value: GetUserProductSurfacesBatchResponse_ProductSurfaceState | undefined;\n}\n\nexport interface GetTopExperiencesByActiveUsersRequest {\n  limit?: number | undefined;\n  appFilter?: GetTopExperiencesByActiveUsersRequest_AppFilter | undefined;\n}\n\nexport const GetTopExperiencesByActiveUsersRequest_AppFilter = {\n  ALL: \"ALL\",\n  LIVESTREAMS: \"LIVESTREAMS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type GetTopExperiencesByActiveUsersRequest_AppFilter =\n  typeof GetTopExperiencesByActiveUsersRequest_AppFilter[keyof typeof GetTopExperiencesByActiveUsersRequest_AppFilter];\n\nexport namespace GetTopExperiencesByActiveUsersRequest_AppFilter {\n  export type ALL = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.ALL;\n  export type LIVESTREAMS = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.LIVESTREAMS;\n  export type UNRECOGNIZED = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.UNRECOGNIZED;\n}\n\nexport interface GetTopExperiencesByActiveUsersResponse {\n  experienceItems: GetTopExperiencesByActiveUsersResponse_ExperienceItem[];\n}\n\nexport interface GetTopExperiencesByActiveUsersResponse_ExperienceItem {\n  experienceId: string;\n  activeUserCount: number;\n}\n\nexport interface UserPresenceService {\n  GetUserLastSeenAtBatch(request: GetUserLastSeenAtBatchRequest): Promise<GetUserLastSeenAtBatchResponse>;\n  /** / Fetch a list of active users in a bucket, and their count. */\n  GetActiveUsersInBucketBatch(\n    request: GetActiveUsersInBucketBatchRequest,\n  ): Promise<GetActiveUsersInBucketBatchResponse>;\n  /** / Fetch where and when a user was last active. */\n  GetUserProductSurfacesBatch(\n    request: GetUserProductSurfacesBatchRequest,\n  ): Promise<GetUserProductSurfacesBatchResponse>;\n  /** Fetch the experience ids with the most amount of active users. */\n  GetTopExperiencesByActiveUsers(\n    request: GetTopExperiencesByActiveUsersRequest,\n  ): Promise<GetTopExperiencesByActiveUsersResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/websockets.proto\n\n/* eslint-disable */\nimport type { ContentRewardsMessage } from \"../content_rewards_app/content_rewards_app\";\nimport type { ExecuteClientCommand, ExecuteClientCommandResponse } from \"../diagnostics/client_commands\";\nimport type { Experience, UserExperience } from \"../experience/experience\";\nimport type { PreviewContent } from \"../experience/preview_content\";\nimport type { ClientToServerMessage, ServerToClientMessage } from \"../games/messages\";\nimport type { FileAttachment } from \"./attachment\";\nimport type {\n  AccessPass,\n  AccessPassExperience,\n  AccessPassExperienceSection,\n  AccessPassMember,\n  App,\n  AppBuild,\n  Bot,\n  BotExperienceSection,\n  BroadcastRequest,\n  BroadcastResponse,\n  BusinessActivityEvent,\n  Channel,\n  ChannelSubscriptionState,\n  ConnectedId,\n  DiscoveryAccessPassLiveData,\n  Entry,\n  GoFetchExperienceList,\n  GoFetchUserExperiences,\n  MarketplaceStats,\n  Member,\n  Platform,\n  Purchase,\n  Reconnect,\n  ReloadClient,\n  UserReferralMarketRates,\n} from \"./common\";\nimport type { FeedEntity, SupportTicketBadgeUpdate } from \"./feed\";\nimport type { GoFetchNotifications, Notification } from \"./notifications\";\nimport type { ActiveUsersInBucket, ProductSurfaceUpdate } from \"./product_surface\";\nimport type { User, UserPresence, UserStat } from \"./users\";\n\nexport const ResourceType = {\n  RESOURCE_UNKNOWN: \"RESOURCE_UNKNOWN\",\n  RESOURCE_BOT: \"RESOURCE_BOT\",\n  RESOURCE_ACCESS_PASS: \"RESOURCE_ACCESS_PASS\",\n  RESOURCE_EXPERIENCE: \"RESOURCE_EXPERIENCE\",\n  RESOURCE_USER: \"RESOURCE_USER\",\n  RESOURCE_EXPERIENCE_PREVIEW_CONTENT: \"RESOURCE_EXPERIENCE_PREVIEW_CONTENT\",\n  RESOURCE_APP: \"RESOURCE_APP\",\n  RESOURCE_FORUM_FEED: \"RESOURCE_FORUM_FEED\",\n  RESOURCE_UNIVERSAL_POST: \"RESOURCE_UNIVERSAL_POST\",\n  RESOURCE_CHAT_FEED: \"RESOURCE_CHAT_FEED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ResourceType = typeof ResourceType[keyof typeof ResourceType];\n\nexport namespace ResourceType {\n  export type RESOURCE_UNKNOWN = typeof ResourceType.RESOURCE_UNKNOWN;\n  export type RESOURCE_BOT = typeof ResourceType.RESOURCE_BOT;\n  export type RESOURCE_ACCESS_PASS = typeof ResourceType.RESOURCE_ACCESS_PASS;\n  export type RESOURCE_EXPERIENCE = typeof ResourceType.RESOURCE_EXPERIENCE;\n  export type RESOURCE_USER = typeof ResourceType.RESOURCE_USER;\n  export type RESOURCE_EXPERIENCE_PREVIEW_CONTENT = typeof ResourceType.RESOURCE_EXPERIENCE_PREVIEW_CONTENT;\n  export type RESOURCE_APP = typeof ResourceType.RESOURCE_APP;\n  export type RESOURCE_FORUM_FEED = typeof ResourceType.RESOURCE_FORUM_FEED;\n  export type RESOURCE_UNIVERSAL_POST = typeof ResourceType.RESOURCE_UNIVERSAL_POST;\n  export type RESOURCE_CHAT_FEED = typeof ResourceType.RESOURCE_CHAT_FEED;\n  export type UNRECOGNIZED = typeof ResourceType.UNRECOGNIZED;\n}\n\nexport interface WebsocketMessageServerToClient {\n  newNotification?: Notification | undefined;\n  reconnect?: Reconnect | undefined;\n  reloadClient?: ReloadClient | undefined;\n  feedEntity?: FeedEntity | undefined;\n  heartbeatResponse?: HeartbeatResponse | undefined;\n  goFetchNotifications?: GoFetchNotifications | undefined;\n  marketplaceStats?: MarketplaceStats | undefined;\n  purchase?: Purchase | undefined;\n  broadcastResponse?: BroadcastResponse | undefined;\n  channelSubscriptionState?: ChannelSubscriptionState | undefined;\n  discoveryAccessPassLiveData?: DiscoveryAccessPassLiveData | undefined;\n  activeUsersInBucket?: ActiveUsersInBucket | undefined;\n  gameMessage?: ServerToClientMessage | undefined;\n  contentRewardsMessage?: ContentRewardsMessage | undefined;\n  experience?: Experience | undefined;\n  accessPassMember?: AccessPassMember | undefined;\n  accessPassExperience?: AccessPassExperience | undefined;\n  accessPass?: AccessPass | undefined;\n  bot?: Bot | undefined;\n  experiencePreviewContent?: PreviewContent | undefined;\n  user?: User | undefined;\n  app?: App | undefined;\n  fileAttachment?: FileAttachment | undefined;\n  userStat?: UserStat | undefined;\n  userExperience?: UserExperience | undefined;\n  entry?: Entry | undefined;\n  userReferralMarketRates?: UserReferralMarketRates | undefined;\n  appMessage?: AppMessage | undefined;\n  goFetchExperienceList?: GoFetchExperienceList | undefined;\n  appBuild?: AppBuild | undefined;\n  accessPassExperienceSection?: AccessPassExperienceSection | undefined;\n  goFetchUserExperiences?: GoFetchUserExperiences | undefined;\n  member?: Member | undefined;\n  botExperienceSection?: BotExperienceSection | undefined;\n  userPresence?: UserPresence | undefined;\n  businessActivityEvent?: BusinessActivityEvent | undefined;\n  executeClientCommand?: ExecuteClientCommand | undefined;\n  supportTicketBadgeUpdate?:\n    | SupportTicketBadgeUpdate\n    | undefined;\n  /** [TIMING] When was the message initially created. Eg: timestamp from the rails application. */\n  createdAt:\n    | string\n    | undefined;\n  /** [TIMING] When was the message received by the websocket server. (in the GRPC handler) */\n  processedAt:\n    | string\n    | undefined;\n  /** [TIMING] When was the message sent to the client by the websocket connection handler. */\n  deliveredAt: string | undefined;\n}\n\nexport interface WebsocketMessageClientToServer {\n  heartbeat?: Heartbeat | undefined;\n  subscribeToChannel?: SubscribeToChannel | undefined;\n  unsubscribeFromChannel?: UnsubscribeFromChannel | undefined;\n  broadcastRequest?: BroadcastRequest | undefined;\n  productSurfaceUpdate?: ProductSurfaceUpdate | undefined;\n  gameCommand?: ClientToServerMessage | undefined;\n  subscribeToChannelBatch?: SubscribeToChannelBatch | undefined;\n  requestItemsBatchRequest?: RequestItemsBatchRequest | undefined;\n  broadcastAppMessage?: BroadcastAppMessage | undefined;\n  executeClientCommandResponse?: ExecuteClientCommandResponse | undefined;\n}\n\nexport interface Heartbeat {\n  userish: ConnectedId | undefined;\n  channels: Channel[];\n  platform: Platform;\n  /** Allow the client to send a semantic version number (useful on ios / android) */\n  clientSemver: string;\n  /** On web, the client can send the age of the client code (aka how long ago they loaded the page) */\n  clientAge: string | undefined;\n  productSurfaceUpdate?: ProductSurfaceUpdate | undefined;\n}\n\nexport interface HeartbeatResponse {\n  /** Allows clients to find out how delayed they are WRT to true server time. Can detect old devices that do not have synced clocks. */\n  serverTime: string | undefined;\n}\n\nexport interface SubscribeToChannel {\n  userish: ConnectedId | undefined;\n  channel: Channel | undefined;\n  authToken?: string | undefined;\n}\n\nexport interface SubscribeToChannelBatch {\n  channels: SubscribeToChannel[];\n}\n\nexport interface UnsubscribeFromChannel {\n  userish: ConnectedId | undefined;\n  channel: Channel | undefined;\n}\n\n/**\n * This is a message that is sent by a 3rd party developer\n * that includes an arbitrary body. Used for app developer things.\n */\nexport interface AppMessage {\n  /** If this packet was sent from another user's browser, this is the user id it came from. */\n  fromUserId?:\n    | string\n    | undefined;\n  /** this is true if the event is sent with your server side secret api key. */\n  isTrusted: boolean;\n  /** an arbitrary payload of data. */\n  json: string;\n}\n\n/** To send a message from an user as an app developer, use this message. */\nexport interface BroadcastAppMessage {\n  /** String encoded JSON object that you want to send from the client. */\n  json: string;\n  /** Target channel */\n  channel: Channel | undefined;\n}\n\nexport interface SendToTargetRequest {\n  target: string;\n  /** @deprecated */\n  message:\n    | WebsocketMessageServerToClient\n    | undefined;\n  /** Pass the message as a WebsocketMessageServerToClient proto serialized to bytes. */\n  messageBytes: Uint8Array;\n}\n\nexport interface SendToTargetResponse {\n  wasTargetConnected: boolean;\n}\n\nexport interface SendToTargetsRequest {\n  targets: string[];\n  /** @deprecated */\n  message:\n    | WebsocketMessageServerToClient\n    | undefined;\n  /** Pass the message as a WebsocketMessageServerToClient proto serialized to bytes. */\n  messageBytes: Uint8Array;\n}\n\nexport interface SendToTargetsResponse {\n  wasTargetConnectedMap: { [key: string]: boolean };\n}\n\nexport interface SendToTargetsResponse_WasTargetConnectedMapEntry {\n  key: string;\n  value: boolean;\n}\n\nexport interface BatchSendToTargetRequest {\n  requests: SendToTargetRequest[];\n}\n\nexport interface BatchSendToTargetResponse {\n}\n\nexport interface TerminateTargetsRequest {\n  targets: string[];\n}\n\nexport interface TerminateTargetsResponse {\n}\n\n/**\n * A command enum that the websocket server receives via GRPC\n * and internally fans out to each horizontal shard\n */\nexport interface WebsocketServerCommandRequest {\n  clearCache?: ClearCacheRequest | undefined;\n}\n\nexport interface WebsocketServerCommandResponse {\n  success: boolean;\n  receivedCount: number;\n}\n\n/** This is returned from rails when the websocket server wishes to fetch cachable items via http */\nexport interface BatchGetItemsResponse {\n  items: BatchGetItemsResponse_Item[];\n}\n\nexport interface BatchGetItemsResponse_Item {\n  id: string;\n  websocketMessageBytes: Uint8Array;\n}\n\n/** Sent from a client to instruct the websocket server to send it the data for a certain set of items again. */\nexport interface RequestItemsBatchRequest {\n  items: RequestItemsBatchRequest_Item[];\n}\n\nexport interface RequestItemsBatchRequest_Item {\n  id: string;\n  type: ResourceType;\n}\n\nexport interface ClearCacheRequest {\n  ids: string[];\n  clearAll?: boolean | undefined;\n  cacheType?: ResourceType | undefined;\n}\n\nexport interface WebsocketService {\n  SendToTarget(request: SendToTargetRequest): Promise<SendToTargetResponse>;\n  SendToTargets(request: SendToTargetsRequest): Promise<SendToTargetsResponse>;\n  BatchSendToTarget(request: BatchSendToTargetRequest): Promise<BatchSendToTargetResponse>;\n  TerminateTargets(request: TerminateTargetsRequest): Promise<TerminateTargetsResponse>;\n  WebsocketServerCommand(request: WebsocketServerCommandRequest): Promise<WebsocketServerCommandResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * as protobuf from \"./index.google.protobuf\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./google/protobuf/timestamp\";\nexport * from \"./google/protobuf/duration\";\nexport * from \"./google/protobuf/struct\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: google/protobuf/struct.proto\n\n/* eslint-disable */\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n */\nexport const NullValue = {\n  /** NULL_VALUE - Null value. */\n  NULL_VALUE: \"NULL_VALUE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type NullValue = typeof NullValue[keyof typeof NullValue];\n\nexport namespace NullValue {\n  export type NULL_VALUE = typeof NullValue.NULL_VALUE;\n  export type UNRECOGNIZED = typeof NullValue.UNRECOGNIZED;\n}\n\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n */\nexport interface Struct {\n  /** Unordered map of dynamically typed values. */\n  fields: { [key: string]: any | undefined };\n}\n\nexport interface Struct_FieldsEntry {\n  key: string;\n  value: any | undefined;\n}\n\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n */\nexport interface Value {\n  /** Represents a null value. */\n  nullValue?:\n    | NullValue\n    | undefined;\n  /** Represents a double value. */\n  numberValue?:\n    | number\n    | undefined;\n  /** Represents a string value. */\n  stringValue?:\n    | string\n    | undefined;\n  /** Represents a boolean value. */\n  boolValue?:\n    | boolean\n    | undefined;\n  /** Represents a structured value. */\n  structValue?:\n    | { [key: string]: any }\n    | undefined;\n  /** Represents a repeated `Value`. */\n  listValue?: Array<any> | undefined;\n}\n\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n */\nexport interface ListValue {\n  /** Repeated field of dynamically typed values. */\n  values: any[];\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./bounties_app/bounties_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: bounties_app/bounties_app.proto\n\n/* eslint-disable */\nimport type { Money } from \"../common/money\";\nimport type { User } from \"../common/users\";\n\nexport interface Bounty {\n  id: string;\n  baseUnitAmount: number;\n  budget: Money | undefined;\n  rewardPerUnit: Money | undefined;\n  totalPaid: Money | undefined;\n  bountySubmissionsCount: number;\n  description: string;\n  richDescription: string;\n  title: string;\n  user: User | undefined;\n  status: Bounty_BountyStatus;\n  allowInstagram: boolean;\n  allowTiktok: boolean;\n  allowYoutube: boolean;\n  allowX: boolean;\n  allowPayoutMultiples: boolean;\n  allowMultipleSubmissions: boolean;\n  rewardUnit: Bounty_BountyRewardUnit;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Bounty_BountyStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  PUBLISHED: \"PUBLISHED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bounty_BountyStatus = typeof Bounty_BountyStatus[keyof typeof Bounty_BountyStatus];\n\nexport namespace Bounty_BountyStatus {\n  export type UNKNOWN_STATUS = typeof Bounty_BountyStatus.UNKNOWN_STATUS;\n  export type PUBLISHED = typeof Bounty_BountyStatus.PUBLISHED;\n  export type ARCHIVED = typeof Bounty_BountyStatus.ARCHIVED;\n  export type UNRECOGNIZED = typeof Bounty_BountyStatus.UNRECOGNIZED;\n}\n\nexport const Bounty_BountyRewardUnit = {\n  UNKNOWN_REWARD_UNIT: \"UNKNOWN_REWARD_UNIT\",\n  PER_SUBMISSION: \"PER_SUBMISSION\",\n  PER_VIEW: \"PER_VIEW\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bounty_BountyRewardUnit = typeof Bounty_BountyRewardUnit[keyof typeof Bounty_BountyRewardUnit];\n\nexport namespace Bounty_BountyRewardUnit {\n  export type UNKNOWN_REWARD_UNIT = typeof Bounty_BountyRewardUnit.UNKNOWN_REWARD_UNIT;\n  export type PER_SUBMISSION = typeof Bounty_BountyRewardUnit.PER_SUBMISSION;\n  export type PER_VIEW = typeof Bounty_BountyRewardUnit.PER_VIEW;\n  export type UNRECOGNIZED = typeof Bounty_BountyRewardUnit.UNRECOGNIZED;\n}\n\nexport interface BountySubmission {\n  id: string;\n  bountyId: string;\n  user: User | undefined;\n  content?: string | undefined;\n  denialReason?: string | undefined;\n  status: BountySubmission_BountySubmissionStatus;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const BountySubmission_BountySubmissionStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  DENIED: \"DENIED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type BountySubmission_BountySubmissionStatus =\n  typeof BountySubmission_BountySubmissionStatus[keyof typeof BountySubmission_BountySubmissionStatus];\n\nexport namespace BountySubmission_BountySubmissionStatus {\n  export type UNKNOWN_STATUS = typeof BountySubmission_BountySubmissionStatus.UNKNOWN_STATUS;\n  export type PENDING = typeof BountySubmission_BountySubmissionStatus.PENDING;\n  export type APPROVED = typeof BountySubmission_BountySubmissionStatus.APPROVED;\n  export type DENIED = typeof BountySubmission_BountySubmissionStatus.DENIED;\n  export type UNRECOGNIZED = typeof BountySubmission_BountySubmissionStatus.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./courses_app/courses_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./games/game\";\nexport * as quizzes from \"./index.games.quizzes\";\nexport * from \"./games/messages\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./games/quizzes/quizzes\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: games/quizzes/quizzes.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"../../common/attachment\";\nimport type { Channel } from \"../../common/common\";\nimport type { Game } from \"../game\";\n\nexport const QuizStatus = {\n  UNKNOWN: \"UNKNOWN\",\n  WAITING_FOR_PLAYERS: \"WAITING_FOR_PLAYERS\",\n  SHOW_QUESTION: \"SHOW_QUESTION\",\n  ANSWER_QUESTION: \"ANSWER_QUESTION\",\n  QUESTION_RESULT: \"QUESTION_RESULT\",\n  QUESTION_LEADERBOARD: \"QUESTION_LEADERBOARD\",\n  GAME_RESULT: \"GAME_RESULT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type QuizStatus = typeof QuizStatus[keyof typeof QuizStatus];\n\nexport namespace QuizStatus {\n  export type UNKNOWN = typeof QuizStatus.UNKNOWN;\n  export type WAITING_FOR_PLAYERS = typeof QuizStatus.WAITING_FOR_PLAYERS;\n  export type SHOW_QUESTION = typeof QuizStatus.SHOW_QUESTION;\n  export type ANSWER_QUESTION = typeof QuizStatus.ANSWER_QUESTION;\n  export type QUESTION_RESULT = typeof QuizStatus.QUESTION_RESULT;\n  export type QUESTION_LEADERBOARD = typeof QuizStatus.QUESTION_LEADERBOARD;\n  export type GAME_RESULT = typeof QuizStatus.GAME_RESULT;\n  export type UNRECOGNIZED = typeof QuizStatus.UNRECOGNIZED;\n}\n\nexport interface GameState {\n  game: Game | undefined;\n  status: QuizStatus;\n  quiz: Quiz | undefined;\n  currentQuestion?: Question | undefined;\n  currentQuestionIndex: number;\n}\n\nexport interface ClientCommand {\n  /** / Sent by a user to create a new game. */\n  createGame?:\n    | CreateGameCommand\n    | undefined;\n  /** / A command sent by the host that allowes them to move to the next phase of the game, or end the game or go back to the lobby. */\n  hostCommand?:\n    | HostCommand\n    | undefined;\n  /** / Sent by the host to add questions to the game, while playing. */\n  addQuestions?:\n    | AddQuestionsCommand\n    | undefined;\n  /** Player Commands */\n  answerQuestion?: AnswerQuestionCommand | undefined;\n}\n\nexport interface CreateGameCommand {\n  /** / The websocket channel that the game is being played on. */\n  channel:\n    | Channel\n    | undefined;\n  /** / The quiz that is being played. Contains alls the questions */\n  quiz: Quiz | undefined;\n}\n\nexport interface HostCommand {\n  gameId: string;\n  command: HostCommand_StatusCommand;\n}\n\nexport const HostCommand_StatusCommand = {\n  UNKNOWN: \"UNKNOWN\",\n  /** NEXT - / Move to the next phase of the game. */\n  NEXT: \"NEXT\",\n  /** END_GAME - / End the game immediately, skip results screen and destroy the session. */\n  END_GAME: \"END_GAME\",\n  /** GO_BACK_TO_LOBBY - / Go back to the lobby, allowing more players to join while the current game is running. Does not reset the leaderboard. */\n  GO_BACK_TO_LOBBY: \"GO_BACK_TO_LOBBY\",\n  /** SKIP_TO_END_RESULTS - / Skip the questions and go straight to the end state of the game. Shows the leaderboard. */\n  SKIP_TO_END_RESULTS: \"SKIP_TO_END_RESULTS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type HostCommand_StatusCommand = typeof HostCommand_StatusCommand[keyof typeof HostCommand_StatusCommand];\n\nexport namespace HostCommand_StatusCommand {\n  export type UNKNOWN = typeof HostCommand_StatusCommand.UNKNOWN;\n  export type NEXT = typeof HostCommand_StatusCommand.NEXT;\n  export type END_GAME = typeof HostCommand_StatusCommand.END_GAME;\n  export type GO_BACK_TO_LOBBY = typeof HostCommand_StatusCommand.GO_BACK_TO_LOBBY;\n  export type SKIP_TO_END_RESULTS = typeof HostCommand_StatusCommand.SKIP_TO_END_RESULTS;\n  export type UNRECOGNIZED = typeof HostCommand_StatusCommand.UNRECOGNIZED;\n}\n\n/** / Sent by a player to answer a question. */\nexport interface AnswerQuestionCommand {\n  gameId: string;\n  answer: IndividualAnswer | undefined;\n}\n\n/** / Allows the host to add questions to a running game. */\nexport interface AddQuestionsCommand {\n  gameId: string;\n  questions: Question[];\n}\n\n/** / This is sent to create the game and configure the game settings. */\nexport interface Quiz {\n  id: string;\n  title: string;\n  description?:\n    | string\n    | undefined;\n  /** / The full list of questions and answers for the quiz. May be empty if this model is returned for playing users. */\n  questions: Question[];\n  totalQuestionCount?:\n    | number\n    | undefined;\n  /** / The amount of time players have to answer each question. */\n  answerDuration:\n    | string\n    | undefined;\n  /** / The amount of time to show the question to the players before they can answer */\n  questionShowDuration:\n    | string\n    | undefined;\n  /** / Whether the answer duration is applied to the question. If false, there will be an infinite amount of time to answer the question. */\n  isAnswerDurationApplied: boolean;\n}\n\nexport interface Question {\n  id: string;\n  text: string;\n  attachments: FileAttachment[];\n  /** / Whether the question has a correct answer. Set to false for polls / votes / open ended questions. */\n  hasCorrectAnswer: boolean;\n  /** / Whether the answer has been revealed to the players. */\n  isAnswerRevealed: boolean;\n  /** / Reveal the aggregate results for the question. */\n  aggregateResult?:\n    | QuestionAggregateResult\n    | undefined;\n  /** / The answer submitted by the current user. */\n  currentUserAnswer?:\n    | IndividualAnswer\n    | undefined;\n  /** NumberQuestion number = 11; */\n  multipleChoice?: MultipleChoiceQuestion | undefined;\n}\n\nexport interface MultipleChoiceQuestion {\n  answers: MultipleChoiceAnswer[];\n}\n\n/** / A single answer for a multiple choice question. */\nexport interface MultipleChoiceAnswer {\n  id: string;\n  text: string;\n  attachments: FileAttachment[];\n  isCorrect?: boolean | undefined;\n}\n\n/** / The aggregate results for a question. Show on the host screen */\nexport interface QuestionAggregateResult {\n  questionId: string;\n  totalAnswers: number;\n  multipleChoice?: MultipleChoiceAggregateResult | undefined;\n}\n\n/** / The aggregate results for a multiple choice question. Counts the number of times each answer was selected. */\nexport interface MultipleChoiceAggregateResult {\n  answerCounts: { [key: string]: number };\n}\n\nexport interface MultipleChoiceAggregateResult_AnswerCountsEntry {\n  key: string;\n  value: number;\n}\n\n/** / A unique answer submitted by a player. */\nexport interface IndividualAnswer {\n  questionId: string;\n  /** int64 number_answer = 3; // Add this back in if we want to support number questions. */\n  multipleChoiceAnswerId?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./content_rewards_app/content_rewards_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: content_rewards_app/content_rewards_app.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"../common/attachment\";\nimport type { Money } from \"../common/money\";\nimport type { User } from \"../common/users\";\n\nexport const ContentPlatform = {\n  UNKNOWN_PLATFORM: \"UNKNOWN_PLATFORM\",\n  INSTAGRAM: \"INSTAGRAM\",\n  TIKTOK: \"TIKTOK\",\n  X: \"X\",\n  YOUTUBE: \"YOUTUBE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentPlatform = typeof ContentPlatform[keyof typeof ContentPlatform];\n\nexport namespace ContentPlatform {\n  export type UNKNOWN_PLATFORM = typeof ContentPlatform.UNKNOWN_PLATFORM;\n  export type INSTAGRAM = typeof ContentPlatform.INSTAGRAM;\n  export type TIKTOK = typeof ContentPlatform.TIKTOK;\n  export type X = typeof ContentPlatform.X;\n  export type YOUTUBE = typeof ContentPlatform.YOUTUBE;\n  export type UNRECOGNIZED = typeof ContentPlatform.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsCampaign {\n  id: string;\n  allowInstagram: boolean;\n  allowTiktok: boolean;\n  allowX: boolean;\n  allowYoutube: boolean;\n  totalBudget: Money | undefined;\n  category: ContentRewardsCampaign_Category;\n  contentType: ContentRewardsCampaign_ContentType;\n  expiresAt?: string | undefined;\n  pendingSubmissionsCount: number;\n  requirements: string[];\n  rewardRatePerThousandViews: Money | undefined;\n  status: ContentRewardsCampaign_Status;\n  submissionsCount: number;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  totalPaid: Money | undefined;\n  fileUploadRequired: boolean;\n  totalViewCount: number;\n  autoApproveSubmissionsInHours?: number | undefined;\n  requiredDescriptionText: string[];\n  requiredCreatorBioLink?: string | undefined;\n  requiredTiktokAudio?: string | undefined;\n  requiredInstagramAudio?: string | undefined;\n  fixedRewardPerSubmission?: Money | undefined;\n  totalPendingPayouts: Money | undefined;\n}\n\nexport const ContentRewardsCampaign_Status = {\n  UNKNOWN: \"UNKNOWN\",\n  ACTIVE: \"ACTIVE\",\n  PENDING: \"PENDING\",\n  EXPIRED: \"EXPIRED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_Status =\n  typeof ContentRewardsCampaign_Status[keyof typeof ContentRewardsCampaign_Status];\n\nexport namespace ContentRewardsCampaign_Status {\n  export type UNKNOWN = typeof ContentRewardsCampaign_Status.UNKNOWN;\n  export type ACTIVE = typeof ContentRewardsCampaign_Status.ACTIVE;\n  export type PENDING = typeof ContentRewardsCampaign_Status.PENDING;\n  export type EXPIRED = typeof ContentRewardsCampaign_Status.EXPIRED;\n  export type ARCHIVED = typeof ContentRewardsCampaign_Status.ARCHIVED;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_Status.UNRECOGNIZED;\n}\n\nexport const ContentRewardsCampaign_ContentType = {\n  UNKNOWN_CONTENT_TYPE: \"UNKNOWN_CONTENT_TYPE\",\n  UGC: \"UGC\",\n  CLIPPING: \"CLIPPING\",\n  /** @deprecated */\n  FACELESS: \"FACELESS\",\n  OTHER_CONTENT_TYPE: \"OTHER_CONTENT_TYPE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_ContentType =\n  typeof ContentRewardsCampaign_ContentType[keyof typeof ContentRewardsCampaign_ContentType];\n\nexport namespace ContentRewardsCampaign_ContentType {\n  export type UNKNOWN_CONTENT_TYPE = typeof ContentRewardsCampaign_ContentType.UNKNOWN_CONTENT_TYPE;\n  export type UGC = typeof ContentRewardsCampaign_ContentType.UGC;\n  export type CLIPPING = typeof ContentRewardsCampaign_ContentType.CLIPPING;\n  export type FACELESS = typeof ContentRewardsCampaign_ContentType.FACELESS;\n  export type OTHER_CONTENT_TYPE = typeof ContentRewardsCampaign_ContentType.OTHER_CONTENT_TYPE;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_ContentType.UNRECOGNIZED;\n}\n\nexport const ContentRewardsCampaign_Category = {\n  UNKNOWN_CATEGORY: \"UNKNOWN_CATEGORY\",\n  /** @deprecated */\n  CREATOR: \"CREATOR\",\n  /** @deprecated */\n  BRAND: \"BRAND\",\n  /** @deprecated */\n  INFLUENCER: \"INFLUENCER\",\n  /** @deprecated */\n  STREAMER: \"STREAMER\",\n  /** @deprecated */\n  MUSICIAN: \"MUSICIAN\",\n  OTHER: \"OTHER\",\n  /** @deprecated */\n  ECOMMERCE: \"ECOMMERCE\",\n  LOGO: \"LOGO\",\n  MUSIC: \"MUSIC\",\n  /** @deprecated */\n  PODCAST: \"PODCAST\",\n  /** @deprecated */\n  SOFTWARE: \"SOFTWARE\",\n  /** @deprecated */\n  STREAM: \"STREAM\",\n  ENTERTAINMENT: \"ENTERTAINMENT\",\n  PRODUCTS: \"PRODUCTS\",\n  PERSONAL_BRAND: \"PERSONAL_BRAND\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_Category =\n  typeof ContentRewardsCampaign_Category[keyof typeof ContentRewardsCampaign_Category];\n\nexport namespace ContentRewardsCampaign_Category {\n  export type UNKNOWN_CATEGORY = typeof ContentRewardsCampaign_Category.UNKNOWN_CATEGORY;\n  export type CREATOR = typeof ContentRewardsCampaign_Category.CREATOR;\n  export type BRAND = typeof ContentRewardsCampaign_Category.BRAND;\n  export type INFLUENCER = typeof ContentRewardsCampaign_Category.INFLUENCER;\n  export type STREAMER = typeof ContentRewardsCampaign_Category.STREAMER;\n  export type MUSICIAN = typeof ContentRewardsCampaign_Category.MUSICIAN;\n  export type OTHER = typeof ContentRewardsCampaign_Category.OTHER;\n  export type ECOMMERCE = typeof ContentRewardsCampaign_Category.ECOMMERCE;\n  export type LOGO = typeof ContentRewardsCampaign_Category.LOGO;\n  export type MUSIC = typeof ContentRewardsCampaign_Category.MUSIC;\n  export type PODCAST = typeof ContentRewardsCampaign_Category.PODCAST;\n  export type SOFTWARE = typeof ContentRewardsCampaign_Category.SOFTWARE;\n  export type STREAM = typeof ContentRewardsCampaign_Category.STREAM;\n  export type ENTERTAINMENT = typeof ContentRewardsCampaign_Category.ENTERTAINMENT;\n  export type PRODUCTS = typeof ContentRewardsCampaign_Category.PRODUCTS;\n  export type PERSONAL_BRAND = typeof ContentRewardsCampaign_Category.PERSONAL_BRAND;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_Category.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsSubmission {\n  id: string;\n  totalPaid: Money | undefined;\n  totalViewCount: number;\n  contentUrl: string;\n  platform: ContentPlatform;\n  status: ContentRewardsSubmission_Status;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  campaignId: string;\n  platformPostId?: string | undefined;\n  userId: string;\n  user: User | undefined;\n  attachments: FileAttachment[];\n  totalLikeCount: number;\n  totalCommentCount: number;\n  totalSaveCount: number;\n  totalShareCount: number;\n  totalRepostCount: number;\n}\n\nexport const ContentRewardsSubmission_Status = {\n  UNKNOWN: \"UNKNOWN\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  REJECTED: \"REJECTED\",\n  FLAGGED: \"FLAGGED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsSubmission_Status =\n  typeof ContentRewardsSubmission_Status[keyof typeof ContentRewardsSubmission_Status];\n\nexport namespace ContentRewardsSubmission_Status {\n  export type UNKNOWN = typeof ContentRewardsSubmission_Status.UNKNOWN;\n  export type PENDING = typeof ContentRewardsSubmission_Status.PENDING;\n  export type APPROVED = typeof ContentRewardsSubmission_Status.APPROVED;\n  export type REJECTED = typeof ContentRewardsSubmission_Status.REJECTED;\n  export type FLAGGED = typeof ContentRewardsSubmission_Status.FLAGGED;\n  export type UNRECOGNIZED = typeof ContentRewardsSubmission_Status.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsMessage {\n  contentRewardsCampaign?: ContentRewardsCampaign | undefined;\n  contentRewardsSubmission?: ContentRewardsSubmission | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./events_app/events_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: events_app/events_app.proto\n\n/* eslint-disable */\nimport type { User } from \"../common/users\";\n\nexport interface Event {\n  id: string;\n  title: string;\n  description?: string | undefined;\n  maxCapacity?: number | undefined;\n  recordingUrl?: string | undefined;\n  thumbnailUrl?: string | undefined;\n  recurringRule?: Event_RecurringRule | undefined;\n  rrule?: string | undefined;\n  seriesEndsAt?: string | undefined;\n  startsAt: string | undefined;\n  endsAt: string | undefined;\n  location?: string | undefined;\n  locationType: Event_LocationType;\n  rsvpsCount: number;\n  rsvpUsers: User[];\n  hostName?: string | undefined;\n  hostUser?: User | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Event_LocationType = {\n  UNKNOWN_LOCATION_TYPE: \"UNKNOWN_LOCATION_TYPE\",\n  OFFLINE: \"OFFLINE\",\n  ONLINE: \"ONLINE\",\n  ZOOM: \"ZOOM\",\n  GOOGLE_MEET: \"GOOGLE_MEET\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Event_LocationType = typeof Event_LocationType[keyof typeof Event_LocationType];\n\nexport namespace Event_LocationType {\n  export type UNKNOWN_LOCATION_TYPE = typeof Event_LocationType.UNKNOWN_LOCATION_TYPE;\n  export type OFFLINE = typeof Event_LocationType.OFFLINE;\n  export type ONLINE = typeof Event_LocationType.ONLINE;\n  export type ZOOM = typeof Event_LocationType.ZOOM;\n  export type GOOGLE_MEET = typeof Event_LocationType.GOOGLE_MEET;\n  export type UNRECOGNIZED = typeof Event_LocationType.UNRECOGNIZED;\n}\n\nexport const Event_RecurringRule = {\n  UNKNOWN_RECURRING_RULE: \"UNKNOWN_RECURRING_RULE\",\n  DAILY: \"DAILY\",\n  WEEKLY: \"WEEKLY\",\n  MONTHLY: \"MONTHLY\",\n  YEARLY: \"YEARLY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Event_RecurringRule = typeof Event_RecurringRule[keyof typeof Event_RecurringRule];\n\nexport namespace Event_RecurringRule {\n  export type UNKNOWN_RECURRING_RULE = typeof Event_RecurringRule.UNKNOWN_RECURRING_RULE;\n  export type DAILY = typeof Event_RecurringRule.DAILY;\n  export type WEEKLY = typeof Event_RecurringRule.WEEKLY;\n  export type MONTHLY = typeof Event_RecurringRule.MONTHLY;\n  export type YEARLY = typeof Event_RecurringRule.YEARLY;\n  export type UNRECOGNIZED = typeof Event_RecurringRule.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./diagnostics/client_commands\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: diagnostics/client_commands.proto\n\n/* eslint-disable */\n\nexport interface ExecuteClientCommand {\n  id: string;\n  command: string;\n  payload?: string | undefined;\n  validAfter?: string | undefined;\n  validUntil?: string | undefined;\n  clientVersion?: string | undefined;\n  clientPlatform?: string | undefined;\n}\n\nexport interface ExecuteClientCommandResponse {\n  id: string;\n  status: ExecuteClientCommandResponse_Status;\n  command: string;\n  response?: string | undefined;\n  errorMessage?: string | undefined;\n  executedAt?: string | undefined;\n  duration?: string | undefined;\n}\n\nexport const ExecuteClientCommandResponse_Status = {\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\",\n  SKIPPED: \"SKIPPED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ExecuteClientCommandResponse_Status =\n  typeof ExecuteClientCommandResponse_Status[keyof typeof ExecuteClientCommandResponse_Status];\n\nexport namespace ExecuteClientCommandResponse_Status {\n  export type SUCCESS = typeof ExecuteClientCommandResponse_Status.SUCCESS;\n  export type ERROR = typeof ExecuteClientCommandResponse_Status.ERROR;\n  export type SKIPPED = typeof ExecuteClientCommandResponse_Status.SKIPPED;\n  export type UNRECOGNIZED = typeof ExecuteClientCommandResponse_Status.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./content_app/content_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./calendar_bookings_app/calendar_bookings_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./wheel_app/wheel_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: wheel_app/wheel_app.proto\n\n/* eslint-disable */\nimport type { User } from \"../common/users\";\n\nexport interface Wheel {\n  id: string;\n  hasCustomPrizes: boolean;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport interface Spin {\n  id: string;\n  wheelId: string;\n  user: User | undefined;\n  prize: Prize | undefined;\n  status: Spin_SpinStatus;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Spin_SpinStatus = {\n  UNKNOWN_SPIN_STATUS: \"UNKNOWN_SPIN_STATUS\",\n  WON: \"WON\",\n  LOST: \"LOST\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Spin_SpinStatus = typeof Spin_SpinStatus[keyof typeof Spin_SpinStatus];\n\nexport namespace Spin_SpinStatus {\n  export type UNKNOWN_SPIN_STATUS = typeof Spin_SpinStatus.UNKNOWN_SPIN_STATUS;\n  export type WON = typeof Spin_SpinStatus.WON;\n  export type LOST = typeof Spin_SpinStatus.LOST;\n  export type UNRECOGNIZED = typeof Spin_SpinStatus.UNRECOGNIZED;\n}\n\nexport interface Prize {\n  id: string;\n  name: string;\n  imageUrl?: string | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  testingIgnore?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./experience/preview_content\";\nexport * from \"./experience/experience\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./data_platform/dispute_rates_query\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: data_platform/dispute_rates_query.proto\n\n/* eslint-disable */\n\nexport const PaymentMethod = {\n  PAYMENT_METHOD_UNSPECIFIED: \"PAYMENT_METHOD_UNSPECIFIED\",\n  PAYMENT_METHOD_ALL_PAYMENT_METHODS: \"PAYMENT_METHOD_ALL_PAYMENT_METHODS\",\n  PAYMENT_METHOD_ALL_CARD_AND_FINANCING: \"PAYMENT_METHOD_ALL_CARD_AND_FINANCING\",\n  PAYMENT_METHOD_ALL_FINANCING: \"PAYMENT_METHOD_ALL_FINANCING\",\n  PAYMENT_METHOD_SPLITIT: \"PAYMENT_METHOD_SPLITIT\",\n  PAYMENT_METHOD_SEZZLE: \"PAYMENT_METHOD_SEZZLE\",\n  PAYMENT_METHOD_AFTERPAY_CLEARPAY: \"PAYMENT_METHOD_AFTERPAY_CLEARPAY\",\n  PAYMENT_METHOD_ZIP: \"PAYMENT_METHOD_ZIP\",\n  PAYMENT_METHOD_KLARNA: \"PAYMENT_METHOD_KLARNA\",\n  PAYMENT_METHOD_AFFIRM: \"PAYMENT_METHOD_AFFIRM\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type PaymentMethod = typeof PaymentMethod[keyof typeof PaymentMethod];\n\nexport namespace PaymentMethod {\n  export type PAYMENT_METHOD_UNSPECIFIED = typeof PaymentMethod.PAYMENT_METHOD_UNSPECIFIED;\n  export type PAYMENT_METHOD_ALL_PAYMENT_METHODS = typeof PaymentMethod.PAYMENT_METHOD_ALL_PAYMENT_METHODS;\n  export type PAYMENT_METHOD_ALL_CARD_AND_FINANCING = typeof PaymentMethod.PAYMENT_METHOD_ALL_CARD_AND_FINANCING;\n  export type PAYMENT_METHOD_ALL_FINANCING = typeof PaymentMethod.PAYMENT_METHOD_ALL_FINANCING;\n  export type PAYMENT_METHOD_SPLITIT = typeof PaymentMethod.PAYMENT_METHOD_SPLITIT;\n  export type PAYMENT_METHOD_SEZZLE = typeof PaymentMethod.PAYMENT_METHOD_SEZZLE;\n  export type PAYMENT_METHOD_AFTERPAY_CLEARPAY = typeof PaymentMethod.PAYMENT_METHOD_AFTERPAY_CLEARPAY;\n  export type PAYMENT_METHOD_ZIP = typeof PaymentMethod.PAYMENT_METHOD_ZIP;\n  export type PAYMENT_METHOD_KLARNA = typeof PaymentMethod.PAYMENT_METHOD_KLARNA;\n  export type PAYMENT_METHOD_AFFIRM = typeof PaymentMethod.PAYMENT_METHOD_AFFIRM;\n  export type UNRECOGNIZED = typeof PaymentMethod.UNRECOGNIZED;\n}\n\nexport const DisputeMetric = {\n  DISPUTE_METRIC_UNSPECIFIED: \"DISPUTE_METRIC_UNSPECIFIED\",\n  DISPUTE_RATE: \"DISPUTE_RATE\",\n  TOTAL_TRANSACTIONS: \"TOTAL_TRANSACTIONS\",\n  DISPUTED_TRANSACTIONS: \"DISPUTED_TRANSACTIONS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type DisputeMetric = typeof DisputeMetric[keyof typeof DisputeMetric];\n\nexport namespace DisputeMetric {\n  export type DISPUTE_METRIC_UNSPECIFIED = typeof DisputeMetric.DISPUTE_METRIC_UNSPECIFIED;\n  export type DISPUTE_RATE = typeof DisputeMetric.DISPUTE_RATE;\n  export type TOTAL_TRANSACTIONS = typeof DisputeMetric.TOTAL_TRANSACTIONS;\n  export type DISPUTED_TRANSACTIONS = typeof DisputeMetric.DISPUTED_TRANSACTIONS;\n  export type UNRECOGNIZED = typeof DisputeMetric.UNRECOGNIZED;\n}\n\nexport const LogicalOperator = {\n  LOGICAL_OPERATOR_UNSPECIFIED: \"LOGICAL_OPERATOR_UNSPECIFIED\",\n  AND: \"AND\",\n  OR: \"OR\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type LogicalOperator = typeof LogicalOperator[keyof typeof LogicalOperator];\n\nexport namespace LogicalOperator {\n  export type LOGICAL_OPERATOR_UNSPECIFIED = typeof LogicalOperator.LOGICAL_OPERATOR_UNSPECIFIED;\n  export type AND = typeof LogicalOperator.AND;\n  export type OR = typeof LogicalOperator.OR;\n  export type UNRECOGNIZED = typeof LogicalOperator.UNRECOGNIZED;\n}\n\nexport interface MetricFilter {\n  paymentMethod: PaymentMethod;\n  metric: DisputeMetric;\n  floatRange?: FloatRange | undefined;\n  intRange?: IntRange | undefined;\n}\n\nexport interface QueryBnplDisputeRatesRequest {\n  /** Format: \"biz_abcABC\" */\n  bizIds: string[];\n  metricFilters: MetricFilter[];\n  /** Defaults to AND if unspecified */\n  metricFiltersOperator: LogicalOperator;\n  limit: number;\n  offset: number;\n}\n\nexport interface QueryBnplDisputeRatesResponse {\n  records: BnplDisputeRatesRecord[];\n  totalCount: number;\n}\n\nexport interface BnplDisputeRatesRecord {\n  bizId: string;\n  paymentMethodMetrics: PaymentMethodMetrics[];\n}\n\nexport interface PaymentMethodMetrics {\n  paymentMethod: PaymentMethod;\n  disputeRate: number;\n  totalTransactions: number;\n  disputedTransactions: number;\n}\n\nexport interface FloatRange {\n  min?: number | undefined;\n  max?: number | undefined;\n}\n\nexport interface IntRange {\n  min?: number | undefined;\n  max?: number | undefined;\n}\n","import type { WhopWebhookRequestBody } from \"./webhook-types\";\n\nconst DEFAULT_SIGNATURE_HEADER_NAME = \"x-whop-signature\";\n\nexport type { WhopWebhookRequestBody } from \"./webhook-types\";\n\nexport function makeWebhookValidator({\n\twebhookSecret,\n\tsignatureHeaderName,\n}: {\n\twebhookSecret: string;\n\tsignatureHeaderName?: string | null;\n}) {\n\tconst textEncoder = new TextEncoder();\n\tconst encodedKey = textEncoder.encode(webhookSecret);\n\tconst cryptoKeyPromise = crypto.subtle.importKey(\n\t\t\"raw\",\n\t\tencodedKey,\n\t\t{ name: \"HMAC\", hash: \"SHA-256\" },\n\t\tfalse,\n\t\t[\"sign\"],\n\t);\n\n\treturn async function validateWebhookBody(\n\t\treq: Request,\n\t): Promise<WhopWebhookRequestBody> {\n\t\tconst body = await req.text();\n\t\tconst header = req.headers.get(\n\t\t\tsignatureHeaderName ?? DEFAULT_SIGNATURE_HEADER_NAME,\n\t\t);\n\t\tif (!header) throw Error(\"Missing header containing signature.\");\n\t\tconst [timestampStr, signatureStr] = header.split(\",\");\n\t\tconst [, timestamp] = timestampStr.split(\"=\");\n\t\tconst [version, sentSignature] = signatureStr.split(\"=\");\n\n\t\tconst now = Math.round(Date.now() / 1000);\n\n\t\tif (\n\t\t\tNumber.isNaN(Number.parseInt(timestamp)) ||\n\t\t\tMath.abs(now - Number.parseInt(timestamp)) > 300\n\t\t)\n\t\t\tthrow Error(\"Invalid timestamp\");\n\n\t\tconst stringToHash = `${timestamp}.${body}`;\n\n\t\tconst cryptoKey = await cryptoKeyPromise;\n\n\t\tconst signatureBuffer = await crypto.subtle.sign(\n\t\t\t{ name: \"HMAC\", hash: \"SHA-256\" },\n\t\t\tcryptoKey,\n\t\t\ttextEncoder.encode(stringToHash),\n\t\t);\n\t\tconst signature = buf2hex(signatureBuffer);\n\n\t\tif (version !== \"v1\") throw Error(\"Unsupported version\");\n\t\tif (signature !== sentSignature) throw Error(\"Signature mismatch\");\n\n\t\tconst parsedBody = JSON.parse(body) as unknown;\n\t\tif (!isValidWebhook(parsedBody)) throw Error(\"Invalid webhook payload\");\n\t\treturn parsedBody;\n\t};\n}\n\nfunction buf2hex(buffer: ArrayBuffer) {\n\treturn [...new Uint8Array(buffer)]\n\t\t.map((x) => x.toString(16).padStart(2, \"0\"))\n\t\t.join(\"\");\n}\n\n// Type guard to check if a webhook is valid\nexport function isValidWebhook(\n\twebhook: unknown,\n): webhook is WhopWebhookRequestBody {\n\tif (!webhook || typeof webhook !== \"object\") return false;\n\tif (!(\"api_version\" in webhook) || webhook.api_version !== \"v5\") return false;\n\tif (!(\"action\" in webhook) || typeof webhook.action !== \"string\")\n\t\treturn false;\n\tif (\n\t\t!(\"data\" in webhook) ||\n\t\ttypeof webhook.data !== \"object\" ||\n\t\twebhook.data === null\n\t)\n\t\treturn false;\n\treturn true;\n}\n","class RetryError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\tpublic readonly errors: unknown[],\n\t\tpublic readonly maxRetries: number,\n\t) {\n\t\tsuper(message);\n\t\tthis.name = \"RetryError\";\n\t}\n}\n\n/**\n * Retries an async function.\n * @param fn The function to retry.\n * @param maxRetries The maximum number of retries.\n * @param signal The signal to abort the retry.\n * @param args The arguments to pass to the function.\n * @returns The result of the function.\n */\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\nexport async function retry<Fn extends (...args: any[]) => Promise<any>>(\n\tfn: Fn,\n\tmaxRetries: number,\n\tsignal?: AbortSignal,\n\t...args: Parameters<Fn>\n): Promise<Awaited<ReturnType<Fn>>> {\n\tlet tries = 0;\n\tconst errors: unknown[] = [];\n\twhile (tries < maxRetries) {\n\t\tsignal?.throwIfAborted();\n\t\ttry {\n\t\t\tconst res = await fn(...args);\n\t\t\treturn res;\n\t\t} catch (error) {\n\t\t\terrors.push(error);\n\t\t\ttries++;\n\t\t}\n\t}\n\tfor (const error of errors) {\n\t\tconsole.error(error);\n\t}\n\tthrow new RetryError(\"Failed to retry\", errors, maxRetries);\n}\n","import type {\n\tMultipartUploadTask,\n\tUploadPartFunction,\n} from \"@/attachments/common\";\n\nimport { retry } from \"@/utils/retry\";\n\n/**\n * A global queue of tasks to upload a single or multiple files in parts.\n */\nconst uploadTasks: {\n\ttask: MultipartUploadTask;\n\tresolve: (uploadResult: { etag: string; partNumber: number }) => void;\n\treject: (error: unknown) => void;\n}[] = [];\n\nlet workerCount = 0;\nconst maxWorkers = 10;\n\n/**\n * Drains the upload queue.\n * @returns The etags of the uploaded parts.\n */\nasync function uploadWorker(uploadPart: UploadPartFunction) {\n\tif (workerCount >= maxWorkers) {\n\t\treturn;\n\t}\n\n\tworkerCount++;\n\n\twhile (uploadTasks.length > 0) {\n\t\tconst task = uploadTasks.shift();\n\t\tif (!task) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ttry {\n\t\t\tconst etag = await retry(uploadPart, 10, task.task.signal, task.task);\n\t\t\ttask.resolve({ etag, partNumber: task.task.partNumber });\n\t\t} catch (e) {\n\t\t\ttask.reject(e);\n\t\t}\n\t}\n\n\tworkerCount--;\n}\n\n/**\n * Enqueues a list of tasks to upload a file in parts.\n * @param tasks The tasks to upload.\n * @param priority Whether to upload the tasks in priority.\n * @returns The etags of the uploaded parts.\n */\nexport function uploadParts(\n\ttasks: MultipartUploadTask[],\n\tuploadPart: UploadPartFunction,\n\tpriority = false,\n) {\n\tconst promises = tasks.map((task) => {\n\t\treturn new Promise<{ etag: string; partNumber: number }>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tif (priority) {\n\t\t\t\t\tuploadTasks.unshift({ task, resolve, reject });\n\t\t\t\t} else {\n\t\t\t\t\tuploadTasks.push({ task, resolve, reject });\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t});\n\n\tfor (let i = 0; i < Math.min(tasks.length, maxWorkers); i++) {\n\t\tvoid uploadWorker(uploadPart);\n\t}\n\n\treturn Promise.all(promises);\n}\n","/**\n * Sums an array of numbers.\n * @param args The numbers to sum.\n * @returns The sum of the numbers.\n */\nexport function sum(...args: number[]) {\n\treturn args.reduce((acc, curr) => acc + curr, 0);\n}\n","import type { PreparedAttachment } from \"@/attachments/prepare\";\nimport type {\n\tAttachableRecords,\n\tAttachmentFragment,\n\tMedia,\n\tgetSdk,\n} from \"@/codegen/graphql/client\";\n\nimport { uploadParts } from \"@/attachments/upload-parts\";\nimport { sum } from \"@/utils/sum\";\nimport type { UploadPartFunction } from \"./common\";\nimport type { PartialFileSdkExtensions } from \"./partial-file-sdk-extensions\";\n\n/**\n * Uploads a prepared file, automatically handling multipart uploads.\n * @param preparedFile The prepared file to upload.\n * @param onProgress The callback to call when the progress changes.\n * @param signal The signal to abort the upload.\n * @returns The etags of the uploaded parts.\n */\nasync function handleUpload(\n\t{ data, ...preparedFile }: PreparedAttachment,\n\t{\n\t\tonProgress,\n\t\tsignal,\n\t\tuploadPart,\n\t}: {\n\t\tonProgress?: (progress: number) => void;\n\t\tsignal?: AbortSignal;\n\t\tuploadPart: UploadPartFunction;\n\t},\n) {\n\tif (preparedFile.multipart) {\n\t\tconst loaded = Array(preparedFile.multipartUploadUrls.length).fill(0);\n\n\t\tconst result = await uploadParts(\n\t\t\tpreparedFile.multipartUploadUrls.map((part, index) => ({\n\t\t\t\t...part,\n\t\t\t\tfullData: data,\n\t\t\t\tonProgress: (event) => {\n\t\t\t\t\tloaded[index] = event.loaded;\n\t\t\t\t\tconst total = sum(...loaded);\n\t\t\t\t\tonProgress?.(Math.round((total / data.size) * 100));\n\t\t\t\t},\n\t\t\t\tsignal,\n\t\t\t})),\n\t\t\tuploadPart,\n\t\t);\n\n\t\treturn result;\n\t}\n\n\tawait uploadParts(\n\t\t[\n\t\t\t{\n\t\t\t\turl: preparedFile.uploadUrl,\n\t\t\t\tfullData: data,\n\t\t\t\tpartNumber: 1,\n\t\t\t\theaders: preparedFile.headers,\n\t\t\t\tonProgress: (event) => {\n\t\t\t\t\tonProgress?.(Math.round((event.loaded / data.size) * 100));\n\t\t\t\t},\n\t\t\t\tsignal,\n\t\t\t},\n\t\t],\n\t\tuploadPart,\n\t\ttrue,\n\t);\n\n\treturn [];\n}\n\n/**\n * The file input for the attachment upload.\n */\ntype UploadFileInput =\n\t| {\n\t\t\tfile: File | Blob;\n\t\t\trecord: AttachableRecords;\n\t  }\n\t| PreparedAttachment\n\t| Promise<PreparedAttachment>;\n\nfunction getMediaType(data: File | Blob): Media {\n\tswitch (true) {\n\t\tcase data.type.startsWith(\"image/\"):\n\t\t\treturn \"image\";\n\t\tcase data.type.startsWith(\"video/\"):\n\t\t\treturn \"video\";\n\t\tcase data.type.startsWith(\"audio/\"):\n\t\t\treturn \"audio\";\n\t\tdefault:\n\t\t\treturn \"other\";\n\t}\n}\n\n/**\n * Additional options for the attachment upload.\n */\nexport interface UploadFileOptions {\n\t/**\n\t * This callback is called with the progress of the upload.\n\t */\n\tonProgress?: (progress: number) => void;\n\t/**\n\t * This signal can be used to abort the upload.\n\t */\n\tsignal?: AbortSignal;\n}\n\n/**\n * Response returned by `UploadAttachment`.\n */\nexport interface UploadAttachmentResponse {\n\t/** The direct upload ID - use this to attach the attachment to a resource */\n\tdirectUploadId: string;\n\t/** The record type the attachment was attached to */\n\trecord: AttachableRecords;\n\t/** The attachment */\n\tattachment: AttachmentFragment;\n}\n\nexport function makeUploadAttachmentFunction({\n\tuploadPart,\n}: {\n\tuploadPart: UploadPartFunction;\n}) {\n\t/**\n\t * Uploads a file.\n\t * @param input - The input to upload.\n\t * @param opts - The options to upload the file.\n\t * @returns The attachment.\n\t */\n\treturn async function uploadAttachment(\n\t\tthis: PartialFileSdkExtensions &\n\t\t\tPick<ReturnType<typeof getSdk<RequestInit>>, \"attachments\">,\n\t\tinput: UploadFileInput,\n\t\t{ onProgress, signal }: UploadFileOptions = {},\n\t): Promise<UploadAttachmentResponse> {\n\t\t// prepare the file\n\t\tconst preparedAttachment =\n\t\t\t\"record\" in input && \"file\" in input\n\t\t\t\t? await this.prepareAttachmentForUpload(input.file, input.record)\n\t\t\t\t: await input;\n\n\t\t// upload the file\n\t\tconst result = await handleUpload(preparedAttachment, {\n\t\t\tonProgress,\n\t\t\tsignal,\n\t\t\tuploadPart,\n\t\t});\n\t\t// get the media type\n\t\tconst mediaType = getMediaType(preparedAttachment.data);\n\n\t\t// request media processing\n\t\tif (preparedAttachment.multipart) {\n\t\t\tawait this.attachments.processAttachment({\n\t\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\t\tmediaType,\n\t\t\t\tmultipartUploadId: preparedAttachment.multipartUploadId,\n\t\t\t\tmultipartParts: result,\n\t\t\t});\n\t\t} else {\n\t\t\tawait this.attachments.processAttachment({\n\t\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\t\tmediaType,\n\t\t\t});\n\t\t}\n\n\t\tconst attachment = await this.analyzeAttachment(preparedAttachment.id, {\n\t\t\tsignal,\n\t\t});\n\n\t\tif (!attachment) {\n\t\t\tthrow new Error(\"Failed to analyze Attachment\");\n\t\t}\n\n\t\treturn {\n\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\trecord: preparedAttachment.record,\n\t\t\tattachment,\n\t\t};\n\t};\n}\n","import type { BaseSdk } from \"./partial-file-sdk-extensions\";\n\n/**\n * Analyzes an attachment.\n * @param this The SDK instance.\n * @param signedId The signed ID of the attachment.\n * @param opts The options for the attachment.\n * @returns The attachment.\n */\nexport async function analyzeAttachment(\n\tthis: Pick<BaseSdk, \"attachments\">,\n\tsignedId: string,\n\topts?: {\n\t\tsignal?: AbortSignal;\n\t},\n) {\n\twhile (!opts?.signal?.aborted) {\n\t\tconst attachment = await this.attachments\n\t\t\t.getAttachment({ id: signedId }, { signal: opts?.signal })\n\t\t\t.catch(() => null);\n\n\t\tif (attachment) {\n\t\t\treturn attachment;\n\t\t}\n\t}\n}\n","export const MULTIPART_UPLOAD_CHUNK_SIZE = 5 * 1024 * 1024; // 5MB\n\n/**\n * A task to upload a part of a file.\n */\nexport interface MultipartUploadTask {\n\turl: string;\n\tfullData: File | Blob;\n\tpartNumber: number;\n\theaders?: Record<string, string>;\n\tonProgress?: (progress: Pick<ProgressEvent, \"loaded\" | \"total\">) => void;\n\tsignal?: AbortSignal;\n}\n\nexport type UploadPartFunction = (task: MultipartUploadTask) => Promise<string>;\n","type AwaitableParams<P extends unknown[]> = P extends [\n\tinfer First,\n\t...infer Rest,\n]\n\t? [First | Promise<First>, ...AwaitableParams<Rest>]\n\t: [];\n\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\ntype ResultType<P extends unknown[], R> = R extends Promise<any>\n\t? R\n\t: P extends [infer First, ...infer Rest]\n\t\t? // biome-ignore lint/suspicious/noExplicitAny: required for type inference\n\t\t\tFirst extends Promise<any>\n\t\t\t? Promise<R>\n\t\t\t: ResultType<Rest, R>\n\t\t: R;\n\n/**\n * A utility function that makes a function's parameters awaitable.\n * @param fn The function to enhance.\n * @returns The function with awaitable parameters.\n */\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\nexport const withAwaitableParams = <Fn extends (...args: any[]) => unknown>(\n\tfn: Fn,\n) => {\n\ttype Args = AwaitableParams<Parameters<Fn>>;\n\treturn <A extends Args>(...args: A): ResultType<A, ReturnType<Fn>> => {\n\t\t// biome-ignore lint/suspicious/noExplicitAny: required for type inference\n\t\tconst casted = args as Array<any | Promise<any>>;\n\t\tconst hasPromises = casted.some((arg) => arg instanceof Promise);\n\t\tif (hasPromises) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treturn Promise.all(casted)\n\t\t\t\t\t.then((args) => {\n\t\t\t\t\t\treturn fn(...args);\n\t\t\t\t\t})\n\t\t\t\t\t.then(resolve)\n\t\t\t\t\t.catch(reject);\n\t\t\t}) as ResultType<A, ReturnType<Fn>>;\n\t\t}\n\t\treturn fn(...args) as ResultType<A, ReturnType<Fn>>;\n\t};\n};\n","/*\nMIT LICENSE\nCopyright 2011 Jon Leighton\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { withAwaitableParams } from \"./with-awaitable-params\";\n\nconst encodings =\n\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction b64Raw(arrayBuffer: ArrayBuffer) {\n\tlet base64 = \"\";\n\n\tconst bytes = new Uint8Array(arrayBuffer);\n\tconst byteLength = bytes.byteLength;\n\tconst byteRemainder = byteLength % 3;\n\tconst mainLength = byteLength - byteRemainder;\n\n\tlet a: number;\n\tlet b: number;\n\tlet c: number;\n\tlet d: number;\n\tlet chunk: number;\n\n\t// Main loop deals with bytes in chunks of 3\n\tfor (let i = 0; i < mainLength; i = i + 3) {\n\t\t// Combine the three bytes into a single integer\n\t\tchunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n\t\t// Use bitmasks to extract 6-bit segments from the triplet\n\t\ta = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\t\tb = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n\t\tc = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n\t\td = chunk & 63; // 63       = 2^6 - 1\n\n\t\t// Convert the raw binary segments to the appropriate ASCII encoding\n\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n\t}\n\n\t// Deal with the remaining bytes and padding\n\tif (byteRemainder === 1) {\n\t\tchunk = bytes[mainLength];\n\n\t\ta = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n\t\t// Set the 4 least significant bits to zero\n\t\tb = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n\t\tbase64 += `${encodings[a]}${encodings[b]}==`;\n\t} else if (byteRemainder === 2) {\n\t\tchunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n\t\ta = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\t\tb = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n\t\t// Set the 2 least significant bits to zero\n\t\tc = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n\t\tbase64 += `${encodings[a]}${encodings[b]}${encodings[c]}=`;\n\t}\n\n\treturn base64;\n}\n\n/**\n * Encodes a buffer to a base64 string.\n * @param arrayBuffer The buffer to encode.\n * @returns The base64 encoded string.\n */\nexport const b64 = withAwaitableParams(b64Raw);\n","import { md5 as jsMd5 } from \"js-md5\";\n\n/**\n * Calculates the MD5 hash of a stream.\n * @param stream The stream to calculate the MD5 hash of.\n * @returns The MD5 hash of the stream.\n */\nexport async function md5(stream: ReadableStream<Uint8Array>) {\n\tconst hasher = jsMd5.create();\n\tawait stream.pipeTo(\n\t\tnew WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\thasher.update(chunk);\n\t\t\t},\n\t\t}),\n\t);\n\n\treturn hasher.arrayBuffer();\n}\n","import type { AttachableRecords, Sdk } from \"@/codegen/graphql/client\";\n\nimport { MULTIPART_UPLOAD_CHUNK_SIZE } from \"@/attachments/common\";\nimport { b64 } from \"@/utils/b64\";\nimport { md5 } from \"@/utils/md5\";\n\n/**\n * Prepares a file for upload.\n * @param data The file to upload.\n * @param record The record to upload the file to.\n * @returns The prepared file.\n */\nexport async function prepareAttachmentForUpload(\n\tthis: Sdk,\n\tdata: File | Blob,\n\trecord: AttachableRecords,\n) {\n\tconst isMultipart = data.size > MULTIPART_UPLOAD_CHUNK_SIZE;\n\tconst mediaDirectUpload = await this.attachments.uploadMedia({\n\t\tbyteSizeV2: data.size.toString(),\n\t\trecord,\n\t\tfilename: data instanceof File ? data.name : crypto.randomUUID(),\n\t\tcontentType: data.type,\n\t\tchecksum: await b64(md5(data.stream())),\n\t\tmultipart: isMultipart,\n\t});\n\n\tif (isMultipart) {\n\t\tif (\n\t\t\t!mediaDirectUpload?.multipartUploadId ||\n\t\t\t!mediaDirectUpload.multipartUploadUrls\n\t\t) {\n\t\t\tthrow new Error(\"Failed to prepare file\");\n\t\t}\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tid: mediaDirectUpload.id,\n\t\t\tmultipartUploadUrls: mediaDirectUpload.multipartUploadUrls,\n\t\t\tmultipartUploadId: mediaDirectUpload.multipartUploadId,\n\t\t\trecord,\n\t\t\tmultipart: true as const,\n\t\t};\n\t}\n\n\tif (!mediaDirectUpload?.id || !mediaDirectUpload.uploadUrl) {\n\t\tthrow new Error(\"Failed to prepare file\");\n\t}\n\n\treturn {\n\t\tdata,\n\t\tid: mediaDirectUpload.id,\n\t\tuploadUrl: mediaDirectUpload.uploadUrl,\n\t\theaders: mediaDirectUpload.headers as Record<string, string>,\n\t\trecord,\n\t\tmultipart: false as const,\n\t};\n}\n\nexport type PreparedAttachment = Awaited<\n\tReturnType<typeof prepareAttachmentForUpload>\n>;\n","import type { getSdk } from \"@/codegen/graphql/client\";\nimport { analyzeAttachment as analyzeAttachmentFn } from \"./analyze\";\nimport { prepareAttachmentForUpload as prepareAttachmentForUploadFn } from \"./prepare\";\n\nexport type BaseSdk = ReturnType<typeof getSdk<RequestInit>>;\n\nexport function partialFileSdkExtensions(baseSdk: BaseSdk) {\n\tconst prepareAttachmentForUpload = prepareAttachmentForUploadFn.bind(baseSdk);\n\tconst analyzeAttachment = analyzeAttachmentFn.bind(baseSdk);\n\treturn {\n\t\tprepareAttachmentForUpload,\n\t\tanalyzeAttachment,\n\t};\n}\n\nexport type PartialFileSdkExtensions = ReturnType<\n\ttypeof partialFileSdkExtensions\n>;\n","import {\n\ttype BaseSdk,\n\tpartialFileSdkExtensions,\n} from \"./partial-file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"./upload\";\n\nexport function fileSdkExtensions(\n\tbaseSdk: BaseSdk,\n\tuploadAttachmentFn: ReturnType<typeof makeUploadAttachmentFunction>,\n) {\n\tconst partial = partialFileSdkExtensions(baseSdk);\n\n\tconst uploadAttachment = uploadAttachmentFn.bind({\n\t\t...baseSdk,\n\t\t...partial,\n\t});\n\n\treturn {\n\t\t...partial,\n\t\tuploadAttachment,\n\t};\n}\n\nexport type FileSdkExtensions = ReturnType<typeof fileSdkExtensions>;\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = {\n\t[K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]?: Maybe<T[SubKey]>;\n};\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]: Maybe<T[SubKey]>;\n};\nexport type MakeEmpty<\n\tT extends { [key: string]: unknown },\n\tK extends keyof T,\n> = { [_ in K]?: never };\nexport type Incremental<T> =\n\t| T\n\t| {\n\t\t\t[P in keyof T]?: P extends \" $fragmentName\" | \"__typename\" ? T[P] : never;\n\t  };\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n\tID: { input: string; output: string };\n\tString: { input: string; output: string };\n\tBoolean: { input: boolean; output: boolean };\n\tInt: { input: number; output: number };\n\tFloat: { input: number; output: number };\n\t/**\n\t * Represents non-fractional signed whole numeric values. Since the value may\n\t * exceed the size of a 32-bit integer, it's encoded as a string.\n\t */\n\tBigInt: { input: string; output: string };\n\t/**\n\t * The `Decimal` scalar type represents signed double-precision fractional\n\t * values. The Decimal appears in a JSON response as a string to preserve\n\t * precision.\n\t */\n\tDecimal: { input: string; output: string };\n\t/** Url to uploaded upload */\n\tFile: { input: string; output: string };\n\t/** Represents untyped JSON */\n\tJSON: { input: { [key: string]: any }; output: { [key: string]: any } };\n\t/** A number - float or integer */\n\tNumber: { input: number; output: number };\n\t/** String removes all html tags */\n\tSanitizedString: { input: string; output: string };\n\t/** A float that can be a string */\n\tStringFloat: { input: string | number; output: string | number };\n\t/** A valid timestamp in seconds, transported as an integer */\n\tTimestamp: { input: number; output: number };\n\t/** URL starting with http/https */\n\tUrlString: { input: string; output: string };\n}\n\n/** The name of the resource type that is being reported. */\nexport type AbuseReportCategoryResourceTypes =\n\t/** Page */\n\t\"Page\";\n\n/** Visibility of an abuse report category */\nexport type AbuseReportCategoryVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\";\n\n/** The status of the abuse report */\nexport type AbuseReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The high level payment processor options. */\nexport type AcceptedPaymentMethods =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\";\n\n/** The access level a given user (or company) has to an access pass or company. */\nexport type AccessLevel = \"admin\" | \"customer\" | \"no_access\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassAffiliateOrder =\n\t| \"cached_referrals_count\"\n\t| \"cached_usd_rewards\"\n\t| \"created_at\";\n\n/** An AccessPassAffiliate status */\nexport type AccessPassAffiliateStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\";\n\n/** The types of categories that can be used for AccessPass attachments. */\nexport type AccessPassAttachmentCategories =\n\t| \"affiliate_assets\"\n\t| \"gallery_images\";\n\n/** The conditions that an access pass can have */\nexport type AccessPassConditions = \"has_plans\";\n\n/** Values to filter access passes on */\nexport interface AccessPassFilters {\n\t/**\n\t * Whether or not this creator achieved the 3k in 30 milestone\n\t * @deprecated No longer available.\n\t */\n\tachievedThreeKInThirty?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/**\n\t * Whether or not to only return discoverable access passes.\n\t * @deprecated We only return discoverable access passes now.\n\t */\n\tdiscoverable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The discovery category to filter by\n\t * @deprecated The discovery AI API is no longer used.\n\t */\n\tdiscoveryCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The max global affiliate percentage */\n\tglobalAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tglobalAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The global affiliate status */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** An array, in order, of the category route tree that is being traversed. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The max global affiliate percentage */\n\tmemberAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tmemberAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicAccessPassesOrder>;\n\t/** The max price */\n\tpriceMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min price */\n\tpriceMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Filter to show only passes owned by students of the specified access pass */\n\tstudentsOfAccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Whether or not the access pass' company uses whop four\n\t * @deprecated No longer applies.\n\t */\n\tusesWhopFour?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The onboarding versions for access passes */\nexport type AccessPassOnboardingVersionTypes = \"mar_2025\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassOrder =\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"usd_gmv\"\n\t| \"usd_gmv_30_days\";\n\n/** Input for creating a product highlight */\nexport interface AccessPassProductHighlightInput {\n\t/**\n\t * Text to display to describe the product highlight (max length 250 for\n\t * qualification or benefits, 170 for who this is for, 140 for pricing features).\n\t */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The type of this highlight. */\n\thighlightType: ProductHighlightTypes;\n\t/** The title of the product highlight, if applicable. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Input for creating a social link for an access pass */\nexport interface AccessPassSocialLinkInput {\n\t/** The URL of the social link */\n\turl: Scalars[\"UrlString\"][\"input\"];\n\t/** The website this link is for */\n\twebsite: SocialLinkWebsites;\n}\n\n/** The different types an access pass can be. */\nexport type AccessPassTypes =\n\t/** Api Only */\n\t| \"api_only\"\n\t/** App */\n\t| \"app\"\n\t/** Experience Upsell */\n\t| \"experience_upsell\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type AccessPassesSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** The types of payouts an affiliate can have */\nexport type AffiliatePayoutTypes = \"flat_fee\" | \"percentage\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatePlansSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter affiliate referral logs on */\nexport interface AffiliateReferralLogFilters {\n\t/** Specific affiliates. */\n\taffiliateIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** A specific affiliate type. */\n\taffiliateType?: InputMaybe<AffiliateTypes>;\n\t/** Specific plans. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Specific users. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type AffiliateReferralLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The scope of an affiliate (company based, global, etc.) */\nexport type AffiliateTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Global */\n\t| \"global\"\n\t/** Marketplace */\n\t| \"marketplace\"\n\t/** Passholder */\n\t| \"passholder\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatesSortableColumns =\n\t| \"cached_total_referrals\"\n\t| \"cached_total_rewards\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** Autogenerated input type of AnalyzeAttachment */\nexport interface AnalyzeAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID returned by the direct upload mutation */\n\tdirectUploadId: Scalars[\"String\"][\"input\"];\n\t/** The type of media to analyze */\n\tmediaType: Media;\n\t/** The parts of the multipart upload */\n\tmultipartParts?: InputMaybe<Array<UploadPartInput>>;\n\t/** The ID returned by the direct upload mutation */\n\tmultipartUploadId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The different types of permissions an api key can have. */\nexport type ApiKeyPermissions =\n\t/** Add free days membership */\n\t| \"add_free_days_membership\"\n\t/** Cancel membership */\n\t| \"cancel_membership\"\n\t/** Create checkout request */\n\t| \"create_checkout_request\"\n\t/** Create checkout session */\n\t| \"create_checkout_session\"\n\t/** Create plan */\n\t| \"create_plan\"\n\t/** Create promo code */\n\t| \"create_promo_code\"\n\t/** Create push notification */\n\t| \"create_push_notification\"\n\t/** Create quick link */\n\t| \"create_quick_link\"\n\t/** Create webhook */\n\t| \"create_webhook\"\n\t/** Delete checkout session */\n\t| \"delete_checkout_session\"\n\t/** Delete experience */\n\t| \"delete_experience\"\n\t/** Delete promo code */\n\t| \"delete_promo_code\"\n\t/** Delete webhook */\n\t| \"delete_webhook\"\n\t/** List access passes */\n\t| \"list_access_passes\"\n\t/** List checkout sessions */\n\t| \"list_checkout_sessions\"\n\t/** List customers */\n\t| \"list_customers\"\n\t/** List experiences */\n\t| \"list_experiences\"\n\t/** List licenses */\n\t| \"list_licenses\"\n\t/** List members */\n\t| \"list_members\"\n\t/** List memberships */\n\t| \"list_memberships\"\n\t/** List payment fees */\n\t| \"list_payment_fees\"\n\t/** List payment methods */\n\t| \"list_payment_methods\"\n\t/** List payments */\n\t| \"list_payments\"\n\t/** List plans */\n\t| \"list_plans\"\n\t/** List products */\n\t| \"list_products\"\n\t/** List promo codes */\n\t| \"list_promo_codes\"\n\t/** List reviews */\n\t| \"list_reviews\"\n\t/** List webhooks */\n\t| \"list_webhooks\"\n\t/** Refund payment */\n\t| \"refund_payment\"\n\t/** Retrieve access pass */\n\t| \"retrieve_access_pass\"\n\t/** Retrieve checkout request */\n\t| \"retrieve_checkout_request\"\n\t/** Retrieve checkout session */\n\t| \"retrieve_checkout_session\"\n\t/** Retrieve company */\n\t| \"retrieve_company\"\n\t/** Retrieve customer */\n\t| \"retrieve_customer\"\n\t/** Retrieve experience */\n\t| \"retrieve_experience\"\n\t/** Retrieve member */\n\t| \"retrieve_member\"\n\t/** Retrieve membership */\n\t| \"retrieve_membership\"\n\t/** Retrieve payment */\n\t| \"retrieve_payment\"\n\t/** Retrieve plan */\n\t| \"retrieve_plan\"\n\t/** Retrieve product */\n\t| \"retrieve_product\"\n\t/** Retrieve promo code */\n\t| \"retrieve_promo_code\"\n\t/** Retrieve review */\n\t| \"retrieve_review\"\n\t/** Retrieve webhook */\n\t| \"retrieve_webhook\"\n\t/** Send notification customers */\n\t| \"send_notification_customers\"\n\t/** Send notification members */\n\t| \"send_notification_members\"\n\t/** Terminate membership */\n\t| \"terminate_membership\"\n\t/** Update access pass */\n\t| \"update_access_pass\"\n\t/** Update experience */\n\t| \"update_experience\"\n\t/** Update membership */\n\t| \"update_membership\"\n\t/** Update plan */\n\t| \"update_plan\"\n\t/** Update product */\n\t| \"update_product\"\n\t/** Update promo code */\n\t| \"update_promo_code\"\n\t/** Update webhook */\n\t| \"update_webhook\"\n\t/** Validate license */\n\t| \"validate_license\";\n\n/** The different API versions */\nexport type ApiVersion = \"v1\" | \"v2\" | \"v5\";\n\n/** The different platforms an app build can target. */\nexport type AppBuildPlatforms = \"android\" | \"ios\" | \"web\";\n\n/** The different statuses an AppBuild can be in. */\nexport type AppBuildStatuses = \"approved\" | \"draft\" | \"pending\" | \"rejected\";\n\n/** Image styles for app. */\nexport type AppImageStyles = \"s16\" | \"s24\" | \"s32\" | \"s40\" | \"s48\" | \"s80\";\n\n/** Input for creating a requested permission */\nexport interface AppRequestedPermissionInput {\n\t/** The action that the app will request off of users when a user installs the app. */\n\taction: Scalars[\"String\"][\"input\"];\n\t/** Whether the action is required for the app to function. */\n\tisRequired: Scalars[\"Boolean\"][\"input\"];\n\t/** The reason for requesting the action. */\n\tjustification: Scalars[\"String\"][\"input\"];\n}\n\n/** The status of an experience interface */\nexport type AppStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\"\n\t/** Unlisted */\n\t| \"unlisted\";\n\n/** These are the scopes an app can request on behalf of a user */\nexport type AppValidScopes =\n\t/** Read User */\n\t\"read_user\";\n\n/** The different types of an app view */\nexport type AppViewTypes =\n\t/** Analytics */\n\t| \"analytics\"\n\t/** Dash */\n\t| \"dash\"\n\t/** Dashboard */\n\t| \"dashboard\"\n\t/** Discover */\n\t| \"discover\"\n\t/** Hub */\n\t| \"hub\";\n\n/** The criteria for an application to the marketplace. */\nexport type ApplicationCriteriaIdentifier =\n\t/** App */\n\t| \"app\"\n\t/** Available Plan */\n\t| \"available_plan\"\n\t/** Benefit */\n\t| \"benefit\"\n\t/** Choose Category */\n\t| \"choose_category\"\n\t/** Description */\n\t| \"description\"\n\t/** Gallery Images */\n\t| \"gallery_images\"\n\t/** Headline */\n\t| \"headline\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Setup Payouts */\n\t| \"setup_payouts\"\n\t/** Title */\n\t| \"title\"\n\t/** Visibility */\n\t| \"visibility\";\n\n/** The types of records that an attachment can be attached to */\nexport type AttachableRecords =\n\t| \"abuse_report\"\n\t| \"access_pass\"\n\t| \"access_pass_collection\"\n\t| \"app\"\n\t| \"assessment_question\"\n\t| \"automated_messages_config\"\n\t| \"bot\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"competition_prize\"\n\t| \"content_reward_campaign\"\n\t| \"content_reward_submission\"\n\t| \"course_lesson\"\n\t| \"dispute\"\n\t| \"dms_post\"\n\t| \"experience\"\n\t| \"forum_post\"\n\t| \"information_request_item\"\n\t| \"resolution_event_upload\"\n\t| \"review\"\n\t| \"review_report\"\n\t| \"user\";\n\n/** Input for an attachment */\nexport interface AttachmentInput {\n\t/**\n\t * This ID should be used the first time you upload an attachment. It is the ID\n\t * of the direct upload that was created when uploading the file to S3 via the\n\t * mediaDirectUpload mutation.\n\t */\n\tdirectUploadId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The ID of an existing attachment object. Use this when updating a resource and\n\t * keeping a subset of the attachments. Don't use this unless you know what you're doing.\n\t */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Which columns can be used to sort. */\nexport type AuditLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The possible 2FA authentication types. */\nexport type AuthenticationMethods = \"authenticator\" | \"sms\";\n\n/** Valid resource types for authorizations */\nexport type AuthorizationResourceTypes =\n\t/** An app */\n\t| \"app\"\n\t/** A company */\n\t| \"company\"\n\t/** An experience */\n\t| \"experience\"\n\t/** A product */\n\t| \"product\";\n\n/** Possible roles an authorized user can have */\nexport type AuthorizedUserRoles =\n\t/** Admin */\n\t| \"admin\"\n\t/** App Manager */\n\t| \"app_manager\"\n\t/** Manager */\n\t| \"manager\"\n\t/** Moderator */\n\t| \"moderator\"\n\t/** Owner */\n\t| \"owner\"\n\t/** Sales Manager */\n\t| \"sales_manager\"\n\t/** Support */\n\t| \"support\";\n\n/** The different categories of automated messages triggers. */\nexport type AutomatedMessagesTriggerCategories = \"access_pass\" | \"app\";\n\n/** Image styles for avatar. */\nexport type AvatarImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** Balance reservation reservation types. */\nexport type BalanceReservationReservationTypes = \"bnpl\" | \"regular\";\n\n/** The reasons for banning a user */\nexport type BanReasons =\n\t| \"botting_content_rewards\"\n\t| \"botting_negative_reviews\"\n\t| \"control_center_blocked_country\"\n\t| \"harassment\"\n\t| \"other\"\n\t| \"spamming\";\n\n/** Autogenerated input type of BanUser */\nexport interface BanUserInput {\n\t/** The ID of the access pass to ban the user from */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom reason for banning the user */\n\tcustomReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the feed to delete messages from */\n\tdeleteMessagesInFeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The reason for banning the user */\n\treason?: InputMaybe<BanReasons>;\n\t/** The ID of the user to ban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The reason why a specific payment was billed */\nexport type BillingReasons =\n\t/** Manual */\n\t| \"manual\"\n\t/** One Time */\n\t| \"one_time\"\n\t/** Subscription */\n\t| \"subscription\"\n\t/** Subscription Create */\n\t| \"subscription_create\"\n\t/** Subscription Cycle */\n\t| \"subscription_cycle\"\n\t/** Subscription Update */\n\t| \"subscription_update\";\n\n/** The BNPL (Buy Now Pay Later) providers for a company */\nexport type BnplProvider =\n\t| \"afterpay_clearpay\"\n\t| \"klarna\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"zip\";\n\n/** Values to filter bounties on */\nexport interface BountyFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Ability to filter bounties by access passes in specific marketplace categories. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether to only include bounties that are not whop bounties. */\n\tnonWhopOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicBountiesOrder>;\n}\n\n/** The type of update an event is. */\nexport type BusinessActivityEventTypes =\n\t/** Member Canceled */\n\t| \"member_canceled\"\n\t/** Member Churned */\n\t| \"member_churned\"\n\t/** Member Joined */\n\t| \"member_joined\"\n\t/** New Dispute */\n\t| \"new_dispute\"\n\t/** New Marketplace Sale */\n\t| \"new_marketplace_sale\"\n\t/** New Payment */\n\t| \"new_payment\"\n\t/** New Waitlist Entry */\n\t| \"new_waitlist_entry\";\n\n/** Image styles for business_affiliate. */\nexport type BusinessAffiliateImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** The different business types a company can be. */\nexport type BusinessTypes =\n\t/** Agency */\n\t| \"agency\"\n\t/** Brick And Mortar */\n\t| \"brick_and_mortar\"\n\t/** Coaching */\n\t| \"coaching\"\n\t/** Coaching And Courses */\n\t| \"coaching_and_courses\"\n\t/** Community */\n\t| \"community\"\n\t/** Course */\n\t| \"course\"\n\t/** Education Program */\n\t| \"education_program\"\n\t/** Events */\n\t| \"events\"\n\t/** Newsletter */\n\t| \"newsletter\"\n\t/** Other */\n\t| \"other\"\n\t/** Paid Group */\n\t| \"paid_group\"\n\t/** Physical Products */\n\t| \"physical_products\"\n\t/** Saas */\n\t| \"saas\"\n\t/** Software */\n\t| \"software\";\n\n/** The modes for the buyer fee. */\nexport type BuyerFeeMode = \"use_account_fee\" | \"use_experiment_fee\";\n\n/** The different reasons a user can choose for why they are canceling their membership. */\nexport type CancelOptions =\n\t| \"bad_experience\"\n\t| \"missing_features\"\n\t| \"other\"\n\t| \"switching\"\n\t| \"technical_issues\"\n\t| \"testing\"\n\t| \"too_expensive\";\n\n/** The over-arching state of the resolution. */\nexport type CaseStates = \"closed\" | \"open\";\n\n/** Autogenerated input type of ChangeCardMyMembership */\nexport interface ChangeCardMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n\t/** The URL you want to take the user to when they return */\n\tredirectUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\n/** The different card funding methods a charge can have. */\nexport type ChargeCardFunding =\n\t/** Credit */\n\t| \"credit\"\n\t/** Debit */\n\t| \"debit\"\n\t/** Prepaid */\n\t| \"prepaid\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The different risk levels a charge can have. */\nexport type ChargeOutcomeRiskLevels =\n\t/** Elevated */\n\t| \"elevated\"\n\t/** Highest */\n\t| \"highest\"\n\t/** Normal */\n\t| \"normal\"\n\t/** Not Assessed */\n\t| \"not_assessed\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** Autogenerated input type of ChargeUser */\nexport interface ChargeUserInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount to charge the user */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency to charge in */\n\tcurrency: Currencies;\n\t/** The description of the charge. Maximum 200 characters. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Additional metadata for the charge */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to charge */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The possible statuses for a charge user response */\nexport type ChargeUserResponseStatus =\n\t/** The charge requires additional action from the user. */\n\t| \"needs_action\"\n\t/** The charge was successful */\n\t| \"success\";\n\n/** Chart interval (period). */\nexport type ChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** Input for a chat feed */\nexport interface ChatFeedInput {\n\t/** Whether or not media is banned in this chat */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this chat */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this chat */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The unique identifier for the feed */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this chat */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n\t/** Who can react on this chat */\n\twhoCanReact?: InputMaybe<WhoCanReactTypes>;\n}\n\n/** The type of checkout session being made */\nexport type CheckoutSessionTypes = \"in_app_purchase\" | \"purchase\";\n\n/** The state of the Coinbase Commerce connection. */\nexport type CoinbaseCommerceStatuses =\n\t/** The Coinbase commerce connection is broken and needs to be fixed with a new API key. */\n\t| \"broken\"\n\t/** The Coinbase Commerce account is missing a settlement address. This needs to be set from the coinbase dashboard. */\n\t| \"missing_settlement_address\"\n\t/** The Coinbase commerce connection is setup and ready to be used. */\n\t| \"setup\"\n\t/** The webhook connection has not been tested / verified. */\n\t| \"webhook_not_verified\";\n\n/** The ways a relation of Companies can be ordered */\nexport type CompaniesOrder = \"created_at\" | \"id\" | \"total_memberships_earnings\";\n\n/** The types of categories that can be used for company attachments. */\nexport type CompanyAttachmentCategories = \"gallery_images\";\n\n/** Image styles for company. */\nexport type CompanyImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** Attributes collected during company onboarding */\nexport interface CompanyOnboardingPlanOptions {\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** The method by which the plan is released to the public. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The visibility of the plan. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** DEPRECATED: The different types a company can be. */\nexport type CompanyTypes =\n\t| \"app\"\n\t| \"bot\"\n\t| \"community\"\n\t| \"nft\"\n\t| \"other\"\n\t| \"proxy\"\n\t| \"server\";\n\n/** The different types a competition can be */\nexport type CompetitionMetricTypes =\n\t/** Earnings Inside Access Pass */\n\t| \"earnings_inside_access_pass\"\n\t/** Global Earnings */\n\t| \"global_earnings\";\n\n/** The different types a competition prize can be */\nexport type CompetitionPrizeTypes =\n\t/** Cash */\n\t| \"cash\"\n\t/** Custom */\n\t| \"custom\";\n\n/** Statuses for connected accounts */\nexport type ConnectedAccountStatuses =\n\t| \"connected\"\n\t| \"needs_completion\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Different types of how a company's marketplace card should display its pricing / access. */\nexport type ConnectedAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The ordering options for content rewards */\nexport type ContentRewardsCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"expires_at\"\n\t| \"pending_submissions_count\"\n\t| \"submissions_count\"\n\t| \"total_budget\";\n\n/** The different statuses content reward campaigns can be assigned to */\nexport type ContentRewardsCampaignStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Pending */\n\t| \"pending\";\n\n/** Values to filter content rewards on */\nexport interface ContentRewardsCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The ID to filter campaigns for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different categories content reward campaigns can be assigned to */\nexport type ContentRewardsCategory =\n\t/** Brand */\n\t| \"brand\"\n\t/** Creator */\n\t| \"creator\"\n\t/** E Commerce */\n\t| \"e_commerce\"\n\t/** Entertainment */\n\t| \"entertainment\"\n\t/** Influencer */\n\t| \"influencer\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Music */\n\t| \"music\"\n\t/** Musician */\n\t| \"musician\"\n\t/** Other */\n\t| \"other\"\n\t/** Personal Brand */\n\t| \"personal_brand\"\n\t/** Podcast */\n\t| \"podcast\"\n\t/** Products */\n\t| \"products\"\n\t/** Software */\n\t| \"software\"\n\t/** Stream */\n\t| \"stream\"\n\t/** Streamer */\n\t| \"streamer\";\n\n/** The different types of content accepted by a content reward campaign */\nexport type ContentRewardsContentType =\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Faceless */\n\t| \"faceless\"\n\t/** Other */\n\t| \"other\"\n\t/** Ugc */\n\t| \"ugc\";\n\n/** The different platforms that content rewards submissions can be for */\nexport type ContentRewardsPlatform =\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Tiktok */\n\t| \"tiktok\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** The ordering options for public content rewards campaigns */\nexport type ContentRewardsPublicCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"budget_left\"\n\t| \"created_at\"\n\t| \"expires_at\";\n\n/** Values to filter public content rewards on */\nexport interface ContentRewardsPublicCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsPublicCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different results of submission analysis */\nexport type ContentRewardsSubmissionAnalysisResults =\n\t/** Fail */\n\t| \"fail\"\n\t/** Pass */\n\t| \"pass\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The reasons a content rewards submission can be flagged for. */\nexport type ContentRewardsSubmissionFlagReasons =\n\t/** Engagement Ratio */\n\t| \"engagement_ratio\"\n\t/** Ml Analysis */\n\t| \"ml_analysis\"\n\t/** Reported Botter */\n\t| \"reported_botter\"\n\t/** Text Analysis */\n\t| \"text_analysis\"\n\t/** Video Analysis */\n\t| \"video_analysis\"\n\t/** View Acceleration */\n\t| \"view_acceleration\"\n\t/** View Spike */\n\t| \"view_spike\";\n\n/** The different statuses content reward submissions can be assigned to */\nexport type ContentRewardsSubmissionStatus =\n\t/** Approved */\n\t| \"approved\"\n\t/** Flagged */\n\t| \"flagged\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsSubmissionViewsChartConfigInput {\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface ContentRewardsSubmissionsFilters {\n\t/**\n\t * The type of attachment required on the submission\n\t * @deprecated No longer available\n\t */\n\tattachmentType?: InputMaybe<FileAttachmentTypes>;\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter submissions by date created after */\n\tcreatedAtAfter?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter submissions by date created before */\n\tcreatedAtBefore?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** Whether to exclude banned users from the results */\n\texcludeBannedUsers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the submission was flagged by AI */\n\tflaggedByAi?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<ContentRewardsSubmissionsOrder>;\n\t/** Whether the submission has reached the minimum payout */\n\treachedMinimumPayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n\t/** Filter submissions by partial username match */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The result of the video analysis */\n\tvideoAnalysisResult?: InputMaybe<ContentRewardsSubmissionAnalysisResults>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type ContentRewardsSubmissionsOrder =\n\t| \"created_at\"\n\t| \"total_paid\"\n\t| \"total_view_count\";\n\n/** Which columns can be used to sort. */\nexport type ContentRewardsSubmissionsSortableColumns =\n\t| \"cached_total_paid\"\n\t| \"cached_total_view_count\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"status\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsViewsChartConfigInput {\n\t/** The ID of the campaign to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience to filter by */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The available types for an assessment question */\nexport type CoursesAssessmentQuestionTypes =\n\t/** Multiple choice */\n\t| \"multiple_choice\"\n\t/** Multiple select */\n\t| \"multiple_select\"\n\t/** Short answer */\n\t| \"short_answer\"\n\t/** True false */\n\t| \"true_false\";\n\n/** Autogenerated input type of CreateAccessPass */\nexport interface CreateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the access pass for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A written description of the access pass. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An array of experience IDs that this pass has */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The URLs of the images to upload to the access pass. */\n\timageUrls?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The ID of the marketplace category to assign to the access pass. */\n\tmarketplaceCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The details to assign an autogenerated plan. */\n\tplanOptions?: InputMaybe<CompanyOnboardingPlanOptions>;\n\t/** The product highlights for the access pass. */\n\tproductHighlights?: InputMaybe<Array<AccessPassProductHighlightInput>>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The social links for the access pass. */\n\tsocialLinks?: InputMaybe<Array<AccessPassSocialLinkInput>>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** Whether or not customers can upgrade to different plans on this access pass. */\n\tupgradeable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of CreateAffiliate */\nexport interface CreateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that the affiliate will be created for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The fee that the affiliate will receive for each referral (either a percentage or a flat fee). */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** Whether the affiliate will only receive one payout. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the fee is a percentage or a flat fee. */\n\tpayoutType: PayoutTypes;\n\t/** The ID of the plan that the affiliate can refer. */\n\tplanId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The username of the user who will become an affiliate */\n\tusername: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAgentUser */\nexport interface CreateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateAppBuild */\nexport interface CreateAppBuildInput {\n\t/** The ID of the app to create a build for. By default the current app from the api key is used. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Attachment input for the app build file. This should be an upload in .zip\n\t * format. The zip should contain at least one main_js_bundle.hbc file and\n\t * optionally an assets folder next to it.\n\t */\n\tattachment: AttachmentInput;\n\t/**\n\t * Checksum of the app build file. This is generated by the client and used to\n\t * verify the integrity of the file that is submitted when un-packaged later on a device.\n\t */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The platform of the app build (ios, android, web) */\n\tplatform: AppBuildPlatforms;\n\t/**\n\t * Supported app view types for the app build. A build can specify multiple view\n\t * types, but should only specify ones that its code supports.\n\t */\n\tsupportedAppViewTypes?: InputMaybe<Array<AppViewTypes>>;\n}\n\n/** Autogenerated input type of CreateApp */\nexport interface CreateAppInput {\n\t/** The base URL of the app to be created */\n\tbaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the app for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the app to be created */\n\tname: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAssessmentQuestion */\nexport interface CreateAssessmentQuestionInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The correct answer to the assessment question */\n\tcorrectAnswer: Scalars[\"String\"][\"input\"];\n\t/** The ID of the lesson to create the assessment question in */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n\t/** The text of the question being asked */\n\tquestionText: Scalars[\"String\"][\"input\"];\n\t/** The type of the assessment question */\n\tquestionType: CoursesAssessmentQuestionTypes;\n}\n\n/** Autogenerated input type of CreateChapter */\nexport interface CreateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to create the chapter in */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateChat */\nexport interface CreateChatInput {\n\t/** The ID of the access pass (whop) to attach the chat experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new chat experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the chat experience to be created. After this timestamp, the experience disappears. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the chat experience to be created, shown to users in the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the chat experience. This allows you to\n\t * require paid access for the chat within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to send messages inside the chat. Select 'admin' if you\n\t * only want the team members to message, or select 'everyone' if any member of\n\t * the whop can send messages.\n\t */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateCheckoutSession */\nexport interface CreateCheckoutSessionInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The metadata to use for the checkout session */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The ID of the plan to use for the checkout session */\n\tplanId: Scalars[\"ID\"][\"input\"];\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateCompanyMutedUser */\nexport interface CreateCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The time the user is muted until, in milliseconds. If not provided, the user will be muted indefinitely */\n\tmutedUntil?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user to mute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateCourse */\nexport interface CreateCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The cover image URL of the course */\n\tcoverImage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the experience to create the course in */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The tagline of the course */\n\ttagline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the course */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateForum */\nexport interface CreateForumInput {\n\t/** The ID of the access pass (whop) to attach the experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new forum experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the experience to be created. After this timestamp, the experience is deleted. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the forum experience to be created, shown to the user on the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the forum experience. This allows you to\n\t * require paid access for the forum within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to create posts inside the forum. Select 'admin' if you\n\t * only want the team members to post, or select 'everyone' if any member of the\n\t * whop can post. Default value is 'admins'.\n\t */\n\twhoCanPost?: InputMaybe<ForumWhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateForumPost */\nexport interface CreateForumPostInput {\n\t/** The attachments for this post, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the post. This is the main body of the post. Hidden if paywalled. */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the forum experience to send the message in. This will look like exp_xxxx. */\n\tforumExperienceId: Scalars[\"String\"][\"input\"];\n\t/**\n\t * This is used to determine if the post should be sent as a 'mention'\n\t * notification to all of the users who are in the experience. This means that\n\t * anyone with 'mentions' enabled will receive a notification about this post.\n\t */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the parent post, if applicable (Used when making a comment) */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallAmount?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The currency to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallCurrency?: InputMaybe<Currencies>;\n\t/** Whether the post should be pinned */\n\tpinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The poll for this post. A poll lets you collect responses to a multiple choice question. */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The title of the post. Visible if paywalled. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateInvoice */\nexport interface CreateInvoiceInput {\n\t/** Whether or not to charge the customer a buyer fee. */\n\tchargeBuyerFee?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The method of collection for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tcollectionMethod: InvoiceCollectionMethods;\n\t/** The company ID to create this invoice for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The name of the customer to create this invoice for. This is required if you\n\t * want to create an invoice for a customer who does not have a member of your company yet.\n\t */\n\tcustomerName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The date the invoice is due, if applicable. */\n\tdueDate: Scalars[\"Timestamp\"][\"input\"];\n\t/**\n\t * The email address to create this invoice for. This is required if you want to\n\t * create an invoice for a user who does not have a member of your company yet.\n\t */\n\temailAddress?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The member ID to create this invoice for. Include this if you want to create\n\t * an invoice for an existing member. If you do not have a member ID, you must\n\t * provide an email_address and customer_name.\n\t */\n\tmemberId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The payment token ID to use for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tpaymentTokenId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The properties of the plan to create for this invoice. */\n\tplan: InvoicePlanInput;\n\t/**\n\t * The properties of the access pass to create for this invoice. Include this if\n\t * you want to create an invoice for a new product.\n\t */\n\tproduct?: InputMaybe<InvoiceAccessPassInput>;\n\t/** The access pass ID to create this invoice for. Include this if you want to create an invoice for an existing product. */\n\tproductId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateLesson */\nexport interface CreateLessonInput {\n\t/** The ID of the chapter to create the lesson in */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The type of the lesson */\n\tlessonType: LessonTypes;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreatePromoCode */\nexport interface CreatePromoCodeInput {\n\t/** The access pass to lock the promo code to, if any. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount off (% or flat amount) for the promo. */\n\tamountOff: Scalars[\"StringFloat\"][\"input\"];\n\t/** The monetary currency of the promo code. */\n\tbaseCurrency: Currencies;\n\t/** Restricts promo use to only users who have churned from the company before. */\n\tchurnedUsersOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The specific code used to apply the promo at checkout. */\n\tcode: Scalars[\"String\"][\"input\"];\n\t/** The id of the company to create the promo code for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether this promo code is for existing memberships only (cancelations) */\n\texistingMembershipsOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The date/time of when the promo expires. */\n\texpirationDatetime?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Restricts promo use to only users who have never purchased from the company before. */\n\tnewUsersOnly: Scalars[\"Boolean\"][\"input\"];\n\t/** The number of billing cycles the promo is applied for. */\n\tnumberOfIntervals: Scalars[\"Int\"][\"input\"];\n\t/** Restricts promo use to only be applied once per customer. */\n\tonePerCustomer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The type (% or flat amount) of the promo. */\n\tpromoType: PromoTypes;\n\t/** The quantity limit on the number of uses. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not the promo code should have unlimited stock. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateWebhook */\nexport interface CreateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The resource to create the webhook for. By default this will use current company */\n\tresourceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to send the webhook to. */\n\turl: Scalars[\"UrlString\"][\"input\"];\n}\n\n/** Cancelation discounts for creator dashboard */\nexport type CreatorDashboardCancelationDiscounts =\n\t| \"canceled\"\n\t| \"used_discount_and_canceled\"\n\t| \"used_discount_and_did_not_cancel\";\n\n/** The configuration for a chart. */\nexport interface CreatorDashboardChartConfigInput {\n\t/** The access pass ids (tags) to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<CreatorDashboardChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Chart interval (period). */\nexport type CreatorDashboardChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** The different types of activity for a credit transaction */\nexport type CreditTransactionActivityTypes =\n\t| \"deductions\"\n\t| \"deposits\"\n\t| \"withdrawals\";\n\n/** Values to filter the credits on. */\nexport interface CreditTransactionFilters {\n\t/** Filter by activity type */\n\tactivityType?: InputMaybe<CreditTransactionActivityTypes>;\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Filter by status */\n\tstatuses?: InputMaybe<Array<CreditTransactionStatuses>>;\n}\n\n/** The statuses a credit transaction can have */\nexport type CreditTransactionStatuses =\n\t/** Finalized */\n\t| \"finalized\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The reasons for a credit transaction transfer */\nexport type CreditTransactionTransferReasons =\n\t| \"bounty_payout\"\n\t| \"content_reward_fixed_payout\"\n\t| \"content_reward_payout\"\n\t| \"content_reward_return\"\n\t| \"creator_to_creator\"\n\t| \"creator_to_user\"\n\t| \"pool_top_up\"\n\t| \"team_member_payout\"\n\t| \"user_to_creator\"\n\t| \"user_to_user\"\n\t| \"wadmin_transferred_funds\";\n\n/** The statuses a credit transaction transfer can have */\nexport type CreditTransactionTransferStatuses = \"completed\";\n\n/** The type a credit transaction transfer can have */\nexport type CreditTransactionTransferTypes =\n\t/** Admin */\n\t| \"admin\"\n\t/** User */\n\t| \"user\";\n\n/** Which columns can be used to sort. */\nexport type CreditTransactionTransfersSortableColumns = \"amount\" | \"created_at\";\n\n/** The eligible networks for a CryptoWallet */\nexport type CryptoWalletNetworks =\n\t/** Bitcoin */\n\t| \"bitcoin\"\n\t/** Ethereum */\n\t| \"ethereum\"\n\t/** Solana */\n\t| \"solana\";\n\n/** The available currencies on the platform */\nexport type Currencies =\n\t| \"aed\"\n\t| \"all\"\n\t| \"amd\"\n\t| \"ape\"\n\t| \"ars\"\n\t| \"aud\"\n\t| \"bam\"\n\t| \"bgn\"\n\t| \"bhd\"\n\t| \"bob\"\n\t| \"brl\"\n\t| \"bsd\"\n\t| \"btc\"\n\t| \"cad\"\n\t| \"chf\"\n\t| \"clp\"\n\t| \"cop\"\n\t| \"crc\"\n\t| \"czk\"\n\t| \"dkk\"\n\t| \"dop\"\n\t| \"dzd\"\n\t| \"egp\"\n\t| \"etb\"\n\t| \"eth\"\n\t| \"eur\"\n\t| \"gbp\"\n\t| \"ghs\"\n\t| \"gmd\"\n\t| \"gtq\"\n\t| \"gyd\"\n\t| \"hkd\"\n\t| \"huf\"\n\t| \"idr\"\n\t| \"ils\"\n\t| \"inr\"\n\t| \"jmd\"\n\t| \"jod\"\n\t| \"jpy\"\n\t| \"kes\"\n\t| \"khr\"\n\t| \"krw\"\n\t| \"kwd\"\n\t| \"lkr\"\n\t| \"mad\"\n\t| \"mdl\"\n\t| \"mga\"\n\t| \"mkd\"\n\t| \"mnt\"\n\t| \"mop\"\n\t| \"mur\"\n\t| \"mxn\"\n\t| \"myr\"\n\t| \"nad\"\n\t| \"ngn\"\n\t| \"nok\"\n\t| \"nzd\"\n\t| \"omr\"\n\t| \"pen\"\n\t| \"php\"\n\t| \"pkr\"\n\t| \"pln\"\n\t| \"pyg\"\n\t| \"qar\"\n\t| \"ron\"\n\t| \"rsd\"\n\t| \"rub\"\n\t| \"rwf\"\n\t| \"sar\"\n\t| \"sek\"\n\t| \"sgd\"\n\t| \"thb\"\n\t| \"tnd\"\n\t| \"try\"\n\t| \"ttd\"\n\t| \"twd\"\n\t| \"tzs\"\n\t| \"usd\"\n\t| \"uyu\"\n\t| \"uzs\"\n\t| \"vnd\"\n\t| \"xcd\"\n\t| \"xof\"\n\t| \"zar\";\n\n/** The different types of custom CTAs that can be selected. */\nexport type CustomCtas =\n\t/** Apply Now */\n\t| \"apply_now\"\n\t/** Call Now */\n\t| \"call_now\"\n\t/** Complete Order */\n\t| \"complete_order\"\n\t/** Contact Us */\n\t| \"contact_us\"\n\t/** Donate Now */\n\t| \"donate_now\"\n\t/** Get Access */\n\t| \"get_access\"\n\t/** Get Offer */\n\t| \"get_offer\"\n\t/** Join */\n\t| \"join\"\n\t/** Order Now */\n\t| \"order_now\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Shop Now */\n\t| \"shop_now\"\n\t/** Sign Up */\n\t| \"sign_up\"\n\t/** Subscribe */\n\t| \"subscribe\";\n\nexport interface CustomFieldInput {\n\t/** The type of the custom field. */\n\tfieldType: CustomFieldTypes;\n\t/** The ID of the custom field (if being updated) */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the custom field. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/** The order of the field. */\n\torder?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The placeholder value of the field. */\n\tplaceholder?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the field is required. */\n\trequired?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The type of the custom field. */\nexport type CustomFieldTypes =\n\t/** Text */\n\t\"text\";\n\n/** Autogenerated input type of DeleteAccessPass */\nexport interface DeleteAccessPassInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID (tag) of the access pass to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteAssessmentQuestionImage */\nexport interface DeleteAssessmentQuestionImageInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteChapter */\nexport interface DeleteChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteCompanyMutedUser */\nexport interface DeleteCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unmute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLessonAttachment */\nexport interface DeleteLessonAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLesson */\nexport interface DeleteLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeletePromoCode */\nexport interface DeletePromoCodeInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID of the promo code to archive. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteWebhook */\nexport interface DeleteWebhookInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the webhook to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The type of device a user can use to access Whop */\nexport type Device = \"android\" | \"desktop_web\" | \"ios\" | \"mobile_web\";\n\n/** The status of the direct message. */\nexport type DirectMessageStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** Autogenerated input type of DirectUpload */\nexport interface DirectUploadInput {\n\t/** The size of the file in bytes */\n\tbyteSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tbyteSizeV2?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\t/** The checksum of the file */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content type of the file */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The filename of the file */\n\tfilename: Scalars[\"String\"][\"input\"];\n\t/** The metadata of the file */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not to use multipart upload. The file must be larger than 5MB */\n\tmultipart?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of record to attach the file to */\n\trecord: AttachableRecords;\n}\n\n/** The direction of the sort. */\nexport type Direction = \"asc\" | \"desc\";\n\n/** Image styles for discord_account. */\nexport type DiscordAccountImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** The available discover statuses to choose from. */\nexport type DiscoverStatuses =\n\t/** Live Discover */\n\t| \"live_discover\"\n\t/** Not Available */\n\t| \"not_available\";\n\n/** The dispute risk levels of a ledger account, derived from the ledger account stat */\nexport type DisputeRiskLevels =\n\t/** At Risk */\n\t| \"at_risk\"\n\t/** High */\n\t| \"high\"\n\t/** Low */\n\t| \"low\"\n\t/** Medium */\n\t| \"medium\"\n\t/** Removal */\n\t| \"removal\";\n\n/** The possible statuses of a dispute */\nexport type DisputeStatuses =\n\t/** Closed */\n\t| \"closed\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Needs Response */\n\t| \"needs_response\"\n\t/** Other */\n\t| \"other\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Warning Closed */\n\t| \"warning_closed\"\n\t/** Warning Needs Response */\n\t| \"warning_needs_response\"\n\t/** Warning Under Review */\n\t| \"warning_under_review\"\n\t/** Won */\n\t| \"won\";\n\n/** Which columns can be used to sort. */\nexport type DisputesSortableColumns =\n\t| \"amount\"\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"needs_response_by\";\n\n/** Sort options for DM channels */\nexport type DmsChannelsSortTypes =\n\t| \"created_at\"\n\t| \"custom_name\"\n\t| \"last_post_sent_at\"\n\t| \"query\";\n\n/** The input to create a DMs feed */\nexport interface DmsFeedInput {\n\t/** The collection ID for the feed */\n\tcollectionIdentifier?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The custom name for the feed */\n\tcustomName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The unique identifier for the entity */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Input for a DMs feed member */\nexport interface DmsFeedMemberInput {\n\t/** The ID of the DM channel */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Timestamp when the member last viewed the channel (in milliseconds since Unix epoch) */\n\tlastViewedAt?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The notification preference for this member (all, mentions, none) */\n\tnotificationPreference?: InputMaybe<DmsFeedMemberNotificationPreferences>;\n\t/** The status of the member (active, inactive, banned) */\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The notification preferences for a DMs feed member */\nexport type DmsFeedMemberNotificationPreferences =\n\t/** All */\n\t| \"all\"\n\t/** Mentions */\n\t| \"mentions\"\n\t/** None */\n\t| \"none\";\n\n/** The statuses of a DMs feed member */\nexport type DmsFeedMemberStatuses =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of DMs feeds */\nexport type DmsFeedTypes = \"direct_message\" | \"group_chat\";\n\n/** The input to create a post in a feed */\nexport interface DmsPostInput {\n\t/** The attachments for this message */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** The content of the post */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the DM channel this post belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this post belongs to */\n\tfeedType: FeedTypes;\n\t/**\n\t * The file attachments for this message\n\t * @deprecated Use attachments instead\n\t */\n\tfileAttachments?: InputMaybe<Array<FileAttachmentInput>>;\n\t/** The GIFs attached to this message */\n\tgifs?: InputMaybe<Array<GifInput>>;\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether everyone was mentioned in the post */\n\tisEveryoneMentioned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the post is pinned */\n\tisPinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The link embeds for this message */\n\tlinkEmbeds?: InputMaybe<Array<LinkEmbedInput>>;\n\t/** The IDs of the users mentioned in the post */\n\tmentionedUserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The ID of the parent post, if applicable */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The poll for this message */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The ID of the message this is replying to, if applicable */\n\treplyingToPostId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The rich content of the post */\n\trichContent?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n}\n\n/** The types of post */\nexport type DmsPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** The types of earnings on the platform */\nexport type EarningsReportPeriods =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The types of earnings on the platform */\nexport type EarningsTypes =\n\t/** Affiliate Payment */\n\t| \"affiliate_payment\"\n\t/** Bounty Payout */\n\t| \"bounty_payout\"\n\t/** Company Referral */\n\t| \"company_referral\"\n\t/** Content Reward Fixed Payout */\n\t| \"content_reward_fixed_payout\"\n\t/** Content Reward Payout */\n\t| \"content_reward_payout\"\n\t/** Creator To Creator */\n\t| \"creator_to_creator\"\n\t/** Creator To User */\n\t| \"creator_to_user\"\n\t/** Membership Referral */\n\t| \"membership_referral\"\n\t/** Payment Payout */\n\t| \"payment_payout\"\n\t/** Team Member Payout */\n\t| \"team_member_payout\"\n\t/** User To Creator */\n\t| \"user_to_creator\"\n\t/** User To User */\n\t| \"user_to_user\";\n\n/** The type of entity to fetch */\nexport type EntityTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Dms Feed Member */\n\t| \"dms_feed_member\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Forum Post */\n\t| \"forum_post\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Muted User */\n\t| \"muted_user\"\n\t/** Reaction */\n\t| \"reaction\";\n\n/** Filters for the entries table. */\nexport interface EntriesFiltersInput {\n\t/** The access pass IDs to filter the entries by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the entries by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The plan IDs to filter the entries by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the entries by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the entries by */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** Which columns can be used to sort. */\nexport type EntriesSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter entries on */\nexport interface EntryFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What the results should be ordered by. */\n\torder?: InputMaybe<EntryOrder>;\n\t/** A specific status */\n\tstatus?: InputMaybe<EntryStatus>;\n\t/** A list of statuses */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** The order to sort the entries by */\nexport type EntryOrder =\n\t| \"created_at\"\n\t| \"member_discord\"\n\t| \"member_username\"\n\t| \"selected\";\n\n/** The status of an entry to a waitlist or raffle. */\nexport type EntryStatus = \"any\" | \"approved\" | \"denied\" | \"pending\";\n\n/** An entry can either be a watlist or raffle */\nexport type EntryTypes = \"raffle\" | \"waitlist\";\n\n/** The different access levels for experiences (PUBLIC IS NEVER USED ANYMORE). */\nexport type ExperienceAccessLevels = \"private\" | \"public\";\n\n/** The type of content that this experience card contains */\nexport type ExperienceActivityCardTypes =\n\t| \"availability\"\n\t| \"booking\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"calendar_bookings_availability\"\n\t| \"calendar_bookings_booking\"\n\t| \"campaign\"\n\t| \"content\"\n\t| \"content_rewards_campaign\"\n\t| \"content_rewards_submission\"\n\t| \"course\"\n\t| \"dms_post\"\n\t| \"event\"\n\t| \"events_event\"\n\t| \"events_rsvp\"\n\t| \"feed_dms_post\"\n\t| \"feed_forum_post\"\n\t| \"feed_livestream_feed\"\n\t| \"forum_post\"\n\t| \"livestream_feed\"\n\t| \"rsvp\"\n\t| \"spin\"\n\t| \"submission\"\n\t| \"wheel\"\n\t| \"wheel_spin\"\n\t| \"wheel_wheel\";\n\n/** Values to filter plans on */\nexport interface ExperienceFilters {\n\t/**\n\t * The access level to filter on.\n\t * @deprecated You can't filter by access level anymore\n\t */\n\taccessLevel?: InputMaybe<ExperienceAccessLevels>;\n\t/** The ID of the access pass to filter on. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience interface to filter on. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of experience.. */\n\texperienceType?: InputMaybe<ExperienceTypes>;\n\t/** Either includes or excludes experiences on a given access pass. */\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The query to search for. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The types of links that can be generated. */\nexport type ExperienceLinkModes = \"iframe_link\" | \"link\";\n\n/** The different types of experiences that can be created. */\nexport type ExperienceTypes =\n\t/** Has Interface */\n\t\"has_interface\";\n\n/** The type of feed to fetch from */\nexport type FeedTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Universal Post */\n\t| \"universal_post\"\n\t/** User */\n\t| \"user\";\n\n/** Input for a file attachment */\nexport interface FileAttachmentInput {\n\t/** The aspect ratio of the image, if applicable */\n\taspectRatio?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The type of the attachment (e.g., image, video) */\n\tattachmentType: FileAttachmentTypes;\n\t/** The blurred data URL for image preview */\n\tblurUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The attachment's content type (e.g., image/jpg, video/mp4) */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the file */\n\tfileName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tfileSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The URL to access the file */\n\tfileUrl: Scalars[\"String\"][\"input\"];\n\t/** The height of the image */\n\theight?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the file attachment */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to access the thumbnail */\n\tthumbnailUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The width of the image */\n\twidth?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different moderation results for a file attachment. */\nexport type FileAttachmentModerationResultsTypes =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** The types of supported file attachments */\nexport type FileAttachmentTypes =\n\t/** Audio */\n\t| \"audio\"\n\t/** File */\n\t| \"file\"\n\t/** Image */\n\t| \"image\"\n\t/** Unknown */\n\t| \"unknown\"\n\t/** Video */\n\t| \"video\";\n\n/** The duration of a FlashSale */\nexport type FlashSaleDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\";\n\n/** The status of a FlashSale */\nexport type FlashSaleStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Draft */\n\t| \"draft\";\n\n/** Email notification preference option for a forum feed */\nexport type ForumEmailNotificationPreferences =\n\t| \"all_admin_posts\"\n\t| \"none\"\n\t| \"only_weekly_summary\";\n\n/** The layout display option of a forum feed */\nexport type ForumLayoutTypes = \"blog\" | \"feed\";\n\n/** The types of post */\nexport type ForumPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** Who can comment on a forum feed */\nexport type ForumWhoCanCommentTypes = \"admins\" | \"everyone\";\n\n/** Who can post on a forum feed */\nexport type ForumWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** The friendly status of a receipt */\nexport type FriendlyReceiptStatus =\n\t| \"auto_refunded\"\n\t| \"canceled\"\n\t| \"dispute_warning\"\n\t| \"drafted\"\n\t| \"failed\"\n\t| \"incomplete\"\n\t| \"open_dispute\"\n\t| \"open_resolution\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"pending\"\n\t| \"price_too_low\"\n\t| \"refunded\"\n\t| \"succeeded\"\n\t| \"uncollectible\"\n\t| \"unresolved\";\n\n/** A gateway for a payment token. */\nexport type GatewayTypes =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\";\n\n/** Input for a GIF attachment */\nexport interface GifInput {\n\t/** The height of the GIF in pixels */\n\theight: Scalars[\"Int\"][\"input\"];\n\t/** The original URL of the GIF */\n\toriginalUrl: Scalars[\"String\"][\"input\"];\n\t/** The URL for a preview image of the GIF */\n\tpreviewUrl: Scalars[\"String\"][\"input\"];\n\t/** The provider of the GIF */\n\tprovider: GifProviders;\n\t/** The unique identifier of the GIF */\n\tslug: Scalars[\"ID\"][\"input\"];\n\t/** The title of the GIF */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The URL of the full GIF */\n\turl: Scalars[\"String\"][\"input\"];\n\t/** The width of the GIF in pixels */\n\twidth: Scalars[\"Int\"][\"input\"];\n}\n\n/** The types of supported GIFs providers */\nexport type GifProviders =\n\t/** Giphy */\n\t\"giphy\";\n\n/** The different statuses of the global affiliate program for an access pass. */\nexport type GlobalAffiliateStatuses = \"disabled\" | \"enabled\";\n\n/** The scope of the results to return. */\nexport type HubMembershipStatus = \"active\" | \"inactive\";\n\n/** Predefined attachment variants */\nexport type ImageAttachmentVariants =\n\t| \"legacy\"\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s720x1280\"\n\t| \"s720x1280fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1080x1920\"\n\t| \"s1080x1920fit\"\n\t| \"s1080x1920fit_h264_vq7\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\"\n\t| \"s1920x1080fit_h264_vq7\"\n\t| \"x2\"\n\t| \"x5\";\n\n/** Allowed image file types for uploading to the platform */\nexport type ImageExtensions = \"GIF\" | \"JPEG\" | \"JPG\" | \"PNG\" | \"SVG\" | \"WEBP\";\n\n/** Image styles for image. */\nexport type ImageImageStyles =\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The different industry types a company can be in. */\nexport type IndustryTypes =\n\t/** Accessories */\n\t| \"accessories\"\n\t/** Agencies */\n\t| \"agencies\"\n\t/** Ai */\n\t| \"ai\"\n\t/** Ai Agency */\n\t| \"ai_agency\"\n\t/** Amazon Fba */\n\t| \"amazon_fba\"\n\t/** Auto Repair Shop */\n\t| \"auto_repair_shop\"\n\t/** Beauty And Personal Care */\n\t| \"beauty_and_personal_care\"\n\t/** Bootcamps */\n\t| \"bootcamps\"\n\t/** Business */\n\t| \"business\"\n\t/** Careers */\n\t| \"careers\"\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Clipping Agency */\n\t| \"clipping_agency\"\n\t/** Clothing */\n\t| \"clothing\"\n\t/** Coaching Agency */\n\t| \"coaching_agency\"\n\t/** Coffee Shop */\n\t| \"coffee_shop\"\n\t/** Concerts */\n\t| \"concerts\"\n\t/** Convention */\n\t| \"convention\"\n\t/** Customer Support Agency */\n\t| \"customer_support_agency\"\n\t/** Dating */\n\t| \"dating\"\n\t/** Design Agency */\n\t| \"design_agency\"\n\t/** Development Agency */\n\t| \"development_agency\"\n\t/** Ecommerce */\n\t| \"ecommerce\"\n\t/** Electronics And Gadgets */\n\t| \"electronics_and_gadgets\"\n\t/** Fitness */\n\t| \"fitness\"\n\t/** Fitness Gear */\n\t| \"fitness_gear\"\n\t/** Food And Beverages */\n\t| \"food_and_beverages\"\n\t/** Gym */\n\t| \"gym\"\n\t/** Health And Wellness */\n\t| \"health_and_wellness\"\n\t/** Home Goods */\n\t| \"home_goods\"\n\t/** Home Services */\n\t| \"home_services\"\n\t/** Hotel Lodging */\n\t| \"hotel_lodging\"\n\t/** Kindle Book Publishing */\n\t| \"kindle_book_publishing\"\n\t/** Marketing Agency */\n\t| \"marketing_agency\"\n\t/** Masterminds */\n\t| \"masterminds\"\n\t/** Medical Dentist Office */\n\t| \"medical_dentist_office\"\n\t/** Meetups */\n\t| \"meetups\"\n\t/** Other */\n\t| \"other\"\n\t/** Parties */\n\t| \"parties\"\n\t/** Personal Development */\n\t| \"personal_development\"\n\t/** Personal Finance */\n\t| \"personal_finance\"\n\t/** Public Speaking */\n\t| \"public_speaking\"\n\t/** Real Estate */\n\t| \"real_estate\"\n\t/** Recruiting Agency */\n\t| \"recruiting_agency\"\n\t/** Reselling */\n\t| \"reselling\"\n\t/** Restaurant */\n\t| \"restaurant\"\n\t/** Retail Store */\n\t| \"retail_store\"\n\t/** Sales */\n\t| \"sales\"\n\t/** Sales Agency */\n\t| \"sales_agency\"\n\t/** Salon Spa */\n\t| \"salon_spa\"\n\t/** Social Media */\n\t| \"social_media\"\n\t/** Software */\n\t| \"software\"\n\t/** Spirituality */\n\t| \"spirituality\"\n\t/** Sports Betting */\n\t| \"sports_betting\"\n\t/** Supplements */\n\t| \"supplements\"\n\t/** Trading */\n\t| \"trading\"\n\t/** Travel */\n\t| \"travel\"\n\t/** Vas */\n\t| \"vas\"\n\t/** Video Games */\n\t| \"video_games\"\n\t/** Webinars */\n\t| \"webinars\";\n\n/** The collection type for an information request item */\nexport type InformationRequestItemCollectionType = \"multi\" | \"none\" | \"single\";\n\n/** The format of the text for an information request item */\nexport type InformationRequestItemTextFormat =\n\t| \"email\"\n\t| \"phone\"\n\t| \"plain\"\n\t| \"url\";\n\n/** The statuses an information request can have */\nexport type InformationRequestStatus =\n\t| \"awaiting_review\"\n\t| \"canceled\"\n\t| \"completed\"\n\t| \"requires_collection\";\n\n/** The different error codes for instant payouts */\nexport type InstantPayoutErrorCodes =\n\t/** Account Daily Limit Reached */\n\t| \"account_daily_limit_reached\"\n\t/** Amount Too High */\n\t| \"amount_too_high\"\n\t/** Feature Disabled */\n\t| \"feature_disabled\"\n\t/** Only Us Accounts */\n\t| \"only_us_accounts\"\n\t/** Only Usd */\n\t| \"only_usd\"\n\t/** Platform Daily Limit Reached */\n\t| \"platform_daily_limit_reached\"\n\t/** Restricted Account */\n\t| \"restricted_account\"\n\t/** Unsupported External Account */\n\t| \"unsupported_external_account\";\n\n/** The properties of the access pass to create for this invoice. */\nexport interface InvoiceAccessPassInput {\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** The method of collection for an invoice. */\nexport type InvoiceCollectionMethods =\n\t/** Charge a specific payment method for a customer. */\n\t| \"charge_automatically\"\n\t/** Send an invoice to the customer via email. */\n\t| \"send_invoice\";\n\n/** The properties of the plan to create for this invoice. */\nexport interface InvoicePlanInput {\n\t/** Whether or not ACH payments are accepted */\n\tachPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not card payments are accepted */\n\tcardPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether coinbase commerce payments are/aren't accepted. */\n\tcoinbaseCommerceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The description of the plan. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** A personal description or notes section for the business. */\n\tinternalNotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to offer a discount to cancel a subscription. */\n\tofferCancelDiscount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether paypal payments are/aren't accepted. */\n\tpaypalAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** Marks whether platform balance payments are/aren't accepted. */\n\tplatformBalanceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The URL to redirect the customer to after purchase. */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This is the release method the business uses to sell this plan. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** Configurable settings on how this plan is released. */\n\treleaseMethodSettings?: InputMaybe<ReleaseMethodSettingsInput>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The number of payments required before pausing the subscription. */\n\tsplitPayRequiredPayments?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Marks whether payments using splitit, a payment processor, are/aren't accepted for the plan. */\n\tsplititAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of units available for purchase. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The number of free trial days added before a renewal plan. */\n\ttrialPeriodDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Limits/doesn't limit the number of units available for purchase. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Shows or hides the plan from public/business view. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** The different statuses an invoice can be in */\nexport type InvoiceStatuses =\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Void */\n\t| \"void\";\n\n/** Filters for the invoices table. */\nexport interface InvoicesFiltersInput {\n\t/** The access pass IDs to filter the invoices by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The collection methods to filter the invoices by */\n\tcollectionMethods?: InputMaybe<Array<InvoiceCollectionMethods>>;\n\t/** The statuses to filter the invoices by */\n\tstatuses?: InputMaybe<Array<InvoiceStatuses>>;\n}\n\n/** Which columns can be used to sort. */\nexport type InvoicesSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** A type of order that the ItemOrdering represents. */\nexport type ItemOrderingOrderTypes =\n\t/** Experience */\n\t| \"experience\"\n\t/** Hub Creator */\n\t| \"hub_creator\"\n\t/** Hub Customer */\n\t| \"hub_customer\";\n\n/** The available languages for a course */\nexport type Languages =\n\t/** Bg */\n\t| \"bg\"\n\t/** Ca */\n\t| \"ca\"\n\t/** Cs */\n\t| \"cs\"\n\t/** Da */\n\t| \"da\"\n\t/** De */\n\t| \"de\"\n\t/** El */\n\t| \"el\"\n\t/** En */\n\t| \"en\"\n\t/** Es */\n\t| \"es\"\n\t/** Fi */\n\t| \"fi\"\n\t/** Fr */\n\t| \"fr\"\n\t/** Hr */\n\t| \"hr\"\n\t/** It */\n\t| \"it\"\n\t/** Nl */\n\t| \"nl\"\n\t/** No */\n\t| \"no\"\n\t/** Pl */\n\t| \"pl\"\n\t/** Pt */\n\t| \"pt\"\n\t/** Ro */\n\t| \"ro\"\n\t/** Ru */\n\t| \"ru\"\n\t/** Sk */\n\t| \"sk\"\n\t/** Sv */\n\t| \"sv\"\n\t/** Tr */\n\t| \"tr\"\n\t/** Uk */\n\t| \"uk\";\n\n/** The different types of leaderboards that can be fetched */\nexport type LeaderboardTypes =\n\t| \"affiliate_earnings\"\n\t| \"average_time_spent\"\n\t| \"money_earned_last_7_days\"\n\t| \"money_earned_last_24_hours\"\n\t| \"money_earned_last_30_days\"\n\t| \"new_users\"\n\t| \"top_rated\"\n\t| \"total_time_spent\"\n\t| \"usd_gmv\"\n\t| \"whop_partners_earnings_last_30_days\"\n\t| \"whop_partners_gtv_last_30_days\";\n\n/** Which columns can be used to sort. */\nexport type LeadsSortableColumns = \"created_at\" | \"id\";\n\n/** The different statuses a LedgerAccountAudit can be */\nexport type LedgerAccountAuditStatuses =\n\t/** Requested More Information */\n\t| \"requested_more_information\"\n\t/** Reserves Imposed */\n\t| \"reserves_imposed\";\n\n/** The standing of a ledger account, based on their dispute risk scores */\nexport type LedgerAccountStandings = \"at_risk\" | \"good\";\n\n/** The types of ledgers that can be created. */\nexport type LedgerTypes =\n\t/** Pool */\n\t| \"pool\"\n\t/** Primary */\n\t| \"primary\";\n\n/** The different withdrawal frequencies a LedgerAccount can have */\nexport type LedgerWithdrawalFrequencies =\n\t/** Daily */\n\t| \"daily\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Monthly */\n\t| \"monthly\"\n\t/** Weekly */\n\t| \"weekly\";\n\n/** The different statuses a LedgerAccount's withdrawal_status can be */\nexport type LedgerWithdrawalStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The available types for a lesson */\nexport type LessonTypes =\n\t/** Knowledge check */\n\t| \"knowledge_check\"\n\t/** Multi */\n\t| \"multi\"\n\t/** Pdf */\n\t| \"pdf\"\n\t/** Quiz */\n\t| \"quiz\"\n\t/** Text */\n\t| \"text\"\n\t/** Video */\n\t| \"video\";\n\n/** The available visibilities for a lesson. Determines how / whether a lesson is visible to users. */\nexport type LessonVisibilities =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The order to sort liked discover access passes by. */\nexport type LikedDiscoverAccessPassesOrder =\n\t/** Sort by promo code presence first, then rated at date */\n\t| \"promo_code_and_rated_at\"\n\t/** Sort by when the access pass was rated */\n\t| \"rated_at\";\n\n/** Input for a link embed */\nexport interface LinkEmbedInput {\n\t/** The URL of the linked content */\n\turl: Scalars[\"String\"][\"input\"];\n}\n\n/** Possible livestream destinations a user can restream to */\nexport type LivestreamDestination =\n\t/** Facebook */\n\t| \"facebook\"\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Kick */\n\t| \"kick\"\n\t/** Rumble */\n\t| \"rumble\"\n\t/** Steam */\n\t| \"steam\"\n\t/** Telegram */\n\t| \"telegram\"\n\t/** Twitch */\n\t| \"twitch\"\n\t/** Vimeo */\n\t| \"vimeo\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** Input for a livestream feed */\nexport interface LivestreamFeedInput {\n\t/** Whether or not media is banned in this livestream */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this livestream */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this livestream */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The description of this livestream */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The empty timeout of this livestream */\n\temptyTimeout?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The unique identifier for the feed */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of participants that can join the livestream (0 is unlimited) */\n\tmaxParticipants?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The metadata of this livestream */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not live reactions are enabled in this livestream */\n\treactionsEnabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The destinations to restream to */\n\trestreamDestinations?: InputMaybe<Array<LivestreamDestination>>;\n\t/** The scheduled time of this livestream */\n\tscheduledAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The title of this livestream */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this livestream */\n\twhoCanPost?: InputMaybe<LivestreamWhoCanPostTypes>;\n\t/** Who can react on this livestream */\n\twhoCanReact?: InputMaybe<LivestreamWhoCanReactTypes>;\n}\n\n/** The status of a livestream recording */\nexport type LivestreamRecordingStatus =\n\t/** Completed */\n\t| \"completed\"\n\t/** Failed */\n\t| \"failed\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Recording */\n\t| \"recording\";\n\n/** Who can post on a livestream feed */\nexport type LivestreamWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a livestream feed */\nexport type LivestreamWhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter made for you affiliates on */\nexport interface MadeForYouPlanFilters {\n\t/** Search by plan name, product name, or company name */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The sub-items that should be displayed for the stripe account. */\nexport type ManagementItems =\n\t| \"billing_details\"\n\t| \"country\"\n\t| \"merchant_of_record\"\n\t| \"payout_frequency\";\n\n/** Autogenerated input type of MarkLessonAsCompleted */\nexport interface MarkLessonAsCompletedInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to mark as completed */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The columns that can be used to order. */\nexport type MarketplaceCategoryOrder =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"live_access_pass_count\"\n\t| \"live_page_count\"\n\t| \"manual_position\"\n\t| \"name\"\n\t| \"random\";\n\n/** The marketplace types that are available for categories. */\nexport type MarketplaceCategoryTypes =\n\t/** App */\n\t| \"app\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The available marketplace statuses to choose from. */\nexport type MarketplaceStatuses =\n\t| \"live_marketplace\"\n\t| \"not_available\"\n\t| \"pending_review\";\n\nexport type Media = \"audio\" | \"image\" | \"other\" | \"video\";\n\n/** The different most recent actions a member can have. */\nexport type MemberMostRecentActions =\n\t/** Canceling */\n\t| \"canceling\"\n\t/** Churned */\n\t| \"churned\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expiring */\n\t| \"expiring\"\n\t/** Finished Split Pay */\n\t| \"finished_split_pay\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\"\n\t/** Paid Once */\n\t| \"paid_once\"\n\t/** Paid Subscriber */\n\t| \"paid_subscriber\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused */\n\t| \"paused\"\n\t/** Pending Entry */\n\t| \"pending_entry\"\n\t/** Renewing */\n\t| \"renewing\"\n\t/** Trialing */\n\t| \"trialing\";\n\n/** The different statuses a Member can have. */\nexport type MemberStatuses =\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\";\n\n/** The type of subtext to display for a member */\nexport type MemberSubtextTypes =\n\t/** Canceled On */\n\t| \"canceled_on\"\n\t/** Canceling On */\n\t| \"canceling_on\"\n\t/** Ending On */\n\t| \"ending_on\"\n\t/** Finished Split Pay At */\n\t| \"finished_split_pay_at\"\n\t/** Next Payment Attempt */\n\t| \"next_payment_attempt\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused At */\n\t| \"paused_at\"\n\t/** Renewing On */\n\t| \"renewing_on\"\n\t/** Trial Canceling On */\n\t| \"trial_canceling_on\"\n\t/** Trial Ends At */\n\t| \"trial_ends_at\"\n\t/** Unresolved At */\n\t| \"unresolved_at\";\n\n/** Filters for the members table. */\nexport interface MembersFiltersInput {\n\t/** The access pass IDs to filter the members by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the members by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The membership status to filter the members by */\n\tmembershipStatus?: InputMaybe<MembershipStatus>;\n\t/** The most recent actions to filter the members by */\n\tmostRecentActions?: InputMaybe<Array<MemberMostRecentActions>>;\n\t/** The plan IDs to filter the members by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the members by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/**\n\t * The name, username, or email to filter the members by. The email filter will\n\t * only apply if the current actor has the `member:email:read` permission.\n\t */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The start date to filter the members by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the members by */\n\tstatuses?: InputMaybe<Array<MemberStatuses>>;\n\t/** The tracking link IDs to filter the members by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembersSortableColumns =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"joined_at\"\n\t| \"most_recent_action\"\n\t| \"usd_total_spent\";\n\n/** The actions that can be performed on a membership */\nexport type MembershipActions =\n\t| \"add_discord_roles\"\n\t| \"add_free_days\"\n\t| \"cancel_membership\"\n\t| \"fulfill_trading_view_indicators\"\n\t| \"pause_subscription_payments\"\n\t| \"reset_license\"\n\t| \"retry_payment\"\n\t| \"shuffle_license\"\n\t| \"terminate_membership\"\n\t| \"unlink_discord\"\n\t| \"unpause_subscription_payments\";\n\n/** The state of a membership, based on a company's accepted sub statuses. */\nexport type MembershipHeaderStatus = \"active\" | \"churned\";\n\n/** Image styles for membership. */\nexport type MembershipImageStyles = \"s40\";\n\n/** The payment processor used for a membership */\nexport type MembershipPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** Whether or not to send push notifications to the user of a membership */\nexport type MembershipPushNotification =\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Enabled */\n\t| \"enabled\";\n\n/** The status of a membership */\nexport type MembershipStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Trialing */\n\t| \"trialing\"\n\t/** Unresolved */\n\t| \"unresolved\";\n\n/** Filters for the memberships table. */\nexport interface MembershipsFiltersInput {\n\t/** The access pass IDs to filter the memberships by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The access pass types to filter the memberships by */\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes>>;\n\t/** The cancelation reasons to filter the memberships by */\n\tcancelationReasons?: InputMaybe<Array<CancelOptions>>;\n\t/** The end date to filter the memberships by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Whether the memberships have a cancelation reason */\n\thasCancelationReason?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The header filter to filter the memberships by */\n\theaderFilter?: InputMaybe<MembershipHeaderStatus>;\n\t/** The membership status to filter the memberships by */\n\tmembershipStatus?: InputMaybe<HubMembershipStatus>;\n\t/** The plan IDs to filter the memberships by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the memberships by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the memberships by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the memberships by */\n\tstatuses?: InputMaybe<Array<MembershipStatus>>;\n\t/** The tracking link IDs to filter the memberships by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembershipsSortableColumns =\n\t| \"canceled_at\"\n\t| \"created_at\"\n\t| \"date_joined\"\n\t| \"id\"\n\t| \"status\"\n\t| \"total_spend\";\n\n/** The different moderation results for an attachment */\nexport type ModerationResults =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** Autogenerated input type of MoveCourse */\nexport interface MoveCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to move */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The experience to move the course into */\n\tdestinationExperienceId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Input for a feed muted member */\nexport interface MutedUserInput {\n\t/** The ID of the feed */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The feed type */\n\tfeedType?: FeedTypes;\n\t/** The unique identifier for the muted user */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The time the user is muted till */\n\tmutedUntil?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Mux asset statuses */\nexport type MuxAssetStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Ready */\n\t| \"ready\"\n\t/** Uploading */\n\t| \"uploading\";\n\n/** The different types of Stripe Accounts. */\nexport type NormalizedAccountTypes =\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\"\n\t| \"whop_credit\";\n\n/** The channel for a notification preference */\nexport type NotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFilters {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFiltersV3 {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** The status of the notification topic. If it's active, they will send. */\nexport type NotificationTopicStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The type for the notification topic. */\nexport type NotificationTopicTypes =\n\t/** Company */\n\t| \"company\"\n\t/** Company Team */\n\t| \"company_team\"\n\t/** User */\n\t| \"user\";\n\n/** The visibility of the notification topic. If it's hidden, it won't show on the UI. */\nexport type NotificationTopicVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Values to filter notifications on */\nexport interface NotificationsV4Filters {\n\t/**\n\t * The client's last fetched at timestamp. If passed will only return\n\t * notifications created after this timestamp. NOT YET IMPLEMENTED\n\t */\n\tclientLastFetchedAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The company ID that you want to filter by. Will return notifications sent to this team. */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience ID that you want to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience IDs that you want to filter by. Overrides experience_id. */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether the notifications are mentions or not */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether to only return unread notifications */\n\tunreadOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Values to paginate notifications on */\nexport interface NotificationsV4Pagination {\n\t/** Filter all notifications made after this */\n\tafter?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter all notifications made before this */\n\tbefore?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The number of notifications to return. Default is 50 */\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different providers that can be used for onboarding a ledger account. */\nexport type OnboardingProviders = \"generic\" | \"stripe\";\n\n/** The different onboarding types for a company. */\nexport type OnboardingTypes =\n\t/** Payments */\n\t| \"payments\"\n\t/** Products */\n\t| \"products\";\n\n/** The different variants of OpenGraph images for a company. */\nexport type OpengraphImageVariants =\n\t/** Black */\n\t| \"black\"\n\t/** Orange */\n\t| \"orange\"\n\t/** White */\n\t| \"white\";\n\n/** The account_types for a payment account object */\nexport type PaymentAccountAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The different action banners that can be shown for a payment account */\nexport type PaymentAccountActionBanners = \"requires_additional_information\";\n\n/** The providers for a payment account object */\nexport type PaymentAccountProviders =\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different statuses for a payment account object */\nexport type PaymentAccountStatuses =\n\t/** Broken */\n\t| \"broken\"\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled By Whop */\n\t| \"disabled_by_whop\"\n\t/** Missing Settlement Address */\n\t| \"missing_settlement_address\"\n\t/** Needs Completion */\n\t| \"needs_completion\"\n\t/** Needs Reauthorization */\n\t| \"needs_reauthorization\"\n\t/** Oauth Integration Not Found */\n\t| \"oauth_integration_not_found\"\n\t/** Payments Not Receivable */\n\t| \"payments_not_receivable\"\n\t/** Primary Email Not Confirmed */\n\t| \"primary_email_not_confirmed\"\n\t/** Reconnect Api Keys */\n\t| \"reconnect_api_keys\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Requirements Not Met */\n\t| \"requirements_not_met\"\n\t/** Setup */\n\t| \"setup\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Webhook Not Verified */\n\t| \"webhook_not_verified\";\n\n/** The high level payment processor options. */\nexport type PaymentMethods =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The high level payment processor options. */\nexport type PaymentProcessor =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\"\n\t| \"venmo\";\n\n/** The different payment providers. */\nexport type PaymentProviders =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different providers of payment transactions. */\nexport type PaymentTransactionProviders =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Splitit */\n\t| \"splitit\";\n\n/** The different statuses a payment transaction can be in. */\nexport type PaymentTransactionStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Succeeded */\n\t| \"succeeded\"\n\t/** Won */\n\t| \"won\";\n\n/** The different types of payment transactions. */\nexport type PaymentTransactionTypes =\n\t/** Authorization */\n\t| \"authorization\"\n\t/** Authorize */\n\t| \"authorize\"\n\t/** Cancel */\n\t| \"cancel\"\n\t/** Capture */\n\t| \"capture\"\n\t/** Chargeback */\n\t| \"chargeback\"\n\t/** Fraud Screening */\n\t| \"fraud_screening\"\n\t/** Installment */\n\t| \"installment\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Refund */\n\t| \"refund\"\n\t/** Three D Secure */\n\t| \"three_d_secure\"\n\t/** Verify */\n\t| \"verify\";\n\n/** The different approval statuses an account can have. */\nexport type PaymentsApprovalStatuses =\n\t/** Approved */\n\t| \"approved\"\n\t/** Monitoring */\n\t| \"monitoring\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The different providers a payout account can be. */\nexport type PayoutAccountProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses payout account can be. */\nexport type PayoutAccountStatuses =\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Needs Completion */\n\t| \"needs_completion\";\n\n/** The different delivery_types for a payout or payout destination. */\nexport type PayoutDeliveryTypes =\n\t/** Bank Deposit */\n\t| \"bank_deposit\"\n\t/** Bill */\n\t| \"bill\"\n\t/** Cash Pickup */\n\t| \"cash_pickup\"\n\t/** Cryptocurrency */\n\t| \"cryptocurrency\"\n\t/** Home Delivery */\n\t| \"home_delivery\"\n\t/** Masspay Card */\n\t| \"masspay_card\"\n\t/** Mobile Wallet */\n\t| \"mobile_wallet\"\n\t/** Paper Check */\n\t| \"paper_check\";\n\n/** The different platform statuses a payout destination can be in. */\nexport type PayoutDestinationPlatformStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different providers a payout destination can be. */\nexport type PayoutDestinationProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout destination can be in. */\nexport type PayoutDestinationStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Disabled */\n\t| \"disabled\";\n\n/** The different destination types for a payout destination. */\nexport type PayoutDestinationTypes =\n\t/** Instant */\n\t| \"instant\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The different error codes a payout can be in. */\nexport type PayoutErrorCodes =\n\t/** Account Closed */\n\t| \"account_closed\"\n\t/** Account Does Not Exist */\n\t| \"account_does_not_exist\"\n\t/** Account Information Invalid */\n\t| \"account_information_invalid\"\n\t/** Amount Out Of Bounds */\n\t| \"amount_out_of_bounds\"\n\t/** Attributes Not Validated */\n\t| \"attributes_not_validated\"\n\t/** B2b Payments Prohibited */\n\t| \"b2b_payments_prohibited\"\n\t/** Bank Statement Required */\n\t| \"bank_statement_required\"\n\t/** Compliance Review */\n\t| \"compliance_review\"\n\t/** Deposit Failed */\n\t| \"deposit_failed\"\n\t/** Deposit Rejected */\n\t| \"deposit_rejected\"\n\t/** Destination Unavailable */\n\t| \"destination_unavailable\"\n\t/** Exceeded Account Limit */\n\t| \"exceeded_account_limit\"\n\t/** Expired Quote */\n\t| \"expired_quote\"\n\t/** Generic Payout Error */\n\t| \"generic_payout_error\"\n\t/** Identification Number Invalid */\n\t| \"identification_number_invalid\"\n\t/** Invalid Account Number */\n\t| \"invalid_account_number\"\n\t/** Invalid Bank Code */\n\t| \"invalid_bank_code\"\n\t/** Invalid Beneficiary */\n\t| \"invalid_beneficiary\"\n\t/** Invalid Branch Number */\n\t| \"invalid_branch_number\"\n\t/** Invalid Phone Number */\n\t| \"invalid_phone_number\"\n\t/** Invalid Routing Number */\n\t| \"invalid_routing_number\"\n\t/** Invalid Swift Code */\n\t| \"invalid_swift_code\"\n\t/** Misc Error */\n\t| \"misc_error\"\n\t/** Missing City And Country */\n\t| \"missing_city_and_country\"\n\t/** Missing Phone Number */\n\t| \"missing_phone_number\"\n\t/** Missing Remittance Info */\n\t| \"missing_remittance_info\"\n\t/** Receiving Account Locked */\n\t| \"receiving_account_locked\"\n\t/** Rejected By Compliance */\n\t| \"rejected_by_compliance\"\n\t/** Source Token Insufficient Funds */\n\t| \"source_token_insufficient_funds\"\n\t/** Ssn Invalid */\n\t| \"ssn_invalid\"\n\t/** Wallet Screenshot Required */\n\t| \"wallet_screenshot_required\";\n\n/** The interval at which a Connected Account is paid out */\nexport type PayoutIntervals = \"daily\" | \"manual\" | \"monthly\" | \"weekly\";\n\n/** The payout methods that can be configured for a company. */\nexport type PayoutMethods = \"coinbase_commerce\" | \"paypal\" | \"stripe\";\n\n/** The different statuses as payout object can be. */\nexport type PayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Hold */\n\t| \"hold\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Ready For Pickup */\n\t| \"ready_for_pickup\"\n\t/** Scheduled */\n\t| \"scheduled\";\n\n/** The different types of attributes that can be saved for a PayoutTokenAttribute. */\nexport type PayoutTokenAttributeDataTypes =\n\t/** Address1 */\n\t| \"Address1\"\n\t/** Bank Account Branch Number */\n\t| \"BankAccountBranchNumber\"\n\t/** Bank Account Name */\n\t| \"BankAccountName\"\n\t/** Bank Account Number */\n\t| \"BankAccountNumber\"\n\t/** Bank Account Type */\n\t| \"BankAccountType\"\n\t/** Bank City */\n\t| \"BankCity\"\n\t/** Bank Name */\n\t| \"BankName\"\n\t/** Bank Routing Number */\n\t| \"BankRoutingNumber\"\n\t/** Bank State */\n\t| \"BankState\"\n\t/** Bill Reference Number */\n\t| \"BillReferenceNumber\"\n\t/** Birth Country */\n\t| \"BirthCountry\"\n\t/** Card Expiration */\n\t| \"CardExpiration\"\n\t/** Card Number */\n\t| \"CardNumber\"\n\t/** Card Zip */\n\t| \"CardZip\"\n\t/** City */\n\t| \"City\"\n\t/** Country */\n\t| \"Country\"\n\t/** Date Of Birth */\n\t| \"DateOfBirth\"\n\t/** Employment Address */\n\t| \"EmploymentAddress\"\n\t/** Employment Name */\n\t| \"EmploymentName\"\n\t/** Employment Occupation */\n\t| \"EmploymentOccupation\"\n\t/** Employment Phone */\n\t| \"EmploymentPhone\"\n\t/** Employment Supervisor */\n\t| \"EmploymentSupervisor\"\n\t/** Gender */\n\t| \"Gender\"\n\t/** Guardian Consent */\n\t| \"GuardianConsent\"\n\t/** Guardian Full Name */\n\t| \"GuardianFullName\"\n\t/** Guardian Gov Id Number */\n\t| \"GuardianGovIDNumber\"\n\t/** Guardian Gov Id Type */\n\t| \"GuardianGovIDType\"\n\t/** Id Selfie Collection */\n\t| \"IDSelfieCollection\"\n\t/** I Frame Payment Collection */\n\t| \"IFramePaymentCollection\"\n\t/** Identification Expiration */\n\t| \"IdentificationExpiration\"\n\t/** Identification Number */\n\t| \"IdentificationNumber\"\n\t/** Identification Type */\n\t| \"IdentificationType\"\n\t/** Maiden Name */\n\t| \"MaidenName\"\n\t/** Phone Number */\n\t| \"PhoneNumber\"\n\t/** Postal Code */\n\t| \"PostalCode\"\n\t/** Relationship */\n\t| \"Relationship\"\n\t/** Remittance Reason */\n\t| \"RemittanceReason\"\n\t/** Swift */\n\t| \"SWIFT\"\n\t/** Second Last Name */\n\t| \"SecondLastName\"\n\t/** Social Security */\n\t| \"SocialSecurity\"\n\t/** Source Of Funds */\n\t| \"SourceOfFunds\";\n\n/** The different types of inputs for a payout token attribute. This is the type of form that will be submitted in the data. */\nexport type PayoutTokenAttributeInputTypes =\n\t/** Date */\n\t| \"date\"\n\t/** Options */\n\t| \"options\"\n\t/** Text */\n\t| \"text\";\n\n/** The type of information being submitted in the value field. */\nexport type PayoutTokenAttributeValueTypes = \"raw\" | \"vault_token\";\n\n/** The different providers a payout token can be. */\nexport type PayoutTokenProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout token can have. */\nexport type PayoutTokenStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Broken */\n\t| \"broken\"\n\t/** Created */\n\t| \"created\";\n\n/** Whether a payout is one-time or recurring */\nexport type PayoutTypes =\n\t/** Flat Fee */\n\t| \"flat_fee\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Statuses for paypal accounts */\nexport type PaypalAccountStatuses =\n\t| \"broken\"\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"oauth_integration_not_found\"\n\t| \"payments_not_receivable\"\n\t| \"primary_email_not_confirmed\";\n\n/** The status of an entry for a perk. */\nexport type PerkStatus = \"completed\" | \"pending\";\n\n/** The type of direct link to generate */\nexport type PlanDirectLink = \"checkout\" | \"product_page\";\n\n/** Values to filter plans on */\nexport interface PlanFilters {\n\t/** A specific access pass to filter the scope by. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** If true, it returns plans that have affiliates */\n\taffiliates?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PlanOrder>;\n\t/** If true, it returns plans that have member/passholder affiliates set to true */\n\tpassholderAffiliate?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If true, it returns raffles that have ended. */\n\traffleEnded?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The release method to filter the scope by. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The visibility to filter the scope by. */\n\tvisibility?: InputMaybe<VisibilityFilter>;\n}\n\n/** The order to sort the results by. */\nexport type PlanOrder =\n\t| \"active_memberships_count\"\n\t| \"affiliates\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"internal_notes\";\n\n/** The type of plan that can be attached to an access pass */\nexport type PlanTypes =\n\t/** One Time */\n\t| \"one_time\"\n\t/** Renewal */\n\t| \"renewal\";\n\n/** The ways a relation of Plans can be ordered */\nexport type PlansOrder =\n\t| \"active_members_count\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"id\"\n\t| \"internal_notes\";\n\n/** Which columns can be used to sort. */\nexport type PlansSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"cached_initial_price_due\"\n\t| \"cached_usd_income\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"stock\";\n\n/** Input type for creating a poll in a feed post */\nexport interface PollInput {\n\t/** The options for the poll. Must have sequential IDs starting from 1 */\n\toptions: Array<PollOptionInput>;\n}\n\n/** Input type for a single poll option */\nexport interface PollOptionInput {\n\t/** Sequential ID for the poll option (starting from '1') */\n\tid: Scalars[\"String\"][\"input\"];\n\t/** The text of the poll option */\n\ttext: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of feed to fetch from */\nexport type PostTypes =\n\t/** Dms */\n\t| \"dms\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Post */\n\t| \"forum_post\";\n\n/** Autogenerated input type of ProcessEntities */\nexport interface ProcessEntitiesInput {\n\t/** The ID of the app */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** The chat feed posts to process */\n\tchatFeeds?: InputMaybe<Array<ChatFeedInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The DMs feed members to process */\n\tdmsFeedMembers?: InputMaybe<Array<DmsFeedMemberInput>>;\n\t/** The DMs feeds to process */\n\tdmsFeeds?: InputMaybe<Array<DmsFeedInput>>;\n\t/** The DMs posts to process */\n\tdmsPosts?: InputMaybe<Array<DmsPostInput>>;\n\t/** The livestream feeds to process */\n\tlivestreamFeeds?: InputMaybe<Array<LivestreamFeedInput>>;\n\t/** The chat feed muted members to process */\n\tmutedUsers?: InputMaybe<Array<MutedUserInput>>;\n\t/** The reactions to process */\n\treactions?: InputMaybe<Array<ReactionInput>>;\n}\n\n/** Types of product highlight */\nexport type ProductHighlightTypes =\n\t| \"benefit\"\n\t| \"pricing_feature\"\n\t| \"qualification\"\n\t| \"who_this_is_for\";\n\n/** Image styles for product. */\nexport type ProductImageStyles =\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The product_type of the ProductTaxCode */\nexport type ProductTaxCodeProductTypes = \"digital\" | \"physical\" | \"services\";\n\n/** Values to filter users on */\nexport interface ProductUserFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<ProductUserOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type ProductUserOrder =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** The different levels of visibility for resources */\nexport type ProfileVisibilities = \"hidden\" | \"visible\";\n\n/** Values to filter promo codes on */\nexport interface PromoCodeFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter whether to return active or expired (archived and inactive). */\n\tnewStatus?: InputMaybe<PromoCodeNewStatus>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PromoCodeOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The state of promo code. */\n\tstatus?: InputMaybe<PromoCodeStatus>;\n}\n\n/** The new statuses to filter the results by. */\nexport type PromoCodeNewStatus = \"active\" | \"expired\";\n\n/** The order to sort the results by. */\nexport type PromoCodeOrder = \"code\" | \"created_at\";\n\n/** Statuses for promo codes */\nexport type PromoCodeStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** Which columns can be used to sort. */\nexport type PromoCodesSortableColumns =\n\t| \"created_at\"\n\t| \"expiration_datetime\"\n\t| \"id\";\n\n/** The duration setting for the promo code */\nexport type PromoDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\"\n\t/** Repeating */\n\t| \"repeating\";\n\n/** The type of promo code used to discount a plan */\nexport type PromoTypes =\n\t/** Flat Amount */\n\t| \"flat_amount\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Autogenerated input type of PromoteAppBuildToProduction */\nexport interface PromoteAppBuildToProductionInput {\n\t/** The ID of the app build to promote. */\n\tappBuildId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type PublicAccessPassesOrder =\n\t| \"average_review_rating\"\n\t| \"average_time_spent_24_hours\"\n\t| \"created_at\"\n\t| \"global_affiliate_percentage\"\n\t| \"highest_bounties\"\n\t| \"id\"\n\t| \"last_24_hours_total_seconds\"\n\t| \"most_affiliate_earnings_24_hours\"\n\t| \"most_money_made_24_hours\"\n\t| \"most_reviews_7_days\"\n\t| \"most_reviews_24_hours\"\n\t| \"newest_arrivals\"\n\t| \"trending\"\n\t| \"trending_3_hours\";\n\n/** The order to sort the results by. */\nexport type PublicBountiesOrder = \"created_at\" | \"total_paid\";\n\n/** Input for a reaction */\nexport interface ReactionInput {\n\t/** The ID of the feed this reaction belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this reaction belongs to */\n\tfeedType: FeedTypes;\n\t/** The unique identifier for the reaction */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the post this reaction belongs to */\n\tpostId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the post (e.g., 'dms_post') */\n\tpostType: PostTypes;\n\t/** The type of reaction (e.g., 'like', 'vote', 'view', 'emoji') */\n\treactionType: ReactionTypes;\n\t/** The score of the reaction */\n\tscore: Scalars[\"Int\"][\"input\"];\n\t/** The value of the reaction (e.g., specific emoji) */\n\tvalue: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of reactions */\nexport type ReactionTypes =\n\t/** Emoji */\n\t| \"emoji\"\n\t/** Like */\n\t| \"like\"\n\t/** View */\n\t| \"view\"\n\t/** Vote */\n\t| \"vote\";\n\n/** The status of the abuse report */\nexport type ReceiptFeeTypes =\n\t/** Other Fee */\n\t| \"other_fee\"\n\t/** Processing Fee */\n\t| \"processing_fee\"\n\t/** Whop Fee */\n\t| \"whop_fee\";\n\n/** The payment processor of a receipt */\nexport type ReceiptPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The status of a receipt */\nexport type ReceiptStatus =\n\t/** Draft */\n\t| \"draft\"\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Uncollectible */\n\t| \"uncollectible\"\n\t/** Unresolved */\n\t| \"unresolved\"\n\t/** Void */\n\t| \"void\";\n\n/** The status of a receipt */\nexport type ReceiptStatusV2 =\n\t| \"failed\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"refunded\"\n\t| \"succeeded\";\n\n/**\n * The type of tax inclusivity applied to the receipt, for determining whether the\n * tax is included in the final price, or paid on top.\n */\nexport type ReceiptTaxBehaviors =\n\t/** Exclusive */\n\t| \"exclusive\"\n\t/** Inclusive */\n\t| \"inclusive\"\n\t/** Unspecified */\n\t| \"unspecified\";\n\n/** Values to filter receipts on */\nexport interface ReceiptV2Filters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The billing reason for the payment */\n\tbillingReasons?: InputMaybe<Array<BillingReasons>>;\n\t/** The currency of the payment. */\n\tcurrencies?: InputMaybe<Array<Currencies>>;\n\t/** Which way to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all memberships created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** How to order the results. */\n\torder?: InputMaybe<ReceiptV2Order>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** A specific plan. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all memberships created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The state of the payment. */\n\tstatuses?: InputMaybe<Array<ReceiptStatusV2>>;\n}\n\n/** The order to sort the results by. */\nexport type ReceiptV2Order = \"created_at\" | \"final_amount\" | \"paid_at\";\n\n/** Which columns can be used to sort. */\nexport type ReceiptsSortableColumns =\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"paid_at\"\n\t| \"presented_final_amount\";\n\n/** The different statuses for a Refund object */\nexport type RefundStatuses =\n\t| \"canceled\"\n\t| \"failed\"\n\t| \"pending\"\n\t| \"requires_action\"\n\t| \"succeeded\";\n\n/** The methods of how a plan can be released (including raffles and waitlists). */\nexport type ReleaseMethod =\n\t/** Buy Now */\n\t| \"buy_now\"\n\t/** Raffle */\n\t| \"raffle\"\n\t/** Waitlist */\n\t| \"waitlist\";\n\nexport interface ReleaseMethodSettingsInput {\n\t/** When the raffle will expire */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The maximum number of entries allowed for the raffle or waitlist */\n\tmaxEntries?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** If this is enabled, the raffle will get entries based off of how many NFTs the user owns */\n\tnftWeightedEntries?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** When the raffle will start */\n\tstartsAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n}\n\n/** The types of reports that can be generated. */\nexport type ReportTypes =\n\t/** Bookmark */\n\t| \"bookmark\"\n\t/** Downvote */\n\t| \"downvote\"\n\t/** Share */\n\t| \"share\"\n\t/** Upvote */\n\t| \"upvote\";\n\n/** The different types of actions for a resolution event */\nexport type ResolutionActions =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Appealed */\n\t| \"appealed\"\n\t/** Created */\n\t| \"created\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Dispute Customer Won */\n\t| \"dispute_customer_won\"\n\t/** Dispute Merchant Won */\n\t| \"dispute_merchant_won\"\n\t/** Dispute Opened */\n\t| \"dispute_opened\"\n\t/** Escalated */\n\t| \"escalated\"\n\t/** Requested More Info */\n\t| \"requested_more_info\"\n\t/** Responded */\n\t| \"responded\"\n\t/** Withdrew */\n\t| \"withdrew\";\n\n/** The types of responses a customer can make to a resolution. */\nexport type ResolutionCustomerResponses = \"appeal\" | \"respond\" | \"withdraw\";\n\n/** Filters for the resolutions */\nexport interface ResolutionFilters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Filter by their case state */\n\tcaseState?: InputMaybe<CaseStates>;\n\t/** The direction to filter */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter by the end date */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The order to filter */\n\torder?: InputMaybe<ResolutionOrder>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** The text to search by */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter by the start date */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter by their status */\n\tstatuses?: InputMaybe<Array<ResolutionStatuses>>;\n}\n\n/** A reason why a specific receipt cannot have a resolution created. */\nexport type ResolutionIneligibilityReason =\n\t| \"already_opened\"\n\t| \"already_refunded\"\n\t| \"free\"\n\t| \"not_paid\"\n\t| \"out_of_date\"\n\t| \"unsupported_payment_processor\";\n\n/** The different types of issues a resolution can be */\nexport type ResolutionIssueTypes =\n\t/** Forgot To Cancel */\n\t| \"forgot_to_cancel\"\n\t/** Item Not Received */\n\t| \"item_not_received\"\n\t/** Product Unacceptable */\n\t| \"product_unacceptable\"\n\t/** Significantly Not As Described */\n\t| \"significantly_not_as_described\"\n\t/** Unauthorized Transaction */\n\t| \"unauthorized_transaction\";\n\n/** The types of responses a merchant can make to a resolution. */\nexport type ResolutionMerchantResponses =\n\t| \"accept\"\n\t| \"appeal\"\n\t| \"deny\"\n\t| \"request_more_info\"\n\t| \"respond\";\n\n/** Possible values to filter user on */\nexport type ResolutionOrder = \"due_date\" | \"id\";\n\n/** The types of responses the platform can make to a resolution. */\nexport type ResolutionPlatformResponses =\n\t| \"merchant_refund\"\n\t| \"merchant_wins\"\n\t| \"platform_refund\"\n\t| \"request_buyer_info\"\n\t| \"request_merchant_info\";\n\n/** The different types of reporters for a resolution event */\nexport type ResolutionReporters =\n\t/** Customer */\n\t| \"customer\"\n\t/** Merchant */\n\t| \"merchant\"\n\t/** Platform */\n\t| \"platform\"\n\t/** System */\n\t| \"system\";\n\n/** The statuses a resolution object can have */\nexport type ResolutionStatuses =\n\t/** Customer Info Needed */\n\t| \"customer_info_needed\"\n\t/** Customer Response Needed */\n\t| \"customer_response_needed\"\n\t/** Customer Withdrew */\n\t| \"customer_withdrew\"\n\t/** Customer Won */\n\t| \"customer_won\"\n\t/** Merchant Info Needed */\n\t| \"merchant_info_needed\"\n\t/** Merchant Response Needed */\n\t| \"merchant_response_needed\"\n\t/** Merchant Won */\n\t| \"merchant_won\"\n\t/** Under Platform Review */\n\t| \"under_platform_review\";\n\n/** Which columns can be used to sort. */\nexport type ResolutionsSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** The different reason codes. */\nexport type RestrictionSetReasonCodes = \"blocked_country\";\n\n/** Autogenerated input type of RetryPaymentMyMembership */\nexport interface RetryPaymentMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to retry the payment for. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The status of a review report */\nexport type ReviewReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The statuses a review can have */\nexport type ReviewStatus =\n\t/** Pending */\n\t| \"pending\"\n\t/** Published */\n\t| \"published\"\n\t/** Removed */\n\t| \"removed\";\n\n/** Which columns can be used to sort. */\nexport type ReviewsSortableColumns = \"created_at\" | \"id\" | \"stars\";\n\n/** The available reward units to choose from. */\nexport type RewardUnits =\n\t/** Per Submission */\n\t| \"per_submission\"\n\t/** Per View */\n\t| \"per_view\";\n\n/** The status of an RFI */\nexport type RfiStatuses =\n\t/** Ignored */\n\t| \"ignored\"\n\t/** Pending Provider */\n\t| \"pending_provider\"\n\t/** Resolved */\n\t| \"resolved\"\n\t/** Waiting For Platform */\n\t| \"waiting_for_platform\"\n\t/** Waiting For User */\n\t| \"waiting_for_user\";\n\n/** The level of security an account has */\nexport type SecurityLevels = \"none\" | \"two_factor\";\n\n/** Autogenerated input type of SendMessage */\nexport interface SendMessageInput {\n\t/** The attachments for this message, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chat experience to send the message in. */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the feed to send to. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of the feed to send to. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** The message to send. */\n\tmessage: Scalars[\"String\"][\"input\"];\n\t/** The user to send the direct message to. */\n\ttoUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of SendNotification */\nexport interface SendNotificationInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company team to send the notification to */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The content of the notification */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the experience to send the notification to */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** An external ID for the notification */\n\texternalId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether the notification is a mention */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The link to open when the notification is clicked. If you just want to append\n\t * a rest path use the restPath parameter. You can link to any url here.\n\t */\n\tlink?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The rest path to append to the generated deep link that opens your app. Use\n\t * [restPath] in your app path in the dashboard to read this parameter.\n\t */\n\trestPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user sending the notification */\n\tsenderUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The subtitle of the notification */\n\tsubtitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the notification */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The IDs of the users to send the notification to. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** The status of a simple notification preference */\nexport type SimpleNotificationPreferenceStatus =\n\t/** Everything */\n\t| \"everything\"\n\t/** Nothing */\n\t| \"nothing\"\n\t/** Only Mentions */\n\t| \"only_mentions\";\n\n/** The different websites you can have social links for */\nexport type SocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The origin of the specific fee */\nexport type SpecificFeeOrigins =\n\t/** Affiliate Fee */\n\t| \"affiliate_fee\"\n\t/** Apple Processing Fee */\n\t| \"apple_processing_fee\"\n\t/** Billing Percentage Fee */\n\t| \"billing_percentage_fee\"\n\t/** Buyer Fee */\n\t| \"buyer_fee\"\n\t/** Cross Border Percentage Fee */\n\t| \"cross_border_percentage_fee\"\n\t/** Crypto Fee */\n\t| \"crypto_fee\"\n\t/** Dispute Alert Fee */\n\t| \"dispute_alert_fee\"\n\t/** Dispute Fee */\n\t| \"dispute_fee\"\n\t/** Fx Percentage Fee */\n\t| \"fx_percentage_fee\"\n\t/** Marketplace Affiliate Fee */\n\t| \"marketplace_affiliate_fee\"\n\t/** Orchestration Percentage Fee */\n\t| \"orchestration_percentage_fee\"\n\t/** Payment Processing Fixed Fee */\n\t| \"payment_processing_fixed_fee\"\n\t/** Payment Processing Percentage Fee */\n\t| \"payment_processing_percentage_fee\"\n\t/** Paypal Fee */\n\t| \"paypal_fee\"\n\t/** Platform Balance Processing Fee */\n\t| \"platform_balance_processing_fee\"\n\t/** Sales Tax Remittance */\n\t| \"sales_tax_remittance\"\n\t/** Sales Tax Remittance Reversal */\n\t| \"sales_tax_remittance_reversal\"\n\t/** Sezzle Processing Fee */\n\t| \"sezzle_processing_fee\"\n\t/** Splitit Processing Fee */\n\t| \"splitit_processing_fee\"\n\t/** Stripe Billing Fee */\n\t| \"stripe_billing_fee\"\n\t/** Stripe Domestic Processing Fee */\n\t| \"stripe_domestic_processing_fee\"\n\t/** Stripe Fixed Processing Fee */\n\t| \"stripe_fixed_processing_fee\"\n\t/** Stripe International Processing Fee */\n\t| \"stripe_international_processing_fee\"\n\t/** Stripe Payout Fee */\n\t| \"stripe_payout_fee\"\n\t/** Stripe Radar Fee */\n\t| \"stripe_radar_fee\"\n\t/** Stripe Sales Tax Fee */\n\t| \"stripe_sales_tax_fee\"\n\t/** Stripe Standard Processing Fee */\n\t| \"stripe_standard_processing_fee\"\n\t/** Three Ds Fixed Fee */\n\t| \"three_ds_fixed_fee\"\n\t/** Whop Processing Fee */\n\t| \"whop_processing_fee\";\n\n/** The configuration for receipts stats query. */\nexport interface StatsConfigInput {\n\t/** The access pass ids to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The bot ids to filter the data by. */\n\tbotIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Whether or not to filter data by direct to consumer or marketplace */\n\tdirectToConsumer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The feed ids to filter the data by. */\n\tfeedIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The plan ids to filter the data by. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Statuses for resources */\nexport type Status = \"active\" | \"archived\" | \"deleted\";\n\n/** The available bounty statuses to choose from. */\nexport type Statuses =\n\t/** Archived */\n\t| \"archived\"\n\t/** Published */\n\t| \"published\";\n\n/** Statuses for stripe accounts */\nexport type StripeAccountStatuses =\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"needs_completion\"\n\t| \"needs_reauthorization\"\n\t| \"reconnect_api_keys\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Types of Stripe accounts */\nexport type StripeAccountTypes =\n\t| \"connect\"\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\";\n\n/** The status that an external payout account can have */\nexport type StripeExternalAccountStatuses =\n\t/** Errored */\n\t| \"errored\"\n\t/** New */\n\t| \"new\"\n\t/** Validated */\n\t| \"validated\"\n\t/** Verification Failed */\n\t| \"verification_failed\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The methods that a StripePayout can have */\nexport type StripePayoutMethods =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The payout types that a StripePayout can have */\nexport type StripePayoutPayoutTypes =\n\t/** Bank Account */\n\t| \"bank_account\"\n\t/** Card */\n\t| \"card\";\n\n/** The status that a StripePayout can have */\nexport type StripePayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The status that a StripePayout's trace can have */\nexport type StripePayoutTraceStatuses =\n\t/** Pending */\n\t| \"pending\"\n\t/** Supported */\n\t| \"supported\"\n\t/** Unsupported */\n\t| \"unsupported\";\n\n/** Whether or not the tax is included in a plan's price (or if it hasn't been set up) */\nexport type TaxTypes =\n\t/** Tax is exclusive in the price of the plan. If its $20 before tax, its $25 after tax. The user is paying tax */\n\t| \"exclusive\"\n\t/** Tax is inclusive in the price of the plan. If its $20, its $20. The company already factored in tax and is paying tax */\n\t| \"inclusive\"\n\t/** The company hasn't set up tax yet */\n\t| \"unspecified\";\n\n/** Autogenerated input type of TerminateMyMembership */\nexport interface TerminateMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The internal ID of the membership to terminate. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of TestWebhookV2 */\nexport interface TestWebhookV2Input {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The event to test the webhook for. */\n\tevent: WebhookEvent;\n\t/** The ID of the webhook to test. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of ToggleCancelMyMembership */\nexport interface ToggleCancelMyMembershipInput {\n\t/** A multiple choice selection for why the user canceled. */\n\tcancelOption?: InputMaybe<CancelOptions>;\n\t/** The custom input from the user for canceling the membership. */\n\tcancelationReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The destination of the custom link */\nexport type TrackingLinkDestination =\n\t/** Access Pass Page */\n\t| \"access_pass_page\"\n\t/** Bot Page */\n\t| \"bot_page\"\n\t/** Checkout Page */\n\t| \"checkout_page\";\n\n/** Which columns can be used to sort. */\nexport type TrackingLinksSortableColumns =\n\t| \"clicks\"\n\t| \"conversion_rate\"\n\t| \"converted_users\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"revenue_generated\";\n\n/** The different types for a tracking pixel */\nexport type TrackingPixelTypes =\n\t/** Hubspot Pixel */\n\t| \"hubspot_pixel_id\"\n\t/** X Checkout Initiated Event */\n\t| \"x_checkout_initiated_event\"\n\t/** X Payment Method Event */\n\t| \"x_payment_method_event\"\n\t/** X Purchase Event */\n\t| \"x_purchase_event\";\n\n/** Autogenerated input type of TransferFunds */\nexport interface TransferFundsInput {\n\t/** The amount to withdraw */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency that is being withdrawn. */\n\tcurrency: Currencies;\n\t/** The ID of the destination (either a User tag, Bot tag, or LedgerAccount tag) */\n\tdestinationId: Scalars[\"ID\"][\"input\"];\n\t/** The feed identifier to notify of the transfer. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The feed type to notify of the transfer. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** A unique key to ensure idempotence. Use a UUID or similar. */\n\tidempotenceKey: Scalars[\"String\"][\"input\"];\n\t/** The ledger account id to transfer from. */\n\tledgerAccountId: Scalars[\"ID\"][\"input\"];\n\t/** Notes for the transfer. Maximum of 50 characters. */\n\tnotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The reason for the transfer. */\n\treason?: InputMaybe<CreditTransactionTransferReasons>;\n\t/** The fee that the client thinks it is being charged for the transfer. Used to verify the fee. */\n\ttransferFee?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n}\n\n/** Autogenerated input type of TransferLinkMyMembership */\nexport interface TransferLinkMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** This is the ID of the membership you want to create a transfer link for. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UnassignProductionAppBuild */\nexport interface UnassignProductionAppBuildInput {\n\t/** The ID of the app to unassign the production build from. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** What platform should be unassigned */\n\tplatform: AppBuildPlatforms;\n}\n\n/** Autogenerated input type of UnbanUser */\nexport interface UnbanUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The types of universal post feeds that you can retrieve */\nexport type UniversalPostFeedTypes =\n\t| \"access_pass\"\n\t| \"discover\"\n\t| \"home\"\n\t| \"recent_content_reward_submissions\"\n\t| \"user_profile\";\n\n/** Autogenerated input type of UpdateAccessPass */\nexport interface UpdateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID (tag) of the access pass */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show the offers on the access pass. */\n\tshowOffers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of UpdateAffiliate */\nexport interface UpdateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount the affiliate will earn (either amount or percent 1-100) */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The ID (tag) of the affiliate. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether or not the affiliate will only get one payout or it will be recurring. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of payout. */\n\tpayoutType?: InputMaybe<PayoutTypes>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanId: Scalars[\"String\"][\"input\"];\n\t/** Sets the affiliate as active/inactive. */\n\tstatus?: InputMaybe<Status>;\n}\n\n/** Autogenerated input type of UpdateAgentUser */\nexport interface UpdateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The ID of the user to update. */\n\tuserId: Scalars[\"ID\"][\"input\"];\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateApp */\nexport interface UpdateAppInput {\n\t/** The description of the app for the app store in-depth app view. */\n\tappStoreDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The base developer url of the app */\n\tbaseDevUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base preview url of the app */\n\tbasePreviewUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base production url of the app */\n\tbaseUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the dashboard view of the app */\n\tdashboardPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The default agent user ID for the app */\n\tdefaultAgentUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The description of the app */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the discover view of the app */\n\tdiscoverPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the hub view of the app */\n\texperiencePath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If the apps experience's should force showing the pre-checkout iframe, and not rely on app connections. */\n\tforceCheckoutIframe?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The hub call to action text of the app */\n\thubCta?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The icon for the app */\n\ticon?: InputMaybe<AttachmentInput>;\n\t/** The ID of the app */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/**\n\t * The image for the app\n\t * @deprecated Use icon instead\n\t */\n\timage?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The name of the app */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The product page text of the app */\n\tproductPage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The scopes that the app will request off of users when a user installs the app. */\n\trequiredScopes?: InputMaybe<Array<AppValidScopes>>;\n\t/**\n\t * If the status is live, the app is visible on Whop discovery. In order to be\n\t * live, you need to set the name, icon, and description. Being unlisted or\n\t * hidden means it's not visible on Whop but you can still install the app via\n\t * direct link. To remove the app from whop discovery, you should set the status to unlisted.\n\t */\n\tstatus?: InputMaybe<AppStatuses>;\n}\n\n/** Autogenerated input type of UpdateAppPermissionRequirements */\nexport interface UpdateAppPermissionRequirementsInput {\n\t/** The ID of the app the permission requirements are being updated for */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The permissions that the app will request off of users when a user installs the app. */\n\trequestedPermissions: Array<AppRequestedPermissionInput>;\n}\n\n/** Autogenerated input type of UpdateChapter */\nexport interface UpdateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateChapterOrder */\nexport interface UpdateChapterOrderInput {\n\t/** The ID of the chapter to place this chapter below */\n\tbelowChapterId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to reorder */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateLesson */\nexport interface UpdateLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the lesson to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The type of the lesson */\n\tlessonType?: InputMaybe<LessonTypes>;\n\t/** The ID of the Mux asset to attach to this lesson */\n\tmuxAssetId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Determines how / whether this lesson is visible to users. */\n\tvisibility?: InputMaybe<LessonVisibilities>;\n}\n\n/** Autogenerated input type of UpdateLessonOrder */\nexport interface UpdateLessonOrderInput {\n\t/** The ID of the lesson to place this lesson below */\n\tbelowLessonId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to move the lesson to */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to reorder */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateMembership */\nexport interface UpdateMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of trial days to add to the membership to extend it. */\n\tfreeDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID (tag) of the membership. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The action being applied to the specific membership. */\n\tmembershipAction: MembershipActions;\n}\n\n/** Autogenerated input type of UpdateWebhook */\nexport interface UpdateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The ID of the Webhook to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The URL to send the webhook to. */\n\turl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\nexport interface UploadPartInput {\n\t/** The ETag of the part */\n\tetag: Scalars[\"String\"][\"input\"];\n\t/** The part number of the part */\n\tpartNumber: Scalars[\"Int\"][\"input\"];\n}\n\nexport interface UpsellPlanInput {\n\t/** The base currency of the upsell. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The price of the upsell. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The method of release for the upsell. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n}\n\n/** The different types of upsells an experience can have. */\nexport type UpsellTypes =\n\t/** After Checkout */\n\t| \"after_checkout\"\n\t/** Before Checkout */\n\t| \"before_checkout\"\n\t/** Only In Whop */\n\t| \"only_in_whop\";\n\n/** Filters for the user affiliate referral logs search */\nexport interface UserAffiliateReferralLogFilters {\n\t/** Which direction the order should be in. */\n\tdirection?: InputMaybe<Direction>;\n\t/** How you want to order the results. */\n\torder?: InputMaybe<UserAffiliateReferralLogOrder>;\n\t/** What to search by: whop username, access pass name, or bot title */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the logs by */\nexport type UserAffiliateReferralLogOrder = \"id\";\n\n/** The configuration for a chart. */\nexport interface UserChartConfigInput {\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface UserContentRewardsSubmissionsFilters {\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<UserContentRewardsSubmissionsOrder>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type UserContentRewardsSubmissionsOrder =\n\t| \"amount_paid_out\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"total_view_count\";\n\n/** The channel of the user notification preference */\nexport type UserNotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** The steps a user can follow to complete onboarding */\nexport type UserOnboardingStepsTypes =\n\t| \"add_birthday\"\n\t| \"add_email\"\n\t| \"add_name\"\n\t| \"add_phone\"\n\t| \"add_profile_picture\"\n\t| \"add_username\"\n\t| \"download_mobile_app\"\n\t| \"join_a_whop\"\n\t| \"select_interests\"\n\t| \"verify_email\"\n\t| \"verify_phone\";\n\n/** Values to filter user receipts on */\nexport interface UserReceiptFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<UserReceiptOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter receipts by 'free', 'paid', or 'all'. */\n\ttype?: InputMaybe<UserReceiptPaidTypeFilter>;\n}\n\n/** The order to sort the results by. */\nexport type UserReceiptOrder = \"paid_at\";\n\n/** The filter to apply to the results. */\nexport type UserReceiptPaidTypeFilter = \"all\" | \"free\" | \"paid\";\n\n/** The different websites you can have social links for */\nexport type UserSocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The type of a user */\nexport type UserTypes =\n\t/** Agent */\n\t| \"agent\"\n\t/** Human */\n\t| \"human\"\n\t/** System */\n\t| \"system\";\n\n/** The order to sort the results by. */\nexport type ValidMembershipsOrder = \"expires_at\" | \"id\" | \"ordering_status\";\n\n/** A vaulting method for a payment token. */\nexport type VaultMethods =\n\t/** Paypal Wallet */\n\t| \"paypal_wallet\"\n\t/** Venmo Wallet */\n\t| \"venmo_wallet\";\n\n/** The different providers a vault token can be. */\nexport type VaultTokenProviders =\n\t/** Basis Theory */\n\t\"basis_theory\";\n\n/** An error code for a verification attempt. */\nexport type VerificationErrorCodes =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Consent Declined */\n\t| \"consent_declined\"\n\t/** Country Not Supported */\n\t| \"country_not_supported\"\n\t/** Device Not Supported */\n\t| \"device_not_supported\"\n\t/** Document Expired */\n\t| \"document_expired\"\n\t/** Document Type Not Supported */\n\t| \"document_type_not_supported\"\n\t/** Document Unverified Other */\n\t| \"document_unverified_other\"\n\t/** Email Unverified Other */\n\t| \"email_unverified_other\"\n\t/** Email Verification Declined */\n\t| \"email_verification_declined\"\n\t/** Id Number Insufficient Document Data */\n\t| \"id_number_insufficient_document_data\"\n\t/** Id Number Mismatch */\n\t| \"id_number_mismatch\"\n\t/** Id Number Unverified Other */\n\t| \"id_number_unverified_other\"\n\t/** Phone Unverified Other */\n\t| \"phone_unverified_other\"\n\t/** Phone Verification Declined */\n\t| \"phone_verification_declined\"\n\t/** Selfie Document Missing Photo */\n\t| \"selfie_document_missing_photo\"\n\t/** Selfie Face Mismatch */\n\t| \"selfie_face_mismatch\"\n\t/** Selfie Manipulated */\n\t| \"selfie_manipulated\"\n\t/** Selfie Unverified Other */\n\t| \"selfie_unverified_other\"\n\t/** Under Supported Age */\n\t| \"under_supported_age\";\n\n/** The different providers a payout account can be. */\nexport type VerificationProviders =\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Veriff */\n\t| \"veriff\";\n\n/** A status for a verification. */\nexport type VerificationStatuses =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Approved */\n\t| \"approved\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Requires Input */\n\t| \"requires_input\"\n\t/** Resubmission Requested */\n\t| \"resubmission_requested\"\n\t/** Review */\n\t| \"review\"\n\t/** Started */\n\t| \"started\"\n\t/** Submitted */\n\t| \"submitted\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The status of a bots Whop Verified. */\nexport type VerifiedStatuses = \"accepted\" | \"applied\" | \"rejected\";\n\n/** The types of version events that are possible. */\nexport type VersionEventTypes = \"create\" | \"destroy\" | \"update\";\n\n/** Filters for the version search */\nexport interface VersionFilters {\n\t/** The direction to filter the audit logs */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all Audit Logs created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The event type to filter by. */\n\teventType?: InputMaybe<Array<VersionEventTypes>>;\n\t/** The object type to filter by. */\n\tobjectType?: InputMaybe<Array<VersionObjects>>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<VersionOrder>;\n\t/** The text that is being searched. Searches the version's identifier, which is usually a name or ID related to the object. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all Audit Logs created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user who triggered this audit log */\n\tuserId?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n}\n\n/** The types of objects that have versions available for them. */\nexport type VersionObjects =\n\t| \"access_pass\"\n\t| \"affiliate\"\n\t| \"authorized_user\"\n\t| \"bot\"\n\t| \"discord_server\"\n\t| \"experience\"\n\t| \"plan\"\n\t| \"promo_code\"\n\t| \"stripe_account\";\n\n/** The order to sort the memberships by */\nexport type VersionOrder = \"event\" | \"id\";\n\n/** Visibility of a resource */\nexport type Visibility =\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different levels of visibility for resources */\nexport type VisibilityFilter =\n\t| \"all\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t| \"not_archived\"\n\t| \"not_quick_link\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Autogenerated input type of VoidInvoice */\nexport interface VoidInvoiceInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the invoice to void */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The different event types available */\nexport type WebhookEvent =\n\t| \"app_membership_cancel_at_period_end_changed\"\n\t| \"app_membership_went_invalid\"\n\t| \"app_membership_went_valid\"\n\t| \"app_payment_failed\"\n\t| \"app_payment_pending\"\n\t| \"app_payment_succeeded\"\n\t| \"dispute_alert_created\"\n\t| \"dispute_created\"\n\t| \"dispute_updated\"\n\t| \"invoice_created\"\n\t| \"invoice_paid\"\n\t| \"invoice_past_due\"\n\t| \"invoice_voided\"\n\t| \"membership_cancel_at_period_end_changed\"\n\t| \"membership_experience_claimed\"\n\t| \"membership_metadata_updated\"\n\t| \"membership_went_invalid\"\n\t| \"membership_went_valid\"\n\t| \"payment_affiliate_reward_created\"\n\t| \"payment_failed\"\n\t| \"payment_pending\"\n\t| \"payment_succeeded\"\n\t| \"refund_created\"\n\t| \"refund_updated\"\n\t| \"resolution_created\"\n\t| \"resolution_decided\"\n\t| \"resolution_updated\";\n\n/** The anchor for when the Connected Account will be paid out */\nexport type WeeklyAnchors =\n\t| \"friday\"\n\t| \"monday\"\n\t| \"saturday\"\n\t| \"sunday\"\n\t| \"thursday\"\n\t| \"tuesday\"\n\t| \"wednesday\";\n\n/** Who can post on a chat feed */\nexport type WhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a chat feed */\nexport type WhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter users on */\nexport interface WhopSidebarFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarOrderEnum =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** Values to filter users on */\nexport interface WhopSidebarWithEarningsFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarWithEarningsOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarWithEarningsOrderEnum =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The different fee types for a withdrawal. */\nexport type WithdrawalFeeTypes = \"exclusive\" | \"inclusive\";\n\n/** Values to filter the withdrawals on. */\nexport interface WithdrawalFilters {\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The withdrawal status/state */\n\tstatuses?: InputMaybe<Array<WithdrawalStatus>>;\n}\n\n/** The method used for withdrawing. */\nexport type WithdrawalMethods =\n\t/** Ach */\n\t| \"ach\"\n\t/** Btc */\n\t| \"btc\"\n\t/** Cash App */\n\t| \"cash_app\"\n\t/** Check */\n\t| \"check\"\n\t/** Echeck */\n\t| \"echeck\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Venmo */\n\t| \"venmo\"\n\t/** Wire Transfer */\n\t| \"wire_transfer\"\n\t/** Zelle */\n\t| \"zelle\";\n\n/** The statuses a review can have */\nexport type WithdrawalProviders =\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Tipalti */\n\t| \"tipalti\";\n\n/** The different speeds of withdrawals */\nexport type WithdrawalSpeeds =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The status of a withdrawal request */\nexport type WithdrawalStatus =\n\t/** Awaiting Payment */\n\t| \"awaiting_payment\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of withdrawals */\nexport type WithdrawalTypes =\n\t/** Clawback */\n\t| \"clawback\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type WithdrawalsSortableColumns = \"amount\" | \"created_at\" | \"id\";\n\nexport type AccessPassFragmentFragment = {\n\t__typename?: \"PublicAccessPass\";\n\tid: string;\n\ttitle: string;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\troute: string;\n\tactiveUsersCount: number;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BaseAccessPassFragment = {\n\t__typename?: \"AccessPass\";\n\tid: string;\n\tcreatedAt: number;\n\troute: string;\n\ttitle: string;\n\theadline?: string | null;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\tactiveUsersCount: number;\n\treviewsAverage: number;\n\tcreatorPitch?: string | null;\n\tupdatedAtMs: string;\n\tshowOffers: boolean;\n\tredirectPurchaseUrl?: string | null;\n\tcustomCta: CustomCtas;\n\tcustomCtaUrl?: string | null;\n\tglobalAffiliatePercentage?: number | null;\n\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\tmemberAffiliatePercentage?: number | null;\n\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\tshowMemberCount: boolean;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAffiliateFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n};\n\nexport type AffiliateWithUserFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n\tuserAccount: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BaseAppBuildFragment = {\n\t__typename?: \"AppBuild\";\n\tid: string;\n\tcreatedAt: number;\n\tfileUrl: string;\n\tchecksum: string;\n\tplatform: AppBuildPlatforms;\n\treviewMessage?: string | null;\n\tsupportedAppViewTypes: Array<AppViewTypes>;\n\tstatus: AppBuildStatuses;\n};\n\nexport type BaseAppFragment = {\n\t__typename?: \"App\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tstatus: AppStatuses;\n\tusingDefaultIcon: boolean;\n\tbaseUrl?: string | null;\n\tbaseDevUrl?: string | null;\n\texperiencePath?: string | null;\n\tdiscoverPath?: string | null;\n\tdashboardPath?: string | null;\n\ticon?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAppApiKeyFragment = {\n\t__typename?: \"PrivateApiKey\";\n\tid: string;\n\ttoken: string;\n\tcreatedAt: number;\n};\n\nexport type BaseAppAgentUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n};\n\nexport type BaseAppStatsFragment = {\n\t__typename?: \"PublicAppStats\";\n\tdau: number;\n\tmau: number;\n\ttimeSpentLast24HoursInSeconds: number;\n\twau: number;\n};\n\ntype Attachment_AudioAttachment_Fragment = {\n\t__typename: \"AudioAttachment\";\n\tduration?: number | null;\n\twaveformUrl?: string | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_ImageAttachment_Fragment = {\n\t__typename: \"ImageAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tblurhash?: string | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_OtherAttachment_Fragment = {\n\t__typename: \"OtherAttachment\";\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_VideoAttachment_Fragment = {\n\t__typename: \"VideoAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tduration?: number | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\nexport type AttachmentFragment =\n\t| Attachment_AudioAttachment_Fragment\n\t| Attachment_ImageAttachment_Fragment\n\t| Attachment_OtherAttachment_Fragment\n\t| Attachment_VideoAttachment_Fragment;\n\nexport type BaseAuthorizedUserFragment = {\n\t__typename?: \"AuthorizedUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tuserId: string;\n\temail?: string | null;\n\trole: AuthorizedUserRoles;\n};\n\nexport type BaseInvoiceFragment = {\n\t__typename?: \"Invoice\";\n\tid: string;\n\tcreatedAt: number;\n\tstatus: InvoiceStatuses;\n\tnumber: string;\n\tdueDate?: number | null;\n\temailAddress?: string | null;\n\tfetchInvoiceToken: string;\n\tcurrentPlan: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\tformattedPrice: string;\n\t\tbaseCurrency: Currencies;\n\t};\n\tmember?: {\n\t\t__typename?: \"Member\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername?: string | null;\n\t} | null;\n};\n\nexport type BaseLedgerAccountFragment = {\n\t__typename?: \"LedgerAccount\";\n\tid: string;\n\ttransferFee?: number | null;\n\tbalanceCaches: {\n\t\t__typename?: \"BalanceCacheConnection\";\n\t\tnodes?: Array<{\n\t\t\t__typename?: \"BalanceCache\";\n\t\t\tbalance: number;\n\t\t\tpendingBalance: number;\n\t\t\tcurrency: Currencies;\n\t\t} | null> | null;\n\t};\n};\n\nexport type BasePublicPlanFragment = {\n\t__typename?: \"PublicPlan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock?: number | null;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n};\n\nexport type BasePlanFragment = {\n\t__typename?: \"Plan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock: number;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n\ttitle: string;\n\tdescription?: string | null;\n\tname?: string | null;\n\tformattedPrice: string;\n\tformattedBillingPeriod?: string | null;\n};\n\nexport type BaseReceiptFragment = {\n\t__typename?: \"Receipt\";\n\tid: string;\n\tsettledUsdAmount?: number | null;\n\tbillingReason?: string | null;\n\tlast4?: string | null;\n\tcurrency?: Currencies | null;\n\tstatus?: ReceiptStatus | null;\n\tcreatedAt: number;\n\ttotal?: number | null;\n\tbrand?: string | null;\n\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\tpaymentMethodType?: string | null;\n\tdisputeAlertedAt?: number | null;\n\tfinalAmount: number;\n\tpresentedFinalAmount?: number | null;\n\tpresentedSettledUsdAmount?: number | null;\n\trefundedAmount?: number | null;\n\tfriendlyStatus: FriendlyReceiptStatus;\n\tfailureMessage?: string | null;\n\trefundable: boolean;\n\tretryable: boolean;\n\tpaidAt?: number | null;\n\tamountAfterFees: number;\n\tchargeSkippedPriceTooLow: boolean;\n\tlastPaymentAttempt?: number | null;\n\tautoRefunded: boolean;\n\ttotalUsdAmount?: number | null;\n\tmostRecentRiskScore?: number | null;\n\taddress?: {\n\t\t__typename?: \"Address\";\n\t\tname?: string | null;\n\t\tline1?: string | null;\n\t\tline2?: string | null;\n\t\tcity?: string | null;\n\t\tstate?: string | null;\n\t\tpostalCode?: string | null;\n\t\tcountry?: string | null;\n\t} | null;\n\tmember?: {\n\t\t__typename?: \"CompanyMember\";\n\t\theader: string;\n\t\tuser?: {\n\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\tid: string;\n\t\t\tusername: string;\n\t\t\tname?: string | null;\n\t\t\temail?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tcountryName?: string | null;\n\t\t} | null;\n\t\timageSrcset: {\n\t\t\t__typename?: \"ImgSrcset\";\n\t\t\toriginal: string;\n\t\t\tdouble: string;\n\t\t\tisVideo: boolean;\n\t\t};\n\t} | null;\n\tplan?: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\ttitle: string;\n\t\tformattedPrice: string;\n\t\tinitialPrice: number;\n\t\trenewalPrice: number;\n\t\tpaymentLinkDescription?: string | null;\n\t} | null;\n\tmembership?: {\n\t\t__typename?: \"Membership\";\n\t\tid: string;\n\t\tstatus: MembershipStatus;\n\t} | null;\n\tpromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tamountOff: number;\n\t\tbaseCurrency: Currencies;\n\t\tpromoType: PromoTypes;\n\t\tnumberOfIntervals?: number | null;\n\t} | null;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BaseUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\temail?: string | null;\n\tname?: string | null;\n\tusername: string;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasePublicProfileUserFragment = {\n\t__typename?: \"PublicProfileUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tphoneVerified: boolean;\n\tcity?: string | null;\n\tcountry?: string | null;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasicCourseFragment = {\n\t__typename?: \"Course\";\n\tcertificateAfterCompletionEnabled?: boolean | null;\n\tcoverImage?: string | null;\n\tdescription?: string | null;\n\tid: string;\n\tlanguage: Languages;\n\trequireCompletingLessonsInOrder: boolean;\n\ttagline?: string | null;\n\ttitle?: string | null;\n\tvideoProtectionEnabled: boolean;\n\tchapters: Array<{\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t}>;\n};\n\nexport type BasicCourseChapterFragment = {\n\t__typename?: \"Chapter\";\n\tid: string;\n\ttitle: string;\n\torder: number;\n\tlessons: Array<{\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tcontent?: string | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t}>;\n};\n\nexport type BasicCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tcontent?: string | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n};\n\nexport type CompanyFragmentFragment = {\n\t__typename?: \"PublicCompany\";\n\tid: string;\n\ttitle: string;\n\troute: string;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type ExperienceFragmentFragment = {\n\t__typename?: \"CustomPrivate\";\n\tid: string;\n\tname?: string | null;\n\tdescription?: string | null;\n\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type PublicExperienceFragmentFragment = {\n\t__typename?: \"PublicExperience\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ForumPostFragmentFragment = {\n\t__typename?: \"ForumPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tmentionedUserIds: Array<string>;\n\tparentId?: string | null;\n\tviewCount?: number | null;\n\tisPinned: boolean;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type FullCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tcontent?: string | null;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n\tassessmentQuestions: Array<{\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t}>;\n\tattachments: {\n\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\tnodes?: Array<\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null\n\t\t> | null;\n\t};\n\tmainPdf?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type CourseMuxAssetFragment = {\n\t__typename?: \"MuxAsset\";\n\tid: string;\n\tmuxAssetId?: string | null;\n\tplaybackId?: string | null;\n\tsignedPlaybackId?: string | null;\n\tsignedThumbnailPlaybackToken?: string | null;\n\tsignedVideoPlaybackToken?: string | null;\n\tsignedStoryboardPlaybackToken?: string | null;\n\tdurationSeconds?: number | null;\n\tstatus: MuxAssetStatuses;\n\tfinishedUploadingAt?: number | null;\n};\n\nexport type CourseAssessmentQuestionFragment = {\n\t__typename?: \"AssessmentQuestion\";\n\tid: string;\n\tcorrectAnswer: string;\n\torder: number;\n\tquestionText: string;\n\tquestionType: CoursesAssessmentQuestionTypes;\n\timage?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n\toptions: Array<{\n\t\t__typename?: \"AssessmentQuestionOption\";\n\t\tid: string;\n\t\tisCorrect: boolean;\n\t\toptionText: string;\n\t\torder: number;\n\t}>;\n};\n\nexport type BaseCompanyMemberFragment = {\n\t__typename?: \"CompanyMember\";\n\tid: string;\n\tcreatedAt: number;\n\tupdatedAtMs: string;\n\tjoinedAt: number;\n\tstatus: MemberStatuses;\n\tphone?: string | null;\n\taccessLevel: AccessLevel;\n\ttotalSpent: number;\n\tusdTotalSpent: string;\n\tmrr: string;\n\tuser?: {\n\t\t__typename?: \"CompanyMemberUser\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername: string;\n\t} | null;\n\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n};\n\nexport type MessageFragment = {\n\t__typename?: \"DmsPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tisPinned: boolean;\n\tisEveryoneMentioned: boolean;\n\tmentionedUserIds: Array<string>;\n\tmessageType: DmsPostTypes;\n\treplyingToPostId?: string | null;\n\tviewCount?: number | null;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BasePromoCodeFragment = {\n\t__typename?: \"PromoCode\";\n\tid: string;\n\tcode?: string | null;\n\tpromoType: PromoTypes;\n\tduration?: PromoDurations | null;\n\tcreatedAt: number;\n\texpirationDatetime?: number | null;\n\tbaseCurrency: Currencies;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals?: number | null;\n\tstatus: PromoCodeStatus;\n\tstock: number;\n\tunlimitedStock: boolean;\n\tuses: number;\n\tonePerCustomer: boolean;\n\tchurnedUsersOnly: boolean;\n\tnewUsersOnly: boolean;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BasePublicPromoCodeFragment = {\n\t__typename?: \"PublicPromoCode\";\n\tid: string;\n\tcode: string;\n\tcreatedAt: number;\n\tpromoType: PromoTypes;\n\tbaseCurrency: Currencies;\n\tduration: PromoDurations;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals: number;\n\tisPopupPromo: boolean;\n};\n\nexport type BaseWebhookFragment = {\n\t__typename?: \"Webhook\";\n\tid: string;\n\turl: string;\n\tapiVersion: ApiVersion;\n\tcreatedAt: number;\n\tenabled: boolean;\n\tevents: Array<WebhookEvent>;\n\tresourceId: string;\n\twebhookSecret: string;\n};\n\nexport type GetAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\taccessPass: {\n\t\t__typename?: \"PublicAccessPass\";\n\t\theadline?: string | null;\n\t\treviewsAverage: number;\n\t\tid: string;\n\t\ttitle: string;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\troute: string;\n\t\tactiveUsersCount: number;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\townerUser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tgalleryImages: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type GetAttachmentQueryVariables = Exact<{\n\tid: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAttachmentQuery = {\n\t__typename?: \"PublicQuery\";\n\tattachment:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  };\n};\n\nexport type ProcessAttachmentMutationVariables = Exact<{\n\tinput: AnalyzeAttachmentInput;\n}>;\n\nexport type ProcessAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaAnalyzeAttachment?: boolean | null;\n};\n\nexport type UploadMediaMutationVariables = Exact<{\n\tinput: DirectUploadInput;\n}>;\n\nexport type UploadMediaMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaDirectUpload?: {\n\t\t__typename?: \"DirectUpload\";\n\t\tid: string;\n\t\theaders: { [key: string]: any };\n\t\tuploadUrl?: string | null;\n\t\tmultipartUploadId?: string | null;\n\t\tmultipartUploadUrls?: Array<{\n\t\t\t__typename?: \"MultipartUrl\";\n\t\t\tpartNumber: number;\n\t\t\turl: string;\n\t\t}> | null;\n\t} | null;\n};\n\nexport type GetCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tindustryType?: IndustryTypes | null;\n\t\tbusinessType?: BusinessTypes | null;\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type CreateAssessmentQuestionMutationVariables = Exact<{\n\tinput: CreateAssessmentQuestionInput;\n}>;\n\nexport type CreateAssessmentQuestionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAssessmentQuestion?: {\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateChapterMutationVariables = Exact<{\n\tinput: CreateChapterInput;\n}>;\n\nexport type CreateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateCourseMutationVariables = Exact<{\n\tinput: CreateCourseInput;\n}>;\n\nexport type CreateCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateLessonMutationVariables = Exact<{\n\tinput: CreateLessonInput;\n}>;\n\nexport type CreateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAssessmentQuestionImageMutationVariables = Exact<{\n\tinput: DeleteAssessmentQuestionImageInput;\n}>;\n\nexport type DeleteAssessmentQuestionImageMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAssessmentQuestionImage?: boolean | null;\n};\n\nexport type DeleteChapterMutationVariables = Exact<{\n\tinput: DeleteChapterInput;\n}>;\n\nexport type DeleteChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteChapter?: boolean | null;\n};\n\nexport type DeleteLessonAttachmentMutationVariables = Exact<{\n\tinput: DeleteLessonAttachmentInput;\n}>;\n\nexport type DeleteLessonAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLessonAttachment?: boolean | null;\n};\n\nexport type DeleteLessonMutationVariables = Exact<{\n\tinput: DeleteLessonInput;\n}>;\n\nexport type DeleteLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLesson?: boolean | null;\n};\n\nexport type GetCourseQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCourseQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type GetLessonQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetLessonQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tlesson?: {\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tcontent?: string | null;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t\tassessmentQuestions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\t\tid: string;\n\t\t\t\tcorrectAnswer: string;\n\t\t\t\torder: number;\n\t\t\t\tquestionText: string;\n\t\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\t\timage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t\toptions: Array<{\n\t\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tisCorrect: boolean;\n\t\t\t\t\toptionText: string;\n\t\t\t\t\torder: number;\n\t\t\t\t}>;\n\t\t\t}>;\n\t\t\tattachments: {\n\t\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\t\tnodes?: Array<\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null\n\t\t\t\t> | null;\n\t\t\t};\n\t\t\tmainPdf?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetUserLessonInteractionsQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserLessonInteractionsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonInteraction?: {\n\t\t\t\t\t__typename?: \"LessonInteraction\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcompleted: boolean;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListCoursesForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tid: string;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\texperience: {\n\t\t\t\t\t__typename?: \"PublicExperience\";\n\t\t\t\t\tid: string;\n\t\t\t\t\taccessPasses: Array<{\n\t\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListCoursesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tlanguage: Languages;\n\t\t\t\trequireCompletingLessonsInOrder: boolean;\n\t\t\t\ttagline?: string | null;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tvideoProtectionEnabled: boolean;\n\t\t\t\tchapters: Array<{\n\t\t\t\t\t__typename?: \"Chapter\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\torder: number;\n\t\t\t\t\tlessons: Array<{\n\t\t\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tlessonType: LessonTypes;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t\torder: number;\n\t\t\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\t\tmuxAsset?: {\n\t\t\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t\t\t} | null;\n\t\t\t\t\t}>;\n\t\t\t\t}>;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MarkLessonAsCompletedMutationVariables = Exact<{\n\tinput: MarkLessonAsCompletedInput;\n}>;\n\nexport type MarkLessonAsCompletedMutation = {\n\t__typename?: \"PublicMutation\";\n\tmarkLessonAsCompleted?: boolean | null;\n};\n\nexport type MoveCourseMutationVariables = Exact<{\n\tinput: MoveCourseInput;\n}>;\n\nexport type MoveCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tmoveCourse?: boolean | null;\n};\n\nexport type UpdateChapterOrderMutationVariables = Exact<{\n\tinput: UpdateChapterOrderInput;\n}>;\n\nexport type UpdateChapterOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapterOrder?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateChapterMutationVariables = Exact<{\n\tinput: UpdateChapterInput;\n}>;\n\nexport type UpdateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateLessonOrderMutationVariables = Exact<{\n\tinput: UpdateLessonOrderInput;\n}>;\n\nexport type UpdateLessonOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLessonOrder?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type UpdateLessonMutationVariables = Exact<{\n\tinput: UpdateLessonInput;\n}>;\n\nexport type UpdateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tupsellType?: UpsellTypes | null;\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tupsellPlan?: {\n\t\t\t__typename?: \"PublicPlan\";\n\t\t\tid: string;\n\t\t\tbaseCurrency: Currencies;\n\t\t\trawRenewalPrice: number;\n\t\t\trawInitialPrice: number;\n\t\t\tinitialPriceDue: number;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAt: number;\n\t\t\tbillingPeriod?: number | null;\n\t\t\ttrialPeriodDays?: number | null;\n\t\t\texpirationDays?: number | null;\n\t\t\tunlimitedStock: boolean;\n\t\t\tpaymentLinkDescription?: string | null;\n\t\t\treleaseMethod: ReleaseMethod;\n\t\t\tstock?: number | null;\n\t\t\tvisibility: Visibility;\n\t\t\tplanType: PlanTypes;\n\t\t} | null;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tapp: {\n\t\t\t__typename?: \"PublicApp\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\ticon?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type ListUsersForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tsearchQuery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListUsersForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tusers?: {\n\t\t\t__typename?: \"PublicProfileUserConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tusername: string;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t};\n\t\t} | null;\n\t};\n};\n\nexport type ListForumPostsFromForumQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListForumPostsFromForumQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| { __typename?: \"DmsPost\" }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ForumPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tparentId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type ListMessagesFromChatQueryVariables = Exact<{\n\tchatExperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type ListMessagesFromChatQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"DmsPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tisEveryoneMentioned: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tmessageType: DmsPostTypes;\n\t\t\t\t\treplyingToPostId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| { __typename?: \"ForumPost\" }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type GetCurrentUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tbio?: string | null;\n\t\t\tphoneVerified: boolean;\n\t\t\tbannerImage?: string | null;\n\t\t\tcreatedAt: number;\n\t\t\tdateOfBirthDay?: number | null;\n\t\t\tdateOfBirthMonth?: number | null;\n\t\t\tdateOfBirthYear?: number | null;\n\t\t\tid: string;\n\t\t\temail?: string | null;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type GetUserLedgerAccountQueryVariables = Exact<{\n\t[key: string]: never;\n}>;\n\nexport type GetUserLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type GetUserQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tbio?: string | null;\n\t\tphoneVerified: boolean;\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tbanner?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tuserStat?: {\n\t\t\t__typename?: \"UserStat\";\n\t\t\tmoneyEarned24Hours?: number | null;\n\t\t\tmoneyEarned30Days?: number | null;\n\t\t\tmoneyEarned7Days?: number | null;\n\t\t\tmoneyEarnedLifetime?: number | null;\n\t\t} | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type Requester<C = {}> = <R, V>(\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvars?: V,\n\toptions?: C,\n) => Promise<R>;\n\nexport type WithError<T> = T extends object ? T & { _error?: Error } : T;\nexport function carryErrors<Full, Extracted>(\n\tres: Full,\n\tdata: Extracted,\n): WithError<Extracted> {\n\tif (\n\t\ttypeof res === \"object\" &&\n\t\tres &&\n\t\t\"_error\" in res &&\n\t\tres._error &&\n\t\tres._error instanceof Error &&\n\t\ttypeof data === \"object\" &&\n\t\tdata\n\t) {\n\t\t(data as any)._error = res._error;\n\t}\n\treturn data as WithError<Extracted>;\n}\n\nexport function getSdk<C>(requester: Requester<C>) {\n\treturn {\n\t\taccessPasses: {\n\t\t\tgetAccessPass(\n\t\t\t\tvariables: GetAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAccessPassQuery[\"accessPass\"]>> {\n\t\t\t\treturn requester<GetAccessPassQuery, GetAccessPassQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:fa2b3d0ff6975e2e05c1e649fb853892460355f2a4e9bd33a67ef9bcdf6ed686\",\n\t\t\t\t\t\"getAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.accessPass));\n\t\t\t},\n\t\t},\n\t\tattachments: {\n\t\t\tgetAttachment(\n\t\t\t\tvariables: GetAttachmentQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAttachmentQuery[\"attachment\"]>> {\n\t\t\t\treturn requester<GetAttachmentQuery, GetAttachmentQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:07f48fb0c1292fda5a8dd5f54b5d1b637635a87b6012769819ebcf7795a045ba\",\n\t\t\t\t\t\"getAttachment\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.attachment));\n\t\t\t},\n\t\t\tprocessAttachment(\n\t\t\t\tvariables: ProcessAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ProcessAttachmentMutation[\"mediaAnalyzeAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tProcessAttachmentMutation,\n\t\t\t\t\tProcessAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:396c5803051b3c9bcedd3ce310505a4f57a6b94bc190e7142e897d9aa5036ece\",\n\t\t\t\t\t\"processAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaAnalyzeAttachment));\n\t\t\t},\n\t\t\tuploadMedia(\n\t\t\t\tvariables: UploadMediaMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UploadMediaMutation[\"mediaDirectUpload\"]>> {\n\t\t\t\treturn requester<UploadMediaMutation, UploadMediaMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:a3d06ed16e52126d96aae83cad3400471246f37fc275e4c8f4836c98bf8e9d59\",\n\t\t\t\t\t\"uploadMedia\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaDirectUpload));\n\t\t\t},\n\t\t},\n\t\tcompanies: {\n\t\t\tgetCompany(\n\t\t\t\tvariables: GetCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetCompanyQuery, GetCompanyQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:e640d46816020225ad7ec377936056cabb7e8e07a88ba376e926ba18aca1cc5c\",\n\t\t\t\t\t\"getCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tcourses: {\n\t\t\tcreateAssessmentQuestion(\n\t\t\t\tvariables: CreateAssessmentQuestionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateAssessmentQuestionMutation[\"createAssessmentQuestion\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAssessmentQuestionMutation,\n\t\t\t\t\tCreateAssessmentQuestionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:52902016f3a8cf2b819038945ded34a0caafd80c9a867403ca36451c39f56ac6\",\n\t\t\t\t\t\"createAssessmentQuestion\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAssessmentQuestion));\n\t\t\t},\n\t\t\tcreateChapter(\n\t\t\t\tvariables: CreateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateChapterMutation[\"createChapter\"]>> {\n\t\t\t\treturn requester<CreateChapterMutation, CreateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:8ebe9533278b00eded622eef765baeebf70fccedcd5d60854f8777812da20311\",\n\t\t\t\t\t\"createChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChapter));\n\t\t\t},\n\t\t\tcreateCourse(\n\t\t\t\tvariables: CreateCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateCourseMutation[\"createCourse\"]>> {\n\t\t\t\treturn requester<CreateCourseMutation, CreateCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:41f957dfc0e147131265e62e4b5ae6f743256f6bf7a4e28e042a3469777e9c35\",\n\t\t\t\t\t\"createCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCourse));\n\t\t\t},\n\t\t\tcreateLesson(\n\t\t\t\tvariables: CreateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateLessonMutation[\"createLesson\"]>> {\n\t\t\t\treturn requester<CreateLessonMutation, CreateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:33069f4d2b756d6a9a2a486d0ac6d91272c9acbd9d3774c15e12d7b39f3df6f4\",\n\t\t\t\t\t\"createLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createLesson));\n\t\t\t},\n\t\t\tdeleteAssessmentQuestionImage(\n\t\t\t\tvariables: DeleteAssessmentQuestionImageMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation[\"deleteAssessmentQuestionImage\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation,\n\t\t\t\t\tDeleteAssessmentQuestionImageMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:07563fb79b45fd9fbe7ef7d14923014e5f3407dae067d0393b84bd6724970aaa\",\n\t\t\t\t\t\"deleteAssessmentQuestionImage\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAssessmentQuestionImage));\n\t\t\t},\n\t\t\tdeleteChapter(\n\t\t\t\tvariables: DeleteChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteChapterMutation[\"deleteChapter\"]>> {\n\t\t\t\treturn requester<DeleteChapterMutation, DeleteChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:021c10ea5b5f776e229d4c2cd25578b8aec3c869c898c747d4dcb889ddad32b6\",\n\t\t\t\t\t\"deleteChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteChapter));\n\t\t\t},\n\t\t\tdeleteLessonAttachment(\n\t\t\t\tvariables: DeleteLessonAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<DeleteLessonAttachmentMutation[\"deleteLessonAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteLessonAttachmentMutation,\n\t\t\t\t\tDeleteLessonAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:7af840d8ddbf664a04ec3da2283e9a540f68da24adedbe7a2af9718f1c70f10c\",\n\t\t\t\t\t\"deleteLessonAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLessonAttachment));\n\t\t\t},\n\t\t\tdeleteLesson(\n\t\t\t\tvariables: DeleteLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteLessonMutation[\"deleteLesson\"]>> {\n\t\t\t\treturn requester<DeleteLessonMutation, DeleteLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:6be8fd89af64aec7db125bac7d67bad8530cc8f5b8ee98c879351acd59aa6fac\",\n\t\t\t\t\t\"deleteLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLesson));\n\t\t\t},\n\t\t\tgetCourse(\n\t\t\t\tvariables: GetCourseQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCourseQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetCourseQuery, GetCourseQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:5e81c304ac7c4c19b2d07ea7c2a32b2fd8998774bf90900a81999b9077b383a1\",\n\t\t\t\t\t\"getCourse\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetLesson(\n\t\t\t\tvariables: GetLessonQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetLessonQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetLessonQuery, GetLessonQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:372989bc0ffb7ff3c36d1325f1af4115c06205e95378a2e344d91a857e732630\",\n\t\t\t\t\t\"getLesson\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetUserLessonInteractions(\n\t\t\t\tvariables: GetUserLessonInteractionsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLessonInteractionsQuery[\"course\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLessonInteractionsQuery,\n\t\t\t\t\tGetUserLessonInteractionsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:6b12c8ccabe59b65d8869029d4e4e56ddbeac7256137e5e79012a3e33aa81523\",\n\t\t\t\t\t\"getUserLessonInteractions\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tlistCoursesForCompany(\n\t\t\t\tvariables: ListCoursesForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForCompanyQuery,\n\t\t\t\t\tListCoursesForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:76dd2b0b09b6083392dcce8c1df423cc6e6eb290e58bdd2d830f50ef1a4828b3\",\n\t\t\t\t\t\"listCoursesForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistCoursesForExperience(\n\t\t\t\tvariables: ListCoursesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForExperienceQuery,\n\t\t\t\t\tListCoursesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:a579fee2663d841a23be014b234d89eadb097dac387722dfe9d0e87911a7598e\",\n\t\t\t\t\t\"listCoursesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t\tmarkLessonAsCompleted(\n\t\t\t\tvariables: MarkLessonAsCompletedMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<MarkLessonAsCompletedMutation[\"markLessonAsCompleted\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tMarkLessonAsCompletedMutation,\n\t\t\t\t\tMarkLessonAsCompletedMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:941178d021bd72247401d347d5dd969036579147777e0a754f5102cddc5074c7\",\n\t\t\t\t\t\"markLessonAsCompleted\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.markLessonAsCompleted));\n\t\t\t},\n\t\t\tmoveCourse(\n\t\t\t\tvariables: MoveCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MoveCourseMutation[\"moveCourse\"]>> {\n\t\t\t\treturn requester<MoveCourseMutation, MoveCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:ce7d38029113792bf1ff544db18f000732fed4db3ebc766767a367cef5691c2b\",\n\t\t\t\t\t\"moveCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.moveCourse));\n\t\t\t},\n\t\t\tupdateChapterOrder(\n\t\t\t\tvariables: UpdateChapterOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterOrderMutation[\"updateChapterOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateChapterOrderMutation,\n\t\t\t\t\tUpdateChapterOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c749c5c4907afd39ab2d3f8c44b3e65c8c9928e0cf06f8687deaa40d144a0df6\",\n\t\t\t\t\t\"updateChapterOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapterOrder));\n\t\t\t},\n\t\t\tupdateChapter(\n\t\t\t\tvariables: UpdateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterMutation[\"updateChapter\"]>> {\n\t\t\t\treturn requester<UpdateChapterMutation, UpdateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:9fda8d867b07c1b31622cb73084523577519ca35822d8ce3938fa2b07efaf6e5\",\n\t\t\t\t\t\"updateChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapter));\n\t\t\t},\n\t\t\tupdateLessonOrder(\n\t\t\t\tvariables: UpdateLessonOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonOrderMutation[\"updateLessonOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateLessonOrderMutation,\n\t\t\t\t\tUpdateLessonOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:8ae83382f97b182c08bf5851e3bbed05fd8269856c00b82b5577939c00e39e43\",\n\t\t\t\t\t\"updateLessonOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLessonOrder));\n\t\t\t},\n\t\t\tupdateLesson(\n\t\t\t\tvariables: UpdateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonMutation[\"updateLesson\"]>> {\n\t\t\t\treturn requester<UpdateLessonMutation, UpdateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c872c79e5469f162f4de0f64ed6decc489cc3e05d66781a2f33ae1eef4d762bd\",\n\t\t\t\t\t\"updateLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLesson));\n\t\t\t},\n\t\t},\n\t\texperiences: {\n\t\t\tgetExperience(\n\t\t\t\tvariables: GetExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<GetExperienceQuery, GetExperienceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:61d7778965bc84e700a681ec856251c59070ebc6b0e00b6e5c91568df734db7e\",\n\t\t\t\t\t\"getExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistUsersForExperience(\n\t\t\t\tvariables: ListUsersForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUsersForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListUsersForExperienceQuery,\n\t\t\t\t\tListUsersForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:85c827d8660dc2a97e8b930e213b83493ae132c00988e0f03e02c5dc99559a5a\",\n\t\t\t\t\t\"listUsersForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t},\n\t\tforums: {\n\t\t\tlistForumPostsFromForum(\n\t\t\t\tvariables: ListForumPostsFromForumQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListForumPostsFromForumQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListForumPostsFromForumQuery,\n\t\t\t\t\tListForumPostsFromForumQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:97a7d797f3a5f6f83bf4628cc7c586d529b90e54c0a8e193493a55b4ad05df46\",\n\t\t\t\t\t\"listForumPostsFromForum\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tmessages: {\n\t\t\tlistMessagesFromChat(\n\t\t\t\tvariables?: ListMessagesFromChatQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMessagesFromChatQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListMessagesFromChatQuery,\n\t\t\t\t\tListMessagesFromChatQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:5fdbf50fe489888e5b0a98e9fe6170584bf47ab38f87d1e0b7fce8f523513894\",\n\t\t\t\t\t\"listMessagesFromChat\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tusers: {\n\t\t\tgetCurrentUser(\n\t\t\t\tvariables?: GetCurrentUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCurrentUserQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<GetCurrentUserQuery, GetCurrentUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:9f7cc9ff353a2778e55b674cfd5737a7dcaff19be9ac13d6f79aabd5d8ef69ff\",\n\t\t\t\t\t\"getCurrentUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUserLedgerAccount(\n\t\t\t\tvariables?: GetUserLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLedgerAccountQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLedgerAccountQuery,\n\t\t\t\t\tGetUserLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:d7eeaf0a388395edb82220877e72a7fc91d1f06a6d89f1cfa5e56bb400d2aa49\",\n\t\t\t\t\t\"getUserLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUser(\n\t\t\t\tvariables: GetUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<GetUserQuery, GetUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c6cd0172ca06b30e54b818c216ccb00023ffa4d6392becd6fb80a5a0312b1b65\",\n\t\t\t\t\t\"getUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport type Sdk = ReturnType<typeof getSdk>;\n","export const DEFAULT_API_ORIGIN = \"https://api.whop.com\";\n\nexport class GQLNetworkError extends Error {\n\tconstructor(e: unknown) {\n\t\tconst message =\n\t\t\te instanceof Error\n\t\t\t\t? e.message\n\t\t\t\t: typeof e === \"string\"\n\t\t\t\t\t? e\n\t\t\t\t\t: \"Unknown network error\";\n\t\tsuper(message);\n\t\tif (e instanceof Error) this.stack = e.stack;\n\t}\n}\n\nexport class GQLRequestError extends Error {\n\tstatusCode: number;\n\n\tconstructor(statusCode: number, message: string) {\n\t\tsuper(message);\n\t\tthis.statusCode = statusCode;\n\t}\n\n\tisUnauthorized() {\n\t\treturn this.statusCode === 401;\n\t}\n\n\tisForbidden() {\n\t\treturn this.statusCode === 403;\n\t}\n\n\tisNotFound() {\n\t\treturn this.statusCode === 404;\n\t}\n\n\tisServerError() {\n\t\treturn this.statusCode >= 500;\n\t}\n}\n\nexport class GQLError extends Error {\n\terrors: { message: string }[];\n\n\tconstructor(errors: { message: string }[]) {\n\t\tsuper(errors[0].message);\n\t\tthis.errors = errors;\n\t}\n}\n\nexport async function graphqlFetch<R, V>(\n\turl: URL | string,\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvariables?: V,\n\theadersInit: HeadersInit = {},\n): Promise<R> {\n\ttry {\n\t\tconst body = {\n\t\t\toperationId,\n\t\t\toperationType,\n\t\t\toperationName,\n\t\t\tvariables,\n\t\t};\n\n\t\tconst headers = new Headers(headersInit);\n\t\theaders.set(\"Content-Type\", \"application/json\");\n\t\theaders.set(\"Accept\", \"application/json\");\n\n\t\tconst urlObject = addOperationNameToUrl(\n\t\t\turl,\n\t\t\toperationName,\n\t\t\toperationId,\n\t\t\toperationType,\n\t\t);\n\n\t\tconst response = await fetch(urlObject, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(body),\n\t\t\theaders,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tconst errorMessage = await response.text();\n\t\t\tthrow new GQLRequestError(response.status, errorMessage);\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\t// Only throw in the SDK if we didn't receive any data.\n\t\tif (data.errors && !data.data) {\n\t\t\tthrow new GQLError(data.errors);\n\t\t}\n\n\t\t// Otherwise, we try and attach the errors to the response object so they are still visible.\n\t\tif (data.errors && typeof data.data === \"object\" && data.data) {\n\t\t\tdata.data._error = new GQLError(data.errors);\n\t\t}\n\n\t\treturn data.data;\n\t} catch (e) {\n\t\tthrow new GQLNetworkError(e);\n\t}\n}\n\nfunction addOperationNameToUrl(\n\turl: URL | string,\n\tname: string,\n\toperationId: string,\n\toperationType: \"query\" | \"mutation\",\n): URL {\n\tconst urlObject = new URL(url);\n\tlet pathname = urlObject.pathname;\n\tif (pathname.endsWith(\"/\")) {\n\t\tpathname = pathname.slice(0, -1);\n\t}\n\tpathname += `/${name}`;\n\turlObject.pathname = pathname;\n\tconst [clientName, opId] = operationId.split(\"/\");\n\turlObject.searchParams.set(\"id\", opId);\n\turlObject.searchParams.set(\"client\", clientName);\n\turlObject.searchParams.set(\"type\", operationType);\n\treturn urlObject;\n}\n","import { TypedEmitter } from \"tiny-typed-emitter\";\nimport type { proto } from \"../index.shared\";\n\nexport type ReceivableWebsocketMessage =\n\tproto.common.WebsocketMessageServerToClient;\nexport type SendableWebsocketMessage =\n\tproto.common.WebsocketMessageClientToServer;\n\nexport type WebsocketStatus = \"connected\" | \"disconnected\" | \"connecting\";\nexport type WebsocketMessageHandler = (\n\tmessage: ReceivableWebsocketMessage,\n) => unknown;\nexport type WebsocketStatusHandler = (status: WebsocketStatus) => unknown;\n\nexport interface WhopWebsocketEvents {\n\tmessage: (message: ReceivableWebsocketMessage) => void;\n\tappMessage: (message: proto.common.AppMessage) => void;\n\tconnectionStatus: (status: WebsocketStatus) => void;\n\tconnect: () => void;\n\tdisconnect: () => void;\n}\n\nexport class WhopWebsocketClientBase extends TypedEmitter<WhopWebsocketEvents> {\n\tprivate websocket: WebSocket | null = null;\n\tprivate failedConnectionAttempts = 0;\n\tprivate status: WebsocketStatus = \"disconnected\";\n\tprivate wantsToBeConnected = false;\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tthrow new Error(\"Not implemented in base class\");\n\t}\n\n\tpublic connect() {\n\t\tif (this.websocket) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tthis.wantsToBeConnected = true;\n\n\t\tthis.setStatus(\"connecting\");\n\t\tconst websocket = this.makeWebsocket();\n\t\tthis.websocket = websocket;\n\n\t\twebsocket.onopen = () => {\n\t\t\tthis.setStatus(\"connected\");\n\t\t};\n\n\t\twebsocket.onmessage = (event: MessageEvent) => {\n\t\t\ttry {\n\t\t\t\tconst message = JSON.parse(event.data) as ReceivableWebsocketMessage;\n\t\t\t\tthis.emit(\"message\", message);\n\t\t\t\tif (message.appMessage) {\n\t\t\t\t\tthis.emit(\"appMessage\", message.appMessage);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t\"[WhopWebsocketClient] Error parsing message\",\n\t\t\t\t\tevent.data,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\twebsocket.onerror = (event: Event) => {\n\t\t\tconsole.error(\"[WhopWebsocketClient] Websocket error\", event);\n\t\t\tthis.setStatus(\"disconnected\");\n\t\t};\n\n\t\twebsocket.onclose = (event: Event) => {\n\t\t\tthis.setStatus(\"disconnected\");\n\t\t};\n\n\t\treturn () => {\n\t\t\tthis.disconnect();\n\t\t};\n\t}\n\n\tpublic disconnect() {\n\t\tif (this.websocket) {\n\t\t\tthis.websocket.onopen = null;\n\t\t\tthis.websocket.onmessage = null;\n\t\t\tthis.websocket.onerror = null;\n\t\t\tthis.websocket.onclose = null;\n\t\t\tthis.websocket.close();\n\t\t\tthis.websocket = null;\n\t\t}\n\n\t\tthis.wantsToBeConnected = false;\n\t}\n\n\tpublic send(message: SendableWebsocketMessage) {\n\t\tif (!this.websocket) {\n\t\t\tthrow new Error(\"Websocket not connected\");\n\t\t}\n\n\t\tthis.websocket.send(JSON.stringify(message));\n\t}\n\n\tpublic broadcast({\n\t\tmessage,\n\t\ttarget,\n\t}: { message: string; target: WebsocketBroadcastTarget }) {\n\t\tthis.send({\n\t\t\tbroadcastAppMessage: {\n\t\t\t\tchannel: convertBroadcastTargetToProtoChannel(target),\n\t\t\t\tjson: message,\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate setStatus(status: WebsocketStatus) {\n\t\tif (status === this.status) return;\n\n\t\tthis.status = status;\n\n\t\tif (status === \"disconnected\") {\n\t\t\tconst backoff = this.calculateBackoff();\n\t\t\tthis.failedConnectionAttempts++;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.wantsToBeConnected) {\n\t\t\t\t\tthis.connect();\n\t\t\t\t}\n\t\t\t}, backoff);\n\t\t\tthis.emit(\"disconnect\");\n\t\t}\n\n\t\tif (status === \"connected\") {\n\t\t\tthis.failedConnectionAttempts = 0;\n\t\t\tthis.emit(\"connect\");\n\t\t}\n\n\t\tthis.emit(\"connectionStatus\", status);\n\t}\n\n\tprivate calculateBackoff() {\n\t\treturn Math.min(50 * 2 ** this.failedConnectionAttempts, 1000 * 60);\n\t}\n}\n\nexport type WebsocketBroadcastTarget =\n\t| {\n\t\t\texperienceId: string;\n\t  }\n\t| {\n\t\t\tcustomId: string;\n\t  }\n\t| \"everyone\";\n\nfunction convertBroadcastTargetToProtoChannel(\n\ttarget: WebsocketBroadcastTarget,\n): proto.common.Channel {\n\t// [app_id] is replaced with the app ID when the message is received on the server.\n\tif (target === \"everyone\") {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: \"[app_id]\",\n\t\t};\n\t}\n\n\tif (\"experienceId\" in target) {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: `[app_id]_${target.experienceId}`,\n\t\t};\n\t}\n\n\tif (\"customId\" in target) {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: `[app_id]_c_${target.customId}`,\n\t\t};\n\t}\n\n\tthrow new Error(\"Invalid broadcast target\");\n}\n","import { WhopWebsocketClientBase } from \"./client.common\";\n\nexport interface WebsocketClientOptionsClient {\n\t/// Pass an experience ID to join the channel for this experience(s). Access will be restricted to just users with access to the experience(s).\n\tjoinExperience?: string | string[] | null;\n\n\t/// Pass a custom string ID to join a custom channel with events from your app.\n\tjoinCustom?: string | string[] | null;\n\n\t/// Pass a any string to join a public channel with events from whop.\n\tjoinPublic?: string | string[] | null;\n}\n\nexport class WhopWebsocketClientBrowser extends WhopWebsocketClientBase {\n\tprivate options: WebsocketClientOptionsClient;\n\n\tconstructor(options: WebsocketClientOptionsClient) {\n\t\tsuper();\n\t\tthis.options = options;\n\t}\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tconst path = \"/_whop/ws/v1/websockets/connect\";\n\n\t\tconst searchParams = new URLSearchParams();\n\t\taddChannelIds(searchParams, \"join_experience\", this.options.joinExperience);\n\t\taddChannelIds(searchParams, \"join_custom\", this.options.joinCustom);\n\t\taddChannelIds(searchParams, \"join_public\", this.options.joinPublic);\n\n\t\tconst url = new URL(path, window.location.origin);\n\t\turl.protocol = url.protocol.replace(\"http\", \"ws\");\n\t\turl.search = searchParams.toString();\n\n\t\treturn new WebSocket(url.toString());\n\t}\n}\n\nfunction addChannelIds(\n\tsearchParams: URLSearchParams,\n\tkey: string,\n\tchannels: undefined | string | string[] | null,\n) {\n\tif (!channels) {\n\t\treturn;\n\t}\n\n\tif (typeof channels === \"string\" && channels.length > 0) {\n\t\tsearchParams.set(key, channels);\n\t\treturn;\n\t}\n\n\tfor (const channel of channels) {\n\t\tsearchParams.append(key, channel);\n\t}\n}\n\nexport function makeConnectToWebsocketFunction() {\n\treturn function connectToWebsocket(options: WebsocketClientOptionsClient) {\n\t\treturn new WhopWebsocketClientBrowser(options);\n\t};\n}\n","import { fileSdkExtensions } from \"@/attachments/file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { type Requester, getSdk } from \"@/codegen/graphql/client\";\nimport { graphqlFetch } from \"@/sdk/sdk-common\";\nimport { makeConnectToWebsocketFunction } from \"@/websockets/client.browser\";\n\n/**\n * SDK options for client side use\n */\nexport interface WhopClientSdkOptions {\n\t/** the origin of the API */\n\tapiOrigin?: string;\n\t/** the path of the API */\n\tapiPath?: string;\n}\n\nexport function makeWhopClientSdk({\n\tuploadFile,\n}: { uploadFile: ReturnType<typeof makeUploadAttachmentFunction> }) {\n\treturn function WhopClientSdk(options?: WhopClientSdkOptions) {\n\t\tconst baseSdk = getSdk(\n\t\t\tmakeRequester({\n\t\t\t\tapiPath: \"/_whop/public-graphql\",\n\t\t\t\t...options,\n\t\t\t}),\n\t\t);\n\n\t\tconst fileSdk = fileSdkExtensions(baseSdk, uploadFile);\n\n\t\tconst websocketClient = makeConnectToWebsocketFunction();\n\n\t\tconst sdk = {\n\t\t\t...baseSdk,\n\t\t\tattachments: {\n\t\t\t\t...baseSdk.attachments,\n\t\t\t\t...fileSdk,\n\t\t\t},\n\t\t\twebsockets: {\n\t\t\t\tclient: websocketClient,\n\t\t\t},\n\t\t};\n\n\t\treturn sdk;\n\t};\n}\n\nexport type WhopClientSdk = ReturnType<ReturnType<typeof makeWhopClientSdk>>;\n\nfunction makeRequester(\n\tapiOptions: WhopClientSdkOptions,\n): Requester<RequestInit> {\n\tconst endpoint = getEndpoint(apiOptions);\n\treturn async function fetcher<R, V>(\n\t\toperationId: string,\n\t\toperationName: string,\n\t\toperationType: \"query\" | \"mutation\",\n\t\tvars?: V,\n\t\toptions?: RequestInit,\n\t): Promise<R> {\n\t\tconst headers = new Headers(options?.headers);\n\t\treturn graphqlFetch<R, V>(\n\t\t\tendpoint,\n\t\t\toperationId,\n\t\t\toperationName,\n\t\t\toperationType,\n\t\t\tvars,\n\t\t\theaders,\n\t\t);\n\t};\n}\n\nfunction getEndpoint(apiOptions: WhopClientSdkOptions) {\n\tif (typeof document === \"undefined\" && !apiOptions.apiOrigin) {\n\t\tthrow new Error(\"WhopApi.client() is only available in the browser\");\n\t}\n\n\tconst url = new URL(\n\t\tapiOptions.apiPath ?? \"/public-graphql\",\n\t\tapiOptions.apiOrigin ?? window.location.origin,\n\t);\n\n\treturn url.href;\n}\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = {\n\t[K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]?: Maybe<T[SubKey]>;\n};\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]: Maybe<T[SubKey]>;\n};\nexport type MakeEmpty<\n\tT extends { [key: string]: unknown },\n\tK extends keyof T,\n> = { [_ in K]?: never };\nexport type Incremental<T> =\n\t| T\n\t| {\n\t\t\t[P in keyof T]?: P extends \" $fragmentName\" | \"__typename\" ? T[P] : never;\n\t  };\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n\tID: { input: string; output: string };\n\tString: { input: string; output: string };\n\tBoolean: { input: boolean; output: boolean };\n\tInt: { input: number; output: number };\n\tFloat: { input: number; output: number };\n\t/**\n\t * Represents non-fractional signed whole numeric values. Since the value may\n\t * exceed the size of a 32-bit integer, it's encoded as a string.\n\t */\n\tBigInt: { input: string; output: string };\n\t/**\n\t * The `Decimal` scalar type represents signed double-precision fractional\n\t * values. The Decimal appears in a JSON response as a string to preserve\n\t * precision.\n\t */\n\tDecimal: { input: string; output: string };\n\t/** Url to uploaded upload */\n\tFile: { input: string; output: string };\n\t/** Represents untyped JSON */\n\tJSON: { input: { [key: string]: any }; output: { [key: string]: any } };\n\t/** A number - float or integer */\n\tNumber: { input: number; output: number };\n\t/** String removes all html tags */\n\tSanitizedString: { input: string; output: string };\n\t/** A float that can be a string */\n\tStringFloat: { input: string | number; output: string | number };\n\t/** A valid timestamp in seconds, transported as an integer */\n\tTimestamp: { input: number; output: number };\n\t/** URL starting with http/https */\n\tUrlString: { input: string; output: string };\n}\n\n/** The name of the resource type that is being reported. */\nexport type AbuseReportCategoryResourceTypes =\n\t/** Page */\n\t\"Page\";\n\n/** Visibility of an abuse report category */\nexport type AbuseReportCategoryVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\";\n\n/** The status of the abuse report */\nexport type AbuseReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The high level payment processor options. */\nexport type AcceptedPaymentMethods =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\";\n\n/** The access level a given user (or company) has to an access pass or company. */\nexport type AccessLevel = \"admin\" | \"customer\" | \"no_access\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassAffiliateOrder =\n\t| \"cached_referrals_count\"\n\t| \"cached_usd_rewards\"\n\t| \"created_at\";\n\n/** An AccessPassAffiliate status */\nexport type AccessPassAffiliateStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\";\n\n/** The types of categories that can be used for AccessPass attachments. */\nexport type AccessPassAttachmentCategories =\n\t| \"affiliate_assets\"\n\t| \"gallery_images\";\n\n/** The conditions that an access pass can have */\nexport type AccessPassConditions = \"has_plans\";\n\n/** Values to filter access passes on */\nexport interface AccessPassFilters {\n\t/**\n\t * Whether or not this creator achieved the 3k in 30 milestone\n\t * @deprecated No longer available.\n\t */\n\tachievedThreeKInThirty?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/**\n\t * Whether or not to only return discoverable access passes.\n\t * @deprecated We only return discoverable access passes now.\n\t */\n\tdiscoverable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The discovery category to filter by\n\t * @deprecated The discovery AI API is no longer used.\n\t */\n\tdiscoveryCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The max global affiliate percentage */\n\tglobalAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tglobalAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The global affiliate status */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** An array, in order, of the category route tree that is being traversed. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The max global affiliate percentage */\n\tmemberAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tmemberAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicAccessPassesOrder>;\n\t/** The max price */\n\tpriceMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min price */\n\tpriceMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Filter to show only passes owned by students of the specified access pass */\n\tstudentsOfAccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Whether or not the access pass' company uses whop four\n\t * @deprecated No longer applies.\n\t */\n\tusesWhopFour?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The onboarding versions for access passes */\nexport type AccessPassOnboardingVersionTypes = \"mar_2025\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassOrder =\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"usd_gmv\"\n\t| \"usd_gmv_30_days\";\n\n/** Input for creating a product highlight */\nexport interface AccessPassProductHighlightInput {\n\t/**\n\t * Text to display to describe the product highlight (max length 250 for\n\t * qualification or benefits, 170 for who this is for, 140 for pricing features).\n\t */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The type of this highlight. */\n\thighlightType: ProductHighlightTypes;\n\t/** The title of the product highlight, if applicable. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Input for creating a social link for an access pass */\nexport interface AccessPassSocialLinkInput {\n\t/** The URL of the social link */\n\turl: Scalars[\"UrlString\"][\"input\"];\n\t/** The website this link is for */\n\twebsite: SocialLinkWebsites;\n}\n\n/** The different types an access pass can be. */\nexport type AccessPassTypes =\n\t/** Api Only */\n\t| \"api_only\"\n\t/** App */\n\t| \"app\"\n\t/** Experience Upsell */\n\t| \"experience_upsell\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type AccessPassesSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** The types of payouts an affiliate can have */\nexport type AffiliatePayoutTypes = \"flat_fee\" | \"percentage\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatePlansSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter affiliate referral logs on */\nexport interface AffiliateReferralLogFilters {\n\t/** Specific affiliates. */\n\taffiliateIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** A specific affiliate type. */\n\taffiliateType?: InputMaybe<AffiliateTypes>;\n\t/** Specific plans. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Specific users. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type AffiliateReferralLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The scope of an affiliate (company based, global, etc.) */\nexport type AffiliateTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Global */\n\t| \"global\"\n\t/** Marketplace */\n\t| \"marketplace\"\n\t/** Passholder */\n\t| \"passholder\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatesSortableColumns =\n\t| \"cached_total_referrals\"\n\t| \"cached_total_rewards\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** Autogenerated input type of AnalyzeAttachment */\nexport interface AnalyzeAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID returned by the direct upload mutation */\n\tdirectUploadId: Scalars[\"String\"][\"input\"];\n\t/** The type of media to analyze */\n\tmediaType: Media;\n\t/** The parts of the multipart upload */\n\tmultipartParts?: InputMaybe<Array<UploadPartInput>>;\n\t/** The ID returned by the direct upload mutation */\n\tmultipartUploadId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The different types of permissions an api key can have. */\nexport type ApiKeyPermissions =\n\t/** Add free days membership */\n\t| \"add_free_days_membership\"\n\t/** Cancel membership */\n\t| \"cancel_membership\"\n\t/** Create checkout request */\n\t| \"create_checkout_request\"\n\t/** Create checkout session */\n\t| \"create_checkout_session\"\n\t/** Create plan */\n\t| \"create_plan\"\n\t/** Create promo code */\n\t| \"create_promo_code\"\n\t/** Create push notification */\n\t| \"create_push_notification\"\n\t/** Create quick link */\n\t| \"create_quick_link\"\n\t/** Create webhook */\n\t| \"create_webhook\"\n\t/** Delete checkout session */\n\t| \"delete_checkout_session\"\n\t/** Delete experience */\n\t| \"delete_experience\"\n\t/** Delete promo code */\n\t| \"delete_promo_code\"\n\t/** Delete webhook */\n\t| \"delete_webhook\"\n\t/** List access passes */\n\t| \"list_access_passes\"\n\t/** List checkout sessions */\n\t| \"list_checkout_sessions\"\n\t/** List customers */\n\t| \"list_customers\"\n\t/** List experiences */\n\t| \"list_experiences\"\n\t/** List licenses */\n\t| \"list_licenses\"\n\t/** List members */\n\t| \"list_members\"\n\t/** List memberships */\n\t| \"list_memberships\"\n\t/** List payment fees */\n\t| \"list_payment_fees\"\n\t/** List payment methods */\n\t| \"list_payment_methods\"\n\t/** List payments */\n\t| \"list_payments\"\n\t/** List plans */\n\t| \"list_plans\"\n\t/** List products */\n\t| \"list_products\"\n\t/** List promo codes */\n\t| \"list_promo_codes\"\n\t/** List reviews */\n\t| \"list_reviews\"\n\t/** List webhooks */\n\t| \"list_webhooks\"\n\t/** Refund payment */\n\t| \"refund_payment\"\n\t/** Retrieve access pass */\n\t| \"retrieve_access_pass\"\n\t/** Retrieve checkout request */\n\t| \"retrieve_checkout_request\"\n\t/** Retrieve checkout session */\n\t| \"retrieve_checkout_session\"\n\t/** Retrieve company */\n\t| \"retrieve_company\"\n\t/** Retrieve customer */\n\t| \"retrieve_customer\"\n\t/** Retrieve experience */\n\t| \"retrieve_experience\"\n\t/** Retrieve member */\n\t| \"retrieve_member\"\n\t/** Retrieve membership */\n\t| \"retrieve_membership\"\n\t/** Retrieve payment */\n\t| \"retrieve_payment\"\n\t/** Retrieve plan */\n\t| \"retrieve_plan\"\n\t/** Retrieve product */\n\t| \"retrieve_product\"\n\t/** Retrieve promo code */\n\t| \"retrieve_promo_code\"\n\t/** Retrieve review */\n\t| \"retrieve_review\"\n\t/** Retrieve webhook */\n\t| \"retrieve_webhook\"\n\t/** Send notification customers */\n\t| \"send_notification_customers\"\n\t/** Send notification members */\n\t| \"send_notification_members\"\n\t/** Terminate membership */\n\t| \"terminate_membership\"\n\t/** Update access pass */\n\t| \"update_access_pass\"\n\t/** Update experience */\n\t| \"update_experience\"\n\t/** Update membership */\n\t| \"update_membership\"\n\t/** Update plan */\n\t| \"update_plan\"\n\t/** Update product */\n\t| \"update_product\"\n\t/** Update promo code */\n\t| \"update_promo_code\"\n\t/** Update webhook */\n\t| \"update_webhook\"\n\t/** Validate license */\n\t| \"validate_license\";\n\n/** The different API versions */\nexport type ApiVersion = \"v1\" | \"v2\" | \"v5\";\n\n/** The different platforms an app build can target. */\nexport type AppBuildPlatforms = \"android\" | \"ios\" | \"web\";\n\n/** The different statuses an AppBuild can be in. */\nexport type AppBuildStatuses = \"approved\" | \"draft\" | \"pending\" | \"rejected\";\n\n/** Image styles for app. */\nexport type AppImageStyles = \"s16\" | \"s24\" | \"s32\" | \"s40\" | \"s48\" | \"s80\";\n\n/** Input for creating a requested permission */\nexport interface AppRequestedPermissionInput {\n\t/** The action that the app will request off of users when a user installs the app. */\n\taction: Scalars[\"String\"][\"input\"];\n\t/** Whether the action is required for the app to function. */\n\tisRequired: Scalars[\"Boolean\"][\"input\"];\n\t/** The reason for requesting the action. */\n\tjustification: Scalars[\"String\"][\"input\"];\n}\n\n/** The status of an experience interface */\nexport type AppStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\"\n\t/** Unlisted */\n\t| \"unlisted\";\n\n/** These are the scopes an app can request on behalf of a user */\nexport type AppValidScopes =\n\t/** Read User */\n\t\"read_user\";\n\n/** The different types of an app view */\nexport type AppViewTypes =\n\t/** Analytics */\n\t| \"analytics\"\n\t/** Dash */\n\t| \"dash\"\n\t/** Dashboard */\n\t| \"dashboard\"\n\t/** Discover */\n\t| \"discover\"\n\t/** Hub */\n\t| \"hub\";\n\n/** The criteria for an application to the marketplace. */\nexport type ApplicationCriteriaIdentifier =\n\t/** App */\n\t| \"app\"\n\t/** Available Plan */\n\t| \"available_plan\"\n\t/** Benefit */\n\t| \"benefit\"\n\t/** Choose Category */\n\t| \"choose_category\"\n\t/** Description */\n\t| \"description\"\n\t/** Gallery Images */\n\t| \"gallery_images\"\n\t/** Headline */\n\t| \"headline\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Setup Payouts */\n\t| \"setup_payouts\"\n\t/** Title */\n\t| \"title\"\n\t/** Visibility */\n\t| \"visibility\";\n\n/** The types of records that an attachment can be attached to */\nexport type AttachableRecords =\n\t| \"abuse_report\"\n\t| \"access_pass\"\n\t| \"access_pass_collection\"\n\t| \"app\"\n\t| \"assessment_question\"\n\t| \"automated_messages_config\"\n\t| \"bot\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"competition_prize\"\n\t| \"content_reward_campaign\"\n\t| \"content_reward_submission\"\n\t| \"course_lesson\"\n\t| \"dispute\"\n\t| \"dms_post\"\n\t| \"experience\"\n\t| \"forum_post\"\n\t| \"information_request_item\"\n\t| \"resolution_event_upload\"\n\t| \"review\"\n\t| \"review_report\"\n\t| \"user\";\n\n/** Input for an attachment */\nexport interface AttachmentInput {\n\t/**\n\t * This ID should be used the first time you upload an attachment. It is the ID\n\t * of the direct upload that was created when uploading the file to S3 via the\n\t * mediaDirectUpload mutation.\n\t */\n\tdirectUploadId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The ID of an existing attachment object. Use this when updating a resource and\n\t * keeping a subset of the attachments. Don't use this unless you know what you're doing.\n\t */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Which columns can be used to sort. */\nexport type AuditLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The possible 2FA authentication types. */\nexport type AuthenticationMethods = \"authenticator\" | \"sms\";\n\n/** Valid resource types for authorizations */\nexport type AuthorizationResourceTypes =\n\t/** An app */\n\t| \"app\"\n\t/** A company */\n\t| \"company\"\n\t/** An experience */\n\t| \"experience\"\n\t/** A product */\n\t| \"product\";\n\n/** Possible roles an authorized user can have */\nexport type AuthorizedUserRoles =\n\t/** Admin */\n\t| \"admin\"\n\t/** App Manager */\n\t| \"app_manager\"\n\t/** Manager */\n\t| \"manager\"\n\t/** Moderator */\n\t| \"moderator\"\n\t/** Owner */\n\t| \"owner\"\n\t/** Sales Manager */\n\t| \"sales_manager\"\n\t/** Support */\n\t| \"support\";\n\n/** The different categories of automated messages triggers. */\nexport type AutomatedMessagesTriggerCategories = \"access_pass\" | \"app\";\n\n/** Image styles for avatar. */\nexport type AvatarImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** Balance reservation reservation types. */\nexport type BalanceReservationReservationTypes = \"bnpl\" | \"regular\";\n\n/** The reasons for banning a user */\nexport type BanReasons =\n\t| \"botting_content_rewards\"\n\t| \"botting_negative_reviews\"\n\t| \"control_center_blocked_country\"\n\t| \"harassment\"\n\t| \"other\"\n\t| \"spamming\";\n\n/** Autogenerated input type of BanUser */\nexport interface BanUserInput {\n\t/** The ID of the access pass to ban the user from */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom reason for banning the user */\n\tcustomReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the feed to delete messages from */\n\tdeleteMessagesInFeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The reason for banning the user */\n\treason?: InputMaybe<BanReasons>;\n\t/** The ID of the user to ban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The reason why a specific payment was billed */\nexport type BillingReasons =\n\t/** Manual */\n\t| \"manual\"\n\t/** One Time */\n\t| \"one_time\"\n\t/** Subscription */\n\t| \"subscription\"\n\t/** Subscription Create */\n\t| \"subscription_create\"\n\t/** Subscription Cycle */\n\t| \"subscription_cycle\"\n\t/** Subscription Update */\n\t| \"subscription_update\";\n\n/** The BNPL (Buy Now Pay Later) providers for a company */\nexport type BnplProvider =\n\t| \"afterpay_clearpay\"\n\t| \"klarna\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"zip\";\n\n/** Values to filter bounties on */\nexport interface BountyFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Ability to filter bounties by access passes in specific marketplace categories. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether to only include bounties that are not whop bounties. */\n\tnonWhopOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicBountiesOrder>;\n}\n\n/** The type of update an event is. */\nexport type BusinessActivityEventTypes =\n\t/** Member Canceled */\n\t| \"member_canceled\"\n\t/** Member Churned */\n\t| \"member_churned\"\n\t/** Member Joined */\n\t| \"member_joined\"\n\t/** New Dispute */\n\t| \"new_dispute\"\n\t/** New Marketplace Sale */\n\t| \"new_marketplace_sale\"\n\t/** New Payment */\n\t| \"new_payment\"\n\t/** New Waitlist Entry */\n\t| \"new_waitlist_entry\";\n\n/** Image styles for business_affiliate. */\nexport type BusinessAffiliateImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** The different business types a company can be. */\nexport type BusinessTypes =\n\t/** Agency */\n\t| \"agency\"\n\t/** Brick And Mortar */\n\t| \"brick_and_mortar\"\n\t/** Coaching */\n\t| \"coaching\"\n\t/** Coaching And Courses */\n\t| \"coaching_and_courses\"\n\t/** Community */\n\t| \"community\"\n\t/** Course */\n\t| \"course\"\n\t/** Education Program */\n\t| \"education_program\"\n\t/** Events */\n\t| \"events\"\n\t/** Newsletter */\n\t| \"newsletter\"\n\t/** Other */\n\t| \"other\"\n\t/** Paid Group */\n\t| \"paid_group\"\n\t/** Physical Products */\n\t| \"physical_products\"\n\t/** Saas */\n\t| \"saas\"\n\t/** Software */\n\t| \"software\";\n\n/** The modes for the buyer fee. */\nexport type BuyerFeeMode = \"use_account_fee\" | \"use_experiment_fee\";\n\n/** The different reasons a user can choose for why they are canceling their membership. */\nexport type CancelOptions =\n\t| \"bad_experience\"\n\t| \"missing_features\"\n\t| \"other\"\n\t| \"switching\"\n\t| \"technical_issues\"\n\t| \"testing\"\n\t| \"too_expensive\";\n\n/** The over-arching state of the resolution. */\nexport type CaseStates = \"closed\" | \"open\";\n\n/** Autogenerated input type of ChangeCardMyMembership */\nexport interface ChangeCardMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n\t/** The URL you want to take the user to when they return */\n\tredirectUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\n/** The different card funding methods a charge can have. */\nexport type ChargeCardFunding =\n\t/** Credit */\n\t| \"credit\"\n\t/** Debit */\n\t| \"debit\"\n\t/** Prepaid */\n\t| \"prepaid\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The different risk levels a charge can have. */\nexport type ChargeOutcomeRiskLevels =\n\t/** Elevated */\n\t| \"elevated\"\n\t/** Highest */\n\t| \"highest\"\n\t/** Normal */\n\t| \"normal\"\n\t/** Not Assessed */\n\t| \"not_assessed\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** Autogenerated input type of ChargeUser */\nexport interface ChargeUserInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount to charge the user */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency to charge in */\n\tcurrency: Currencies;\n\t/** The description of the charge. Maximum 200 characters. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Additional metadata for the charge */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to charge */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The possible statuses for a charge user response */\nexport type ChargeUserResponseStatus =\n\t/** The charge requires additional action from the user. */\n\t| \"needs_action\"\n\t/** The charge was successful */\n\t| \"success\";\n\n/** Chart interval (period). */\nexport type ChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** Input for a chat feed */\nexport interface ChatFeedInput {\n\t/** Whether or not media is banned in this chat */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this chat */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this chat */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The unique identifier for the feed */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this chat */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n\t/** Who can react on this chat */\n\twhoCanReact?: InputMaybe<WhoCanReactTypes>;\n}\n\n/** The type of checkout session being made */\nexport type CheckoutSessionTypes = \"in_app_purchase\" | \"purchase\";\n\n/** The state of the Coinbase Commerce connection. */\nexport type CoinbaseCommerceStatuses =\n\t/** The Coinbase commerce connection is broken and needs to be fixed with a new API key. */\n\t| \"broken\"\n\t/** The Coinbase Commerce account is missing a settlement address. This needs to be set from the coinbase dashboard. */\n\t| \"missing_settlement_address\"\n\t/** The Coinbase commerce connection is setup and ready to be used. */\n\t| \"setup\"\n\t/** The webhook connection has not been tested / verified. */\n\t| \"webhook_not_verified\";\n\n/** The ways a relation of Companies can be ordered */\nexport type CompaniesOrder = \"created_at\" | \"id\" | \"total_memberships_earnings\";\n\n/** The types of categories that can be used for company attachments. */\nexport type CompanyAttachmentCategories = \"gallery_images\";\n\n/** Image styles for company. */\nexport type CompanyImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** Attributes collected during company onboarding */\nexport interface CompanyOnboardingPlanOptions {\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** The method by which the plan is released to the public. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The visibility of the plan. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** DEPRECATED: The different types a company can be. */\nexport type CompanyTypes =\n\t| \"app\"\n\t| \"bot\"\n\t| \"community\"\n\t| \"nft\"\n\t| \"other\"\n\t| \"proxy\"\n\t| \"server\";\n\n/** The different types a competition can be */\nexport type CompetitionMetricTypes =\n\t/** Earnings Inside Access Pass */\n\t| \"earnings_inside_access_pass\"\n\t/** Global Earnings */\n\t| \"global_earnings\";\n\n/** The different types a competition prize can be */\nexport type CompetitionPrizeTypes =\n\t/** Cash */\n\t| \"cash\"\n\t/** Custom */\n\t| \"custom\";\n\n/** Statuses for connected accounts */\nexport type ConnectedAccountStatuses =\n\t| \"connected\"\n\t| \"needs_completion\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Different types of how a company's marketplace card should display its pricing / access. */\nexport type ConnectedAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The ordering options for content rewards */\nexport type ContentRewardsCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"expires_at\"\n\t| \"pending_submissions_count\"\n\t| \"submissions_count\"\n\t| \"total_budget\";\n\n/** The different statuses content reward campaigns can be assigned to */\nexport type ContentRewardsCampaignStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Pending */\n\t| \"pending\";\n\n/** Values to filter content rewards on */\nexport interface ContentRewardsCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The ID to filter campaigns for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different categories content reward campaigns can be assigned to */\nexport type ContentRewardsCategory =\n\t/** Brand */\n\t| \"brand\"\n\t/** Creator */\n\t| \"creator\"\n\t/** E Commerce */\n\t| \"e_commerce\"\n\t/** Entertainment */\n\t| \"entertainment\"\n\t/** Influencer */\n\t| \"influencer\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Music */\n\t| \"music\"\n\t/** Musician */\n\t| \"musician\"\n\t/** Other */\n\t| \"other\"\n\t/** Personal Brand */\n\t| \"personal_brand\"\n\t/** Podcast */\n\t| \"podcast\"\n\t/** Products */\n\t| \"products\"\n\t/** Software */\n\t| \"software\"\n\t/** Stream */\n\t| \"stream\"\n\t/** Streamer */\n\t| \"streamer\";\n\n/** The different types of content accepted by a content reward campaign */\nexport type ContentRewardsContentType =\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Faceless */\n\t| \"faceless\"\n\t/** Other */\n\t| \"other\"\n\t/** Ugc */\n\t| \"ugc\";\n\n/** The different platforms that content rewards submissions can be for */\nexport type ContentRewardsPlatform =\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Tiktok */\n\t| \"tiktok\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** The ordering options for public content rewards campaigns */\nexport type ContentRewardsPublicCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"budget_left\"\n\t| \"created_at\"\n\t| \"expires_at\";\n\n/** Values to filter public content rewards on */\nexport interface ContentRewardsPublicCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsPublicCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different results of submission analysis */\nexport type ContentRewardsSubmissionAnalysisResults =\n\t/** Fail */\n\t| \"fail\"\n\t/** Pass */\n\t| \"pass\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The reasons a content rewards submission can be flagged for. */\nexport type ContentRewardsSubmissionFlagReasons =\n\t/** Engagement Ratio */\n\t| \"engagement_ratio\"\n\t/** Ml Analysis */\n\t| \"ml_analysis\"\n\t/** Reported Botter */\n\t| \"reported_botter\"\n\t/** Text Analysis */\n\t| \"text_analysis\"\n\t/** Video Analysis */\n\t| \"video_analysis\"\n\t/** View Acceleration */\n\t| \"view_acceleration\"\n\t/** View Spike */\n\t| \"view_spike\";\n\n/** The different statuses content reward submissions can be assigned to */\nexport type ContentRewardsSubmissionStatus =\n\t/** Approved */\n\t| \"approved\"\n\t/** Flagged */\n\t| \"flagged\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsSubmissionViewsChartConfigInput {\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface ContentRewardsSubmissionsFilters {\n\t/**\n\t * The type of attachment required on the submission\n\t * @deprecated No longer available\n\t */\n\tattachmentType?: InputMaybe<FileAttachmentTypes>;\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter submissions by date created after */\n\tcreatedAtAfter?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter submissions by date created before */\n\tcreatedAtBefore?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** Whether to exclude banned users from the results */\n\texcludeBannedUsers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the submission was flagged by AI */\n\tflaggedByAi?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<ContentRewardsSubmissionsOrder>;\n\t/** Whether the submission has reached the minimum payout */\n\treachedMinimumPayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n\t/** Filter submissions by partial username match */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The result of the video analysis */\n\tvideoAnalysisResult?: InputMaybe<ContentRewardsSubmissionAnalysisResults>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type ContentRewardsSubmissionsOrder =\n\t| \"created_at\"\n\t| \"total_paid\"\n\t| \"total_view_count\";\n\n/** Which columns can be used to sort. */\nexport type ContentRewardsSubmissionsSortableColumns =\n\t| \"cached_total_paid\"\n\t| \"cached_total_view_count\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"status\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsViewsChartConfigInput {\n\t/** The ID of the campaign to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience to filter by */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The available types for an assessment question */\nexport type CoursesAssessmentQuestionTypes =\n\t/** Multiple choice */\n\t| \"multiple_choice\"\n\t/** Multiple select */\n\t| \"multiple_select\"\n\t/** Short answer */\n\t| \"short_answer\"\n\t/** True false */\n\t| \"true_false\";\n\n/** Autogenerated input type of CreateAccessPass */\nexport interface CreateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the access pass for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A written description of the access pass. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An array of experience IDs that this pass has */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The URLs of the images to upload to the access pass. */\n\timageUrls?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The ID of the marketplace category to assign to the access pass. */\n\tmarketplaceCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The details to assign an autogenerated plan. */\n\tplanOptions?: InputMaybe<CompanyOnboardingPlanOptions>;\n\t/** The product highlights for the access pass. */\n\tproductHighlights?: InputMaybe<Array<AccessPassProductHighlightInput>>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The social links for the access pass. */\n\tsocialLinks?: InputMaybe<Array<AccessPassSocialLinkInput>>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** Whether or not customers can upgrade to different plans on this access pass. */\n\tupgradeable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of CreateAffiliate */\nexport interface CreateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that the affiliate will be created for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The fee that the affiliate will receive for each referral (either a percentage or a flat fee). */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** Whether the affiliate will only receive one payout. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the fee is a percentage or a flat fee. */\n\tpayoutType: PayoutTypes;\n\t/** The ID of the plan that the affiliate can refer. */\n\tplanId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The username of the user who will become an affiliate */\n\tusername: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAgentUser */\nexport interface CreateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateAppBuild */\nexport interface CreateAppBuildInput {\n\t/** The ID of the app to create a build for. By default the current app from the api key is used. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Attachment input for the app build file. This should be an upload in .zip\n\t * format. The zip should contain at least one main_js_bundle.hbc file and\n\t * optionally an assets folder next to it.\n\t */\n\tattachment: AttachmentInput;\n\t/**\n\t * Checksum of the app build file. This is generated by the client and used to\n\t * verify the integrity of the file that is submitted when un-packaged later on a device.\n\t */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The platform of the app build (ios, android, web) */\n\tplatform: AppBuildPlatforms;\n\t/**\n\t * Supported app view types for the app build. A build can specify multiple view\n\t * types, but should only specify ones that its code supports.\n\t */\n\tsupportedAppViewTypes?: InputMaybe<Array<AppViewTypes>>;\n}\n\n/** Autogenerated input type of CreateApp */\nexport interface CreateAppInput {\n\t/** The base URL of the app to be created */\n\tbaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the app for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the app to be created */\n\tname: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAssessmentQuestion */\nexport interface CreateAssessmentQuestionInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The correct answer to the assessment question */\n\tcorrectAnswer: Scalars[\"String\"][\"input\"];\n\t/** The ID of the lesson to create the assessment question in */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n\t/** The text of the question being asked */\n\tquestionText: Scalars[\"String\"][\"input\"];\n\t/** The type of the assessment question */\n\tquestionType: CoursesAssessmentQuestionTypes;\n}\n\n/** Autogenerated input type of CreateChapter */\nexport interface CreateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to create the chapter in */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateChat */\nexport interface CreateChatInput {\n\t/** The ID of the access pass (whop) to attach the chat experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new chat experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the chat experience to be created. After this timestamp, the experience disappears. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the chat experience to be created, shown to users in the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the chat experience. This allows you to\n\t * require paid access for the chat within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to send messages inside the chat. Select 'admin' if you\n\t * only want the team members to message, or select 'everyone' if any member of\n\t * the whop can send messages.\n\t */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateCheckoutSession */\nexport interface CreateCheckoutSessionInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The metadata to use for the checkout session */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The ID of the plan to use for the checkout session */\n\tplanId: Scalars[\"ID\"][\"input\"];\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateCompanyMutedUser */\nexport interface CreateCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The time the user is muted until, in milliseconds. If not provided, the user will be muted indefinitely */\n\tmutedUntil?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user to mute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateCourse */\nexport interface CreateCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The cover image URL of the course */\n\tcoverImage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the experience to create the course in */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The tagline of the course */\n\ttagline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the course */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateForum */\nexport interface CreateForumInput {\n\t/** The ID of the access pass (whop) to attach the experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new forum experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the experience to be created. After this timestamp, the experience is deleted. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the forum experience to be created, shown to the user on the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the forum experience. This allows you to\n\t * require paid access for the forum within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to create posts inside the forum. Select 'admin' if you\n\t * only want the team members to post, or select 'everyone' if any member of the\n\t * whop can post. Default value is 'admins'.\n\t */\n\twhoCanPost?: InputMaybe<ForumWhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateForumPost */\nexport interface CreateForumPostInput {\n\t/** The attachments for this post, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the post. This is the main body of the post. Hidden if paywalled. */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the forum experience to send the message in. This will look like exp_xxxx. */\n\tforumExperienceId: Scalars[\"String\"][\"input\"];\n\t/**\n\t * This is used to determine if the post should be sent as a 'mention'\n\t * notification to all of the users who are in the experience. This means that\n\t * anyone with 'mentions' enabled will receive a notification about this post.\n\t */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the parent post, if applicable (Used when making a comment) */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallAmount?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The currency to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallCurrency?: InputMaybe<Currencies>;\n\t/** Whether the post should be pinned */\n\tpinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The poll for this post. A poll lets you collect responses to a multiple choice question. */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The title of the post. Visible if paywalled. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateInvoice */\nexport interface CreateInvoiceInput {\n\t/** Whether or not to charge the customer a buyer fee. */\n\tchargeBuyerFee?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The method of collection for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tcollectionMethod: InvoiceCollectionMethods;\n\t/** The company ID to create this invoice for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The name of the customer to create this invoice for. This is required if you\n\t * want to create an invoice for a customer who does not have a member of your company yet.\n\t */\n\tcustomerName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The date the invoice is due, if applicable. */\n\tdueDate: Scalars[\"Timestamp\"][\"input\"];\n\t/**\n\t * The email address to create this invoice for. This is required if you want to\n\t * create an invoice for a user who does not have a member of your company yet.\n\t */\n\temailAddress?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The member ID to create this invoice for. Include this if you want to create\n\t * an invoice for an existing member. If you do not have a member ID, you must\n\t * provide an email_address and customer_name.\n\t */\n\tmemberId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The payment token ID to use for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tpaymentTokenId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The properties of the plan to create for this invoice. */\n\tplan: InvoicePlanInput;\n\t/**\n\t * The properties of the access pass to create for this invoice. Include this if\n\t * you want to create an invoice for a new product.\n\t */\n\tproduct?: InputMaybe<InvoiceAccessPassInput>;\n\t/** The access pass ID to create this invoice for. Include this if you want to create an invoice for an existing product. */\n\tproductId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateLesson */\nexport interface CreateLessonInput {\n\t/** The ID of the chapter to create the lesson in */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The type of the lesson */\n\tlessonType: LessonTypes;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreatePromoCode */\nexport interface CreatePromoCodeInput {\n\t/** The access pass to lock the promo code to, if any. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount off (% or flat amount) for the promo. */\n\tamountOff: Scalars[\"StringFloat\"][\"input\"];\n\t/** The monetary currency of the promo code. */\n\tbaseCurrency: Currencies;\n\t/** Restricts promo use to only users who have churned from the company before. */\n\tchurnedUsersOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The specific code used to apply the promo at checkout. */\n\tcode: Scalars[\"String\"][\"input\"];\n\t/** The id of the company to create the promo code for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether this promo code is for existing memberships only (cancelations) */\n\texistingMembershipsOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The date/time of when the promo expires. */\n\texpirationDatetime?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Restricts promo use to only users who have never purchased from the company before. */\n\tnewUsersOnly: Scalars[\"Boolean\"][\"input\"];\n\t/** The number of billing cycles the promo is applied for. */\n\tnumberOfIntervals: Scalars[\"Int\"][\"input\"];\n\t/** Restricts promo use to only be applied once per customer. */\n\tonePerCustomer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The type (% or flat amount) of the promo. */\n\tpromoType: PromoTypes;\n\t/** The quantity limit on the number of uses. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not the promo code should have unlimited stock. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateWebhook */\nexport interface CreateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The resource to create the webhook for. By default this will use current company */\n\tresourceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to send the webhook to. */\n\turl: Scalars[\"UrlString\"][\"input\"];\n}\n\n/** Cancelation discounts for creator dashboard */\nexport type CreatorDashboardCancelationDiscounts =\n\t| \"canceled\"\n\t| \"used_discount_and_canceled\"\n\t| \"used_discount_and_did_not_cancel\";\n\n/** The configuration for a chart. */\nexport interface CreatorDashboardChartConfigInput {\n\t/** The access pass ids (tags) to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<CreatorDashboardChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Chart interval (period). */\nexport type CreatorDashboardChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** The different types of activity for a credit transaction */\nexport type CreditTransactionActivityTypes =\n\t| \"deductions\"\n\t| \"deposits\"\n\t| \"withdrawals\";\n\n/** Values to filter the credits on. */\nexport interface CreditTransactionFilters {\n\t/** Filter by activity type */\n\tactivityType?: InputMaybe<CreditTransactionActivityTypes>;\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Filter by status */\n\tstatuses?: InputMaybe<Array<CreditTransactionStatuses>>;\n}\n\n/** The statuses a credit transaction can have */\nexport type CreditTransactionStatuses =\n\t/** Finalized */\n\t| \"finalized\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The reasons for a credit transaction transfer */\nexport type CreditTransactionTransferReasons =\n\t| \"bounty_payout\"\n\t| \"content_reward_fixed_payout\"\n\t| \"content_reward_payout\"\n\t| \"content_reward_return\"\n\t| \"creator_to_creator\"\n\t| \"creator_to_user\"\n\t| \"pool_top_up\"\n\t| \"team_member_payout\"\n\t| \"user_to_creator\"\n\t| \"user_to_user\"\n\t| \"wadmin_transferred_funds\";\n\n/** The statuses a credit transaction transfer can have */\nexport type CreditTransactionTransferStatuses = \"completed\";\n\n/** The type a credit transaction transfer can have */\nexport type CreditTransactionTransferTypes =\n\t/** Admin */\n\t| \"admin\"\n\t/** User */\n\t| \"user\";\n\n/** Which columns can be used to sort. */\nexport type CreditTransactionTransfersSortableColumns = \"amount\" | \"created_at\";\n\n/** The eligible networks for a CryptoWallet */\nexport type CryptoWalletNetworks =\n\t/** Bitcoin */\n\t| \"bitcoin\"\n\t/** Ethereum */\n\t| \"ethereum\"\n\t/** Solana */\n\t| \"solana\";\n\n/** The available currencies on the platform */\nexport type Currencies =\n\t| \"aed\"\n\t| \"all\"\n\t| \"amd\"\n\t| \"ape\"\n\t| \"ars\"\n\t| \"aud\"\n\t| \"bam\"\n\t| \"bgn\"\n\t| \"bhd\"\n\t| \"bob\"\n\t| \"brl\"\n\t| \"bsd\"\n\t| \"btc\"\n\t| \"cad\"\n\t| \"chf\"\n\t| \"clp\"\n\t| \"cop\"\n\t| \"crc\"\n\t| \"czk\"\n\t| \"dkk\"\n\t| \"dop\"\n\t| \"dzd\"\n\t| \"egp\"\n\t| \"etb\"\n\t| \"eth\"\n\t| \"eur\"\n\t| \"gbp\"\n\t| \"ghs\"\n\t| \"gmd\"\n\t| \"gtq\"\n\t| \"gyd\"\n\t| \"hkd\"\n\t| \"huf\"\n\t| \"idr\"\n\t| \"ils\"\n\t| \"inr\"\n\t| \"jmd\"\n\t| \"jod\"\n\t| \"jpy\"\n\t| \"kes\"\n\t| \"khr\"\n\t| \"krw\"\n\t| \"kwd\"\n\t| \"lkr\"\n\t| \"mad\"\n\t| \"mdl\"\n\t| \"mga\"\n\t| \"mkd\"\n\t| \"mnt\"\n\t| \"mop\"\n\t| \"mur\"\n\t| \"mxn\"\n\t| \"myr\"\n\t| \"nad\"\n\t| \"ngn\"\n\t| \"nok\"\n\t| \"nzd\"\n\t| \"omr\"\n\t| \"pen\"\n\t| \"php\"\n\t| \"pkr\"\n\t| \"pln\"\n\t| \"pyg\"\n\t| \"qar\"\n\t| \"ron\"\n\t| \"rsd\"\n\t| \"rub\"\n\t| \"rwf\"\n\t| \"sar\"\n\t| \"sek\"\n\t| \"sgd\"\n\t| \"thb\"\n\t| \"tnd\"\n\t| \"try\"\n\t| \"ttd\"\n\t| \"twd\"\n\t| \"tzs\"\n\t| \"usd\"\n\t| \"uyu\"\n\t| \"uzs\"\n\t| \"vnd\"\n\t| \"xcd\"\n\t| \"xof\"\n\t| \"zar\";\n\n/** The different types of custom CTAs that can be selected. */\nexport type CustomCtas =\n\t/** Apply Now */\n\t| \"apply_now\"\n\t/** Call Now */\n\t| \"call_now\"\n\t/** Complete Order */\n\t| \"complete_order\"\n\t/** Contact Us */\n\t| \"contact_us\"\n\t/** Donate Now */\n\t| \"donate_now\"\n\t/** Get Access */\n\t| \"get_access\"\n\t/** Get Offer */\n\t| \"get_offer\"\n\t/** Join */\n\t| \"join\"\n\t/** Order Now */\n\t| \"order_now\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Shop Now */\n\t| \"shop_now\"\n\t/** Sign Up */\n\t| \"sign_up\"\n\t/** Subscribe */\n\t| \"subscribe\";\n\nexport interface CustomFieldInput {\n\t/** The type of the custom field. */\n\tfieldType: CustomFieldTypes;\n\t/** The ID of the custom field (if being updated) */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the custom field. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/** The order of the field. */\n\torder?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The placeholder value of the field. */\n\tplaceholder?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the field is required. */\n\trequired?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The type of the custom field. */\nexport type CustomFieldTypes =\n\t/** Text */\n\t\"text\";\n\n/** Autogenerated input type of DeleteAccessPass */\nexport interface DeleteAccessPassInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID (tag) of the access pass to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteAssessmentQuestionImage */\nexport interface DeleteAssessmentQuestionImageInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteChapter */\nexport interface DeleteChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteCompanyMutedUser */\nexport interface DeleteCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unmute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLessonAttachment */\nexport interface DeleteLessonAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLesson */\nexport interface DeleteLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeletePromoCode */\nexport interface DeletePromoCodeInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID of the promo code to archive. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteWebhook */\nexport interface DeleteWebhookInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the webhook to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The type of device a user can use to access Whop */\nexport type Device = \"android\" | \"desktop_web\" | \"ios\" | \"mobile_web\";\n\n/** The status of the direct message. */\nexport type DirectMessageStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** Autogenerated input type of DirectUpload */\nexport interface DirectUploadInput {\n\t/** The size of the file in bytes */\n\tbyteSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tbyteSizeV2?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\t/** The checksum of the file */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content type of the file */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The filename of the file */\n\tfilename: Scalars[\"String\"][\"input\"];\n\t/** The metadata of the file */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not to use multipart upload. The file must be larger than 5MB */\n\tmultipart?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of record to attach the file to */\n\trecord: AttachableRecords;\n}\n\n/** The direction of the sort. */\nexport type Direction = \"asc\" | \"desc\";\n\n/** Image styles for discord_account. */\nexport type DiscordAccountImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** The available discover statuses to choose from. */\nexport type DiscoverStatuses =\n\t/** Live Discover */\n\t| \"live_discover\"\n\t/** Not Available */\n\t| \"not_available\";\n\n/** The dispute risk levels of a ledger account, derived from the ledger account stat */\nexport type DisputeRiskLevels =\n\t/** At Risk */\n\t| \"at_risk\"\n\t/** High */\n\t| \"high\"\n\t/** Low */\n\t| \"low\"\n\t/** Medium */\n\t| \"medium\"\n\t/** Removal */\n\t| \"removal\";\n\n/** The possible statuses of a dispute */\nexport type DisputeStatuses =\n\t/** Closed */\n\t| \"closed\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Needs Response */\n\t| \"needs_response\"\n\t/** Other */\n\t| \"other\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Warning Closed */\n\t| \"warning_closed\"\n\t/** Warning Needs Response */\n\t| \"warning_needs_response\"\n\t/** Warning Under Review */\n\t| \"warning_under_review\"\n\t/** Won */\n\t| \"won\";\n\n/** Which columns can be used to sort. */\nexport type DisputesSortableColumns =\n\t| \"amount\"\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"needs_response_by\";\n\n/** Sort options for DM channels */\nexport type DmsChannelsSortTypes =\n\t| \"created_at\"\n\t| \"custom_name\"\n\t| \"last_post_sent_at\"\n\t| \"query\";\n\n/** The input to create a DMs feed */\nexport interface DmsFeedInput {\n\t/** The collection ID for the feed */\n\tcollectionIdentifier?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The custom name for the feed */\n\tcustomName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The unique identifier for the entity */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Input for a DMs feed member */\nexport interface DmsFeedMemberInput {\n\t/** The ID of the DM channel */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Timestamp when the member last viewed the channel (in milliseconds since Unix epoch) */\n\tlastViewedAt?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The notification preference for this member (all, mentions, none) */\n\tnotificationPreference?: InputMaybe<DmsFeedMemberNotificationPreferences>;\n\t/** The status of the member (active, inactive, banned) */\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The notification preferences for a DMs feed member */\nexport type DmsFeedMemberNotificationPreferences =\n\t/** All */\n\t| \"all\"\n\t/** Mentions */\n\t| \"mentions\"\n\t/** None */\n\t| \"none\";\n\n/** The statuses of a DMs feed member */\nexport type DmsFeedMemberStatuses =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of DMs feeds */\nexport type DmsFeedTypes = \"direct_message\" | \"group_chat\";\n\n/** The input to create a post in a feed */\nexport interface DmsPostInput {\n\t/** The attachments for this message */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** The content of the post */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the DM channel this post belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this post belongs to */\n\tfeedType: FeedTypes;\n\t/**\n\t * The file attachments for this message\n\t * @deprecated Use attachments instead\n\t */\n\tfileAttachments?: InputMaybe<Array<FileAttachmentInput>>;\n\t/** The GIFs attached to this message */\n\tgifs?: InputMaybe<Array<GifInput>>;\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether everyone was mentioned in the post */\n\tisEveryoneMentioned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the post is pinned */\n\tisPinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The link embeds for this message */\n\tlinkEmbeds?: InputMaybe<Array<LinkEmbedInput>>;\n\t/** The IDs of the users mentioned in the post */\n\tmentionedUserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The ID of the parent post, if applicable */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The poll for this message */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The ID of the message this is replying to, if applicable */\n\treplyingToPostId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The rich content of the post */\n\trichContent?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n}\n\n/** The types of post */\nexport type DmsPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** The types of earnings on the platform */\nexport type EarningsReportPeriods =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The types of earnings on the platform */\nexport type EarningsTypes =\n\t/** Affiliate Payment */\n\t| \"affiliate_payment\"\n\t/** Bounty Payout */\n\t| \"bounty_payout\"\n\t/** Company Referral */\n\t| \"company_referral\"\n\t/** Content Reward Fixed Payout */\n\t| \"content_reward_fixed_payout\"\n\t/** Content Reward Payout */\n\t| \"content_reward_payout\"\n\t/** Creator To Creator */\n\t| \"creator_to_creator\"\n\t/** Creator To User */\n\t| \"creator_to_user\"\n\t/** Membership Referral */\n\t| \"membership_referral\"\n\t/** Payment Payout */\n\t| \"payment_payout\"\n\t/** Team Member Payout */\n\t| \"team_member_payout\"\n\t/** User To Creator */\n\t| \"user_to_creator\"\n\t/** User To User */\n\t| \"user_to_user\";\n\n/** The type of entity to fetch */\nexport type EntityTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Dms Feed Member */\n\t| \"dms_feed_member\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Forum Post */\n\t| \"forum_post\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Muted User */\n\t| \"muted_user\"\n\t/** Reaction */\n\t| \"reaction\";\n\n/** Filters for the entries table. */\nexport interface EntriesFiltersInput {\n\t/** The access pass IDs to filter the entries by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the entries by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The plan IDs to filter the entries by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the entries by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the entries by */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** Which columns can be used to sort. */\nexport type EntriesSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter entries on */\nexport interface EntryFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What the results should be ordered by. */\n\torder?: InputMaybe<EntryOrder>;\n\t/** A specific status */\n\tstatus?: InputMaybe<EntryStatus>;\n\t/** A list of statuses */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** The order to sort the entries by */\nexport type EntryOrder =\n\t| \"created_at\"\n\t| \"member_discord\"\n\t| \"member_username\"\n\t| \"selected\";\n\n/** The status of an entry to a waitlist or raffle. */\nexport type EntryStatus = \"any\" | \"approved\" | \"denied\" | \"pending\";\n\n/** An entry can either be a watlist or raffle */\nexport type EntryTypes = \"raffle\" | \"waitlist\";\n\n/** The different access levels for experiences (PUBLIC IS NEVER USED ANYMORE). */\nexport type ExperienceAccessLevels = \"private\" | \"public\";\n\n/** The type of content that this experience card contains */\nexport type ExperienceActivityCardTypes =\n\t| \"availability\"\n\t| \"booking\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"calendar_bookings_availability\"\n\t| \"calendar_bookings_booking\"\n\t| \"campaign\"\n\t| \"content\"\n\t| \"content_rewards_campaign\"\n\t| \"content_rewards_submission\"\n\t| \"course\"\n\t| \"dms_post\"\n\t| \"event\"\n\t| \"events_event\"\n\t| \"events_rsvp\"\n\t| \"feed_dms_post\"\n\t| \"feed_forum_post\"\n\t| \"feed_livestream_feed\"\n\t| \"forum_post\"\n\t| \"livestream_feed\"\n\t| \"rsvp\"\n\t| \"spin\"\n\t| \"submission\"\n\t| \"wheel\"\n\t| \"wheel_spin\"\n\t| \"wheel_wheel\";\n\n/** Values to filter plans on */\nexport interface ExperienceFilters {\n\t/**\n\t * The access level to filter on.\n\t * @deprecated You can't filter by access level anymore\n\t */\n\taccessLevel?: InputMaybe<ExperienceAccessLevels>;\n\t/** The ID of the access pass to filter on. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience interface to filter on. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of experience.. */\n\texperienceType?: InputMaybe<ExperienceTypes>;\n\t/** Either includes or excludes experiences on a given access pass. */\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The query to search for. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The types of links that can be generated. */\nexport type ExperienceLinkModes = \"iframe_link\" | \"link\";\n\n/** The different types of experiences that can be created. */\nexport type ExperienceTypes =\n\t/** Has Interface */\n\t\"has_interface\";\n\n/** The type of feed to fetch from */\nexport type FeedTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Universal Post */\n\t| \"universal_post\"\n\t/** User */\n\t| \"user\";\n\n/** Input for a file attachment */\nexport interface FileAttachmentInput {\n\t/** The aspect ratio of the image, if applicable */\n\taspectRatio?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The type of the attachment (e.g., image, video) */\n\tattachmentType: FileAttachmentTypes;\n\t/** The blurred data URL for image preview */\n\tblurUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The attachment's content type (e.g., image/jpg, video/mp4) */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the file */\n\tfileName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tfileSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The URL to access the file */\n\tfileUrl: Scalars[\"String\"][\"input\"];\n\t/** The height of the image */\n\theight?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the file attachment */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to access the thumbnail */\n\tthumbnailUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The width of the image */\n\twidth?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different moderation results for a file attachment. */\nexport type FileAttachmentModerationResultsTypes =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** The types of supported file attachments */\nexport type FileAttachmentTypes =\n\t/** Audio */\n\t| \"audio\"\n\t/** File */\n\t| \"file\"\n\t/** Image */\n\t| \"image\"\n\t/** Unknown */\n\t| \"unknown\"\n\t/** Video */\n\t| \"video\";\n\n/** The duration of a FlashSale */\nexport type FlashSaleDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\";\n\n/** The status of a FlashSale */\nexport type FlashSaleStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Draft */\n\t| \"draft\";\n\n/** Email notification preference option for a forum feed */\nexport type ForumEmailNotificationPreferences =\n\t| \"all_admin_posts\"\n\t| \"none\"\n\t| \"only_weekly_summary\";\n\n/** The layout display option of a forum feed */\nexport type ForumLayoutTypes = \"blog\" | \"feed\";\n\n/** The types of post */\nexport type ForumPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** Who can comment on a forum feed */\nexport type ForumWhoCanCommentTypes = \"admins\" | \"everyone\";\n\n/** Who can post on a forum feed */\nexport type ForumWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** The friendly status of a receipt */\nexport type FriendlyReceiptStatus =\n\t| \"auto_refunded\"\n\t| \"canceled\"\n\t| \"dispute_warning\"\n\t| \"drafted\"\n\t| \"failed\"\n\t| \"incomplete\"\n\t| \"open_dispute\"\n\t| \"open_resolution\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"pending\"\n\t| \"price_too_low\"\n\t| \"refunded\"\n\t| \"succeeded\"\n\t| \"uncollectible\"\n\t| \"unresolved\";\n\n/** A gateway for a payment token. */\nexport type GatewayTypes =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\";\n\n/** Input for a GIF attachment */\nexport interface GifInput {\n\t/** The height of the GIF in pixels */\n\theight: Scalars[\"Int\"][\"input\"];\n\t/** The original URL of the GIF */\n\toriginalUrl: Scalars[\"String\"][\"input\"];\n\t/** The URL for a preview image of the GIF */\n\tpreviewUrl: Scalars[\"String\"][\"input\"];\n\t/** The provider of the GIF */\n\tprovider: GifProviders;\n\t/** The unique identifier of the GIF */\n\tslug: Scalars[\"ID\"][\"input\"];\n\t/** The title of the GIF */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The URL of the full GIF */\n\turl: Scalars[\"String\"][\"input\"];\n\t/** The width of the GIF in pixels */\n\twidth: Scalars[\"Int\"][\"input\"];\n}\n\n/** The types of supported GIFs providers */\nexport type GifProviders =\n\t/** Giphy */\n\t\"giphy\";\n\n/** The different statuses of the global affiliate program for an access pass. */\nexport type GlobalAffiliateStatuses = \"disabled\" | \"enabled\";\n\n/** The scope of the results to return. */\nexport type HubMembershipStatus = \"active\" | \"inactive\";\n\n/** Predefined attachment variants */\nexport type ImageAttachmentVariants =\n\t| \"legacy\"\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s720x1280\"\n\t| \"s720x1280fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1080x1920\"\n\t| \"s1080x1920fit\"\n\t| \"s1080x1920fit_h264_vq7\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\"\n\t| \"s1920x1080fit_h264_vq7\"\n\t| \"x2\"\n\t| \"x5\";\n\n/** Allowed image file types for uploading to the platform */\nexport type ImageExtensions = \"GIF\" | \"JPEG\" | \"JPG\" | \"PNG\" | \"SVG\" | \"WEBP\";\n\n/** Image styles for image. */\nexport type ImageImageStyles =\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The different industry types a company can be in. */\nexport type IndustryTypes =\n\t/** Accessories */\n\t| \"accessories\"\n\t/** Agencies */\n\t| \"agencies\"\n\t/** Ai */\n\t| \"ai\"\n\t/** Ai Agency */\n\t| \"ai_agency\"\n\t/** Amazon Fba */\n\t| \"amazon_fba\"\n\t/** Auto Repair Shop */\n\t| \"auto_repair_shop\"\n\t/** Beauty And Personal Care */\n\t| \"beauty_and_personal_care\"\n\t/** Bootcamps */\n\t| \"bootcamps\"\n\t/** Business */\n\t| \"business\"\n\t/** Careers */\n\t| \"careers\"\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Clipping Agency */\n\t| \"clipping_agency\"\n\t/** Clothing */\n\t| \"clothing\"\n\t/** Coaching Agency */\n\t| \"coaching_agency\"\n\t/** Coffee Shop */\n\t| \"coffee_shop\"\n\t/** Concerts */\n\t| \"concerts\"\n\t/** Convention */\n\t| \"convention\"\n\t/** Customer Support Agency */\n\t| \"customer_support_agency\"\n\t/** Dating */\n\t| \"dating\"\n\t/** Design Agency */\n\t| \"design_agency\"\n\t/** Development Agency */\n\t| \"development_agency\"\n\t/** Ecommerce */\n\t| \"ecommerce\"\n\t/** Electronics And Gadgets */\n\t| \"electronics_and_gadgets\"\n\t/** Fitness */\n\t| \"fitness\"\n\t/** Fitness Gear */\n\t| \"fitness_gear\"\n\t/** Food And Beverages */\n\t| \"food_and_beverages\"\n\t/** Gym */\n\t| \"gym\"\n\t/** Health And Wellness */\n\t| \"health_and_wellness\"\n\t/** Home Goods */\n\t| \"home_goods\"\n\t/** Home Services */\n\t| \"home_services\"\n\t/** Hotel Lodging */\n\t| \"hotel_lodging\"\n\t/** Kindle Book Publishing */\n\t| \"kindle_book_publishing\"\n\t/** Marketing Agency */\n\t| \"marketing_agency\"\n\t/** Masterminds */\n\t| \"masterminds\"\n\t/** Medical Dentist Office */\n\t| \"medical_dentist_office\"\n\t/** Meetups */\n\t| \"meetups\"\n\t/** Other */\n\t| \"other\"\n\t/** Parties */\n\t| \"parties\"\n\t/** Personal Development */\n\t| \"personal_development\"\n\t/** Personal Finance */\n\t| \"personal_finance\"\n\t/** Public Speaking */\n\t| \"public_speaking\"\n\t/** Real Estate */\n\t| \"real_estate\"\n\t/** Recruiting Agency */\n\t| \"recruiting_agency\"\n\t/** Reselling */\n\t| \"reselling\"\n\t/** Restaurant */\n\t| \"restaurant\"\n\t/** Retail Store */\n\t| \"retail_store\"\n\t/** Sales */\n\t| \"sales\"\n\t/** Sales Agency */\n\t| \"sales_agency\"\n\t/** Salon Spa */\n\t| \"salon_spa\"\n\t/** Social Media */\n\t| \"social_media\"\n\t/** Software */\n\t| \"software\"\n\t/** Spirituality */\n\t| \"spirituality\"\n\t/** Sports Betting */\n\t| \"sports_betting\"\n\t/** Supplements */\n\t| \"supplements\"\n\t/** Trading */\n\t| \"trading\"\n\t/** Travel */\n\t| \"travel\"\n\t/** Vas */\n\t| \"vas\"\n\t/** Video Games */\n\t| \"video_games\"\n\t/** Webinars */\n\t| \"webinars\";\n\n/** The collection type for an information request item */\nexport type InformationRequestItemCollectionType = \"multi\" | \"none\" | \"single\";\n\n/** The format of the text for an information request item */\nexport type InformationRequestItemTextFormat =\n\t| \"email\"\n\t| \"phone\"\n\t| \"plain\"\n\t| \"url\";\n\n/** The statuses an information request can have */\nexport type InformationRequestStatus =\n\t| \"awaiting_review\"\n\t| \"canceled\"\n\t| \"completed\"\n\t| \"requires_collection\";\n\n/** The different error codes for instant payouts */\nexport type InstantPayoutErrorCodes =\n\t/** Account Daily Limit Reached */\n\t| \"account_daily_limit_reached\"\n\t/** Amount Too High */\n\t| \"amount_too_high\"\n\t/** Feature Disabled */\n\t| \"feature_disabled\"\n\t/** Only Us Accounts */\n\t| \"only_us_accounts\"\n\t/** Only Usd */\n\t| \"only_usd\"\n\t/** Platform Daily Limit Reached */\n\t| \"platform_daily_limit_reached\"\n\t/** Restricted Account */\n\t| \"restricted_account\"\n\t/** Unsupported External Account */\n\t| \"unsupported_external_account\";\n\n/** The properties of the access pass to create for this invoice. */\nexport interface InvoiceAccessPassInput {\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** The method of collection for an invoice. */\nexport type InvoiceCollectionMethods =\n\t/** Charge a specific payment method for a customer. */\n\t| \"charge_automatically\"\n\t/** Send an invoice to the customer via email. */\n\t| \"send_invoice\";\n\n/** The properties of the plan to create for this invoice. */\nexport interface InvoicePlanInput {\n\t/** Whether or not ACH payments are accepted */\n\tachPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not card payments are accepted */\n\tcardPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether coinbase commerce payments are/aren't accepted. */\n\tcoinbaseCommerceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The description of the plan. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** A personal description or notes section for the business. */\n\tinternalNotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to offer a discount to cancel a subscription. */\n\tofferCancelDiscount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether paypal payments are/aren't accepted. */\n\tpaypalAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** Marks whether platform balance payments are/aren't accepted. */\n\tplatformBalanceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The URL to redirect the customer to after purchase. */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This is the release method the business uses to sell this plan. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** Configurable settings on how this plan is released. */\n\treleaseMethodSettings?: InputMaybe<ReleaseMethodSettingsInput>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The number of payments required before pausing the subscription. */\n\tsplitPayRequiredPayments?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Marks whether payments using splitit, a payment processor, are/aren't accepted for the plan. */\n\tsplititAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of units available for purchase. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The number of free trial days added before a renewal plan. */\n\ttrialPeriodDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Limits/doesn't limit the number of units available for purchase. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Shows or hides the plan from public/business view. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** The different statuses an invoice can be in */\nexport type InvoiceStatuses =\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Void */\n\t| \"void\";\n\n/** Filters for the invoices table. */\nexport interface InvoicesFiltersInput {\n\t/** The access pass IDs to filter the invoices by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The collection methods to filter the invoices by */\n\tcollectionMethods?: InputMaybe<Array<InvoiceCollectionMethods>>;\n\t/** The statuses to filter the invoices by */\n\tstatuses?: InputMaybe<Array<InvoiceStatuses>>;\n}\n\n/** Which columns can be used to sort. */\nexport type InvoicesSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** A type of order that the ItemOrdering represents. */\nexport type ItemOrderingOrderTypes =\n\t/** Experience */\n\t| \"experience\"\n\t/** Hub Creator */\n\t| \"hub_creator\"\n\t/** Hub Customer */\n\t| \"hub_customer\";\n\n/** The available languages for a course */\nexport type Languages =\n\t/** Bg */\n\t| \"bg\"\n\t/** Ca */\n\t| \"ca\"\n\t/** Cs */\n\t| \"cs\"\n\t/** Da */\n\t| \"da\"\n\t/** De */\n\t| \"de\"\n\t/** El */\n\t| \"el\"\n\t/** En */\n\t| \"en\"\n\t/** Es */\n\t| \"es\"\n\t/** Fi */\n\t| \"fi\"\n\t/** Fr */\n\t| \"fr\"\n\t/** Hr */\n\t| \"hr\"\n\t/** It */\n\t| \"it\"\n\t/** Nl */\n\t| \"nl\"\n\t/** No */\n\t| \"no\"\n\t/** Pl */\n\t| \"pl\"\n\t/** Pt */\n\t| \"pt\"\n\t/** Ro */\n\t| \"ro\"\n\t/** Ru */\n\t| \"ru\"\n\t/** Sk */\n\t| \"sk\"\n\t/** Sv */\n\t| \"sv\"\n\t/** Tr */\n\t| \"tr\"\n\t/** Uk */\n\t| \"uk\";\n\n/** The different types of leaderboards that can be fetched */\nexport type LeaderboardTypes =\n\t| \"affiliate_earnings\"\n\t| \"average_time_spent\"\n\t| \"money_earned_last_7_days\"\n\t| \"money_earned_last_24_hours\"\n\t| \"money_earned_last_30_days\"\n\t| \"new_users\"\n\t| \"top_rated\"\n\t| \"total_time_spent\"\n\t| \"usd_gmv\"\n\t| \"whop_partners_earnings_last_30_days\"\n\t| \"whop_partners_gtv_last_30_days\";\n\n/** Which columns can be used to sort. */\nexport type LeadsSortableColumns = \"created_at\" | \"id\";\n\n/** The different statuses a LedgerAccountAudit can be */\nexport type LedgerAccountAuditStatuses =\n\t/** Requested More Information */\n\t| \"requested_more_information\"\n\t/** Reserves Imposed */\n\t| \"reserves_imposed\";\n\n/** The standing of a ledger account, based on their dispute risk scores */\nexport type LedgerAccountStandings = \"at_risk\" | \"good\";\n\n/** The types of ledgers that can be created. */\nexport type LedgerTypes =\n\t/** Pool */\n\t| \"pool\"\n\t/** Primary */\n\t| \"primary\";\n\n/** The different withdrawal frequencies a LedgerAccount can have */\nexport type LedgerWithdrawalFrequencies =\n\t/** Daily */\n\t| \"daily\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Monthly */\n\t| \"monthly\"\n\t/** Weekly */\n\t| \"weekly\";\n\n/** The different statuses a LedgerAccount's withdrawal_status can be */\nexport type LedgerWithdrawalStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The available types for a lesson */\nexport type LessonTypes =\n\t/** Knowledge check */\n\t| \"knowledge_check\"\n\t/** Multi */\n\t| \"multi\"\n\t/** Pdf */\n\t| \"pdf\"\n\t/** Quiz */\n\t| \"quiz\"\n\t/** Text */\n\t| \"text\"\n\t/** Video */\n\t| \"video\";\n\n/** The available visibilities for a lesson. Determines how / whether a lesson is visible to users. */\nexport type LessonVisibilities =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The order to sort liked discover access passes by. */\nexport type LikedDiscoverAccessPassesOrder =\n\t/** Sort by promo code presence first, then rated at date */\n\t| \"promo_code_and_rated_at\"\n\t/** Sort by when the access pass was rated */\n\t| \"rated_at\";\n\n/** Input for a link embed */\nexport interface LinkEmbedInput {\n\t/** The URL of the linked content */\n\turl: Scalars[\"String\"][\"input\"];\n}\n\n/** Possible livestream destinations a user can restream to */\nexport type LivestreamDestination =\n\t/** Facebook */\n\t| \"facebook\"\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Kick */\n\t| \"kick\"\n\t/** Rumble */\n\t| \"rumble\"\n\t/** Steam */\n\t| \"steam\"\n\t/** Telegram */\n\t| \"telegram\"\n\t/** Twitch */\n\t| \"twitch\"\n\t/** Vimeo */\n\t| \"vimeo\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** Input for a livestream feed */\nexport interface LivestreamFeedInput {\n\t/** Whether or not media is banned in this livestream */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this livestream */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this livestream */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The description of this livestream */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The empty timeout of this livestream */\n\temptyTimeout?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The unique identifier for the feed */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of participants that can join the livestream (0 is unlimited) */\n\tmaxParticipants?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The metadata of this livestream */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not live reactions are enabled in this livestream */\n\treactionsEnabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The destinations to restream to */\n\trestreamDestinations?: InputMaybe<Array<LivestreamDestination>>;\n\t/** The scheduled time of this livestream */\n\tscheduledAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The title of this livestream */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this livestream */\n\twhoCanPost?: InputMaybe<LivestreamWhoCanPostTypes>;\n\t/** Who can react on this livestream */\n\twhoCanReact?: InputMaybe<LivestreamWhoCanReactTypes>;\n}\n\n/** The status of a livestream recording */\nexport type LivestreamRecordingStatus =\n\t/** Completed */\n\t| \"completed\"\n\t/** Failed */\n\t| \"failed\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Recording */\n\t| \"recording\";\n\n/** Who can post on a livestream feed */\nexport type LivestreamWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a livestream feed */\nexport type LivestreamWhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter made for you affiliates on */\nexport interface MadeForYouPlanFilters {\n\t/** Search by plan name, product name, or company name */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The sub-items that should be displayed for the stripe account. */\nexport type ManagementItems =\n\t| \"billing_details\"\n\t| \"country\"\n\t| \"merchant_of_record\"\n\t| \"payout_frequency\";\n\n/** Autogenerated input type of MarkLessonAsCompleted */\nexport interface MarkLessonAsCompletedInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to mark as completed */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The columns that can be used to order. */\nexport type MarketplaceCategoryOrder =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"live_access_pass_count\"\n\t| \"live_page_count\"\n\t| \"manual_position\"\n\t| \"name\"\n\t| \"random\";\n\n/** The marketplace types that are available for categories. */\nexport type MarketplaceCategoryTypes =\n\t/** App */\n\t| \"app\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The available marketplace statuses to choose from. */\nexport type MarketplaceStatuses =\n\t| \"live_marketplace\"\n\t| \"not_available\"\n\t| \"pending_review\";\n\nexport type Media = \"audio\" | \"image\" | \"other\" | \"video\";\n\n/** The different most recent actions a member can have. */\nexport type MemberMostRecentActions =\n\t/** Canceling */\n\t| \"canceling\"\n\t/** Churned */\n\t| \"churned\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expiring */\n\t| \"expiring\"\n\t/** Finished Split Pay */\n\t| \"finished_split_pay\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\"\n\t/** Paid Once */\n\t| \"paid_once\"\n\t/** Paid Subscriber */\n\t| \"paid_subscriber\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused */\n\t| \"paused\"\n\t/** Pending Entry */\n\t| \"pending_entry\"\n\t/** Renewing */\n\t| \"renewing\"\n\t/** Trialing */\n\t| \"trialing\";\n\n/** The different statuses a Member can have. */\nexport type MemberStatuses =\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\";\n\n/** The type of subtext to display for a member */\nexport type MemberSubtextTypes =\n\t/** Canceled On */\n\t| \"canceled_on\"\n\t/** Canceling On */\n\t| \"canceling_on\"\n\t/** Ending On */\n\t| \"ending_on\"\n\t/** Finished Split Pay At */\n\t| \"finished_split_pay_at\"\n\t/** Next Payment Attempt */\n\t| \"next_payment_attempt\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused At */\n\t| \"paused_at\"\n\t/** Renewing On */\n\t| \"renewing_on\"\n\t/** Trial Canceling On */\n\t| \"trial_canceling_on\"\n\t/** Trial Ends At */\n\t| \"trial_ends_at\"\n\t/** Unresolved At */\n\t| \"unresolved_at\";\n\n/** Filters for the members table. */\nexport interface MembersFiltersInput {\n\t/** The access pass IDs to filter the members by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the members by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The membership status to filter the members by */\n\tmembershipStatus?: InputMaybe<MembershipStatus>;\n\t/** The most recent actions to filter the members by */\n\tmostRecentActions?: InputMaybe<Array<MemberMostRecentActions>>;\n\t/** The plan IDs to filter the members by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the members by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/**\n\t * The name, username, or email to filter the members by. The email filter will\n\t * only apply if the current actor has the `member:email:read` permission.\n\t */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The start date to filter the members by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the members by */\n\tstatuses?: InputMaybe<Array<MemberStatuses>>;\n\t/** The tracking link IDs to filter the members by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembersSortableColumns =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"joined_at\"\n\t| \"most_recent_action\"\n\t| \"usd_total_spent\";\n\n/** The actions that can be performed on a membership */\nexport type MembershipActions =\n\t| \"add_discord_roles\"\n\t| \"add_free_days\"\n\t| \"cancel_membership\"\n\t| \"fulfill_trading_view_indicators\"\n\t| \"pause_subscription_payments\"\n\t| \"reset_license\"\n\t| \"retry_payment\"\n\t| \"shuffle_license\"\n\t| \"terminate_membership\"\n\t| \"unlink_discord\"\n\t| \"unpause_subscription_payments\";\n\n/** The state of a membership, based on a company's accepted sub statuses. */\nexport type MembershipHeaderStatus = \"active\" | \"churned\";\n\n/** Image styles for membership. */\nexport type MembershipImageStyles = \"s40\";\n\n/** The payment processor used for a membership */\nexport type MembershipPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** Whether or not to send push notifications to the user of a membership */\nexport type MembershipPushNotification =\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Enabled */\n\t| \"enabled\";\n\n/** The status of a membership */\nexport type MembershipStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Trialing */\n\t| \"trialing\"\n\t/** Unresolved */\n\t| \"unresolved\";\n\n/** Filters for the memberships table. */\nexport interface MembershipsFiltersInput {\n\t/** The access pass IDs to filter the memberships by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The access pass types to filter the memberships by */\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes>>;\n\t/** The cancelation reasons to filter the memberships by */\n\tcancelationReasons?: InputMaybe<Array<CancelOptions>>;\n\t/** The end date to filter the memberships by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Whether the memberships have a cancelation reason */\n\thasCancelationReason?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The header filter to filter the memberships by */\n\theaderFilter?: InputMaybe<MembershipHeaderStatus>;\n\t/** The membership status to filter the memberships by */\n\tmembershipStatus?: InputMaybe<HubMembershipStatus>;\n\t/** The plan IDs to filter the memberships by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the memberships by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the memberships by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the memberships by */\n\tstatuses?: InputMaybe<Array<MembershipStatus>>;\n\t/** The tracking link IDs to filter the memberships by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembershipsSortableColumns =\n\t| \"canceled_at\"\n\t| \"created_at\"\n\t| \"date_joined\"\n\t| \"id\"\n\t| \"status\"\n\t| \"total_spend\";\n\n/** The different moderation results for an attachment */\nexport type ModerationResults =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** Autogenerated input type of MoveCourse */\nexport interface MoveCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to move */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The experience to move the course into */\n\tdestinationExperienceId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Input for a feed muted member */\nexport interface MutedUserInput {\n\t/** The ID of the feed */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The feed type */\n\tfeedType?: FeedTypes;\n\t/** The unique identifier for the muted user */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The time the user is muted till */\n\tmutedUntil?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Mux asset statuses */\nexport type MuxAssetStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Ready */\n\t| \"ready\"\n\t/** Uploading */\n\t| \"uploading\";\n\n/** The different types of Stripe Accounts. */\nexport type NormalizedAccountTypes =\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\"\n\t| \"whop_credit\";\n\n/** The channel for a notification preference */\nexport type NotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFilters {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFiltersV3 {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** The status of the notification topic. If it's active, they will send. */\nexport type NotificationTopicStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The type for the notification topic. */\nexport type NotificationTopicTypes =\n\t/** Company */\n\t| \"company\"\n\t/** Company Team */\n\t| \"company_team\"\n\t/** User */\n\t| \"user\";\n\n/** The visibility of the notification topic. If it's hidden, it won't show on the UI. */\nexport type NotificationTopicVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Values to filter notifications on */\nexport interface NotificationsV4Filters {\n\t/**\n\t * The client's last fetched at timestamp. If passed will only return\n\t * notifications created after this timestamp. NOT YET IMPLEMENTED\n\t */\n\tclientLastFetchedAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The company ID that you want to filter by. Will return notifications sent to this team. */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience ID that you want to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience IDs that you want to filter by. Overrides experience_id. */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether the notifications are mentions or not */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether to only return unread notifications */\n\tunreadOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Values to paginate notifications on */\nexport interface NotificationsV4Pagination {\n\t/** Filter all notifications made after this */\n\tafter?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter all notifications made before this */\n\tbefore?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The number of notifications to return. Default is 50 */\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different providers that can be used for onboarding a ledger account. */\nexport type OnboardingProviders = \"generic\" | \"stripe\";\n\n/** The different onboarding types for a company. */\nexport type OnboardingTypes =\n\t/** Payments */\n\t| \"payments\"\n\t/** Products */\n\t| \"products\";\n\n/** The different variants of OpenGraph images for a company. */\nexport type OpengraphImageVariants =\n\t/** Black */\n\t| \"black\"\n\t/** Orange */\n\t| \"orange\"\n\t/** White */\n\t| \"white\";\n\n/** The account_types for a payment account object */\nexport type PaymentAccountAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The different action banners that can be shown for a payment account */\nexport type PaymentAccountActionBanners = \"requires_additional_information\";\n\n/** The providers for a payment account object */\nexport type PaymentAccountProviders =\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different statuses for a payment account object */\nexport type PaymentAccountStatuses =\n\t/** Broken */\n\t| \"broken\"\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled By Whop */\n\t| \"disabled_by_whop\"\n\t/** Missing Settlement Address */\n\t| \"missing_settlement_address\"\n\t/** Needs Completion */\n\t| \"needs_completion\"\n\t/** Needs Reauthorization */\n\t| \"needs_reauthorization\"\n\t/** Oauth Integration Not Found */\n\t| \"oauth_integration_not_found\"\n\t/** Payments Not Receivable */\n\t| \"payments_not_receivable\"\n\t/** Primary Email Not Confirmed */\n\t| \"primary_email_not_confirmed\"\n\t/** Reconnect Api Keys */\n\t| \"reconnect_api_keys\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Requirements Not Met */\n\t| \"requirements_not_met\"\n\t/** Setup */\n\t| \"setup\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Webhook Not Verified */\n\t| \"webhook_not_verified\";\n\n/** The high level payment processor options. */\nexport type PaymentMethods =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The high level payment processor options. */\nexport type PaymentProcessor =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\"\n\t| \"venmo\";\n\n/** The different payment providers. */\nexport type PaymentProviders =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different providers of payment transactions. */\nexport type PaymentTransactionProviders =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Splitit */\n\t| \"splitit\";\n\n/** The different statuses a payment transaction can be in. */\nexport type PaymentTransactionStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Succeeded */\n\t| \"succeeded\"\n\t/** Won */\n\t| \"won\";\n\n/** The different types of payment transactions. */\nexport type PaymentTransactionTypes =\n\t/** Authorization */\n\t| \"authorization\"\n\t/** Authorize */\n\t| \"authorize\"\n\t/** Cancel */\n\t| \"cancel\"\n\t/** Capture */\n\t| \"capture\"\n\t/** Chargeback */\n\t| \"chargeback\"\n\t/** Fraud Screening */\n\t| \"fraud_screening\"\n\t/** Installment */\n\t| \"installment\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Refund */\n\t| \"refund\"\n\t/** Three D Secure */\n\t| \"three_d_secure\"\n\t/** Verify */\n\t| \"verify\";\n\n/** The different approval statuses an account can have. */\nexport type PaymentsApprovalStatuses =\n\t/** Approved */\n\t| \"approved\"\n\t/** Monitoring */\n\t| \"monitoring\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The different providers a payout account can be. */\nexport type PayoutAccountProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses payout account can be. */\nexport type PayoutAccountStatuses =\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Needs Completion */\n\t| \"needs_completion\";\n\n/** The different delivery_types for a payout or payout destination. */\nexport type PayoutDeliveryTypes =\n\t/** Bank Deposit */\n\t| \"bank_deposit\"\n\t/** Bill */\n\t| \"bill\"\n\t/** Cash Pickup */\n\t| \"cash_pickup\"\n\t/** Cryptocurrency */\n\t| \"cryptocurrency\"\n\t/** Home Delivery */\n\t| \"home_delivery\"\n\t/** Masspay Card */\n\t| \"masspay_card\"\n\t/** Mobile Wallet */\n\t| \"mobile_wallet\"\n\t/** Paper Check */\n\t| \"paper_check\";\n\n/** The different platform statuses a payout destination can be in. */\nexport type PayoutDestinationPlatformStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different providers a payout destination can be. */\nexport type PayoutDestinationProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout destination can be in. */\nexport type PayoutDestinationStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Disabled */\n\t| \"disabled\";\n\n/** The different destination types for a payout destination. */\nexport type PayoutDestinationTypes =\n\t/** Instant */\n\t| \"instant\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The different error codes a payout can be in. */\nexport type PayoutErrorCodes =\n\t/** Account Closed */\n\t| \"account_closed\"\n\t/** Account Does Not Exist */\n\t| \"account_does_not_exist\"\n\t/** Account Information Invalid */\n\t| \"account_information_invalid\"\n\t/** Amount Out Of Bounds */\n\t| \"amount_out_of_bounds\"\n\t/** Attributes Not Validated */\n\t| \"attributes_not_validated\"\n\t/** B2b Payments Prohibited */\n\t| \"b2b_payments_prohibited\"\n\t/** Bank Statement Required */\n\t| \"bank_statement_required\"\n\t/** Compliance Review */\n\t| \"compliance_review\"\n\t/** Deposit Failed */\n\t| \"deposit_failed\"\n\t/** Deposit Rejected */\n\t| \"deposit_rejected\"\n\t/** Destination Unavailable */\n\t| \"destination_unavailable\"\n\t/** Exceeded Account Limit */\n\t| \"exceeded_account_limit\"\n\t/** Expired Quote */\n\t| \"expired_quote\"\n\t/** Generic Payout Error */\n\t| \"generic_payout_error\"\n\t/** Identification Number Invalid */\n\t| \"identification_number_invalid\"\n\t/** Invalid Account Number */\n\t| \"invalid_account_number\"\n\t/** Invalid Bank Code */\n\t| \"invalid_bank_code\"\n\t/** Invalid Beneficiary */\n\t| \"invalid_beneficiary\"\n\t/** Invalid Branch Number */\n\t| \"invalid_branch_number\"\n\t/** Invalid Phone Number */\n\t| \"invalid_phone_number\"\n\t/** Invalid Routing Number */\n\t| \"invalid_routing_number\"\n\t/** Invalid Swift Code */\n\t| \"invalid_swift_code\"\n\t/** Misc Error */\n\t| \"misc_error\"\n\t/** Missing City And Country */\n\t| \"missing_city_and_country\"\n\t/** Missing Phone Number */\n\t| \"missing_phone_number\"\n\t/** Missing Remittance Info */\n\t| \"missing_remittance_info\"\n\t/** Receiving Account Locked */\n\t| \"receiving_account_locked\"\n\t/** Rejected By Compliance */\n\t| \"rejected_by_compliance\"\n\t/** Source Token Insufficient Funds */\n\t| \"source_token_insufficient_funds\"\n\t/** Ssn Invalid */\n\t| \"ssn_invalid\"\n\t/** Wallet Screenshot Required */\n\t| \"wallet_screenshot_required\";\n\n/** The interval at which a Connected Account is paid out */\nexport type PayoutIntervals = \"daily\" | \"manual\" | \"monthly\" | \"weekly\";\n\n/** The payout methods that can be configured for a company. */\nexport type PayoutMethods = \"coinbase_commerce\" | \"paypal\" | \"stripe\";\n\n/** The different statuses as payout object can be. */\nexport type PayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Hold */\n\t| \"hold\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Ready For Pickup */\n\t| \"ready_for_pickup\"\n\t/** Scheduled */\n\t| \"scheduled\";\n\n/** The different types of attributes that can be saved for a PayoutTokenAttribute. */\nexport type PayoutTokenAttributeDataTypes =\n\t/** Address1 */\n\t| \"Address1\"\n\t/** Bank Account Branch Number */\n\t| \"BankAccountBranchNumber\"\n\t/** Bank Account Name */\n\t| \"BankAccountName\"\n\t/** Bank Account Number */\n\t| \"BankAccountNumber\"\n\t/** Bank Account Type */\n\t| \"BankAccountType\"\n\t/** Bank City */\n\t| \"BankCity\"\n\t/** Bank Name */\n\t| \"BankName\"\n\t/** Bank Routing Number */\n\t| \"BankRoutingNumber\"\n\t/** Bank State */\n\t| \"BankState\"\n\t/** Bill Reference Number */\n\t| \"BillReferenceNumber\"\n\t/** Birth Country */\n\t| \"BirthCountry\"\n\t/** Card Expiration */\n\t| \"CardExpiration\"\n\t/** Card Number */\n\t| \"CardNumber\"\n\t/** Card Zip */\n\t| \"CardZip\"\n\t/** City */\n\t| \"City\"\n\t/** Country */\n\t| \"Country\"\n\t/** Date Of Birth */\n\t| \"DateOfBirth\"\n\t/** Employment Address */\n\t| \"EmploymentAddress\"\n\t/** Employment Name */\n\t| \"EmploymentName\"\n\t/** Employment Occupation */\n\t| \"EmploymentOccupation\"\n\t/** Employment Phone */\n\t| \"EmploymentPhone\"\n\t/** Employment Supervisor */\n\t| \"EmploymentSupervisor\"\n\t/** Gender */\n\t| \"Gender\"\n\t/** Guardian Consent */\n\t| \"GuardianConsent\"\n\t/** Guardian Full Name */\n\t| \"GuardianFullName\"\n\t/** Guardian Gov Id Number */\n\t| \"GuardianGovIDNumber\"\n\t/** Guardian Gov Id Type */\n\t| \"GuardianGovIDType\"\n\t/** Id Selfie Collection */\n\t| \"IDSelfieCollection\"\n\t/** I Frame Payment Collection */\n\t| \"IFramePaymentCollection\"\n\t/** Identification Expiration */\n\t| \"IdentificationExpiration\"\n\t/** Identification Number */\n\t| \"IdentificationNumber\"\n\t/** Identification Type */\n\t| \"IdentificationType\"\n\t/** Maiden Name */\n\t| \"MaidenName\"\n\t/** Phone Number */\n\t| \"PhoneNumber\"\n\t/** Postal Code */\n\t| \"PostalCode\"\n\t/** Relationship */\n\t| \"Relationship\"\n\t/** Remittance Reason */\n\t| \"RemittanceReason\"\n\t/** Swift */\n\t| \"SWIFT\"\n\t/** Second Last Name */\n\t| \"SecondLastName\"\n\t/** Social Security */\n\t| \"SocialSecurity\"\n\t/** Source Of Funds */\n\t| \"SourceOfFunds\";\n\n/** The different types of inputs for a payout token attribute. This is the type of form that will be submitted in the data. */\nexport type PayoutTokenAttributeInputTypes =\n\t/** Date */\n\t| \"date\"\n\t/** Options */\n\t| \"options\"\n\t/** Text */\n\t| \"text\";\n\n/** The type of information being submitted in the value field. */\nexport type PayoutTokenAttributeValueTypes = \"raw\" | \"vault_token\";\n\n/** The different providers a payout token can be. */\nexport type PayoutTokenProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout token can have. */\nexport type PayoutTokenStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Broken */\n\t| \"broken\"\n\t/** Created */\n\t| \"created\";\n\n/** Whether a payout is one-time or recurring */\nexport type PayoutTypes =\n\t/** Flat Fee */\n\t| \"flat_fee\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Statuses for paypal accounts */\nexport type PaypalAccountStatuses =\n\t| \"broken\"\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"oauth_integration_not_found\"\n\t| \"payments_not_receivable\"\n\t| \"primary_email_not_confirmed\";\n\n/** The status of an entry for a perk. */\nexport type PerkStatus = \"completed\" | \"pending\";\n\n/** The type of direct link to generate */\nexport type PlanDirectLink = \"checkout\" | \"product_page\";\n\n/** Values to filter plans on */\nexport interface PlanFilters {\n\t/** A specific access pass to filter the scope by. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** If true, it returns plans that have affiliates */\n\taffiliates?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PlanOrder>;\n\t/** If true, it returns plans that have member/passholder affiliates set to true */\n\tpassholderAffiliate?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If true, it returns raffles that have ended. */\n\traffleEnded?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The release method to filter the scope by. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The visibility to filter the scope by. */\n\tvisibility?: InputMaybe<VisibilityFilter>;\n}\n\n/** The order to sort the results by. */\nexport type PlanOrder =\n\t| \"active_memberships_count\"\n\t| \"affiliates\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"internal_notes\";\n\n/** The type of plan that can be attached to an access pass */\nexport type PlanTypes =\n\t/** One Time */\n\t| \"one_time\"\n\t/** Renewal */\n\t| \"renewal\";\n\n/** The ways a relation of Plans can be ordered */\nexport type PlansOrder =\n\t| \"active_members_count\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"id\"\n\t| \"internal_notes\";\n\n/** Which columns can be used to sort. */\nexport type PlansSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"cached_initial_price_due\"\n\t| \"cached_usd_income\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"stock\";\n\n/** Input type for creating a poll in a feed post */\nexport interface PollInput {\n\t/** The options for the poll. Must have sequential IDs starting from 1 */\n\toptions: Array<PollOptionInput>;\n}\n\n/** Input type for a single poll option */\nexport interface PollOptionInput {\n\t/** Sequential ID for the poll option (starting from '1') */\n\tid: Scalars[\"String\"][\"input\"];\n\t/** The text of the poll option */\n\ttext: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of feed to fetch from */\nexport type PostTypes =\n\t/** Dms */\n\t| \"dms\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Post */\n\t| \"forum_post\";\n\n/** Autogenerated input type of ProcessEntities */\nexport interface ProcessEntitiesInput {\n\t/** The ID of the app */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** The chat feed posts to process */\n\tchatFeeds?: InputMaybe<Array<ChatFeedInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The DMs feed members to process */\n\tdmsFeedMembers?: InputMaybe<Array<DmsFeedMemberInput>>;\n\t/** The DMs feeds to process */\n\tdmsFeeds?: InputMaybe<Array<DmsFeedInput>>;\n\t/** The DMs posts to process */\n\tdmsPosts?: InputMaybe<Array<DmsPostInput>>;\n\t/** The livestream feeds to process */\n\tlivestreamFeeds?: InputMaybe<Array<LivestreamFeedInput>>;\n\t/** The chat feed muted members to process */\n\tmutedUsers?: InputMaybe<Array<MutedUserInput>>;\n\t/** The reactions to process */\n\treactions?: InputMaybe<Array<ReactionInput>>;\n}\n\n/** Types of product highlight */\nexport type ProductHighlightTypes =\n\t| \"benefit\"\n\t| \"pricing_feature\"\n\t| \"qualification\"\n\t| \"who_this_is_for\";\n\n/** Image styles for product. */\nexport type ProductImageStyles =\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The product_type of the ProductTaxCode */\nexport type ProductTaxCodeProductTypes = \"digital\" | \"physical\" | \"services\";\n\n/** Values to filter users on */\nexport interface ProductUserFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<ProductUserOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type ProductUserOrder =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** The different levels of visibility for resources */\nexport type ProfileVisibilities = \"hidden\" | \"visible\";\n\n/** Values to filter promo codes on */\nexport interface PromoCodeFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter whether to return active or expired (archived and inactive). */\n\tnewStatus?: InputMaybe<PromoCodeNewStatus>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PromoCodeOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The state of promo code. */\n\tstatus?: InputMaybe<PromoCodeStatus>;\n}\n\n/** The new statuses to filter the results by. */\nexport type PromoCodeNewStatus = \"active\" | \"expired\";\n\n/** The order to sort the results by. */\nexport type PromoCodeOrder = \"code\" | \"created_at\";\n\n/** Statuses for promo codes */\nexport type PromoCodeStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** Which columns can be used to sort. */\nexport type PromoCodesSortableColumns =\n\t| \"created_at\"\n\t| \"expiration_datetime\"\n\t| \"id\";\n\n/** The duration setting for the promo code */\nexport type PromoDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\"\n\t/** Repeating */\n\t| \"repeating\";\n\n/** The type of promo code used to discount a plan */\nexport type PromoTypes =\n\t/** Flat Amount */\n\t| \"flat_amount\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Autogenerated input type of PromoteAppBuildToProduction */\nexport interface PromoteAppBuildToProductionInput {\n\t/** The ID of the app build to promote. */\n\tappBuildId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type PublicAccessPassesOrder =\n\t| \"average_review_rating\"\n\t| \"average_time_spent_24_hours\"\n\t| \"created_at\"\n\t| \"global_affiliate_percentage\"\n\t| \"highest_bounties\"\n\t| \"id\"\n\t| \"last_24_hours_total_seconds\"\n\t| \"most_affiliate_earnings_24_hours\"\n\t| \"most_money_made_24_hours\"\n\t| \"most_reviews_7_days\"\n\t| \"most_reviews_24_hours\"\n\t| \"newest_arrivals\"\n\t| \"trending\"\n\t| \"trending_3_hours\";\n\n/** The order to sort the results by. */\nexport type PublicBountiesOrder = \"created_at\" | \"total_paid\";\n\n/** Input for a reaction */\nexport interface ReactionInput {\n\t/** The ID of the feed this reaction belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this reaction belongs to */\n\tfeedType: FeedTypes;\n\t/** The unique identifier for the reaction */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the post this reaction belongs to */\n\tpostId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the post (e.g., 'dms_post') */\n\tpostType: PostTypes;\n\t/** The type of reaction (e.g., 'like', 'vote', 'view', 'emoji') */\n\treactionType: ReactionTypes;\n\t/** The score of the reaction */\n\tscore: Scalars[\"Int\"][\"input\"];\n\t/** The value of the reaction (e.g., specific emoji) */\n\tvalue: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of reactions */\nexport type ReactionTypes =\n\t/** Emoji */\n\t| \"emoji\"\n\t/** Like */\n\t| \"like\"\n\t/** View */\n\t| \"view\"\n\t/** Vote */\n\t| \"vote\";\n\n/** The status of the abuse report */\nexport type ReceiptFeeTypes =\n\t/** Other Fee */\n\t| \"other_fee\"\n\t/** Processing Fee */\n\t| \"processing_fee\"\n\t/** Whop Fee */\n\t| \"whop_fee\";\n\n/** The payment processor of a receipt */\nexport type ReceiptPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The status of a receipt */\nexport type ReceiptStatus =\n\t/** Draft */\n\t| \"draft\"\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Uncollectible */\n\t| \"uncollectible\"\n\t/** Unresolved */\n\t| \"unresolved\"\n\t/** Void */\n\t| \"void\";\n\n/** The status of a receipt */\nexport type ReceiptStatusV2 =\n\t| \"failed\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"refunded\"\n\t| \"succeeded\";\n\n/**\n * The type of tax inclusivity applied to the receipt, for determining whether the\n * tax is included in the final price, or paid on top.\n */\nexport type ReceiptTaxBehaviors =\n\t/** Exclusive */\n\t| \"exclusive\"\n\t/** Inclusive */\n\t| \"inclusive\"\n\t/** Unspecified */\n\t| \"unspecified\";\n\n/** Values to filter receipts on */\nexport interface ReceiptV2Filters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The billing reason for the payment */\n\tbillingReasons?: InputMaybe<Array<BillingReasons>>;\n\t/** The currency of the payment. */\n\tcurrencies?: InputMaybe<Array<Currencies>>;\n\t/** Which way to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all memberships created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** How to order the results. */\n\torder?: InputMaybe<ReceiptV2Order>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** A specific plan. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all memberships created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The state of the payment. */\n\tstatuses?: InputMaybe<Array<ReceiptStatusV2>>;\n}\n\n/** The order to sort the results by. */\nexport type ReceiptV2Order = \"created_at\" | \"final_amount\" | \"paid_at\";\n\n/** Which columns can be used to sort. */\nexport type ReceiptsSortableColumns =\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"paid_at\"\n\t| \"presented_final_amount\";\n\n/** The different statuses for a Refund object */\nexport type RefundStatuses =\n\t| \"canceled\"\n\t| \"failed\"\n\t| \"pending\"\n\t| \"requires_action\"\n\t| \"succeeded\";\n\n/** The methods of how a plan can be released (including raffles and waitlists). */\nexport type ReleaseMethod =\n\t/** Buy Now */\n\t| \"buy_now\"\n\t/** Raffle */\n\t| \"raffle\"\n\t/** Waitlist */\n\t| \"waitlist\";\n\nexport interface ReleaseMethodSettingsInput {\n\t/** When the raffle will expire */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The maximum number of entries allowed for the raffle or waitlist */\n\tmaxEntries?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** If this is enabled, the raffle will get entries based off of how many NFTs the user owns */\n\tnftWeightedEntries?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** When the raffle will start */\n\tstartsAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n}\n\n/** The types of reports that can be generated. */\nexport type ReportTypes =\n\t/** Bookmark */\n\t| \"bookmark\"\n\t/** Downvote */\n\t| \"downvote\"\n\t/** Share */\n\t| \"share\"\n\t/** Upvote */\n\t| \"upvote\";\n\n/** The different types of actions for a resolution event */\nexport type ResolutionActions =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Appealed */\n\t| \"appealed\"\n\t/** Created */\n\t| \"created\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Dispute Customer Won */\n\t| \"dispute_customer_won\"\n\t/** Dispute Merchant Won */\n\t| \"dispute_merchant_won\"\n\t/** Dispute Opened */\n\t| \"dispute_opened\"\n\t/** Escalated */\n\t| \"escalated\"\n\t/** Requested More Info */\n\t| \"requested_more_info\"\n\t/** Responded */\n\t| \"responded\"\n\t/** Withdrew */\n\t| \"withdrew\";\n\n/** The types of responses a customer can make to a resolution. */\nexport type ResolutionCustomerResponses = \"appeal\" | \"respond\" | \"withdraw\";\n\n/** Filters for the resolutions */\nexport interface ResolutionFilters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Filter by their case state */\n\tcaseState?: InputMaybe<CaseStates>;\n\t/** The direction to filter */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter by the end date */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The order to filter */\n\torder?: InputMaybe<ResolutionOrder>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** The text to search by */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter by the start date */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter by their status */\n\tstatuses?: InputMaybe<Array<ResolutionStatuses>>;\n}\n\n/** A reason why a specific receipt cannot have a resolution created. */\nexport type ResolutionIneligibilityReason =\n\t| \"already_opened\"\n\t| \"already_refunded\"\n\t| \"free\"\n\t| \"not_paid\"\n\t| \"out_of_date\"\n\t| \"unsupported_payment_processor\";\n\n/** The different types of issues a resolution can be */\nexport type ResolutionIssueTypes =\n\t/** Forgot To Cancel */\n\t| \"forgot_to_cancel\"\n\t/** Item Not Received */\n\t| \"item_not_received\"\n\t/** Product Unacceptable */\n\t| \"product_unacceptable\"\n\t/** Significantly Not As Described */\n\t| \"significantly_not_as_described\"\n\t/** Unauthorized Transaction */\n\t| \"unauthorized_transaction\";\n\n/** The types of responses a merchant can make to a resolution. */\nexport type ResolutionMerchantResponses =\n\t| \"accept\"\n\t| \"appeal\"\n\t| \"deny\"\n\t| \"request_more_info\"\n\t| \"respond\";\n\n/** Possible values to filter user on */\nexport type ResolutionOrder = \"due_date\" | \"id\";\n\n/** The types of responses the platform can make to a resolution. */\nexport type ResolutionPlatformResponses =\n\t| \"merchant_refund\"\n\t| \"merchant_wins\"\n\t| \"platform_refund\"\n\t| \"request_buyer_info\"\n\t| \"request_merchant_info\";\n\n/** The different types of reporters for a resolution event */\nexport type ResolutionReporters =\n\t/** Customer */\n\t| \"customer\"\n\t/** Merchant */\n\t| \"merchant\"\n\t/** Platform */\n\t| \"platform\"\n\t/** System */\n\t| \"system\";\n\n/** The statuses a resolution object can have */\nexport type ResolutionStatuses =\n\t/** Customer Info Needed */\n\t| \"customer_info_needed\"\n\t/** Customer Response Needed */\n\t| \"customer_response_needed\"\n\t/** Customer Withdrew */\n\t| \"customer_withdrew\"\n\t/** Customer Won */\n\t| \"customer_won\"\n\t/** Merchant Info Needed */\n\t| \"merchant_info_needed\"\n\t/** Merchant Response Needed */\n\t| \"merchant_response_needed\"\n\t/** Merchant Won */\n\t| \"merchant_won\"\n\t/** Under Platform Review */\n\t| \"under_platform_review\";\n\n/** Which columns can be used to sort. */\nexport type ResolutionsSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** The different reason codes. */\nexport type RestrictionSetReasonCodes = \"blocked_country\";\n\n/** Autogenerated input type of RetryPaymentMyMembership */\nexport interface RetryPaymentMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to retry the payment for. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The status of a review report */\nexport type ReviewReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The statuses a review can have */\nexport type ReviewStatus =\n\t/** Pending */\n\t| \"pending\"\n\t/** Published */\n\t| \"published\"\n\t/** Removed */\n\t| \"removed\";\n\n/** Which columns can be used to sort. */\nexport type ReviewsSortableColumns = \"created_at\" | \"id\" | \"stars\";\n\n/** The available reward units to choose from. */\nexport type RewardUnits =\n\t/** Per Submission */\n\t| \"per_submission\"\n\t/** Per View */\n\t| \"per_view\";\n\n/** The status of an RFI */\nexport type RfiStatuses =\n\t/** Ignored */\n\t| \"ignored\"\n\t/** Pending Provider */\n\t| \"pending_provider\"\n\t/** Resolved */\n\t| \"resolved\"\n\t/** Waiting For Platform */\n\t| \"waiting_for_platform\"\n\t/** Waiting For User */\n\t| \"waiting_for_user\";\n\n/** The level of security an account has */\nexport type SecurityLevels = \"none\" | \"two_factor\";\n\n/** Autogenerated input type of SendMessage */\nexport interface SendMessageInput {\n\t/** The attachments for this message, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chat experience to send the message in. */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the feed to send to. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of the feed to send to. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** The message to send. */\n\tmessage: Scalars[\"String\"][\"input\"];\n\t/** The user to send the direct message to. */\n\ttoUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of SendNotification */\nexport interface SendNotificationInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company team to send the notification to */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The content of the notification */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the experience to send the notification to */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** An external ID for the notification */\n\texternalId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether the notification is a mention */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The link to open when the notification is clicked. If you just want to append\n\t * a rest path use the restPath parameter. You can link to any url here.\n\t */\n\tlink?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The rest path to append to the generated deep link that opens your app. Use\n\t * [restPath] in your app path in the dashboard to read this parameter.\n\t */\n\trestPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user sending the notification */\n\tsenderUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The subtitle of the notification */\n\tsubtitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the notification */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The IDs of the users to send the notification to. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** The status of a simple notification preference */\nexport type SimpleNotificationPreferenceStatus =\n\t/** Everything */\n\t| \"everything\"\n\t/** Nothing */\n\t| \"nothing\"\n\t/** Only Mentions */\n\t| \"only_mentions\";\n\n/** The different websites you can have social links for */\nexport type SocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The origin of the specific fee */\nexport type SpecificFeeOrigins =\n\t/** Affiliate Fee */\n\t| \"affiliate_fee\"\n\t/** Apple Processing Fee */\n\t| \"apple_processing_fee\"\n\t/** Billing Percentage Fee */\n\t| \"billing_percentage_fee\"\n\t/** Buyer Fee */\n\t| \"buyer_fee\"\n\t/** Cross Border Percentage Fee */\n\t| \"cross_border_percentage_fee\"\n\t/** Crypto Fee */\n\t| \"crypto_fee\"\n\t/** Dispute Alert Fee */\n\t| \"dispute_alert_fee\"\n\t/** Dispute Fee */\n\t| \"dispute_fee\"\n\t/** Fx Percentage Fee */\n\t| \"fx_percentage_fee\"\n\t/** Marketplace Affiliate Fee */\n\t| \"marketplace_affiliate_fee\"\n\t/** Orchestration Percentage Fee */\n\t| \"orchestration_percentage_fee\"\n\t/** Payment Processing Fixed Fee */\n\t| \"payment_processing_fixed_fee\"\n\t/** Payment Processing Percentage Fee */\n\t| \"payment_processing_percentage_fee\"\n\t/** Paypal Fee */\n\t| \"paypal_fee\"\n\t/** Platform Balance Processing Fee */\n\t| \"platform_balance_processing_fee\"\n\t/** Sales Tax Remittance */\n\t| \"sales_tax_remittance\"\n\t/** Sales Tax Remittance Reversal */\n\t| \"sales_tax_remittance_reversal\"\n\t/** Sezzle Processing Fee */\n\t| \"sezzle_processing_fee\"\n\t/** Splitit Processing Fee */\n\t| \"splitit_processing_fee\"\n\t/** Stripe Billing Fee */\n\t| \"stripe_billing_fee\"\n\t/** Stripe Domestic Processing Fee */\n\t| \"stripe_domestic_processing_fee\"\n\t/** Stripe Fixed Processing Fee */\n\t| \"stripe_fixed_processing_fee\"\n\t/** Stripe International Processing Fee */\n\t| \"stripe_international_processing_fee\"\n\t/** Stripe Payout Fee */\n\t| \"stripe_payout_fee\"\n\t/** Stripe Radar Fee */\n\t| \"stripe_radar_fee\"\n\t/** Stripe Sales Tax Fee */\n\t| \"stripe_sales_tax_fee\"\n\t/** Stripe Standard Processing Fee */\n\t| \"stripe_standard_processing_fee\"\n\t/** Three Ds Fixed Fee */\n\t| \"three_ds_fixed_fee\"\n\t/** Whop Processing Fee */\n\t| \"whop_processing_fee\";\n\n/** The configuration for receipts stats query. */\nexport interface StatsConfigInput {\n\t/** The access pass ids to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The bot ids to filter the data by. */\n\tbotIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Whether or not to filter data by direct to consumer or marketplace */\n\tdirectToConsumer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The feed ids to filter the data by. */\n\tfeedIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The plan ids to filter the data by. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Statuses for resources */\nexport type Status = \"active\" | \"archived\" | \"deleted\";\n\n/** The available bounty statuses to choose from. */\nexport type Statuses =\n\t/** Archived */\n\t| \"archived\"\n\t/** Published */\n\t| \"published\";\n\n/** Statuses for stripe accounts */\nexport type StripeAccountStatuses =\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"needs_completion\"\n\t| \"needs_reauthorization\"\n\t| \"reconnect_api_keys\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Types of Stripe accounts */\nexport type StripeAccountTypes =\n\t| \"connect\"\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\";\n\n/** The status that an external payout account can have */\nexport type StripeExternalAccountStatuses =\n\t/** Errored */\n\t| \"errored\"\n\t/** New */\n\t| \"new\"\n\t/** Validated */\n\t| \"validated\"\n\t/** Verification Failed */\n\t| \"verification_failed\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The methods that a StripePayout can have */\nexport type StripePayoutMethods =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The payout types that a StripePayout can have */\nexport type StripePayoutPayoutTypes =\n\t/** Bank Account */\n\t| \"bank_account\"\n\t/** Card */\n\t| \"card\";\n\n/** The status that a StripePayout can have */\nexport type StripePayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The status that a StripePayout's trace can have */\nexport type StripePayoutTraceStatuses =\n\t/** Pending */\n\t| \"pending\"\n\t/** Supported */\n\t| \"supported\"\n\t/** Unsupported */\n\t| \"unsupported\";\n\n/** Whether or not the tax is included in a plan's price (or if it hasn't been set up) */\nexport type TaxTypes =\n\t/** Tax is exclusive in the price of the plan. If its $20 before tax, its $25 after tax. The user is paying tax */\n\t| \"exclusive\"\n\t/** Tax is inclusive in the price of the plan. If its $20, its $20. The company already factored in tax and is paying tax */\n\t| \"inclusive\"\n\t/** The company hasn't set up tax yet */\n\t| \"unspecified\";\n\n/** Autogenerated input type of TerminateMyMembership */\nexport interface TerminateMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The internal ID of the membership to terminate. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of TestWebhookV2 */\nexport interface TestWebhookV2Input {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The event to test the webhook for. */\n\tevent: WebhookEvent;\n\t/** The ID of the webhook to test. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of ToggleCancelMyMembership */\nexport interface ToggleCancelMyMembershipInput {\n\t/** A multiple choice selection for why the user canceled. */\n\tcancelOption?: InputMaybe<CancelOptions>;\n\t/** The custom input from the user for canceling the membership. */\n\tcancelationReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The destination of the custom link */\nexport type TrackingLinkDestination =\n\t/** Access Pass Page */\n\t| \"access_pass_page\"\n\t/** Bot Page */\n\t| \"bot_page\"\n\t/** Checkout Page */\n\t| \"checkout_page\";\n\n/** Which columns can be used to sort. */\nexport type TrackingLinksSortableColumns =\n\t| \"clicks\"\n\t| \"conversion_rate\"\n\t| \"converted_users\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"revenue_generated\";\n\n/** The different types for a tracking pixel */\nexport type TrackingPixelTypes =\n\t/** Hubspot Pixel */\n\t| \"hubspot_pixel_id\"\n\t/** X Checkout Initiated Event */\n\t| \"x_checkout_initiated_event\"\n\t/** X Payment Method Event */\n\t| \"x_payment_method_event\"\n\t/** X Purchase Event */\n\t| \"x_purchase_event\";\n\n/** Autogenerated input type of TransferFunds */\nexport interface TransferFundsInput {\n\t/** The amount to withdraw */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency that is being withdrawn. */\n\tcurrency: Currencies;\n\t/** The ID of the destination (either a User tag, Bot tag, or LedgerAccount tag) */\n\tdestinationId: Scalars[\"ID\"][\"input\"];\n\t/** The feed identifier to notify of the transfer. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The feed type to notify of the transfer. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** A unique key to ensure idempotence. Use a UUID or similar. */\n\tidempotenceKey: Scalars[\"String\"][\"input\"];\n\t/** The ledger account id to transfer from. */\n\tledgerAccountId: Scalars[\"ID\"][\"input\"];\n\t/** Notes for the transfer. Maximum of 50 characters. */\n\tnotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The reason for the transfer. */\n\treason?: InputMaybe<CreditTransactionTransferReasons>;\n\t/** The fee that the client thinks it is being charged for the transfer. Used to verify the fee. */\n\ttransferFee?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n}\n\n/** Autogenerated input type of TransferLinkMyMembership */\nexport interface TransferLinkMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** This is the ID of the membership you want to create a transfer link for. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UnassignProductionAppBuild */\nexport interface UnassignProductionAppBuildInput {\n\t/** The ID of the app to unassign the production build from. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** What platform should be unassigned */\n\tplatform: AppBuildPlatforms;\n}\n\n/** Autogenerated input type of UnbanUser */\nexport interface UnbanUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The types of universal post feeds that you can retrieve */\nexport type UniversalPostFeedTypes =\n\t| \"access_pass\"\n\t| \"discover\"\n\t| \"home\"\n\t| \"recent_content_reward_submissions\"\n\t| \"user_profile\";\n\n/** Autogenerated input type of UpdateAccessPass */\nexport interface UpdateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID (tag) of the access pass */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show the offers on the access pass. */\n\tshowOffers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of UpdateAffiliate */\nexport interface UpdateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount the affiliate will earn (either amount or percent 1-100) */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The ID (tag) of the affiliate. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether or not the affiliate will only get one payout or it will be recurring. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of payout. */\n\tpayoutType?: InputMaybe<PayoutTypes>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanId: Scalars[\"String\"][\"input\"];\n\t/** Sets the affiliate as active/inactive. */\n\tstatus?: InputMaybe<Status>;\n}\n\n/** Autogenerated input type of UpdateAgentUser */\nexport interface UpdateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The ID of the user to update. */\n\tuserId: Scalars[\"ID\"][\"input\"];\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateApp */\nexport interface UpdateAppInput {\n\t/** The description of the app for the app store in-depth app view. */\n\tappStoreDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The base developer url of the app */\n\tbaseDevUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base preview url of the app */\n\tbasePreviewUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base production url of the app */\n\tbaseUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the dashboard view of the app */\n\tdashboardPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The default agent user ID for the app */\n\tdefaultAgentUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The description of the app */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the discover view of the app */\n\tdiscoverPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the hub view of the app */\n\texperiencePath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If the apps experience's should force showing the pre-checkout iframe, and not rely on app connections. */\n\tforceCheckoutIframe?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The hub call to action text of the app */\n\thubCta?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The icon for the app */\n\ticon?: InputMaybe<AttachmentInput>;\n\t/** The ID of the app */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/**\n\t * The image for the app\n\t * @deprecated Use icon instead\n\t */\n\timage?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The name of the app */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The product page text of the app */\n\tproductPage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The scopes that the app will request off of users when a user installs the app. */\n\trequiredScopes?: InputMaybe<Array<AppValidScopes>>;\n\t/**\n\t * If the status is live, the app is visible on Whop discovery. In order to be\n\t * live, you need to set the name, icon, and description. Being unlisted or\n\t * hidden means it's not visible on Whop but you can still install the app via\n\t * direct link. To remove the app from whop discovery, you should set the status to unlisted.\n\t */\n\tstatus?: InputMaybe<AppStatuses>;\n}\n\n/** Autogenerated input type of UpdateAppPermissionRequirements */\nexport interface UpdateAppPermissionRequirementsInput {\n\t/** The ID of the app the permission requirements are being updated for */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The permissions that the app will request off of users when a user installs the app. */\n\trequestedPermissions: Array<AppRequestedPermissionInput>;\n}\n\n/** Autogenerated input type of UpdateChapter */\nexport interface UpdateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateChapterOrder */\nexport interface UpdateChapterOrderInput {\n\t/** The ID of the chapter to place this chapter below */\n\tbelowChapterId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to reorder */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateLesson */\nexport interface UpdateLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the lesson to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The type of the lesson */\n\tlessonType?: InputMaybe<LessonTypes>;\n\t/** The ID of the Mux asset to attach to this lesson */\n\tmuxAssetId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Determines how / whether this lesson is visible to users. */\n\tvisibility?: InputMaybe<LessonVisibilities>;\n}\n\n/** Autogenerated input type of UpdateLessonOrder */\nexport interface UpdateLessonOrderInput {\n\t/** The ID of the lesson to place this lesson below */\n\tbelowLessonId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to move the lesson to */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to reorder */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateMembership */\nexport interface UpdateMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of trial days to add to the membership to extend it. */\n\tfreeDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID (tag) of the membership. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The action being applied to the specific membership. */\n\tmembershipAction: MembershipActions;\n}\n\n/** Autogenerated input type of UpdateWebhook */\nexport interface UpdateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The ID of the Webhook to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The URL to send the webhook to. */\n\turl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\nexport interface UploadPartInput {\n\t/** The ETag of the part */\n\tetag: Scalars[\"String\"][\"input\"];\n\t/** The part number of the part */\n\tpartNumber: Scalars[\"Int\"][\"input\"];\n}\n\nexport interface UpsellPlanInput {\n\t/** The base currency of the upsell. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The price of the upsell. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The method of release for the upsell. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n}\n\n/** The different types of upsells an experience can have. */\nexport type UpsellTypes =\n\t/** After Checkout */\n\t| \"after_checkout\"\n\t/** Before Checkout */\n\t| \"before_checkout\"\n\t/** Only In Whop */\n\t| \"only_in_whop\";\n\n/** Filters for the user affiliate referral logs search */\nexport interface UserAffiliateReferralLogFilters {\n\t/** Which direction the order should be in. */\n\tdirection?: InputMaybe<Direction>;\n\t/** How you want to order the results. */\n\torder?: InputMaybe<UserAffiliateReferralLogOrder>;\n\t/** What to search by: whop username, access pass name, or bot title */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the logs by */\nexport type UserAffiliateReferralLogOrder = \"id\";\n\n/** The configuration for a chart. */\nexport interface UserChartConfigInput {\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface UserContentRewardsSubmissionsFilters {\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<UserContentRewardsSubmissionsOrder>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type UserContentRewardsSubmissionsOrder =\n\t| \"amount_paid_out\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"total_view_count\";\n\n/** The channel of the user notification preference */\nexport type UserNotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** The steps a user can follow to complete onboarding */\nexport type UserOnboardingStepsTypes =\n\t| \"add_birthday\"\n\t| \"add_email\"\n\t| \"add_name\"\n\t| \"add_phone\"\n\t| \"add_profile_picture\"\n\t| \"add_username\"\n\t| \"download_mobile_app\"\n\t| \"join_a_whop\"\n\t| \"select_interests\"\n\t| \"verify_email\"\n\t| \"verify_phone\";\n\n/** Values to filter user receipts on */\nexport interface UserReceiptFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<UserReceiptOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter receipts by 'free', 'paid', or 'all'. */\n\ttype?: InputMaybe<UserReceiptPaidTypeFilter>;\n}\n\n/** The order to sort the results by. */\nexport type UserReceiptOrder = \"paid_at\";\n\n/** The filter to apply to the results. */\nexport type UserReceiptPaidTypeFilter = \"all\" | \"free\" | \"paid\";\n\n/** The different websites you can have social links for */\nexport type UserSocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The type of a user */\nexport type UserTypes =\n\t/** Agent */\n\t| \"agent\"\n\t/** Human */\n\t| \"human\"\n\t/** System */\n\t| \"system\";\n\n/** The order to sort the results by. */\nexport type ValidMembershipsOrder = \"expires_at\" | \"id\" | \"ordering_status\";\n\n/** A vaulting method for a payment token. */\nexport type VaultMethods =\n\t/** Paypal Wallet */\n\t| \"paypal_wallet\"\n\t/** Venmo Wallet */\n\t| \"venmo_wallet\";\n\n/** The different providers a vault token can be. */\nexport type VaultTokenProviders =\n\t/** Basis Theory */\n\t\"basis_theory\";\n\n/** An error code for a verification attempt. */\nexport type VerificationErrorCodes =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Consent Declined */\n\t| \"consent_declined\"\n\t/** Country Not Supported */\n\t| \"country_not_supported\"\n\t/** Device Not Supported */\n\t| \"device_not_supported\"\n\t/** Document Expired */\n\t| \"document_expired\"\n\t/** Document Type Not Supported */\n\t| \"document_type_not_supported\"\n\t/** Document Unverified Other */\n\t| \"document_unverified_other\"\n\t/** Email Unverified Other */\n\t| \"email_unverified_other\"\n\t/** Email Verification Declined */\n\t| \"email_verification_declined\"\n\t/** Id Number Insufficient Document Data */\n\t| \"id_number_insufficient_document_data\"\n\t/** Id Number Mismatch */\n\t| \"id_number_mismatch\"\n\t/** Id Number Unverified Other */\n\t| \"id_number_unverified_other\"\n\t/** Phone Unverified Other */\n\t| \"phone_unverified_other\"\n\t/** Phone Verification Declined */\n\t| \"phone_verification_declined\"\n\t/** Selfie Document Missing Photo */\n\t| \"selfie_document_missing_photo\"\n\t/** Selfie Face Mismatch */\n\t| \"selfie_face_mismatch\"\n\t/** Selfie Manipulated */\n\t| \"selfie_manipulated\"\n\t/** Selfie Unverified Other */\n\t| \"selfie_unverified_other\"\n\t/** Under Supported Age */\n\t| \"under_supported_age\";\n\n/** The different providers a payout account can be. */\nexport type VerificationProviders =\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Veriff */\n\t| \"veriff\";\n\n/** A status for a verification. */\nexport type VerificationStatuses =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Approved */\n\t| \"approved\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Requires Input */\n\t| \"requires_input\"\n\t/** Resubmission Requested */\n\t| \"resubmission_requested\"\n\t/** Review */\n\t| \"review\"\n\t/** Started */\n\t| \"started\"\n\t/** Submitted */\n\t| \"submitted\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The status of a bots Whop Verified. */\nexport type VerifiedStatuses = \"accepted\" | \"applied\" | \"rejected\";\n\n/** The types of version events that are possible. */\nexport type VersionEventTypes = \"create\" | \"destroy\" | \"update\";\n\n/** Filters for the version search */\nexport interface VersionFilters {\n\t/** The direction to filter the audit logs */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all Audit Logs created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The event type to filter by. */\n\teventType?: InputMaybe<Array<VersionEventTypes>>;\n\t/** The object type to filter by. */\n\tobjectType?: InputMaybe<Array<VersionObjects>>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<VersionOrder>;\n\t/** The text that is being searched. Searches the version's identifier, which is usually a name or ID related to the object. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all Audit Logs created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user who triggered this audit log */\n\tuserId?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n}\n\n/** The types of objects that have versions available for them. */\nexport type VersionObjects =\n\t| \"access_pass\"\n\t| \"affiliate\"\n\t| \"authorized_user\"\n\t| \"bot\"\n\t| \"discord_server\"\n\t| \"experience\"\n\t| \"plan\"\n\t| \"promo_code\"\n\t| \"stripe_account\";\n\n/** The order to sort the memberships by */\nexport type VersionOrder = \"event\" | \"id\";\n\n/** Visibility of a resource */\nexport type Visibility =\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different levels of visibility for resources */\nexport type VisibilityFilter =\n\t| \"all\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t| \"not_archived\"\n\t| \"not_quick_link\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Autogenerated input type of VoidInvoice */\nexport interface VoidInvoiceInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the invoice to void */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The different event types available */\nexport type WebhookEvent =\n\t| \"app_membership_cancel_at_period_end_changed\"\n\t| \"app_membership_went_invalid\"\n\t| \"app_membership_went_valid\"\n\t| \"app_payment_failed\"\n\t| \"app_payment_pending\"\n\t| \"app_payment_succeeded\"\n\t| \"dispute_alert_created\"\n\t| \"dispute_created\"\n\t| \"dispute_updated\"\n\t| \"invoice_created\"\n\t| \"invoice_paid\"\n\t| \"invoice_past_due\"\n\t| \"invoice_voided\"\n\t| \"membership_cancel_at_period_end_changed\"\n\t| \"membership_experience_claimed\"\n\t| \"membership_metadata_updated\"\n\t| \"membership_went_invalid\"\n\t| \"membership_went_valid\"\n\t| \"payment_affiliate_reward_created\"\n\t| \"payment_failed\"\n\t| \"payment_pending\"\n\t| \"payment_succeeded\"\n\t| \"refund_created\"\n\t| \"refund_updated\"\n\t| \"resolution_created\"\n\t| \"resolution_decided\"\n\t| \"resolution_updated\";\n\n/** The anchor for when the Connected Account will be paid out */\nexport type WeeklyAnchors =\n\t| \"friday\"\n\t| \"monday\"\n\t| \"saturday\"\n\t| \"sunday\"\n\t| \"thursday\"\n\t| \"tuesday\"\n\t| \"wednesday\";\n\n/** Who can post on a chat feed */\nexport type WhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a chat feed */\nexport type WhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter users on */\nexport interface WhopSidebarFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarOrderEnum =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** Values to filter users on */\nexport interface WhopSidebarWithEarningsFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarWithEarningsOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarWithEarningsOrderEnum =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The different fee types for a withdrawal. */\nexport type WithdrawalFeeTypes = \"exclusive\" | \"inclusive\";\n\n/** Values to filter the withdrawals on. */\nexport interface WithdrawalFilters {\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The withdrawal status/state */\n\tstatuses?: InputMaybe<Array<WithdrawalStatus>>;\n}\n\n/** The method used for withdrawing. */\nexport type WithdrawalMethods =\n\t/** Ach */\n\t| \"ach\"\n\t/** Btc */\n\t| \"btc\"\n\t/** Cash App */\n\t| \"cash_app\"\n\t/** Check */\n\t| \"check\"\n\t/** Echeck */\n\t| \"echeck\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Venmo */\n\t| \"venmo\"\n\t/** Wire Transfer */\n\t| \"wire_transfer\"\n\t/** Zelle */\n\t| \"zelle\";\n\n/** The statuses a review can have */\nexport type WithdrawalProviders =\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Tipalti */\n\t| \"tipalti\";\n\n/** The different speeds of withdrawals */\nexport type WithdrawalSpeeds =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The status of a withdrawal request */\nexport type WithdrawalStatus =\n\t/** Awaiting Payment */\n\t| \"awaiting_payment\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of withdrawals */\nexport type WithdrawalTypes =\n\t/** Clawback */\n\t| \"clawback\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type WithdrawalsSortableColumns = \"amount\" | \"created_at\" | \"id\";\n\nexport type AccessPassFragmentFragment = {\n\t__typename?: \"PublicAccessPass\";\n\tid: string;\n\ttitle: string;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\troute: string;\n\tactiveUsersCount: number;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BaseAccessPassFragment = {\n\t__typename?: \"AccessPass\";\n\tid: string;\n\tcreatedAt: number;\n\troute: string;\n\ttitle: string;\n\theadline?: string | null;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\tactiveUsersCount: number;\n\treviewsAverage: number;\n\tcreatorPitch?: string | null;\n\tupdatedAtMs: string;\n\tshowOffers: boolean;\n\tredirectPurchaseUrl?: string | null;\n\tcustomCta: CustomCtas;\n\tcustomCtaUrl?: string | null;\n\tglobalAffiliatePercentage?: number | null;\n\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\tmemberAffiliatePercentage?: number | null;\n\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\tshowMemberCount: boolean;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAffiliateFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n};\n\nexport type AffiliateWithUserFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n\tuserAccount: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BaseAppBuildFragment = {\n\t__typename?: \"AppBuild\";\n\tid: string;\n\tcreatedAt: number;\n\tfileUrl: string;\n\tchecksum: string;\n\tplatform: AppBuildPlatforms;\n\treviewMessage?: string | null;\n\tsupportedAppViewTypes: Array<AppViewTypes>;\n\tstatus: AppBuildStatuses;\n};\n\nexport type BaseAppFragment = {\n\t__typename?: \"App\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tstatus: AppStatuses;\n\tusingDefaultIcon: boolean;\n\tbaseUrl?: string | null;\n\tbaseDevUrl?: string | null;\n\texperiencePath?: string | null;\n\tdiscoverPath?: string | null;\n\tdashboardPath?: string | null;\n\ticon?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAppApiKeyFragment = {\n\t__typename?: \"PrivateApiKey\";\n\tid: string;\n\ttoken: string;\n\tcreatedAt: number;\n};\n\nexport type BaseAppAgentUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n};\n\nexport type BaseAppStatsFragment = {\n\t__typename?: \"PublicAppStats\";\n\tdau: number;\n\tmau: number;\n\ttimeSpentLast24HoursInSeconds: number;\n\twau: number;\n};\n\ntype Attachment_AudioAttachment_Fragment = {\n\t__typename: \"AudioAttachment\";\n\tduration?: number | null;\n\twaveformUrl?: string | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_ImageAttachment_Fragment = {\n\t__typename: \"ImageAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tblurhash?: string | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_OtherAttachment_Fragment = {\n\t__typename: \"OtherAttachment\";\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_VideoAttachment_Fragment = {\n\t__typename: \"VideoAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tduration?: number | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\nexport type AttachmentFragment =\n\t| Attachment_AudioAttachment_Fragment\n\t| Attachment_ImageAttachment_Fragment\n\t| Attachment_OtherAttachment_Fragment\n\t| Attachment_VideoAttachment_Fragment;\n\nexport type BaseAuthorizedUserFragment = {\n\t__typename?: \"AuthorizedUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tuserId: string;\n\temail?: string | null;\n\trole: AuthorizedUserRoles;\n};\n\nexport type BaseInvoiceFragment = {\n\t__typename?: \"Invoice\";\n\tid: string;\n\tcreatedAt: number;\n\tstatus: InvoiceStatuses;\n\tnumber: string;\n\tdueDate?: number | null;\n\temailAddress?: string | null;\n\tfetchInvoiceToken: string;\n\tcurrentPlan: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\tformattedPrice: string;\n\t\tbaseCurrency: Currencies;\n\t};\n\tmember?: {\n\t\t__typename?: \"Member\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername?: string | null;\n\t} | null;\n};\n\nexport type BaseLedgerAccountFragment = {\n\t__typename?: \"LedgerAccount\";\n\tid: string;\n\ttransferFee?: number | null;\n\tbalanceCaches: {\n\t\t__typename?: \"BalanceCacheConnection\";\n\t\tnodes?: Array<{\n\t\t\t__typename?: \"BalanceCache\";\n\t\t\tbalance: number;\n\t\t\tpendingBalance: number;\n\t\t\tcurrency: Currencies;\n\t\t} | null> | null;\n\t};\n};\n\nexport type BasePublicPlanFragment = {\n\t__typename?: \"PublicPlan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock?: number | null;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n};\n\nexport type BasePlanFragment = {\n\t__typename?: \"Plan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock: number;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n\ttitle: string;\n\tdescription?: string | null;\n\tname?: string | null;\n\tformattedPrice: string;\n\tformattedBillingPeriod?: string | null;\n};\n\nexport type BaseReceiptFragment = {\n\t__typename?: \"Receipt\";\n\tid: string;\n\tsettledUsdAmount?: number | null;\n\tbillingReason?: string | null;\n\tlast4?: string | null;\n\tcurrency?: Currencies | null;\n\tstatus?: ReceiptStatus | null;\n\tcreatedAt: number;\n\ttotal?: number | null;\n\tbrand?: string | null;\n\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\tpaymentMethodType?: string | null;\n\tdisputeAlertedAt?: number | null;\n\tfinalAmount: number;\n\tpresentedFinalAmount?: number | null;\n\tpresentedSettledUsdAmount?: number | null;\n\trefundedAmount?: number | null;\n\tfriendlyStatus: FriendlyReceiptStatus;\n\tfailureMessage?: string | null;\n\trefundable: boolean;\n\tretryable: boolean;\n\tpaidAt?: number | null;\n\tamountAfterFees: number;\n\tchargeSkippedPriceTooLow: boolean;\n\tlastPaymentAttempt?: number | null;\n\tautoRefunded: boolean;\n\ttotalUsdAmount?: number | null;\n\tmostRecentRiskScore?: number | null;\n\taddress?: {\n\t\t__typename?: \"Address\";\n\t\tname?: string | null;\n\t\tline1?: string | null;\n\t\tline2?: string | null;\n\t\tcity?: string | null;\n\t\tstate?: string | null;\n\t\tpostalCode?: string | null;\n\t\tcountry?: string | null;\n\t} | null;\n\tmember?: {\n\t\t__typename?: \"CompanyMember\";\n\t\theader: string;\n\t\tuser?: {\n\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\tid: string;\n\t\t\tusername: string;\n\t\t\tname?: string | null;\n\t\t\temail?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tcountryName?: string | null;\n\t\t} | null;\n\t\timageSrcset: {\n\t\t\t__typename?: \"ImgSrcset\";\n\t\t\toriginal: string;\n\t\t\tdouble: string;\n\t\t\tisVideo: boolean;\n\t\t};\n\t} | null;\n\tplan?: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\ttitle: string;\n\t\tformattedPrice: string;\n\t\tinitialPrice: number;\n\t\trenewalPrice: number;\n\t\tpaymentLinkDescription?: string | null;\n\t} | null;\n\tmembership?: {\n\t\t__typename?: \"Membership\";\n\t\tid: string;\n\t\tstatus: MembershipStatus;\n\t} | null;\n\tpromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tamountOff: number;\n\t\tbaseCurrency: Currencies;\n\t\tpromoType: PromoTypes;\n\t\tnumberOfIntervals?: number | null;\n\t} | null;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BaseUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\temail?: string | null;\n\tname?: string | null;\n\tusername: string;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasePublicProfileUserFragment = {\n\t__typename?: \"PublicProfileUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tphoneVerified: boolean;\n\tcity?: string | null;\n\tcountry?: string | null;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasicCourseFragment = {\n\t__typename?: \"Course\";\n\tcertificateAfterCompletionEnabled?: boolean | null;\n\tcoverImage?: string | null;\n\tdescription?: string | null;\n\tid: string;\n\tlanguage: Languages;\n\trequireCompletingLessonsInOrder: boolean;\n\ttagline?: string | null;\n\ttitle?: string | null;\n\tvideoProtectionEnabled: boolean;\n\tchapters: Array<{\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t}>;\n};\n\nexport type BasicCourseChapterFragment = {\n\t__typename?: \"Chapter\";\n\tid: string;\n\ttitle: string;\n\torder: number;\n\tlessons: Array<{\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tcontent?: string | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t}>;\n};\n\nexport type BasicCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tcontent?: string | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n};\n\nexport type CompanyFragmentFragment = {\n\t__typename?: \"PublicCompany\";\n\tid: string;\n\ttitle: string;\n\troute: string;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type ExperienceFragmentFragment = {\n\t__typename?: \"CustomPrivate\";\n\tid: string;\n\tname?: string | null;\n\tdescription?: string | null;\n\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type PublicExperienceFragmentFragment = {\n\t__typename?: \"PublicExperience\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ForumPostFragmentFragment = {\n\t__typename?: \"ForumPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tmentionedUserIds: Array<string>;\n\tparentId?: string | null;\n\tviewCount?: number | null;\n\tisPinned: boolean;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type FullCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tcontent?: string | null;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n\tassessmentQuestions: Array<{\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t}>;\n\tattachments: {\n\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\tnodes?: Array<\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null\n\t\t> | null;\n\t};\n\tmainPdf?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type CourseMuxAssetFragment = {\n\t__typename?: \"MuxAsset\";\n\tid: string;\n\tmuxAssetId?: string | null;\n\tplaybackId?: string | null;\n\tsignedPlaybackId?: string | null;\n\tsignedThumbnailPlaybackToken?: string | null;\n\tsignedVideoPlaybackToken?: string | null;\n\tsignedStoryboardPlaybackToken?: string | null;\n\tdurationSeconds?: number | null;\n\tstatus: MuxAssetStatuses;\n\tfinishedUploadingAt?: number | null;\n};\n\nexport type CourseAssessmentQuestionFragment = {\n\t__typename?: \"AssessmentQuestion\";\n\tid: string;\n\tcorrectAnswer: string;\n\torder: number;\n\tquestionText: string;\n\tquestionType: CoursesAssessmentQuestionTypes;\n\timage?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n\toptions: Array<{\n\t\t__typename?: \"AssessmentQuestionOption\";\n\t\tid: string;\n\t\tisCorrect: boolean;\n\t\toptionText: string;\n\t\torder: number;\n\t}>;\n};\n\nexport type BaseCompanyMemberFragment = {\n\t__typename?: \"CompanyMember\";\n\tid: string;\n\tcreatedAt: number;\n\tupdatedAtMs: string;\n\tjoinedAt: number;\n\tstatus: MemberStatuses;\n\tphone?: string | null;\n\taccessLevel: AccessLevel;\n\ttotalSpent: number;\n\tusdTotalSpent: string;\n\tmrr: string;\n\tuser?: {\n\t\t__typename?: \"CompanyMemberUser\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername: string;\n\t} | null;\n\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n};\n\nexport type MessageFragment = {\n\t__typename?: \"DmsPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tisPinned: boolean;\n\tisEveryoneMentioned: boolean;\n\tmentionedUserIds: Array<string>;\n\tmessageType: DmsPostTypes;\n\treplyingToPostId?: string | null;\n\tviewCount?: number | null;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BasePromoCodeFragment = {\n\t__typename?: \"PromoCode\";\n\tid: string;\n\tcode?: string | null;\n\tpromoType: PromoTypes;\n\tduration?: PromoDurations | null;\n\tcreatedAt: number;\n\texpirationDatetime?: number | null;\n\tbaseCurrency: Currencies;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals?: number | null;\n\tstatus: PromoCodeStatus;\n\tstock: number;\n\tunlimitedStock: boolean;\n\tuses: number;\n\tonePerCustomer: boolean;\n\tchurnedUsersOnly: boolean;\n\tnewUsersOnly: boolean;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BasePublicPromoCodeFragment = {\n\t__typename?: \"PublicPromoCode\";\n\tid: string;\n\tcode: string;\n\tcreatedAt: number;\n\tpromoType: PromoTypes;\n\tbaseCurrency: Currencies;\n\tduration: PromoDurations;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals: number;\n\tisPopupPromo: boolean;\n};\n\nexport type BaseWebhookFragment = {\n\t__typename?: \"Webhook\";\n\tid: string;\n\turl: string;\n\tapiVersion: ApiVersion;\n\tcreatedAt: number;\n\tenabled: boolean;\n\tevents: Array<WebhookEvent>;\n\tresourceId: string;\n\twebhookSecret: string;\n};\n\nexport type CreateAccessPassMutationVariables = Exact<{\n\tinput: CreateAccessPassInput;\n}>;\n\nexport type CreateAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAccessPass?: {\n\t\t__typename?: \"AccessPass\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\troute: string;\n\t\ttitle: string;\n\t\theadline?: string | null;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\tactiveUsersCount: number;\n\t\treviewsAverage: number;\n\t\tcreatorPitch?: string | null;\n\t\tupdatedAtMs: string;\n\t\tshowOffers: boolean;\n\t\tredirectPurchaseUrl?: string | null;\n\t\tcustomCta: CustomCtas;\n\t\tcustomCtaUrl?: string | null;\n\t\tglobalAffiliatePercentage?: number | null;\n\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\tmemberAffiliatePercentage?: number | null;\n\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\tshowMemberCount: boolean;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAccessPassMutationVariables = Exact<{\n\tinput: DeleteAccessPassInput;\n}>;\n\nexport type DeleteAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAccessPass?: boolean | null;\n};\n\nexport type GetAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\taccessPass: {\n\t\t__typename?: \"PublicAccessPass\";\n\t\theadline?: string | null;\n\t\treviewsAverage: number;\n\t\tid: string;\n\t\ttitle: string;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\troute: string;\n\t\tactiveUsersCount: number;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\townerUser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tgalleryImages: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type UpdateAccessPassMutationVariables = Exact<{\n\tinput: UpdateAccessPassInput;\n}>;\n\nexport type UpdateAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAccessPass?: {\n\t\t__typename?: \"AccessPass\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\troute: string;\n\t\ttitle: string;\n\t\theadline?: string | null;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\tactiveUsersCount: number;\n\t\treviewsAverage: number;\n\t\tcreatorPitch?: string | null;\n\t\tupdatedAtMs: string;\n\t\tshowOffers: boolean;\n\t\tredirectPurchaseUrl?: string | null;\n\t\tcustomCta: CustomCtas;\n\t\tcustomCtaUrl?: string | null;\n\t\tglobalAffiliatePercentage?: number | null;\n\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\tmemberAffiliatePercentage?: number | null;\n\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\tshowMemberCount: boolean;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type CheckIfUserHasAccessToAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToAccessPass: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CheckIfUserHasAccessToCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToCompany: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CheckIfUserHasAccessToExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToExperience: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CreateAffiliateMutationVariables = Exact<{\n\tinput: CreateAffiliateInput;\n}>;\n\nexport type CreateAffiliateMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAffiliate?: {\n\t\t__typename?: \"Affiliate\";\n\t\tid: string;\n\t\tstatus?: Status | null;\n\t\tactiveMembersCount: number;\n\t\taffiliateType?: AffiliateTypes | null;\n\t\ttotalPlanCount: number;\n\t\ttotalReferralEarnings: string;\n\t\ttotalReferrals: number;\n\t\ttotalRevenue: string;\n\t\tuserAccount: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type GetAffiliateQueryVariables = Exact<{\n\taffiliateId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAffiliateQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taffiliate: {\n\t\t\t__typename?: \"Affiliate\";\n\t\t\tid: string;\n\t\t\tstatus?: Status | null;\n\t\t\tactiveMembersCount: number;\n\t\t\taffiliateType?: AffiliateTypes | null;\n\t\t\ttotalPlanCount: number;\n\t\t\ttotalReferralEarnings: string;\n\t\t\ttotalReferrals: number;\n\t\t\ttotalRevenue: string;\n\t\t\tuserAccount: {\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t\tphoneVerified: boolean;\n\t\t\t\tcity?: string | null;\n\t\t\t\tcountry?: string | null;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListAffiliatesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<AffiliatesSortableColumns>;\n}>;\n\nexport type ListAffiliatesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taffiliates: {\n\t\t\t__typename?: \"AffiliateConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Affiliate\";\n\t\t\t\tid: string;\n\t\t\t\tstatus?: Status | null;\n\t\t\t\tactiveMembersCount: number;\n\t\t\t\taffiliateType?: AffiliateTypes | null;\n\t\t\t\ttotalPlanCount: number;\n\t\t\t\ttotalReferralEarnings: string;\n\t\t\t\ttotalReferrals: number;\n\t\t\t\ttotalRevenue: string;\n\t\t\t\tuserAccount: {\n\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\tcity?: string | null;\n\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type UpdateAffiliateMutationVariables = Exact<{\n\tinput: UpdateAffiliateInput;\n}>;\n\nexport type UpdateAffiliateMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAffiliate?: {\n\t\t__typename?: \"Affiliate\";\n\t\tid: string;\n\t\tstatus?: Status | null;\n\t\tactiveMembersCount: number;\n\t\taffiliateType?: AffiliateTypes | null;\n\t\ttotalPlanCount: number;\n\t\ttotalReferralEarnings: string;\n\t\ttotalReferrals: number;\n\t\ttotalRevenue: string;\n\t\tuserAccount: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type CreateAppBuildMutationVariables = Exact<{\n\tinput: CreateAppBuildInput;\n}>;\n\nexport type CreateAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAppBuild?: {\n\t\t__typename?: \"AppBuild\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\tfileUrl: string;\n\t\tchecksum: string;\n\t\tplatform: AppBuildPlatforms;\n\t\treviewMessage?: string | null;\n\t\tsupportedAppViewTypes: Array<AppViewTypes>;\n\t\tstatus: AppBuildStatuses;\n\t} | null;\n};\n\nexport type CreateAppMutationVariables = Exact<{\n\tinput: CreateAppInput;\n}>;\n\nexport type CreateAppMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateApp?: {\n\t\t__typename?: \"App\";\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tstatus: AppStatuses;\n\t\tusingDefaultIcon: boolean;\n\t\tbaseUrl?: string | null;\n\t\tbaseDevUrl?: string | null;\n\t\texperiencePath?: string | null;\n\t\tdiscoverPath?: string | null;\n\t\tdashboardPath?: string | null;\n\t\tapiKeys: {\n\t\t\t__typename?: \"PrivateApiKeyConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PrivateApiKey\";\n\t\t\t\tid: string;\n\t\t\t\ttoken: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t} | null> | null;\n\t\t};\n\t\tagentUsers: {\n\t\t\t__typename?: \"UserConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"User\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t} | null> | null;\n\t\t};\n\t\tcompany: { __typename?: \"PublicCompany\"; id: string };\n\t\taccessPass: { __typename?: \"AccessPass\"; id: string };\n\t\ticon?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetAppQueryVariables = Exact<{\n\tappId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAppQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tapp: {\n\t\t\t__typename?: \"App\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\tdescription?: string | null;\n\t\t\tstatus: AppStatuses;\n\t\t\tusingDefaultIcon: boolean;\n\t\t\tbaseUrl?: string | null;\n\t\t\tbaseDevUrl?: string | null;\n\t\t\texperiencePath?: string | null;\n\t\t\tdiscoverPath?: string | null;\n\t\t\tdashboardPath?: string | null;\n\t\t\tstats?: {\n\t\t\t\t__typename?: \"PublicAppStats\";\n\t\t\t\tdau: number;\n\t\t\t\tmau: number;\n\t\t\t\ttimeSpentLast24HoursInSeconds: number;\n\t\t\t\twau: number;\n\t\t\t} | null;\n\t\t\tapiKeys: {\n\t\t\t\t__typename?: \"PrivateApiKeyConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"PrivateApiKey\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttoken: string;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t\tagentUsers: {\n\t\t\t\t__typename?: \"UserConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"User\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t\taccessPass: {\n\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\tid: string;\n\t\t\t\tmarketplaceStatus: MarketplaceStatuses;\n\t\t\t\tactiveMembershipsCount: number;\n\t\t\t\tmarketplaceCategory?: {\n\t\t\t\t\t__typename?: \"MarketplaceCategory\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t} | null;\n\t\t\t};\n\t\t\ticon?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type ListAppsQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListAppsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tapps: {\n\t\t\t__typename?: \"AppConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"App\";\n\t\t\t\tid: string;\n\t\t\t\tname: string;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tstatus: AppStatuses;\n\t\t\t\tusingDefaultIcon: boolean;\n\t\t\t\tbaseUrl?: string | null;\n\t\t\t\tbaseDevUrl?: string | null;\n\t\t\t\texperiencePath?: string | null;\n\t\t\t\tdiscoverPath?: string | null;\n\t\t\t\tdashboardPath?: string | null;\n\t\t\t\tstats?: {\n\t\t\t\t\t__typename?: \"PublicAppStats\";\n\t\t\t\t\tdau: number;\n\t\t\t\t\tmau: number;\n\t\t\t\t\ttimeSpentLast24HoursInSeconds: number;\n\t\t\t\t\twau: number;\n\t\t\t\t} | null;\n\t\t\t\taccessPass: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmarketplaceStatus: MarketplaceStatuses;\n\t\t\t\t};\n\t\t\t\ticon?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type PromoteAppBuildMutationVariables = Exact<{\n\tinput: PromoteAppBuildToProductionInput;\n}>;\n\nexport type PromoteAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tpromoteAppBuildToProduction?: boolean | null;\n};\n\nexport type UnassignAppBuildMutationVariables = Exact<{\n\tinput: UnassignProductionAppBuildInput;\n}>;\n\nexport type UnassignAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tunassignProductionAppBuild?: boolean | null;\n};\n\nexport type UpdateAppPermissionsMutationVariables = Exact<{\n\tinput: UpdateAppPermissionRequirementsInput;\n}>;\n\nexport type UpdateAppPermissionsMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAppPermissionRequirements?: boolean | null;\n};\n\nexport type UpdateAppMutationVariables = Exact<{\n\tinput: UpdateAppInput;\n}>;\n\nexport type UpdateAppMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateApp?: boolean | null;\n};\n\nexport type GetAttachmentQueryVariables = Exact<{\n\tid: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAttachmentQuery = {\n\t__typename?: \"PublicQuery\";\n\tattachment:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  };\n};\n\nexport type ProcessAttachmentMutationVariables = Exact<{\n\tinput: AnalyzeAttachmentInput;\n}>;\n\nexport type ProcessAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaAnalyzeAttachment?: boolean | null;\n};\n\nexport type UploadMediaMutationVariables = Exact<{\n\tinput: DirectUploadInput;\n}>;\n\nexport type UploadMediaMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaDirectUpload?: {\n\t\t__typename?: \"DirectUpload\";\n\t\tid: string;\n\t\theaders: { [key: string]: any };\n\t\tuploadUrl?: string | null;\n\t\tmultipartUploadId?: string | null;\n\t\tmultipartUploadUrls?: Array<{\n\t\t\t__typename?: \"MultipartUrl\";\n\t\t\tpartNumber: number;\n\t\t\turl: string;\n\t\t}> | null;\n\t} | null;\n};\n\nexport type GetCompanyLedgerAccountQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tledgerAccount: {\n\t\t\t__typename?: \"LedgerAccount\";\n\t\t\tid: string;\n\t\t\ttransferFee?: number | null;\n\t\t\tbalanceCaches: {\n\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\tbalance: number;\n\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type GetCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tindustryType?: IndustryTypes | null;\n\t\tbusinessType?: BusinessTypes | null;\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type GetMemberQueryVariables = Exact<{\n\tcompanyMemberId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetMemberQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmember: {\n\t\t\t__typename?: \"CompanyMember\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAtMs: string;\n\t\t\tjoinedAt: number;\n\t\t\tstatus: MemberStatuses;\n\t\t\tphone?: string | null;\n\t\t\taccessLevel: AccessLevel;\n\t\t\ttotalSpent: number;\n\t\t\tusdTotalSpent: string;\n\t\t\tmrr: string;\n\t\t\tuser?: {\n\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t} | null;\n\t\t\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n\t\t};\n\t} | null;\n};\n\nexport type ListAccessPassesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tvisibility?: InputMaybe<VisibilityFilter>;\n\torder?: InputMaybe<AccessPassOrder>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tconditions?: InputMaybe<Array<AccessPassConditions> | AccessPassConditions>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes> | AccessPassTypes>;\n}>;\n\nexport type ListAccessPassesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taccessPasses: {\n\t\t\t__typename?: \"AccessPassConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\troute: string;\n\t\t\t\ttitle: string;\n\t\t\t\theadline?: string | null;\n\t\t\t\tshortenedDescription?: string | null;\n\t\t\t\tverified: boolean;\n\t\t\t\tvisibility: Visibility;\n\t\t\t\tactiveUsersCount: number;\n\t\t\t\treviewsAverage: number;\n\t\t\t\tcreatorPitch?: string | null;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tshowOffers: boolean;\n\t\t\t\tredirectPurchaseUrl?: string | null;\n\t\t\t\tcustomCta: CustomCtas;\n\t\t\t\tcustomCtaUrl?: string | null;\n\t\t\t\tglobalAffiliatePercentage?: number | null;\n\t\t\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\t\t\tmemberAffiliatePercentage?: number | null;\n\t\t\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\t\t\tshowMemberCount: boolean;\n\t\t\t\tlogo?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t\tbannerImage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListAuthorizedUsersQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListAuthorizedUsersQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tauthorizedUsers: Array<{\n\t\t\t__typename?: \"AuthorizedUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tuserId: string;\n\t\t\temail?: string | null;\n\t\t\trole: AuthorizedUserRoles;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListMembersQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<MembersSortableColumns>;\n\tfilters?: InputMaybe<MembersFiltersInput>;\n}>;\n\nexport type ListMembersQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmembers: {\n\t\t\t__typename?: \"CompanyMemberConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"CompanyMember\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tjoinedAt: number;\n\t\t\t\tstatus: MemberStatuses;\n\t\t\t\tphone?: string | null;\n\t\t\t\taccessLevel: AccessLevel;\n\t\t\t\ttotalSpent: number;\n\t\t\t\tusdTotalSpent: string;\n\t\t\t\tmrr: string;\n\t\t\t\tuser?: {\n\t\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t} | null;\n\t\t\t\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListMembershipsQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<MembershipsSortableColumns>;\n\tfilters?: InputMaybe<MembershipsFiltersInput>;\n}>;\n\nexport type ListMembershipsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmemberships: {\n\t\t\t__typename?: \"MembershipConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Membership\";\n\t\t\t\tid: string;\n\t\t\t\tstatus: MembershipStatus;\n\t\t\t\tcreatedAt: number;\n\t\t\t\texpiresAt?: number | null;\n\t\t\t\tcanceledAt?: number | null;\n\t\t\t\ttotalSpend: number;\n\t\t\t\tcancelationReason?: string | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername?: string | null;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t} | null;\n\t\t\t\tplan: { __typename?: \"Plan\"; id: string };\n\t\t\t\taccessPass: { __typename?: \"AccessPass\"; id: string; title: string };\n\t\t\t\tpromoCode?: { __typename?: \"PromoCode\"; code?: string | null } | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListPlansQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfilter?: InputMaybe<PlanFilters>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListPlansQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tplans: {\n\t\t\t__typename?: \"PlanConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\trawRenewalPrice: number;\n\t\t\t\trawInitialPrice: number;\n\t\t\t\tinitialPriceDue: number;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tupdatedAt: number;\n\t\t\t\tbillingPeriod?: number | null;\n\t\t\t\ttrialPeriodDays?: number | null;\n\t\t\t\texpirationDays?: number | null;\n\t\t\t\tunlimitedStock: boolean;\n\t\t\t\tpaymentLinkDescription?: string | null;\n\t\t\t\treleaseMethod: ReleaseMethod;\n\t\t\t\tstock: number;\n\t\t\t\tvisibility: Visibility;\n\t\t\t\tplanType: PlanTypes;\n\t\t\t\ttitle: string;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tformattedBillingPeriod?: string | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\troute: string;\n\t\t\t\t\tlogo?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListWaitlistEntriesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<EntriesSortableColumns>;\n\tfilters?: InputMaybe<EntriesFiltersInput>;\n}>;\n\nexport type ListWaitlistEntriesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tentries: {\n\t\t\t__typename?: \"EntryConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Entry\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tstatus: EntryStatus;\n\t\t\t\tcreatedAt?: number | null;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tuser: {\n\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t\tplan?: { __typename?: \"Plan\"; id: string; title: string } | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t\tcustomFieldResponses?: Array<{\n\t\t\t\t\t__typename?: \"CustomFieldResponse\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tquestion: string;\n\t\t\t\t\tanswer: string;\n\t\t\t\t}> | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type CreateAssessmentQuestionMutationVariables = Exact<{\n\tinput: CreateAssessmentQuestionInput;\n}>;\n\nexport type CreateAssessmentQuestionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAssessmentQuestion?: {\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateChapterMutationVariables = Exact<{\n\tinput: CreateChapterInput;\n}>;\n\nexport type CreateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateCourseMutationVariables = Exact<{\n\tinput: CreateCourseInput;\n}>;\n\nexport type CreateCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateLessonMutationVariables = Exact<{\n\tinput: CreateLessonInput;\n}>;\n\nexport type CreateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAssessmentQuestionImageMutationVariables = Exact<{\n\tinput: DeleteAssessmentQuestionImageInput;\n}>;\n\nexport type DeleteAssessmentQuestionImageMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAssessmentQuestionImage?: boolean | null;\n};\n\nexport type DeleteChapterMutationVariables = Exact<{\n\tinput: DeleteChapterInput;\n}>;\n\nexport type DeleteChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteChapter?: boolean | null;\n};\n\nexport type DeleteLessonAttachmentMutationVariables = Exact<{\n\tinput: DeleteLessonAttachmentInput;\n}>;\n\nexport type DeleteLessonAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLessonAttachment?: boolean | null;\n};\n\nexport type DeleteLessonMutationVariables = Exact<{\n\tinput: DeleteLessonInput;\n}>;\n\nexport type DeleteLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLesson?: boolean | null;\n};\n\nexport type GetCourseQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCourseQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type GetLessonQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetLessonQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tlesson?: {\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tcontent?: string | null;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t\tassessmentQuestions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\t\tid: string;\n\t\t\t\tcorrectAnswer: string;\n\t\t\t\torder: number;\n\t\t\t\tquestionText: string;\n\t\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\t\timage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t\toptions: Array<{\n\t\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tisCorrect: boolean;\n\t\t\t\t\toptionText: string;\n\t\t\t\t\torder: number;\n\t\t\t\t}>;\n\t\t\t}>;\n\t\t\tattachments: {\n\t\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\t\tnodes?: Array<\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null\n\t\t\t\t> | null;\n\t\t\t};\n\t\t\tmainPdf?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetUserLessonInteractionsQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserLessonInteractionsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonInteraction?: {\n\t\t\t\t\t__typename?: \"LessonInteraction\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcompleted: boolean;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListCoursesForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tid: string;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\texperience: {\n\t\t\t\t\t__typename?: \"PublicExperience\";\n\t\t\t\t\tid: string;\n\t\t\t\t\taccessPasses: Array<{\n\t\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListCoursesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tlanguage: Languages;\n\t\t\t\trequireCompletingLessonsInOrder: boolean;\n\t\t\t\ttagline?: string | null;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tvideoProtectionEnabled: boolean;\n\t\t\t\tchapters: Array<{\n\t\t\t\t\t__typename?: \"Chapter\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\torder: number;\n\t\t\t\t\tlessons: Array<{\n\t\t\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tlessonType: LessonTypes;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t\torder: number;\n\t\t\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\t\tmuxAsset?: {\n\t\t\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t\t\t} | null;\n\t\t\t\t\t}>;\n\t\t\t\t}>;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MarkLessonAsCompletedMutationVariables = Exact<{\n\tinput: MarkLessonAsCompletedInput;\n}>;\n\nexport type MarkLessonAsCompletedMutation = {\n\t__typename?: \"PublicMutation\";\n\tmarkLessonAsCompleted?: boolean | null;\n};\n\nexport type MoveCourseMutationVariables = Exact<{\n\tinput: MoveCourseInput;\n}>;\n\nexport type MoveCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tmoveCourse?: boolean | null;\n};\n\nexport type UpdateChapterOrderMutationVariables = Exact<{\n\tinput: UpdateChapterOrderInput;\n}>;\n\nexport type UpdateChapterOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapterOrder?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateChapterMutationVariables = Exact<{\n\tinput: UpdateChapterInput;\n}>;\n\nexport type UpdateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateLessonOrderMutationVariables = Exact<{\n\tinput: UpdateLessonOrderInput;\n}>;\n\nexport type UpdateLessonOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLessonOrder?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type UpdateLessonMutationVariables = Exact<{\n\tinput: UpdateLessonInput;\n}>;\n\nexport type UpdateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tupsellType?: UpsellTypes | null;\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tupsellPlan?: {\n\t\t\t__typename?: \"PublicPlan\";\n\t\t\tid: string;\n\t\t\tbaseCurrency: Currencies;\n\t\t\trawRenewalPrice: number;\n\t\t\trawInitialPrice: number;\n\t\t\tinitialPriceDue: number;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAt: number;\n\t\t\tbillingPeriod?: number | null;\n\t\t\ttrialPeriodDays?: number | null;\n\t\t\texpirationDays?: number | null;\n\t\t\tunlimitedStock: boolean;\n\t\t\tpaymentLinkDescription?: string | null;\n\t\t\treleaseMethod: ReleaseMethod;\n\t\t\tstock?: number | null;\n\t\t\tvisibility: Visibility;\n\t\t\tplanType: PlanTypes;\n\t\t} | null;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tapp: {\n\t\t\t__typename?: \"PublicApp\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\ticon?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type ListAccessPassesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListAccessPassesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\texperienceId: string;\n\t\taccessPasses: Array<{\n\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\tshortenedDescription?: string | null;\n\t\t\tverified: boolean;\n\t\t\tvisibility: Visibility;\n\t\t\troute: string;\n\t\t\tactiveUsersCount: number;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t}>;\n\t};\n};\n\nexport type ListExperiencesQueryVariables = Exact<{\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListExperiencesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\texperiencesV2: {\n\t\t\t__typename?: \"ExperienceInterfaceConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"CustomPrivate\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\t\t\t\tapp: {\n\t\t\t\t\t__typename?: \"PublicApp\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\ticon?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListUsersForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tsearchQuery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListUsersForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tusers?: {\n\t\t\t__typename?: \"PublicProfileUserConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tusername: string;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t};\n\t\t} | null;\n\t};\n};\n\nexport type CreateForumPostMutationVariables = Exact<{\n\tinput: CreateForumPostInput;\n}>;\n\nexport type CreateForumPostMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateForumPost?: {\n\t\t__typename?: \"ForumPost\";\n\t\tid: string;\n\t\tcreatedAt: string;\n\t\tupdatedAt: string;\n\t\tcontent?: string | null;\n\t\trichContent?: string | null;\n\t\tisDeleted: boolean;\n\t\tisEdited: boolean;\n\t\tmentionedUserIds: Array<string>;\n\t\tparentId?: string | null;\n\t\tviewCount?: number | null;\n\t\tisPinned: boolean;\n\t\tattachments: Array<\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t>;\n\t\tuser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type FindOrCreateForumMutationVariables = Exact<{\n\tinput: CreateForumInput;\n}>;\n\nexport type FindOrCreateForumMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateForum?: { __typename?: \"Experience\"; id: string; link: string } | null;\n};\n\nexport type ListForumPostsFromForumQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListForumPostsFromForumQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| { __typename?: \"DmsPost\" }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ForumPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tparentId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type CreateInvoiceMutationVariables = Exact<{\n\tinput: CreateInvoiceInput;\n}>;\n\nexport type CreateInvoiceMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateInvoice?: {\n\t\t__typename?: \"CreateInvoicePayload\";\n\t\tcheckoutJobId?: string | null;\n\t\tinvoice?: {\n\t\t\t__typename?: \"Invoice\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tstatus: InvoiceStatuses;\n\t\t\tnumber: string;\n\t\t\tdueDate?: number | null;\n\t\t\temailAddress?: string | null;\n\t\t\tfetchInvoiceToken: string;\n\t\t\tcurrentPlan: {\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t};\n\t\t\tmember?: {\n\t\t\t\t__typename?: \"Member\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername?: string | null;\n\t\t\t} | null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetInvoiceQueryVariables = Exact<{\n\tinvoiceId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetInvoiceQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tinvoice: {\n\t\t\t__typename?: \"Invoice\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tstatus: InvoiceStatuses;\n\t\t\tnumber: string;\n\t\t\tdueDate?: number | null;\n\t\t\temailAddress?: string | null;\n\t\t\tfetchInvoiceToken: string;\n\t\t\tcurrentPlan: {\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t};\n\t\t\tmember?: {\n\t\t\t\t__typename?: \"Member\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername?: string | null;\n\t\t\t} | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListInvoicesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListInvoicesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tinvoices: {\n\t\t\t__typename?: \"InvoiceConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Invoice\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tstatus: InvoiceStatuses;\n\t\t\t\tnumber: string;\n\t\t\t\tdueDate?: number | null;\n\t\t\t\temailAddress?: string | null;\n\t\t\t\tfetchInvoiceToken: string;\n\t\t\t\tcurrentPlan: {\n\t\t\t\t\t__typename?: \"Plan\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tformattedPrice: string;\n\t\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\t};\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername?: string | null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type FindOrCreateChatMutationVariables = Exact<{\n\tinput: CreateChatInput;\n}>;\n\nexport type FindOrCreateChatMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChat?: { __typename?: \"Experience\"; id: string; link: string } | null;\n};\n\nexport type ListDirectMessageConversationsQueryVariables = Exact<{\n\tbeforeTimestamp?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\tunread?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}>;\n\nexport type ListDirectMessageConversationsQuery = {\n\t__typename?: \"PublicQuery\";\n\tmyDmsChannelsV2: Array<{\n\t\t__typename?: \"DmsChannel\";\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tisPinned: boolean;\n\t\tcustomName?: string | null;\n\t\tisGroupChat: boolean;\n\t\tisUnread: boolean;\n\t\tfeedMembers: Array<{\n\t\t\t__typename?: \"FeedMember\";\n\t\t\tusername: string;\n\t\t\tid: string;\n\t\t}>;\n\t\tlastMessage?: {\n\t\t\t__typename?: \"Post\";\n\t\t\tcontent?: string | null;\n\t\t\tuserId: string;\n\t\t} | null;\n\t}>;\n};\n\nexport type ListMessagesFromChatQueryVariables = Exact<{\n\tchatExperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type ListMessagesFromChatQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"DmsPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tisEveryoneMentioned: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tmessageType: DmsPostTypes;\n\t\t\t\t\treplyingToPostId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| { __typename?: \"ForumPost\" }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type SendDirectMessageToUserMutationVariables = Exact<{\n\ttoUserIdOrUsername: Scalars[\"ID\"][\"input\"];\n\tmessage: Scalars[\"String\"][\"input\"];\n\tattachments?: InputMaybe<Array<AttachmentInput> | AttachmentInput>;\n}>;\n\nexport type SendDirectMessageToUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendMessage?: string | null;\n};\n\nexport type SendMessageToChatMutationVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tmessage: Scalars[\"String\"][\"input\"];\n\tattachments?: InputMaybe<Array<AttachmentInput> | AttachmentInput>;\n}>;\n\nexport type SendMessageToChatMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendMessage?: string | null;\n};\n\nexport type SendPushNotificationMutationVariables = Exact<{\n\tinput: SendNotificationInput;\n}>;\n\nexport type SendPushNotificationMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendNotification?: boolean | null;\n};\n\nexport type ChargeUserMutationVariables = Exact<{\n\tinput: ChargeUserInput;\n}>;\n\nexport type ChargeUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tchargeUser?: {\n\t\t__typename?: \"ChargeUserResponse\";\n\t\tstatus: ChargeUserResponseStatus;\n\t\tinAppPurchase?: {\n\t\t\t__typename?: \"CheckoutSession\";\n\t\t\tid: string;\n\t\t\tplanId: string;\n\t\t} | null;\n\t} | null;\n};\n\nexport type CreateCheckoutSessionMutationVariables = Exact<{\n\tinput: CreateCheckoutSessionInput;\n}>;\n\nexport type CreateCheckoutSessionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCheckoutSession?: {\n\t\t__typename?: \"CheckoutSession\";\n\t\tid: string;\n\t\tplanId: string;\n\t} | null;\n};\n\nexport type ListReceiptsForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfilter?: InputMaybe<ReceiptV2Filters>;\n}>;\n\nexport type ListReceiptsForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\treceipts?: {\n\t\t\t__typename?: \"ReceiptConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Receipt\";\n\t\t\t\tid: string;\n\t\t\t\tsettledUsdAmount?: number | null;\n\t\t\t\tbillingReason?: string | null;\n\t\t\t\tlast4?: string | null;\n\t\t\t\tcurrency?: Currencies | null;\n\t\t\t\tstatus?: ReceiptStatus | null;\n\t\t\t\tcreatedAt: number;\n\t\t\t\ttotal?: number | null;\n\t\t\t\tbrand?: string | null;\n\t\t\t\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\t\t\t\tpaymentMethodType?: string | null;\n\t\t\t\tdisputeAlertedAt?: number | null;\n\t\t\t\tfinalAmount: number;\n\t\t\t\tpresentedFinalAmount?: number | null;\n\t\t\t\tpresentedSettledUsdAmount?: number | null;\n\t\t\t\trefundedAmount?: number | null;\n\t\t\t\tfriendlyStatus: FriendlyReceiptStatus;\n\t\t\t\tfailureMessage?: string | null;\n\t\t\t\trefundable: boolean;\n\t\t\t\tretryable: boolean;\n\t\t\t\tpaidAt?: number | null;\n\t\t\t\tamountAfterFees: number;\n\t\t\t\tchargeSkippedPriceTooLow: boolean;\n\t\t\t\tlastPaymentAttempt?: number | null;\n\t\t\t\tautoRefunded: boolean;\n\t\t\t\ttotalUsdAmount?: number | null;\n\t\t\t\tmostRecentRiskScore?: number | null;\n\t\t\t\taddress?: {\n\t\t\t\t\t__typename?: \"Address\";\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tline1?: string | null;\n\t\t\t\t\tline2?: string | null;\n\t\t\t\t\tcity?: string | null;\n\t\t\t\t\tstate?: string | null;\n\t\t\t\t\tpostalCode?: string | null;\n\t\t\t\t\tcountry?: string | null;\n\t\t\t\t} | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"CompanyMember\";\n\t\t\t\t\theader: string;\n\t\t\t\t\tuser?: {\n\t\t\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\temail?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tcountryName?: string | null;\n\t\t\t\t\t} | null;\n\t\t\t\t\timageSrcset: {\n\t\t\t\t\t\t__typename?: \"ImgSrcset\";\n\t\t\t\t\t\toriginal: string;\n\t\t\t\t\t\tdouble: string;\n\t\t\t\t\t\tisVideo: boolean;\n\t\t\t\t\t};\n\t\t\t\t} | null;\n\t\t\t\tplan?: {\n\t\t\t\t\t__typename?: \"Plan\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tformattedPrice: string;\n\t\t\t\t\tinitialPrice: number;\n\t\t\t\t\trenewalPrice: number;\n\t\t\t\t\tpaymentLinkDescription?: string | null;\n\t\t\t\t} | null;\n\t\t\t\tmembership?: {\n\t\t\t\t\t__typename?: \"Membership\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tstatus: MembershipStatus;\n\t\t\t\t} | null;\n\t\t\t\tpromoCode?: {\n\t\t\t\t\t__typename?: \"PromoCode\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcode?: string | null;\n\t\t\t\t\tamountOff: number;\n\t\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\t\tpromoType: PromoTypes;\n\t\t\t\t\tnumberOfIntervals?: number | null;\n\t\t\t\t} | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t} | null;\n\t} | null;\n};\n\nexport type PayUserMutationVariables = Exact<{\n\tinput: TransferFundsInput;\n}>;\n\nexport type PayUserMutation = {\n\t__typename?: \"PublicMutation\";\n\ttransferFunds?: boolean | null;\n};\n\nexport type CreatePromoCodeMutationVariables = Exact<{\n\tinput: CreatePromoCodeInput;\n}>;\n\nexport type CreatePromoCodeMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreatePromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tpromoType: PromoTypes;\n\t\tduration?: PromoDurations | null;\n\t\tcreatedAt: number;\n\t\texpirationDatetime?: number | null;\n\t\tbaseCurrency: Currencies;\n\t\tamountOff: number;\n\t\tdiscountOff: string;\n\t\texistingMembershipsOnly: boolean;\n\t\tnumberOfIntervals?: number | null;\n\t\tstatus: PromoCodeStatus;\n\t\tstock: number;\n\t\tunlimitedStock: boolean;\n\t\tuses: number;\n\t\tonePerCustomer: boolean;\n\t\tchurnedUsersOnly: boolean;\n\t\tnewUsersOnly: boolean;\n\t\taccessPass?: {\n\t\t\t__typename?: \"AccessPass\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t} | null;\n\t} | null;\n};\n\nexport type DeletePromoCodeMutationVariables = Exact<{\n\tinput: DeletePromoCodeInput;\n}>;\n\nexport type DeletePromoCodeMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeletePromoCode?: boolean | null;\n};\n\nexport type GetPromoCodeQueryVariables = Exact<{\n\tcode: Scalars[\"String\"][\"input\"];\n\tplanId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetPromoCodeQuery = {\n\t__typename?: \"PublicQuery\";\n\tpromoCode: {\n\t\t__typename?: \"PublicPromoCode\";\n\t\tid: string;\n\t\tcode: string;\n\t\tcreatedAt: number;\n\t\tpromoType: PromoTypes;\n\t\tbaseCurrency: Currencies;\n\t\tduration: PromoDurations;\n\t\tamountOff: number;\n\t\tdiscountOff: string;\n\t\texistingMembershipsOnly: boolean;\n\t\tnumberOfIntervals: number;\n\t\tisPopupPromo: boolean;\n\t};\n};\n\nexport type ListPromoCodesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tfilters?: InputMaybe<PromoCodeFilters>;\n}>;\n\nexport type ListPromoCodesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tpromoCodes: {\n\t\t\t__typename?: \"PromoCodeConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PromoCode\";\n\t\t\t\tid: string;\n\t\t\t\tcode?: string | null;\n\t\t\t\tpromoType: PromoTypes;\n\t\t\t\tduration?: PromoDurations | null;\n\t\t\t\tcreatedAt: number;\n\t\t\t\texpirationDatetime?: number | null;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\tamountOff: number;\n\t\t\t\tdiscountOff: string;\n\t\t\t\texistingMembershipsOnly: boolean;\n\t\t\t\tnumberOfIntervals?: number | null;\n\t\t\t\tstatus: PromoCodeStatus;\n\t\t\t\tstock: number;\n\t\t\t\tunlimitedStock: boolean;\n\t\t\t\tuses: number;\n\t\t\t\tonePerCustomer: boolean;\n\t\t\t\tchurnedUsersOnly: boolean;\n\t\t\t\tnewUsersOnly: boolean;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type BanUserMutationVariables = Exact<{\n\tinput: BanUserInput;\n}>;\n\nexport type BanUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tbanUser?: boolean | null;\n};\n\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type GetCurrentUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tbio?: string | null;\n\t\t\tphoneVerified: boolean;\n\t\t\tbannerImage?: string | null;\n\t\t\tcreatedAt: number;\n\t\t\tdateOfBirthDay?: number | null;\n\t\t\tdateOfBirthMonth?: number | null;\n\t\t\tdateOfBirthYear?: number | null;\n\t\t\tid: string;\n\t\t\temail?: string | null;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type GetUserLedgerAccountQueryVariables = Exact<{\n\t[key: string]: never;\n}>;\n\nexport type GetUserLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type GetUserQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tbio?: string | null;\n\t\tphoneVerified: boolean;\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tbanner?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tuserStat?: {\n\t\t\t__typename?: \"UserStat\";\n\t\t\tmoneyEarned24Hours?: number | null;\n\t\t\tmoneyEarned30Days?: number | null;\n\t\t\tmoneyEarned7Days?: number | null;\n\t\t\tmoneyEarnedLifetime?: number | null;\n\t\t} | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ListUserSocialsQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListUserSocialsQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tsocialLinks: {\n\t\t\t__typename?: \"UserSocialLinksConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"UserSocialLinks\";\n\t\t\t\tid: string;\n\t\t\t\tprofilePic?: string | null;\n\t\t\t\turl: string;\n\t\t\t\tusername?: string | null;\n\t\t\t\twebsite: UserSocialLinkWebsites;\n\t\t\t\taccountId?: string | null;\n\t\t\t\tfullName?: string | null;\n\t\t\t\tverified: boolean;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MuteUserMutationVariables = Exact<{\n\tinput: CreateCompanyMutedUserInput;\n}>;\n\nexport type MuteUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCompanyMutedUser?: boolean | null;\n};\n\nexport type UnbanUserMutationVariables = Exact<{\n\tinput: UnbanUserInput;\n}>;\n\nexport type UnbanUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tunbanUser?: boolean | null;\n};\n\nexport type UnmuteUserMutationVariables = Exact<{\n\tinput: DeleteCompanyMutedUserInput;\n}>;\n\nexport type UnmuteUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteCompanyMutedUser?: boolean | null;\n};\n\nexport type CreateWebhookMutationVariables = Exact<{\n\tinput: CreateWebhookInput;\n}>;\n\nexport type CreateWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateWebhook?: {\n\t\t__typename?: \"Webhook\";\n\t\tid: string;\n\t\turl: string;\n\t\tapiVersion: ApiVersion;\n\t\tcreatedAt: number;\n\t\tenabled: boolean;\n\t\tevents: Array<WebhookEvent>;\n\t\tresourceId: string;\n\t\twebhookSecret: string;\n\t} | null;\n};\n\nexport type DeleteWebhookMutationVariables = Exact<{\n\tinput: DeleteWebhookInput;\n}>;\n\nexport type DeleteWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteWebhook?: boolean | null;\n};\n\nexport type GetWebhookQueryVariables = Exact<{\n\twebhookId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetWebhookQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\twebhook: {\n\t\t\t__typename?: \"Webhook\";\n\t\t\tid: string;\n\t\t\turl: string;\n\t\t\tapiVersion: ApiVersion;\n\t\t\tcreatedAt: number;\n\t\t\tenabled: boolean;\n\t\t\tevents: Array<WebhookEvent>;\n\t\t\tresourceId: string;\n\t\t\twebhookSecret: string;\n\t\t};\n\t} | null;\n};\n\nexport type ListWebhooksQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListWebhooksQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\twebhooks: Array<{\n\t\t\t__typename?: \"Webhook\";\n\t\t\tid: string;\n\t\t\turl: string;\n\t\t\tapiVersion: ApiVersion;\n\t\t\tcreatedAt: number;\n\t\t\tenabled: boolean;\n\t\t\tevents: Array<WebhookEvent>;\n\t\t\tresourceId: string;\n\t\t\twebhookSecret: string;\n\t\t}>;\n\t} | null;\n};\n\nexport type TestWebhookMutationVariables = Exact<{\n\tinput: TestWebhookV2Input;\n}>;\n\nexport type TestWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\ttestWebhookV2?: {\n\t\t__typename?: \"WebhookTestResult\";\n\t\tbody: { [key: string]: any };\n\t\tstatus: number;\n\t\tsuccess: boolean;\n\t} | null;\n};\n\nexport type UpdateWebhookMutationVariables = Exact<{\n\tinput: UpdateWebhookInput;\n}>;\n\nexport type UpdateWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateWebhook?: {\n\t\t__typename?: \"Webhook\";\n\t\tid: string;\n\t\turl: string;\n\t\tapiVersion: ApiVersion;\n\t\tcreatedAt: number;\n\t\tenabled: boolean;\n\t\tevents: Array<WebhookEvent>;\n\t\tresourceId: string;\n\t\twebhookSecret: string;\n\t} | null;\n};\n\nexport type Requester<C = {}> = <R, V>(\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvars?: V,\n\toptions?: C,\n) => Promise<R>;\n\nexport type WithError<T> = T extends object ? T & { _error?: Error } : T;\nexport function carryErrors<Full, Extracted>(\n\tres: Full,\n\tdata: Extracted,\n): WithError<Extracted> {\n\tif (\n\t\ttypeof res === \"object\" &&\n\t\tres &&\n\t\t\"_error\" in res &&\n\t\tres._error &&\n\t\tres._error instanceof Error &&\n\t\ttypeof data === \"object\" &&\n\t\tdata\n\t) {\n\t\t(data as any)._error = res._error;\n\t}\n\treturn data as WithError<Extracted>;\n}\n\nexport function getSdk<C>(requester: Requester<C>) {\n\treturn {\n\t\taccessPasses: {\n\t\t\tcreateAccessPass(\n\t\t\t\tvariables: CreateAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAccessPassMutation[\"createAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAccessPassMutation,\n\t\t\t\t\tCreateAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:20ae526780e39f4766202cec9041775e39dcf12c6254d9ce3c80ceeed146ad9c\",\n\t\t\t\t\t\"createAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAccessPass));\n\t\t\t},\n\t\t\tdeleteAccessPass(\n\t\t\t\tvariables: DeleteAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteAccessPassMutation[\"deleteAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAccessPassMutation,\n\t\t\t\t\tDeleteAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cc4cb9f78f298bfc5067091adca56a07833d22f4011255aedd317a9c78b2a3ba\",\n\t\t\t\t\t\"deleteAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAccessPass));\n\t\t\t},\n\t\t\tgetAccessPass(\n\t\t\t\tvariables: GetAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAccessPassQuery[\"accessPass\"]>> {\n\t\t\t\treturn requester<GetAccessPassQuery, GetAccessPassQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fa2b3d0ff6975e2e05c1e649fb853892460355f2a4e9bd33a67ef9bcdf6ed686\",\n\t\t\t\t\t\"getAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.accessPass));\n\t\t\t},\n\t\t\tupdateAccessPass(\n\t\t\t\tvariables: UpdateAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAccessPassMutation[\"updateAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAccessPassMutation,\n\t\t\t\t\tUpdateAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:45e0d72fec2c61a8763e7febcdfeea44c780fb657358614e5d6fa18d68b46aed\",\n\t\t\t\t\t\"updateAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAccessPass));\n\t\t\t},\n\t\t},\n\t\taccess: {\n\t\t\tcheckIfUserHasAccessToAccessPass(\n\t\t\t\tvariables: CheckIfUserHasAccessToAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQuery[\"hasAccessToAccessPass\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQuery,\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a5ee1715113ab68b87dcfd5b578b6c20d1ca1fe50d8c0e2ec43e462a9b86632d\",\n\t\t\t\t\t\"checkIfUserHasAccessToAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToAccessPass));\n\t\t\t},\n\t\t\tcheckIfUserHasAccessToCompany(\n\t\t\t\tvariables: CheckIfUserHasAccessToCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CheckIfUserHasAccessToCompanyQuery[\"hasAccessToCompany\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToCompanyQuery,\n\t\t\t\t\tCheckIfUserHasAccessToCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b894321dc004894f993e91f5e7451554b0ae8af7da950a5c84ac69180599edc2\",\n\t\t\t\t\t\"checkIfUserHasAccessToCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToCompany));\n\t\t\t},\n\t\t\tcheckIfUserHasAccessToExperience(\n\t\t\t\tvariables: CheckIfUserHasAccessToExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQuery[\"hasAccessToExperience\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQuery,\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b16d7fe717171fb936dfb6de679558e149f5070bbe25ade44e38af83c330ad71\",\n\t\t\t\t\t\"checkIfUserHasAccessToExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToExperience));\n\t\t\t},\n\t\t},\n\t\taffiliates: {\n\t\t\tcreateAffiliate(\n\t\t\t\tvariables: CreateAffiliateMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAffiliateMutation[\"createAffiliate\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAffiliateMutation,\n\t\t\t\t\tCreateAffiliateMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a8aab2d61c40493e5fe0c03979c9f252412d37ac4c4034d4dfc9391d4f71368d\",\n\t\t\t\t\t\"createAffiliate\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAffiliate));\n\t\t\t},\n\t\t\tgetAffiliate(\n\t\t\t\tvariables: GetAffiliateQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAffiliateQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetAffiliateQuery, GetAffiliateQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:0361bff066bcb4ec9d86ae9ce45d812b5b0978252fbeb347418e16c8d6c56de2\",\n\t\t\t\t\t\"getAffiliate\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAffiliates(\n\t\t\t\tvariables: ListAffiliatesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAffiliatesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAffiliatesQuery, ListAffiliatesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:85622f8b63f7b6e23dbaa6c04a58e3fb5e3237cb03fa112ee17c98ebf925285c\",\n\t\t\t\t\t\"listAffiliates\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tupdateAffiliate(\n\t\t\t\tvariables: UpdateAffiliateMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAffiliateMutation[\"updateAffiliate\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAffiliateMutation,\n\t\t\t\t\tUpdateAffiliateMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:781a4e1b84f64748e882eb8f5e09aa3962fdbafee01874b3eb96fe1fbb261f1d\",\n\t\t\t\t\t\"updateAffiliate\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAffiliate));\n\t\t\t},\n\t\t},\n\t\tapps: {\n\t\t\tcreateAppBuild(\n\t\t\t\tvariables: CreateAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAppBuildMutation[\"createAppBuild\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAppBuildMutation,\n\t\t\t\t\tCreateAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:221275dcd40898079c1e7bc1510b364a487581d6cdfc1a9524da74f2f82689cc\",\n\t\t\t\t\t\"createAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAppBuild));\n\t\t\t},\n\t\t\tcreateApp(\n\t\t\t\tvariables: CreateAppMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAppMutation[\"createApp\"]>> {\n\t\t\t\treturn requester<CreateAppMutation, CreateAppMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:be663b827a8dabcf7b9cbd0f65e80972811c1bc86009cc6a420b66d8e1c36f40\",\n\t\t\t\t\t\"createApp\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createApp));\n\t\t\t},\n\t\t\tgetApp(\n\t\t\t\tvariables: GetAppQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAppQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetAppQuery, GetAppQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07248adff9447a8ddc20c810fbb780eddb10f9c3b4de9c2e8cc125de5735c9ef\",\n\t\t\t\t\t\"getApp\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistApps(\n\t\t\t\tvariables: ListAppsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAppsQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAppsQuery, ListAppsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:46bbea222f2bb22c7622d0554383c50246d97daf9dc92bb54790b6a330810628\",\n\t\t\t\t\t\"listApps\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tpromoteAppBuild(\n\t\t\t\tvariables: PromoteAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<PromoteAppBuildMutation[\"promoteAppBuildToProduction\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tPromoteAppBuildMutation,\n\t\t\t\t\tPromoteAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:dea1f52e9a4e332c258517b6bd0905ea8c2a738d861a9e9bb648f7ecead843a9\",\n\t\t\t\t\t\"promoteAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.promoteAppBuildToProduction));\n\t\t\t},\n\t\t\tunassignAppBuild(\n\t\t\t\tvariables: UnassignAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<UnassignAppBuildMutation[\"unassignProductionAppBuild\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUnassignAppBuildMutation,\n\t\t\t\t\tUnassignAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fb574bc621e2dee1d3bebddf5a6f3b438337778e9e66370a9dbe8163dc7c23bc\",\n\t\t\t\t\t\"unassignAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.unassignProductionAppBuild));\n\t\t\t},\n\t\t\tupdateAppPermissions(\n\t\t\t\tvariables: UpdateAppPermissionsMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tUpdateAppPermissionsMutation[\"updateAppPermissionRequirements\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAppPermissionsMutation,\n\t\t\t\t\tUpdateAppPermissionsMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:20a225127a6164553f5eebef17ac8447e8f8a4f220483f4922874def2a7fe423\",\n\t\t\t\t\t\"updateAppPermissions\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAppPermissionRequirements));\n\t\t\t},\n\t\t\tupdateApp(\n\t\t\t\tvariables: UpdateAppMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAppMutation[\"updateApp\"]>> {\n\t\t\t\treturn requester<UpdateAppMutation, UpdateAppMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b8d41fdc2d5d3c0cd850bc4f8dedc81a3d65a59da3cc70b50397aaba2be3894a\",\n\t\t\t\t\t\"updateApp\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateApp));\n\t\t\t},\n\t\t},\n\t\tattachments: {\n\t\t\tgetAttachment(\n\t\t\t\tvariables: GetAttachmentQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAttachmentQuery[\"attachment\"]>> {\n\t\t\t\treturn requester<GetAttachmentQuery, GetAttachmentQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07f48fb0c1292fda5a8dd5f54b5d1b637635a87b6012769819ebcf7795a045ba\",\n\t\t\t\t\t\"getAttachment\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.attachment));\n\t\t\t},\n\t\t\tprocessAttachment(\n\t\t\t\tvariables: ProcessAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ProcessAttachmentMutation[\"mediaAnalyzeAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tProcessAttachmentMutation,\n\t\t\t\t\tProcessAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:396c5803051b3c9bcedd3ce310505a4f57a6b94bc190e7142e897d9aa5036ece\",\n\t\t\t\t\t\"processAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaAnalyzeAttachment));\n\t\t\t},\n\t\t\tuploadMedia(\n\t\t\t\tvariables: UploadMediaMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UploadMediaMutation[\"mediaDirectUpload\"]>> {\n\t\t\t\treturn requester<UploadMediaMutation, UploadMediaMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a3d06ed16e52126d96aae83cad3400471246f37fc275e4c8f4836c98bf8e9d59\",\n\t\t\t\t\t\"uploadMedia\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaDirectUpload));\n\t\t\t},\n\t\t},\n\t\tcompanies: {\n\t\t\tgetCompanyLedgerAccount(\n\t\t\t\tvariables: GetCompanyLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyLedgerAccountQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetCompanyLedgerAccountQuery,\n\t\t\t\t\tGetCompanyLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:38c83c1105b29a010208830b29d38af3d87a885b9c54a3da65d6dd2749128773\",\n\t\t\t\t\t\"getCompanyLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tgetCompany(\n\t\t\t\tvariables: GetCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetCompanyQuery, GetCompanyQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e640d46816020225ad7ec377936056cabb7e8e07a88ba376e926ba18aca1cc5c\",\n\t\t\t\t\t\"getCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tgetMember(\n\t\t\t\tvariables: GetMemberQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetMemberQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetMemberQuery, GetMemberQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e2628bcd1daff66d27443145965cc34f26a76da715d9781174316be703b0ac02\",\n\t\t\t\t\t\"getMember\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAccessPasses(\n\t\t\t\tvariables: ListAccessPassesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAccessPassesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAccessPassesQuery, ListAccessPassesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d3c047dfcf88fae7603b04a3f46c9a7abd6638c13591ac64d7f86226a5edb438\",\n\t\t\t\t\t\"listAccessPasses\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAuthorizedUsers(\n\t\t\t\tvariables: ListAuthorizedUsersQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAuthorizedUsersQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListAuthorizedUsersQuery,\n\t\t\t\t\tListAuthorizedUsersQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c8c7d8e926bba8ecd46f9976cc1ce265ac666570706606295931f19c622c50dc\",\n\t\t\t\t\t\"listAuthorizedUsers\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistMembers(\n\t\t\t\tvariables: ListMembersQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMembersQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListMembersQuery, ListMembersQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d71ca5f1a332e7b42f405eb284aaf5d8ba094c99fd6a9d5ac503dff9a927d301\",\n\t\t\t\t\t\"listMembers\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistMemberships(\n\t\t\t\tvariables: ListMembershipsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMembershipsQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListMembershipsQuery, ListMembershipsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cfa788e5edcaf72ae9cb749035cf7bca20fd380c7d0d548c02d6ae978262f5cf\",\n\t\t\t\t\t\"listMemberships\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistPlans(\n\t\t\t\tvariables: ListPlansQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListPlansQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListPlansQuery, ListPlansQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:51d610ed0e4994b2c6f3514f9f478fb301366adc33c3e09166b3de3801c9c26a\",\n\t\t\t\t\t\"listPlans\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistWaitlistEntries(\n\t\t\t\tvariables: ListWaitlistEntriesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListWaitlistEntriesQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListWaitlistEntriesQuery,\n\t\t\t\t\tListWaitlistEntriesQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:14e1c30b9e364214d378cdb0b8ebf929397295e3644ffc22205ebe915b79e79f\",\n\t\t\t\t\t\"listWaitlistEntries\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tcourses: {\n\t\t\tcreateAssessmentQuestion(\n\t\t\t\tvariables: CreateAssessmentQuestionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateAssessmentQuestionMutation[\"createAssessmentQuestion\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAssessmentQuestionMutation,\n\t\t\t\t\tCreateAssessmentQuestionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:52902016f3a8cf2b819038945ded34a0caafd80c9a867403ca36451c39f56ac6\",\n\t\t\t\t\t\"createAssessmentQuestion\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAssessmentQuestion));\n\t\t\t},\n\t\t\tcreateChapter(\n\t\t\t\tvariables: CreateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateChapterMutation[\"createChapter\"]>> {\n\t\t\t\treturn requester<CreateChapterMutation, CreateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:8ebe9533278b00eded622eef765baeebf70fccedcd5d60854f8777812da20311\",\n\t\t\t\t\t\"createChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChapter));\n\t\t\t},\n\t\t\tcreateCourse(\n\t\t\t\tvariables: CreateCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateCourseMutation[\"createCourse\"]>> {\n\t\t\t\treturn requester<CreateCourseMutation, CreateCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:41f957dfc0e147131265e62e4b5ae6f743256f6bf7a4e28e042a3469777e9c35\",\n\t\t\t\t\t\"createCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCourse));\n\t\t\t},\n\t\t\tcreateLesson(\n\t\t\t\tvariables: CreateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateLessonMutation[\"createLesson\"]>> {\n\t\t\t\treturn requester<CreateLessonMutation, CreateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:33069f4d2b756d6a9a2a486d0ac6d91272c9acbd9d3774c15e12d7b39f3df6f4\",\n\t\t\t\t\t\"createLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createLesson));\n\t\t\t},\n\t\t\tdeleteAssessmentQuestionImage(\n\t\t\t\tvariables: DeleteAssessmentQuestionImageMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation[\"deleteAssessmentQuestionImage\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation,\n\t\t\t\t\tDeleteAssessmentQuestionImageMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07563fb79b45fd9fbe7ef7d14923014e5f3407dae067d0393b84bd6724970aaa\",\n\t\t\t\t\t\"deleteAssessmentQuestionImage\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAssessmentQuestionImage));\n\t\t\t},\n\t\t\tdeleteChapter(\n\t\t\t\tvariables: DeleteChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteChapterMutation[\"deleteChapter\"]>> {\n\t\t\t\treturn requester<DeleteChapterMutation, DeleteChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:021c10ea5b5f776e229d4c2cd25578b8aec3c869c898c747d4dcb889ddad32b6\",\n\t\t\t\t\t\"deleteChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteChapter));\n\t\t\t},\n\t\t\tdeleteLessonAttachment(\n\t\t\t\tvariables: DeleteLessonAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<DeleteLessonAttachmentMutation[\"deleteLessonAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteLessonAttachmentMutation,\n\t\t\t\t\tDeleteLessonAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:7af840d8ddbf664a04ec3da2283e9a540f68da24adedbe7a2af9718f1c70f10c\",\n\t\t\t\t\t\"deleteLessonAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLessonAttachment));\n\t\t\t},\n\t\t\tdeleteLesson(\n\t\t\t\tvariables: DeleteLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteLessonMutation[\"deleteLesson\"]>> {\n\t\t\t\treturn requester<DeleteLessonMutation, DeleteLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6be8fd89af64aec7db125bac7d67bad8530cc8f5b8ee98c879351acd59aa6fac\",\n\t\t\t\t\t\"deleteLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLesson));\n\t\t\t},\n\t\t\tgetCourse(\n\t\t\t\tvariables: GetCourseQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCourseQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetCourseQuery, GetCourseQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5e81c304ac7c4c19b2d07ea7c2a32b2fd8998774bf90900a81999b9077b383a1\",\n\t\t\t\t\t\"getCourse\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetLesson(\n\t\t\t\tvariables: GetLessonQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetLessonQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetLessonQuery, GetLessonQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:372989bc0ffb7ff3c36d1325f1af4115c06205e95378a2e344d91a857e732630\",\n\t\t\t\t\t\"getLesson\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetUserLessonInteractions(\n\t\t\t\tvariables: GetUserLessonInteractionsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLessonInteractionsQuery[\"course\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLessonInteractionsQuery,\n\t\t\t\t\tGetUserLessonInteractionsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6b12c8ccabe59b65d8869029d4e4e56ddbeac7256137e5e79012a3e33aa81523\",\n\t\t\t\t\t\"getUserLessonInteractions\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tlistCoursesForCompany(\n\t\t\t\tvariables: ListCoursesForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForCompanyQuery,\n\t\t\t\t\tListCoursesForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:76dd2b0b09b6083392dcce8c1df423cc6e6eb290e58bdd2d830f50ef1a4828b3\",\n\t\t\t\t\t\"listCoursesForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistCoursesForExperience(\n\t\t\t\tvariables: ListCoursesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForExperienceQuery,\n\t\t\t\t\tListCoursesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a579fee2663d841a23be014b234d89eadb097dac387722dfe9d0e87911a7598e\",\n\t\t\t\t\t\"listCoursesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t\tmarkLessonAsCompleted(\n\t\t\t\tvariables: MarkLessonAsCompletedMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<MarkLessonAsCompletedMutation[\"markLessonAsCompleted\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tMarkLessonAsCompletedMutation,\n\t\t\t\t\tMarkLessonAsCompletedMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:941178d021bd72247401d347d5dd969036579147777e0a754f5102cddc5074c7\",\n\t\t\t\t\t\"markLessonAsCompleted\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.markLessonAsCompleted));\n\t\t\t},\n\t\t\tmoveCourse(\n\t\t\t\tvariables: MoveCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MoveCourseMutation[\"moveCourse\"]>> {\n\t\t\t\treturn requester<MoveCourseMutation, MoveCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:ce7d38029113792bf1ff544db18f000732fed4db3ebc766767a367cef5691c2b\",\n\t\t\t\t\t\"moveCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.moveCourse));\n\t\t\t},\n\t\t\tupdateChapterOrder(\n\t\t\t\tvariables: UpdateChapterOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterOrderMutation[\"updateChapterOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateChapterOrderMutation,\n\t\t\t\t\tUpdateChapterOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c749c5c4907afd39ab2d3f8c44b3e65c8c9928e0cf06f8687deaa40d144a0df6\",\n\t\t\t\t\t\"updateChapterOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapterOrder));\n\t\t\t},\n\t\t\tupdateChapter(\n\t\t\t\tvariables: UpdateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterMutation[\"updateChapter\"]>> {\n\t\t\t\treturn requester<UpdateChapterMutation, UpdateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9fda8d867b07c1b31622cb73084523577519ca35822d8ce3938fa2b07efaf6e5\",\n\t\t\t\t\t\"updateChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapter));\n\t\t\t},\n\t\t\tupdateLessonOrder(\n\t\t\t\tvariables: UpdateLessonOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonOrderMutation[\"updateLessonOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateLessonOrderMutation,\n\t\t\t\t\tUpdateLessonOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:8ae83382f97b182c08bf5851e3bbed05fd8269856c00b82b5577939c00e39e43\",\n\t\t\t\t\t\"updateLessonOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLessonOrder));\n\t\t\t},\n\t\t\tupdateLesson(\n\t\t\t\tvariables: UpdateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonMutation[\"updateLesson\"]>> {\n\t\t\t\treturn requester<UpdateLessonMutation, UpdateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c872c79e5469f162f4de0f64ed6decc489cc3e05d66781a2f33ae1eef4d762bd\",\n\t\t\t\t\t\"updateLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLesson));\n\t\t\t},\n\t\t},\n\t\texperiences: {\n\t\t\tgetExperience(\n\t\t\t\tvariables: GetExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<GetExperienceQuery, GetExperienceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:61d7778965bc84e700a681ec856251c59070ebc6b0e00b6e5c91568df734db7e\",\n\t\t\t\t\t\"getExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistAccessPassesForExperience(\n\t\t\t\tvariables: ListAccessPassesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAccessPassesForExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListAccessPassesForExperienceQuery,\n\t\t\t\t\tListAccessPassesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:699621f62be7675bfaf9fc49cb6d7abfe244bf691aee274cb492036f0b59bddc\",\n\t\t\t\t\t\"listAccessPassesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistExperiences(\n\t\t\t\tvariables: ListExperiencesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListExperiencesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListExperiencesQuery, ListExperiencesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6ca8515118d4710204bb2e32ea020bb98de8ea1cada4929ecfe7cae606cf6e79\",\n\t\t\t\t\t\"listExperiences\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistUsersForExperience(\n\t\t\t\tvariables: ListUsersForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUsersForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListUsersForExperienceQuery,\n\t\t\t\t\tListUsersForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:85c827d8660dc2a97e8b930e213b83493ae132c00988e0f03e02c5dc99559a5a\",\n\t\t\t\t\t\"listUsersForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t},\n\t\tforums: {\n\t\t\tcreateForumPost(\n\t\t\t\tvariables: CreateForumPostMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateForumPostMutation[\"createForumPost\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateForumPostMutation,\n\t\t\t\t\tCreateForumPostMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e6253ed15def017eef4bc2e2f8b01ecd9cf480b5c54fffed439d0afe01a864f2\",\n\t\t\t\t\t\"createForumPost\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createForumPost));\n\t\t\t},\n\t\t\tfindOrCreateForum(\n\t\t\t\tvariables: FindOrCreateForumMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<FindOrCreateForumMutation[\"createForum\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tFindOrCreateForumMutation,\n\t\t\t\t\tFindOrCreateForumMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5219219796ebdeb29023d098bd9498cf8c64b3536dc9d42cbc4e19708e0b317d\",\n\t\t\t\t\t\"findOrCreateForum\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createForum));\n\t\t\t},\n\t\t\tlistForumPostsFromForum(\n\t\t\t\tvariables: ListForumPostsFromForumQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListForumPostsFromForumQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListForumPostsFromForumQuery,\n\t\t\t\t\tListForumPostsFromForumQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:97a7d797f3a5f6f83bf4628cc7c586d529b90e54c0a8e193493a55b4ad05df46\",\n\t\t\t\t\t\"listForumPostsFromForum\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tinvoices: {\n\t\t\tcreateInvoice(\n\t\t\t\tvariables: CreateInvoiceMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateInvoiceMutation[\"createInvoice\"]>> {\n\t\t\t\treturn requester<CreateInvoiceMutation, CreateInvoiceMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:58c3f4ebbb92ebf44d07d781d8f27250f497516c0b492f1ad155ee4f00c64cca\",\n\t\t\t\t\t\"createInvoice\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createInvoice));\n\t\t\t},\n\t\t\tgetInvoice(\n\t\t\t\tvariables: GetInvoiceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetInvoiceQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetInvoiceQuery, GetInvoiceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d38c77f13bb55a0b427a0e5f5c5f4121c9f2679a7ac5b35a6c98af6d9e819702\",\n\t\t\t\t\t\"getInvoice\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistInvoices(\n\t\t\t\tvariables: ListInvoicesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListInvoicesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListInvoicesQuery, ListInvoicesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:3cb820ba6eab6d1557eb842140f5b54701c6046f51e663f8a12fdff7142f1941\",\n\t\t\t\t\t\"listInvoices\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tmessages: {\n\t\t\tfindOrCreateChat(\n\t\t\t\tvariables: FindOrCreateChatMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<FindOrCreateChatMutation[\"createChat\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tFindOrCreateChatMutation,\n\t\t\t\t\tFindOrCreateChatMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:f69684c08f79192b7a4722a3c24a347fd0074e04e1c940517e54b52a9c27f40c\",\n\t\t\t\t\t\"findOrCreateChat\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChat));\n\t\t\t},\n\t\t\tlistDirectMessageConversations(\n\t\t\t\tvariables?: ListDirectMessageConversationsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ListDirectMessageConversationsQuery[\"myDmsChannelsV2\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListDirectMessageConversationsQuery,\n\t\t\t\t\tListDirectMessageConversationsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:ea4457aace3d29d8c376dd9de3629cee00d4a76ff0fc9b9d51b6ffeab1cc6ead\",\n\t\t\t\t\t\"listDirectMessageConversations\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.myDmsChannelsV2));\n\t\t\t},\n\t\t\tlistMessagesFromChat(\n\t\t\t\tvariables?: ListMessagesFromChatQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMessagesFromChatQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListMessagesFromChatQuery,\n\t\t\t\t\tListMessagesFromChatQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5fdbf50fe489888e5b0a98e9fe6170584bf47ab38f87d1e0b7fce8f523513894\",\n\t\t\t\t\t\"listMessagesFromChat\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t\tsendDirectMessageToUser(\n\t\t\t\tvariables: SendDirectMessageToUserMutationVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendDirectMessageToUserMutation[\"sendMessage\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendDirectMessageToUserMutation,\n\t\t\t\t\tSendDirectMessageToUserMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:f538092a21961a949a75e07b02d58dc05666535c8c8e03aed867fd82d98a58d4\",\n\t\t\t\t\t\"sendDirectMessageToUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendMessage));\n\t\t\t},\n\t\t\tsendMessageToChat(\n\t\t\t\tvariables: SendMessageToChatMutationVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendMessageToChatMutation[\"sendMessage\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendMessageToChatMutation,\n\t\t\t\t\tSendMessageToChatMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:4c25b180736d2868e65ab97791a12bb22e80d2bc03f29ecba86ccd1d91da292c\",\n\t\t\t\t\t\"sendMessageToChat\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendMessage));\n\t\t\t},\n\t\t},\n\t\tnotifications: {\n\t\t\tsendPushNotification(\n\t\t\t\tvariables: SendPushNotificationMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendPushNotificationMutation[\"sendNotification\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendPushNotificationMutation,\n\t\t\t\t\tSendPushNotificationMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6239cbdb659f0698ed81ca9533740337b4d2d44e25e22297188d7d1e1a7037d2\",\n\t\t\t\t\t\"sendPushNotification\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendNotification));\n\t\t\t},\n\t\t},\n\t\tpayments: {\n\t\t\tchargeUser(\n\t\t\t\tvariables: ChargeUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ChargeUserMutation[\"chargeUser\"]>> {\n\t\t\t\treturn requester<ChargeUserMutation, ChargeUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:2392cef9bb6e08d243f102a52c4a6a6e6bd9371e2fced2ad598b2dc14685af81\",\n\t\t\t\t\t\"chargeUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.chargeUser));\n\t\t\t},\n\t\t\tcreateCheckoutSession(\n\t\t\t\tvariables: CreateCheckoutSessionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateCheckoutSessionMutation[\"createCheckoutSession\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateCheckoutSessionMutation,\n\t\t\t\t\tCreateCheckoutSessionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:498eba2f4b9b6b8fe4ed5f93423af054ea1c4995bf2f3258089c40b68a4919e8\",\n\t\t\t\t\t\"createCheckoutSession\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCheckoutSession));\n\t\t\t},\n\t\t\tlistReceiptsForCompany(\n\t\t\t\tvariables: ListReceiptsForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListReceiptsForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListReceiptsForCompanyQuery,\n\t\t\t\t\tListReceiptsForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:4b5163aa1e6398851da21ce465640243418d36bb26e7b1a87287cddcf677e6ca\",\n\t\t\t\t\t\"listReceiptsForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tpayUser(\n\t\t\t\tvariables: PayUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<PayUserMutation[\"transferFunds\"]>> {\n\t\t\t\treturn requester<PayUserMutation, PayUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d8cbac8b275a7c41e05ab4daa01084b0e54c31c6b5375261f8aee241e5f6c794\",\n\t\t\t\t\t\"payUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.transferFunds));\n\t\t\t},\n\t\t},\n\t\tpromoCodes: {\n\t\t\tcreatePromoCode(\n\t\t\t\tvariables: CreatePromoCodeMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreatePromoCodeMutation[\"createPromoCode\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreatePromoCodeMutation,\n\t\t\t\t\tCreatePromoCodeMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c80f3d5230cb85c4e47cd1521e607c1f58cf393dfc73fce813bc584acd3e0f4b\",\n\t\t\t\t\t\"createPromoCode\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createPromoCode));\n\t\t\t},\n\t\t\tdeletePromoCode(\n\t\t\t\tvariables: DeletePromoCodeMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeletePromoCodeMutation[\"deletePromoCode\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeletePromoCodeMutation,\n\t\t\t\t\tDeletePromoCodeMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:bcd719e36f0a392a4aca1cd2bcaa758327cba282531dcf18220f24cc92d6210c\",\n\t\t\t\t\t\"deletePromoCode\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deletePromoCode));\n\t\t\t},\n\t\t\tgetPromoCode(\n\t\t\t\tvariables: GetPromoCodeQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetPromoCodeQuery[\"promoCode\"]>> {\n\t\t\t\treturn requester<GetPromoCodeQuery, GetPromoCodeQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:29fb69c7df1cb36af0db92cc3951cc84fbbaad8166733158667f0136483bb0ca\",\n\t\t\t\t\t\"getPromoCode\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.promoCode));\n\t\t\t},\n\t\t\tlistPromoCodes(\n\t\t\t\tvariables: ListPromoCodesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListPromoCodesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListPromoCodesQuery, ListPromoCodesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5722ed2369ad9f1c62eb2579de00b765a7b5857e9340f366fb5d6612fb97633f\",\n\t\t\t\t\t\"listPromoCodes\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tusers: {\n\t\t\tbanUser(\n\t\t\t\tvariables: BanUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<BanUserMutation[\"banUser\"]>> {\n\t\t\t\treturn requester<BanUserMutation, BanUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cb1bc4d8fada30e5cecd68182f98129c24da6f252b60829e5b680b1c45b95be3\",\n\t\t\t\t\t\"banUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.banUser));\n\t\t\t},\n\t\t\tgetCurrentUser(\n\t\t\t\tvariables?: GetCurrentUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCurrentUserQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<GetCurrentUserQuery, GetCurrentUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9f7cc9ff353a2778e55b674cfd5737a7dcaff19be9ac13d6f79aabd5d8ef69ff\",\n\t\t\t\t\t\"getCurrentUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUserLedgerAccount(\n\t\t\t\tvariables?: GetUserLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLedgerAccountQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLedgerAccountQuery,\n\t\t\t\t\tGetUserLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d7eeaf0a388395edb82220877e72a7fc91d1f06a6d89f1cfa5e56bb400d2aa49\",\n\t\t\t\t\t\"getUserLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUser(\n\t\t\t\tvariables: GetUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<GetUserQuery, GetUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c6cd0172ca06b30e54b818c216ccb00023ffa4d6392becd6fb80a5a0312b1b65\",\n\t\t\t\t\t\"getUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t\tlistUserSocials(\n\t\t\t\tvariables: ListUserSocialsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUserSocialsQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<ListUserSocialsQuery, ListUserSocialsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:37ac821ca48a89c91a53f91cbba77d0ffa401807815a88e1e1d25819baf8d877\",\n\t\t\t\t\t\"listUserSocials\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t\tmuteUser(\n\t\t\t\tvariables: MuteUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MuteUserMutation[\"createCompanyMutedUser\"]>> {\n\t\t\t\treturn requester<MuteUserMutation, MuteUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:57e050f6c8afa900a0e947157ee629d1435bfb8455ee0aebcc27d82d43ee26bb\",\n\t\t\t\t\t\"muteUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCompanyMutedUser));\n\t\t\t},\n\t\t\tunbanUser(\n\t\t\t\tvariables: UnbanUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UnbanUserMutation[\"unbanUser\"]>> {\n\t\t\t\treturn requester<UnbanUserMutation, UnbanUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fa0ff56a45a8dc977e12814ad25bee498fdb6adc280ce30722df8ff4f4c1a4d8\",\n\t\t\t\t\t\"unbanUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.unbanUser));\n\t\t\t},\n\t\t\tunmuteUser(\n\t\t\t\tvariables: UnmuteUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UnmuteUserMutation[\"deleteCompanyMutedUser\"]>> {\n\t\t\t\treturn requester<UnmuteUserMutation, UnmuteUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9c1f64ede76760c37850648c4541d50186d28dd656e4f69dd94501ae3babf8c7\",\n\t\t\t\t\t\"unmuteUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteCompanyMutedUser));\n\t\t\t},\n\t\t},\n\t\twebhooks: {\n\t\t\tcreateWebhook(\n\t\t\t\tvariables: CreateWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateWebhookMutation[\"createWebhook\"]>> {\n\t\t\t\treturn requester<CreateWebhookMutation, CreateWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:203020195489ea56d6c664b7c4483367ba438db78f5ab057ccb8bcb3d6804186\",\n\t\t\t\t\t\"createWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createWebhook));\n\t\t\t},\n\t\t\tdeleteWebhook(\n\t\t\t\tvariables: DeleteWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteWebhookMutation[\"deleteWebhook\"]>> {\n\t\t\t\treturn requester<DeleteWebhookMutation, DeleteWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:84d542a9790c9ba9da706cee4cadeb8932fab37daf23775489066ca6f5ead1f2\",\n\t\t\t\t\t\"deleteWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteWebhook));\n\t\t\t},\n\t\t\tgetWebhook(\n\t\t\t\tvariables: GetWebhookQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetWebhookQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetWebhookQuery, GetWebhookQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c8b6985c11fe9dafc0117d6ae57b27a8331427bf93844dbedf6376bc51800545\",\n\t\t\t\t\t\"getWebhook\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistWebhooks(\n\t\t\t\tvariables: ListWebhooksQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListWebhooksQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListWebhooksQuery, ListWebhooksQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:eef881aaf99c3cad84eb3b113552d3272712562ce13cc487b6a38c6099ee4498\",\n\t\t\t\t\t\"listWebhooks\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\ttestWebhook(\n\t\t\t\tvariables: TestWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<TestWebhookMutation[\"testWebhookV2\"]>> {\n\t\t\t\treturn requester<TestWebhookMutation, TestWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cc8b4c644a503d29ebb1c62f812b2292a83298813d5d1ce0a66f667d27039e4c\",\n\t\t\t\t\t\"testWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.testWebhookV2));\n\t\t\t},\n\t\t\tupdateWebhook(\n\t\t\t\tvariables: UpdateWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateWebhookMutation[\"updateWebhook\"]>> {\n\t\t\t\treturn requester<UpdateWebhookMutation, UpdateWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:362bc60c363078102712be7cd0483cfa5ed01a745046a041b98dc3846100eaf3\",\n\t\t\t\t\t\"updateWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateWebhook));\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport type Sdk = ReturnType<typeof getSdk>;\n","import type { AppValidScopes } from \"@/codegen/graphql/server\";\nimport type { OAuth2Config } from \"@auth/core/providers\";\n\nexport interface WhopOAuthProfile {\n\tid: string;\n\tusername?: string;\n\temail: string;\n\tprofile_pic_url?: string;\n}\n\n/**\n * The authorization tokens returned from the Whop OAuth2 API.\n */\nexport interface WhopOAuthTokens {\n\t/**\n\t * The primary access token for the user.\n\t */\n\taccess_token: string;\n\t/**\n\t * The number of seconds until the access token expires.\n\t */\n\texpires_in: number;\n\t/**\n\t * The timestamp of when the access token was created (in s).\n\t */\n\tcreated_at: number;\n}\n\n/**\n * The OAuth2 class is used to interact with the Whop OAuth2 API.\n *\n * @see https://dev.whop.com/features/oauth-guide\n */\nexport class WhopOAuth {\n\tpublic static readonly OAUTH_URL = \"https://whop.com/oauth/\";\n\n\tconstructor(\n\t\t/**\n\t\t * Your Whop app id. This can be found in your developer dashboard\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tprivate readonly appId: string,\n\t\t/**\n\t\t * Your Whop app api key. This can be found in your developer dashboard\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tprivate readonly appApiKey: string,\n\t\t/**\n\t\t * **optional** - The origin of the Whop API. This is used to make API requests to the Whop API.\n\t\t *\n\t\t * @default https://api.whop.com\n\t\t */\n\t\tprivate readonly apiOrigin = \"https://api.whop.com\",\n\t) {}\n\n\t/**\n\t * Get an authorization url to start the OAuth2 flow.\n\t *\n\t * ```ts\n\t * const { url, state } = whopOAuth.getAuthorizationUrl({\n\t * \tredirectUri: \"http://localhost:3000/api/oauth/callback\",\n\t * \tscope: [\"read_user\"],\n\t * })\n\t * ```\n\t */\n\tpublic getAuthorizationUrl({\n\t\tstate = crypto.randomUUID(),\n\t\tredirectUri,\n\t\tscope = [\"read_user\"],\n\t}: {\n\t\t/**\n\t\t * The state to be used in the OAuth2 flow. This is used to prevent CSRF attacks.\n\t\t *\n\t\t * **optional** - defaults to a random uuid\n\t\t */\n\t\tstate?: string;\n\t\t/**\n\t\t * The redirect uri to be used in the OAuth2 flow. This is used to redirect the user back to your app after authorization.\n\t\t *\n\t\t * **NOTE** - the redirect uri you are using here must be defined in your app's settings in the developer dashboard.\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tredirectUri: string | URL;\n\t\t/**\n\t\t * The scopes to be used in the OAuth2 flow. This is used to request permissions from the user.\n\t\t *\n\t\t * @see https://dev.whop.com/api-reference/graphql/scopes\n\t\t */\n\t\tscope?: AppValidScopes[];\n\t}): {\n\t\t/**\n\t\t * The url to redirect the user to for authorization\n\t\t */\n\t\turl: string;\n\t\t/**\n\t\t * The state to be used in the OAuth2 flow. This is used to prevent CSRF attacks.\n\t\t */\n\t\tstate: string;\n\t} {\n\t\tconst oAuthUrl = new URL(WhopOAuth.OAUTH_URL);\n\n\t\toAuthUrl.searchParams.set(\"client_id\", this.appId);\n\t\toAuthUrl.searchParams.set(\"response_type\", \"code\");\n\t\toAuthUrl.searchParams.set(\"scope\", scope.join(\" \"));\n\t\toAuthUrl.searchParams.set(\"state\", state);\n\n\t\tif (redirectUri instanceof URL) {\n\t\t\toAuthUrl.searchParams.set(\"redirect_uri\", redirectUri.toString());\n\t\t} else {\n\t\t\toAuthUrl.searchParams.set(\"redirect_uri\", redirectUri);\n\t\t}\n\n\t\treturn {\n\t\t\turl: oAuthUrl.toString(),\n\t\t\tstate,\n\t\t};\n\t}\n\n\t/**\n\t * Exchange a code for a token.\n\t *\n\t * ```ts\n\t * const authResponse = await whopOAuth.exchangeCode({\n\t * \tcode: \"1234\",\n\t * \tredirectUri: \"http://localhost:3000/api/oauth/callback\",\n\t * })\n\t *\n\t * if (!authResponse.ok) {\n\t * \tthrow new Error(`Failed to exchange code for token. Status: ${authResponse.code}`);\n\t * }\n\t *\n\t * const { access_token } = authResponse.tokens;\n\t * ```\n\t */\n\tpublic async exchangeCode({\n\t\tcode,\n\t\tredirectUri,\n\t}: {\n\t\t/**\n\t\t * The code you received when the user was redirected back to your app.\n\t\t */\n\t\tcode: string;\n\t\t/**\n\t\t * The redirect uri you used when getting the authorization url.\n\t\t *\n\t\t * **NOTE** - this must be the same as the redirect uri you used when getting the authorization url.\n\t\t */\n\t\tredirectUri: string | URL;\n\t}): Promise<\n\t\t| {\n\t\t\t\tok: true;\n\t\t\t\t/**\n\t\t\t\t * The authorization token you received from the user to make request to the Whop API\n\t\t\t\t */\n\t\t\t\ttokens: WhopOAuthTokens;\n\t\t  }\n\t\t| {\n\t\t\t\tok: false;\n\t\t\t\t/**\n\t\t\t\t * The status code of the response\n\t\t\t\t */\n\t\t\t\tcode: number;\n\t\t\t\t/**\n\t\t\t\t * The raw response from the Whop API\n\t\t\t\t */\n\t\t\t\traw: Response;\n\t\t  }\n\t> {\n\t\tconst resolvedRedirectUri =\n\t\t\tredirectUri instanceof URL ? redirectUri.toString() : redirectUri;\n\n\t\tconst tokensEndpoint = new URL(\"/api/oauth/token\", this.apiOrigin);\n\t\tconst tokensResponse = await fetch(tokensEndpoint, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcode,\n\t\t\t\tclient_id: this.appId,\n\t\t\t\tclient_secret: this.appApiKey,\n\t\t\t\tgrant_type: \"authorization_code\",\n\t\t\t\tredirect_uri: resolvedRedirectUri,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\tpragma: \"no-cache\",\n\t\t\t},\n\t\t\tcache: \"no-store\",\n\t\t});\n\n\t\tif (!tokensResponse.ok) {\n\t\t\treturn {\n\t\t\t\tok: false,\n\t\t\t\tcode: tokensResponse.status,\n\t\t\t\traw: tokensResponse,\n\t\t\t};\n\t\t}\n\n\t\tconst tokens = await tokensResponse.json();\n\n\t\treturn {\n\t\t\tok: true,\n\t\t\ttokens,\n\t\t};\n\t}\n\n\t/**\n\t * Get an Auth.js provider for the Whop OAuth2 API.\n\t *\n\t * Works with any Auth.js compatible client:\n\t * - [`next-auth`](https://www.npmjs.com/package/next-auth)\n\t * - [`@auth/qwik`](https://www.npmjs.com/package/@auth/qwik)\n\t * - [`@auth/sveltekit`](https://www.npmjs.com/package/@auth/sveltekit)\n\t * - [`@auth/express`](https://www.npmjs.com/package/@auth/express)\n\t * - etc.\n\t *\n\t * ```ts\n\t * const WhopProvider = whopOAuth.authJsProvider({\n\t * \tscope: [\"read_user\"],\n\t * })\n\t *\n\t * export const auth = Auth({\n\t *\t\tproviders: [WhopProvider],\n\t *\t});\n\t * ```\n\t */\n\tpublic authJsProvider({\n\t\tscope = [\"read_user\"],\n\t}: {\n\t\t/**\n\t\t * The scopes to be used in the OAuth2 flow. This is used to request permissions from the user.\n\t\t *\n\t\t * @see https://dev.whop.com/api-reference/graphql/scopes\n\t\t */\n\t\tscope?: AppValidScopes[];\n\t}): OAuth2Config<WhopOAuthProfile> {\n\t\treturn {\n\t\t\tid: \"whop\",\n\t\t\tname: \"Whop\",\n\t\t\ttype: \"oauth\" as const,\n\t\t\tclientId: this.appId,\n\t\t\tclientSecret: this.appApiKey,\n\t\t\tauthorization: {\n\t\t\t\turl: WhopOAuth.OAUTH_URL,\n\t\t\t\tparams: {\n\t\t\t\t\tscope: scope.join(\" \"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tchecks: [\"state\" as const],\n\t\t\ttoken: new URL(\"/api/oauth/token\", this.apiOrigin).href,\n\t\t\tuserinfo: new URL(\"/api/v5/me\", this.apiOrigin).href,\n\t\t\tprofile(profile: WhopOAuthProfile) {\n\t\t\t\treturn {\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tname: profile.username || profile.email,\n\t\t\t\t\temail: profile.email,\n\t\t\t\t\timage: profile.profile_pic_url,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n}\n","import type { WhopServerSdkOptions } from \"@/sdk/server-sdk-shared\";\n\nexport const DEFAULT_WEBSOCKET_ORIGIN = \"https://ws-prod.whop.com\";\n\ntype SendWebsocketMessageInput = {\n\tmessage: string;\n\ttarget:\n\t\t| {\n\t\t\t\texperience: string;\n\t\t  }\n\t\t| {\n\t\t\t\tuser: string;\n\t\t  }\n\t\t| {\n\t\t\t\tcustom: string;\n\t\t  }\n\t\t| \"everyone\";\n};\n\nexport function sendWebsocketMessageFunction(apiOptions: WhopServerSdkOptions) {\n\tconst origin = apiOptions.websocketOrigin ?? DEFAULT_WEBSOCKET_ORIGIN;\n\tconst path = \"/v1/websockets/send\";\n\tconst url = new URL(path, origin);\n\tconst headers = new Headers();\n\theaders.set(\"Content-Type\", \"application/json\");\n\theaders.set(\"Authorization\", `Bearer ${apiOptions.appApiKey}`);\n\n\treturn async function SendWebsocketMessage(input: SendWebsocketMessageInput) {\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(input),\n\t\t\theaders,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tconst error = await response.text();\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to send websocket message. Code: ${response.status}. Message: ${error}`,\n\t\t\t);\n\t\t}\n\n\t\tconst data = (await response.json()) as { ok: boolean };\n\n\t\tif (!data.ok) {\n\t\t\tthrow new Error(\"Failed to send websocket message\");\n\t\t}\n\t};\n}\n","import type { WhopServerSdkOptions } from \"@/sdk/server-sdk-shared\";\nimport { WhopWebsocketClientBase } from \"./client.common\";\nimport { DEFAULT_WEBSOCKET_ORIGIN } from \"./server\";\n\nexport class WhopWebsocketClientServer extends WhopWebsocketClientBase {\n\tprivate keys: WhopServerSdkOptions;\n\n\tconstructor(keys: WhopServerSdkOptions) {\n\t\tsuper();\n\t\tthis.keys = keys;\n\t}\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tconst path = \"/v1/websockets/connect\";\n\t\tconst origin = this.keys.websocketOrigin ?? DEFAULT_WEBSOCKET_ORIGIN;\n\t\tconst url = new URL(path, origin);\n\t\turl.protocol = url.protocol.replace(\"http\", \"ws\");\n\n\t\tconst headers = {\n\t\t\tAuthorization: `Bearer ${this.keys.appApiKey}`,\n\t\t\t\"x-on-behalf-of\": this.keys.onBehalfOfUserId,\n\t\t};\n\n\t\t// NodeJS 22 has a built in websocket client,\n\t\t// instead of passing protocols as a string, the second parameter accepts an object with headers.\n\t\t// However the types don't know about this yet, hence the weird casting...\n\t\treturn new WebSocket(url, { headers } as unknown as string[]);\n\t}\n}\n\nexport function makeConnectToWebsocketFunction(options: WhopServerSdkOptions) {\n\treturn function connectToWebsocket() {\n\t\treturn new WhopWebsocketClientServer(options);\n\t};\n}\n","import { fileSdkExtensions } from \"@/attachments/file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { type Requester, getSdk } from \"@/codegen/graphql/server\";\nimport { WhopOAuth } from \"@/oauth\";\nimport { DEFAULT_API_ORIGIN, graphqlFetch } from \"@/sdk/sdk-common\";\nimport { makeUserTokenVerifier } from \"@/verify-user-token\";\nimport { makeConnectToWebsocketFunction } from \"@/websockets/client.server\";\nimport { sendWebsocketMessageFunction } from \"@/websockets/server\";\n\n/**\n * SDK options for server side use\n */\nexport interface WhopServerSdkOptions {\n\t/** The API key to use for API calls */\n\tappApiKey: string;\n\t/** Required when using the oauth module. Defaults to `NEXT_PUBLIC_WHOP_APP_ID` */\n\tappId: string;\n\t/** Use this to make the API calls on behalf of a user */\n\tonBehalfOfUserId?: string;\n\t/** Use this to make the API calls on behalf of a company */\n\tcompanyId?: string;\n\t/** the origin of the API */\n\tapiOrigin?: string;\n\t/** the path of the API */\n\tapiPath?: string;\n\t/** the origin of the server to server websocket api */\n\twebsocketOrigin?: string;\n}\n\nfunction BaseWhopServerSdk(\n\toptions: WhopServerSdkOptions,\n\tuploadFile: ReturnType<typeof makeUploadAttachmentFunction>,\n) {\n\tconst baseSdk = getSdk(makeRequester(options));\n\n\tconst sendWebsocketMessage = sendWebsocketMessageFunction(options);\n\tconst websocketClient = makeConnectToWebsocketFunction(options);\n\n\tconst fileSdk = fileSdkExtensions(baseSdk, uploadFile);\n\tconst oauth = new WhopOAuth(\n\t\toptions.appId,\n\t\toptions.appApiKey,\n\t\toptions.apiOrigin,\n\t);\n\tconst verifyUserToken = makeUserTokenVerifier({\n\t\tappId: options.appId,\n\t\tdontThrow: false,\n\t});\n\n\treturn {\n\t\t...baseSdk,\n\t\tattachments: {\n\t\t\t...baseSdk.attachments,\n\t\t\t...fileSdk,\n\t\t},\n\t\twebsockets: {\n\t\t\tsendMessage: sendWebsocketMessage,\n\t\t\tclient: websocketClient,\n\t\t},\n\t\toauth,\n\t\tverifyUserToken,\n\t};\n}\n\nexport function makeWhopServerSdk({\n\tuploadFile,\n}: { uploadFile: ReturnType<typeof makeUploadAttachmentFunction> }) {\n\treturn function WhopServerSdk(options: WhopServerSdkOptions): WhopServerSdk {\n\t\tconst baseSdk = BaseWhopServerSdk(options, uploadFile);\n\n\t\treturn {\n\t\t\t...baseSdk,\n\t\t\twithUser: (userId: string) =>\n\t\t\t\tWhopServerSdk({ ...options, onBehalfOfUserId: userId }),\n\t\t\twithCompany: (companyId: string) =>\n\t\t\t\tWhopServerSdk({ ...options, companyId }),\n\t\t};\n\t};\n}\n\nexport type WhopServerSdk = ReturnType<typeof BaseWhopServerSdk> & {\n\twithUser: (userId: string) => WhopServerSdk;\n\twithCompany: (companyId: string) => WhopServerSdk;\n};\n\nfunction makeRequester(\n\tapiOptions: WhopServerSdkOptions,\n): Requester<RequestInit> {\n\tconst endpoint = getEndpoint(apiOptions);\n\tconst headers = getHeaders(apiOptions);\n\treturn async function fetcher<R, V>(\n\t\toperationId: string,\n\t\toperationName: string,\n\t\toperationType: \"query\" | \"mutation\",\n\t\tvars?: V,\n\t\toptions?: RequestInit,\n\t): Promise<R> {\n\t\tconst customHeaders = new Headers(options?.headers);\n\t\tconst actualHeaders = new Headers(headers);\n\t\tfor (const [key, value] of customHeaders.entries()) {\n\t\t\tactualHeaders.set(key, value);\n\t\t}\n\t\treturn graphqlFetch<R, V>(\n\t\t\tendpoint,\n\t\t\toperationId,\n\t\t\toperationName,\n\t\t\toperationType,\n\t\t\tvars,\n\t\t\tactualHeaders,\n\t\t);\n\t};\n}\n\nfunction getEndpoint(apiOptions: WhopServerSdkOptions) {\n\tconst url = new URL(\n\t\tapiOptions.apiPath ?? \"/public-graphql\",\n\t\tapiOptions.apiOrigin ?? DEFAULT_API_ORIGIN,\n\t);\n\treturn url.href;\n}\n\nexport function getHeaders(options: WhopServerSdkOptions) {\n\tconst headers = new Headers();\n\n\theaders.set(\"Authorization\", `Bearer ${options.appApiKey}`);\n\tif (options.onBehalfOfUserId)\n\t\theaders.set(\"x-on-behalf-of\", options.onBehalfOfUserId);\n\tif (options.companyId) headers.set(\"x-company-id\", options.companyId);\n\n\treturn headers;\n}\n"],"names":["verifyUserToken","args","prepareAttachmentForUpload","analyzeAttachment","carryErrors","getSdk","makeConnectToWebsocketFunction","getSdk","makeRequester","makeConnectToWebsocketFunction","verifyUserToken","getEndpoint"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,WAAW,iBAAiB;;;AwCArC,SAAS,OAAO,aAAa;;AMA7B,SAAS,oBAAoB;;;;;;;;;A9CE7B,IAAM,yBAAyB;AAC/B,IAAM,8BACL;AAMM,SAAS,aACf,uBAAA,EACgB;IAChB,IAAI,OAAO,4BAA4B,UACtC,OAAO;IAER,IAAI,mCAAmC,SACtC,OAAO,wBAAwB,GAAA,CAAI,sBAAsB;IAE1D,IAAI,mCAAmC,SACtC,OAAO,wBAAwB,OAAA,CAAQ,GAAA,CAAI,sBAAsB;IAElE,OAAO;AACR;AAuBO,SAAS,sBACf,OAAA,EACC;IACD,OAAO,eAAeA,iBACrB,uBAAA,EACA,eAAA,EACC;QACD,OAAO,MAAM,wBAA4B,yBAAyB;YACjE,GAAG,OAAA;YACH,GAAG,eAAA;QACJ,CAA+B;IAChC;AACD;AAEO,SAAS,gBACf,uBAAA,EACA,eAAA,EACC;IACD,OAAO,wBAAmC,yBAAyB;QAClE,GAAG,eAAA;IACJ,CAAsC;AACvC;AAEA,eAAe,wBACd,uBAAA,EACA,OAAA,EAGC;IACD,IAAI;QACH,MAAM,cAAc,aAAa,uBAAuB;QAExD,IAAI,CAAC,aAAa;YACjB,MAAM,IAAI,MACT;QAEF;QAEA,MAAM,YAAY,QAAQ,SAAA,IAAa;QACvC,MAAM,MAAM,UAAM,mPAAA,EAAU,KAAK,KAAA,CAAM,SAAS,GAAG,OAAO,EAAE,KAAA,CAAM,MAAM;YACvE,MAAM,IAAI,MAAM,gDAAgD;QACjE,CAAC;QACD,MAAM,QAAQ,MAAM,uPAAA,EAAU,aAAa,KAAK;YAC/C,QAAQ;QACT,CAAC,EAAE,KAAA,CAAM,CAAC,OAAO;YAChB,MAAM,IAAI,MAAM,gDAAgD;QACjE,CAAC;QACD,IACC,CAAA,CAAE,MAAM,OAAA,CAAQ,GAAA,IAAO,MAAM,OAAA,CAAQ,GAAA,KACrC,MAAM,OAAA,CAAQ,MAAM,OAAA,CAAQ,GAAG,GAC9B;YACD,MAAM,IAAI,MAAM,gDAAgD;QACjE;QACA,IAAI,QAAQ,KAAA,IAAS,MAAM,OAAA,CAAQ,GAAA,KAAQ,QAAQ,KAAA,EAClD,MAAM,IAAI,MAAM,4CAA4C;QAC7D,OAAO;YACN,OAAO,MAAM,OAAA,CAAQ,GAAA;YACrB,QAAQ,MAAM,OAAA,CAAQ,GAAA;QACvB;IACD,EAAA,OAAS,GAAG;QACX,IAAI,QAAQ,SAAA,EAAW;YACtB,OAAO;QACR;QAEA,MAAM;IACP;AACD;;AChHA,IAAA,gBAAA,CAAA;AAAA,SAAA,eAAA;IAAA,cAAA,IAAA;IAAA,uBAAA,IAAA;IAAA,QAAA,IAAA;IAAA,aAAA,IAAA;IAAA,qBAAA,IAAA;IAAA,aAAA,IAAA;IAAA,eAAA,IAAA;IAAA,aAAA,IAAA;IAAA,YAAA,IAAA;IAAA,YAAA,IAAA;IAAA,OAAA,IAAA;IAAA,QAAA,IAAA;IAAA,WAAA,IAAA;AAAA;;ACAA,IAAA,uBAAA,CAAA;AAAA,SAAA,sBAAA;IAAA,iCAAA,IAAA;IAAA,2BAAA,IAAA;IAAA,uBAAA,IAAA;IAAA,YAAA,IAAA;IAAA,iCAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,aAAA,IAAA;IAAA,2BAAA,IAAA;IAAA,iCAAA,IAAA;IAAA,8CAAA,IAAA;IAAA,cAAA,IAAA;IAAA,kBAAA,IAAA;IAAA,mBAAA,IAAA;IAAA,mCAAA,IAAA;IAAA,uCAAA,IAAA;IAAA,0CAAA,IAAA;IAAA,yBAAA,IAAA;IAAA,+CAAA,IAAA;IAAA,0BAAA,IAAA;IAAA,oCAAA,IAAA;IAAA,6BAAA,IAAA;IAAA,yCAAA,IAAA;IAAA,oCAAA,IAAA;IAAA,2BAAA,IAAA;IAAA,iDAAA,IAAA;IAAA,0CAAA,IAAA;IAAA,yBAAA,IAAA;IAAA,eAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,UAAA,IAAA;IAAA,eAAA,IAAA;IAAA,gCAAA,IAAA;IAAA,gCAAA,IAAA;IAAA,wBAAA,IAAA;IAAA,4BAAA,IAAA;IAAA,4BAAA,IAAA;IAAA,wBAAA,IAAA;IAAA,cAAA,IAAA;IAAA,UAAA,IAAA;IAAA,mBAAA,IAAA;AAAA;;ACUO,IAAM,WAAW;IACtB,cAAc;IACd,OAAO;IACP,QAAQ;IACR,OAAO;IACP,cAAc;AAChB;AA4BO,IAAM,oBAAoB;IAC/B,cAAc;IACd,aAAa;IACb,OAAO;IACP,0BAA0B;IAC1B,SAAS;IACT,SAAS;IACT,QAAQ;IACR,aAAa;IACb,eAAe;IACf,qBAAqB;IACrB,WAAW;IACX,iBAAiB;IACjB,2BAA2B;IAC3B,cAAc;AAChB;;AChDO,IAAM,cAAc;IACzB,uBAAuB;IAAA;;;;GAAA,GAMvB,mBAAmB;IAAA;;;;;;GAAA,GAQnB,oBAAoB;IAAA;;;;GAAA,GAMpB,yBAAyB;IAAA;;;GAAA,GAKzB,yBAAyB;IAAA;;;GAAA,GAKzB,wBAAwB;IACxB,cAAc;AAChB;AAcO,IAAM,aAAa;IACxB,qBAAqB;IACrB,WAAW;IACX,UAAU;IACV,OAAO;IACP,cAAc;AAChB;AAYO,IAAM,WAAW;IACtB,SAAS;IACT,KAAK;IACL,KAAK;IACL,SAAS;IACT,cAAc;AAChB;AA2CO,IAAM,kBAAkB;IAC7B,gBAAgB;IAChB,cAAc;IACd,gBAAgB;IAChB,iBAAiB;IACjB,iBAAiB;IACjB,cAAc;AAChB;AAkCO,IAAM,4BAA4B;IACvC,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,cAAc;AAChB;AAmDO,IAAM,wBAAwB;IACnC,oBAAoB;IACpB,SAAS;IACT,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,cAAc;AAChB;AAaO,IAAM,4BAA4B;IACvC,0BAA0B;IAC1B,SAAS;IACT,KAAK;IACL,mBAAmB;IACnB,cAAc;AAChB;AA+BO,IAAM,kBAAkB;IAC7B,oBAAoB;IACpB,SAAS;IACT,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,cAAc;AAChB;AAaO,IAAM,qBAAqB;IAChC,wBAAwB;IACxB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,cAAc;AAChB;AAYO,IAAM,gBAAgB;IAC3B,mBAAmB;IACnB,SAAS;IACT,UAAU;IACV,cAAc;AAChB;AAuBO,IAAM,oBAAoB;IAC/B,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,cAAc;AAChB;AAqDO,IAAM,kCAAkC;IAC7C,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB;IAChB,cAAc;IACd,cAAc;AAChB;AA6CO,IAAM,yBAAyB;IACpC,SAAS;IACT,SAAS;IACT,UAAU;IACV,cAAc;AAChB;AAsBO,IAAM,mBAAmB;IAC9B,SAAS;IACT,WAAW;IACX,MAAM;IACN,cAAc;AAChB;AAgBO,IAAM,eAAe;IAC1B,SAAS;IAAA,wKAAA,GAET,YAAY;IAAA,0CAAA,GAEZ,eAAe;IAAA,mHAAA,GAEf,KAAK;IAAA,mFAAA,GAEL,MAAM;IAAA,yFAAA,GAEN,UAAU;IAAA,sGAAA,GAEV,eAAe;IAAA,8GAAA,GAEf,WAAW;IAAA,qIAAA,GAEX,QAAQ;IAAA,0IAAA,GAER,aAAa;IAAA,0KAAA,GAEb,KAAK;IAAA,qHAAA,GAEL,KAAK;IACL,cAAc;AAChB;AA2BO,IAAM,+CAA+C;IAC1D,SAAS;IACT,WAAW;IACX,sBAAsB;IACtB,cAAc;AAChB;AAmCO,IAAM,gBAAgB;IAC3B,SAAS;IACT,OAAO;IACP,QAAQ;IACR,cAAc;AAChB;AAmHO,IAAM,kCAAkC;IAC7C,SAAS;IACT,eAAe;IACf,aAAa;IACb,aAAa;IACb,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;IACtB,4BAA4B;IAC5B,YAAY;IACZ,oBAAoB;IACpB,aAAa;IACb,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;IACnB,oBAAoB;IACpB,cAAc;AAChB;;ACtoBO,IAAM,0BAA0B;IACrC,cAAc;IACd,SAAS;IACT,QAAQ;IACR,WAAW;IACX,cAAc;AAChB;AAyIO,IAAM,oCAAoC;IAC/C,SAAS;IACT,MAAM;IACN,UAAU;IACV,SAAS;IACT,QAAQ;IACR,gBAAgB;IAChB,cAAc;AAChB;AA6DO,IAAM,qCAAqC;IAChD,0BAA0B;IAC1B,WAAW;IACX,YAAY;IACZ,WAAW;IACX,QAAQ;IACR,cAAc;AAChB;AAcO,IAAM,0CAA0C;IACrD,SAAS;IACT,MAAM;IACN,UAAU;IACV,QAAQ;IACR,gBAAgB;IAChB,cAAc;AAChB;AA0DO,IAAM,wCAAwC;IACnD,gBAAgB;IAChB,WAAW;IACX,UAAU;IACV,UAAU;IACV,QAAQ;IACR,UAAU;IACV,cAAc;AAChB;AAeO,IAAM,2CAA2C;IACtD,oBAAoB;IACpB,KAAK;IACL,UAAU;IACV,MAAM;IACN,cAAc;AAChB;AAiCO,IAAM,4BAA4B;IACvC,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM;IACN,cAAc;AAChB;AAwDO,IAAM,qCAAqC;IAChD,oBAAoB;IACpB,UAAU;IACV,QAAQ;IACR,cAAc;AAChB;AAYO,IAAM,2BAA2B;IACtC,gBAAgB;IAChB,MAAM;IACN,MAAM;IACN,cAAc;AAChB;AAWO,IAAM,gDAAgD;IAC3D,oBAAoB;IACpB,iBAAiB;IACjB,qBAAqB;IACrB,MAAM;IACN,cAAc;AAChB;AA8BO,IAAM,0BAA0B;IACrC,SAAS;IACT,WAAW;IACX,SAAS;IACT,OAAO;IACP,cAAc;AAChB;AA4BO,IAAM,iCAAiC;IAC5C,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM;IACN,cAAc;AAChB;AAuFO,IAAM,8BAA8B;IACzC,cAAc;IACd,SAAS;IACT,WAAW;IACX,cAAc;AAChB;;ACtqBO,IAAM,2CAA2C;IACtD,SAAS;IACT,SAAS;IACT,YAAY;IACZ,SAAS;IACT,cAAc;IACd,aAAa;IACb,cAAc;AAChB;;ACpBO,IAAM,6BAA6B;IACxC,kBAAkB;IAAA,mEAAA,GAElB,eAAe;IAAA,kEAAA,GAEf,oBAAoB;IACpB,cAAc;AAChB;AAWO,IAAM,iCAAiC;IAC5C,kBAAkB;IAClB,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;IAClB,iBAAiB;IACjB,qBAAqB;IACrB,sBAAsB;IACtB,cAAc;AAChB;AAgBO,IAAM,yBAAyB;IACpC,kBAAkB;IAClB,eAAe;IACf,eAAe;IACf,eAAe;IACf,gBAAgB;IAChB,mBAAmB;IACnB,eAAe;IACf,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;AAChB;AAiBO,IAAM,6BAA6B;IACxC,SAAS;IACT,YAAY;IACZ,MAAM;IACN,mBAAmB;IACnB,qBAAqB;IACrB,UAAU;IACV,WAAW;IACX,UAAU;IACV,SAAS;IACT,eAAe;IACf,eAAe;IACf,UAAU;IACV,MAAM;IACN,OAAO;IACP,iBAAiB;IACjB,aAAa;IACb,eAAe;IACf,cAAc;AAChB;AAqCO,IAAM,kCAAkC;IAC7C,SAAS;IACT,YAAY;IACZ,MAAM;IACN,YAAY;IACZ,UAAU;IACV,WAAW;IACX,UAAU;IACV,KAAK;IACL,cAAc;AAChB;AA8GO,IAAM,kDAAkD;IAC7D,KAAK;IACL,aAAa;IACb,cAAc;AAChB;;ACtOO,IAAM,eAAe;IAC1B,kBAAkB;IAClB,cAAc;IACd,sBAAsB;IACtB,qBAAqB;IACrB,eAAe;IACf,qCAAqC;IACrC,cAAc;IACd,qBAAqB;IACrB,yBAAyB;IACzB,oBAAoB;IACpB,cAAc;AAChB;;ACzDA,IAAA,uBAAA,CAAA;AAAA,SAAA,sBAAA;IAAA,UAAA,IAAA;AAAA;;ACAA,IAAA,gCAAA,CAAA;AAAA,SAAA,+BAAA;IAAA,WAAA,IAAA;AAAA;;ACcO,IAAM,YAAY;IAAA,6BAAA,GAEvB,YAAY;IACZ,cAAc;AAChB;;AClBA,IAAA,6BAAA,CAAA;AAAA,SAAA,4BAAA;IAAA,yCAAA,IAAA;IAAA,yBAAA,IAAA;IAAA,qBAAA,IAAA;AAAA;;ACiCO,IAAM,sBAAsB;IACjC,gBAAgB;IAChB,WAAW;IACX,UAAU;IACV,cAAc;AAChB;AAWO,IAAM,0BAA0B;IACrC,qBAAqB;IACrB,gBAAgB;IAChB,UAAU;IACV,cAAc;AAChB;AAsBO,IAAM,0CAA0C;IACrD,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,QAAQ;IACR,cAAc;AAChB;;AClFA,IAAA,4BAAA,CAAA;;ACAA,IAAA,sBAAA,CAAA;AAAA,SAAA,qBAAA;IAAA,SAAA,IAAA;AAAA;;ACAA,IAAA,8BAAA,CAAA;AAAA,SAAA,6BAAA;IAAA,2BAAA,IAAA;IAAA,YAAA,IAAA;AAAA;;ACWO,IAAM,aAAa;IACxB,SAAS;IACT,qBAAqB;IACrB,eAAe;IACf,iBAAiB;IACjB,iBAAiB;IACjB,sBAAsB;IACtB,aAAa;IACb,cAAc;AAChB;AAsDO,IAAM,4BAA4B;IACvC,SAAS;IAAA,iDAAA,GAET,MAAM;IAAA,wFAAA,GAEN,UAAU;IAAA,gJAAA,GAEV,kBAAkB;IAAA,oHAAA,GAElB,qBAAqB;IACrB,cAAc;AAChB;;ACrFA,IAAA,oCAAA,CAAA;AAAA,SAAA,mCAAA;IAAA,iBAAA,IAAA;IAAA,iCAAA,IAAA;IAAA,oCAAA,IAAA;IAAA,+BAAA,IAAA;IAAA,iCAAA,IAAA;AAAA;;ACWO,IAAM,kBAAkB;IAC7B,kBAAkB;IAClB,WAAW;IACX,QAAQ;IACR,GAAG;IACH,SAAS;IACT,cAAc;AAChB;AA2CO,IAAM,gCAAgC;IAC3C,SAAS;IACT,QAAQ;IACR,SAAS;IACT,SAAS;IACT,UAAU;IACV,cAAc;AAChB;AAcO,IAAM,qCAAqC;IAChD,sBAAsB;IACtB,KAAK;IACL,UAAU;IAAA,gBAAA,GAEV,UAAU;IACV,oBAAoB;IACpB,cAAc;AAChB;AAcO,IAAM,kCAAkC;IAC7C,kBAAkB;IAAA,gBAAA,GAElB,SAAS;IAAA,gBAAA,GAET,OAAO;IAAA,gBAAA,GAEP,YAAY;IAAA,gBAAA,GAEZ,UAAU;IAAA,gBAAA,GAEV,UAAU;IACV,OAAO;IAAA,gBAAA,GAEP,WAAW;IACX,MAAM;IACN,OAAO;IAAA,gBAAA,GAEP,SAAS;IAAA,gBAAA,GAET,UAAU;IAAA,gBAAA,GAEV,QAAQ;IACR,eAAe;IACf,UAAU;IACV,gBAAgB;IAChB,cAAc;AAChB;AA8CO,IAAM,kCAAkC;IAC7C,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,SAAS;IACT,cAAc;AAChB;;ACxLA,IAAA,2BAAA,CAAA;AAAA,SAAA,0BAAA;IAAA,oBAAA,IAAA;IAAA,qBAAA,IAAA;AAAA;;AC+BO,IAAM,qBAAqB;IAChC,uBAAuB;IACvB,SAAS;IACT,QAAQ;IACR,MAAM;IACN,aAAa;IACb,cAAc;AAChB;AAaO,IAAM,sBAAsB;IACjC,wBAAwB;IACxB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,QAAQ;IACR,cAAc;AAChB;;AC1DA,IAAA,4BAAA,CAAA;AAAA,SAAA,2BAAA;IAAA,qCAAA,IAAA;AAAA;;AC4BO,IAAM,sCAAsC;IACjD,SAAS;IACT,OAAO;IACP,SAAS;IACT,cAAc;AAChB;;ACjCA,IAAA,4BAAA,CAAA;;ACAA,IAAA,sCAAA,CAAA;;ACAA,IAAA,0BAAA,CAAA;AAAA,SAAA,yBAAA;IAAA,iBAAA,IAAA;AAAA;;AC0BO,IAAM,kBAAkB;IAC7B,qBAAqB;IACrB,KAAK;IACL,MAAM;IACN,cAAc;AAChB;;AC/BA,IAAA,2BAAA,CAAA;;ACAA,IAAA,8BAAA,CAAA;AAAA,SAAA,6BAAA;IAAA,eAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,eAAA,IAAA;AAAA;;ACQO,IAAM,gBAAgB;IAC3B,4BAA4B;IAC5B,oCAAoC;IACpC,uCAAuC;IACvC,8BAA8B;IAC9B,wBAAwB;IACxB,uBAAuB;IACvB,kCAAkC;IAClC,oBAAoB;IACpB,uBAAuB;IACvB,uBAAuB;IACvB,cAAc;AAChB;AAkBO,IAAM,gBAAgB;IAC3B,4BAA4B;IAC5B,cAAc;IACd,oBAAoB;IACpB,uBAAuB;IACvB,cAAc;AAChB;AAYO,IAAM,kBAAkB;IAC7B,8BAA8B;IAC9B,KAAK;IACL,IAAI;IACJ,cAAc;AAChB;;AC3DA,IAAM,gCAAgC;AAI/B,SAAS,qBAAqB,EACpC,aAAA,EACA,mBAAA,EACD,EAGG;IACF,MAAM,cAAc,IAAI,YAAY;IACpC,MAAM,aAAa,YAAY,MAAA,CAAO,aAAa;IACnD,MAAM,mBAAmB,OAAO,MAAA,CAAO,SAAA,CACtC,OACA,YACA;QAAE,MAAM;QAAQ,MAAM;IAAU,GAChC,OACA;QAAC,MAAM;KAAA;IAGR,OAAO,eAAe,oBACrB,GAAA,EACkC;QAClC,MAAM,OAAO,MAAM,IAAI,IAAA,CAAK;QAC5B,MAAM,SAAS,IAAI,OAAA,CAAQ,GAAA,CAC1B,uBAAuB;QAExB,IAAI,CAAC,OAAQ,CAAA,MAAM,MAAM,sCAAsC;QAC/D,MAAM,CAAC,cAAc,YAAY,CAAA,GAAI,OAAO,KAAA,CAAM,GAAG;QACrD,MAAM,CAAC,EAAE,SAAS,CAAA,GAAI,aAAa,KAAA,CAAM,GAAG;QAC5C,MAAM,CAAC,SAAS,aAAa,CAAA,GAAI,aAAa,KAAA,CAAM,GAAG;QAEvD,MAAM,MAAM,KAAK,KAAA,CAAM,KAAK,GAAA,CAAI,IAAI,GAAI;QAExC,IACC,OAAO,KAAA,CAAM,OAAO,QAAA,CAAS,SAAS,CAAC,KACvC,KAAK,GAAA,CAAI,MAAM,OAAO,QAAA,CAAS,SAAS,CAAC,IAAI,KAE7C,MAAM,MAAM,mBAAmB;QAEhC,MAAM,eAAe,GAAG,SAAS,CAAA,CAAA,EAAI,IAAI,EAAA;QAEzC,MAAM,YAAY,MAAM;QAExB,MAAM,kBAAkB,MAAM,OAAO,MAAA,CAAO,IAAA,CAC3C;YAAE,MAAM;YAAQ,MAAM;QAAU,GAChC,WACA,YAAY,MAAA,CAAO,YAAY;QAEhC,MAAM,YAAY,QAAQ,eAAe;QAEzC,IAAI,YAAY,KAAM,CAAA,MAAM,MAAM,qBAAqB;QACvD,IAAI,cAAc,cAAe,CAAA,MAAM,MAAM,oBAAoB;QAEjE,MAAM,aAAa,KAAK,KAAA,CAAM,IAAI;QAClC,IAAI,CAAC,eAAe,UAAU,EAAG,CAAA,MAAM,MAAM,yBAAyB;QACtE,OAAO;IACR;AACD;AAEA,SAAS,QAAQ,MAAA,EAAqB;IACrC,OAAO,CAAC;WAAG,IAAI,WAAW,MAAM,CAAC;KAAA,CAC/B,GAAA,CAAI,CAAC,IAAM,EAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG,CAAC,EAC1C,IAAA,CAAK,EAAE;AACV;AAGO,SAAS,eACf,OAAA,EACoC;IACpC,IAAI,CAAC,WAAW,OAAO,YAAY,SAAU,CAAA,OAAO;IACpD,IAAI,CAAA,CAAE,iBAAiB,OAAA,KAAY,QAAQ,WAAA,KAAgB,KAAM,CAAA,OAAO;IACxE,IAAI,CAAA,CAAE,YAAY,OAAA,KAAY,OAAO,QAAQ,MAAA,KAAW,UACvD,OAAO;IACR,IACC,CAAA,CAAE,UAAU,OAAA,KACZ,OAAO,QAAQ,IAAA,KAAS,YACxB,QAAQ,IAAA,KAAS,MAEjB,OAAO;IACR,OAAO;AACR;;ACpFA,IAAM,aAAN,cAAyB,MAAM;IAC9B,YACC,OAAA,EACgB,MAAA,EACA,UAAA,CACf;QACD,KAAA,CAAM,OAAO;QAHG,IAAA,CAAA,MAAA,GAAA;QACA,IAAA,CAAA,UAAA,GAAA;QAGhB,IAAA,CAAK,IAAA,GAAO;IACb;AACD;AAWA,eAAsB,MACrB,EAAA,EACA,UAAA,EACA,MAAA,EAAA,GACG,IAAA,EACgC;IACnC,IAAI,QAAQ;IACZ,MAAM,SAAoB,CAAC,CAAA;IAC3B,MAAO,QAAQ,WAAY;QAC1B,QAAQ,eAAe;QACvB,IAAI;YACH,MAAM,MAAM,MAAM,GAAG,GAAG,IAAI;YAC5B,OAAO;QACR,EAAA,OAAS,OAAO;YACf,OAAO,IAAA,CAAK,KAAK;YACjB;QACD;IACD;IACA,KAAA,MAAW,SAAS,OAAQ;QAC3B,QAAQ,KAAA,CAAM,KAAK;IACpB;IACA,MAAM,IAAI,WAAW,mBAAmB,QAAQ,UAAU;AAC3D;;AChCA,IAAM,cAIA,CAAC,CAAA;AAEP,IAAI,cAAc;AAClB,IAAM,aAAa;AAMnB,eAAe,aAAa,UAAA,EAAgC;IAC3D,IAAI,eAAe,YAAY;QAC9B;IACD;IAEA;IAEA,MAAO,YAAY,MAAA,GAAS,EAAG;QAC9B,MAAM,OAAO,YAAY,KAAA,CAAM;QAC/B,IAAI,CAAC,MAAM;YACV;QACD;QAEA,IAAI;YACH,MAAM,OAAO,MAAM,MAAM,YAAY,IAAI,KAAK,IAAA,CAAK,MAAA,EAAQ,KAAK,IAAI;YACpE,KAAK,OAAA,CAAQ;gBAAE;gBAAM,YAAY,KAAK,IAAA,CAAK,UAAA;YAAW,CAAC;QACxD,EAAA,OAAS,GAAG;YACX,KAAK,MAAA,CAAO,CAAC;QACd;IACD;IAEA;AACD;AAQO,SAAS,YACf,KAAA,EACA,UAAA,EACA,WAAW,KAAA,EACV;IACD,MAAM,WAAW,MAAM,GAAA,CAAI,CAAC,SAAS;QACpC,OAAO,IAAI,QACV,CAAC,SAAS,WAAW;YACpB,IAAI,UAAU;gBACb,YAAY,OAAA,CAAQ;oBAAE;oBAAM;oBAAS;gBAAO,CAAC;YAC9C,OAAO;gBACN,YAAY,IAAA,CAAK;oBAAE;oBAAM;oBAAS;gBAAO,CAAC;YAC3C;QACD;IAEF,CAAC;IAED,IAAA,IAAS,IAAI,GAAG,IAAI,KAAK,GAAA,CAAI,MAAM,MAAA,EAAQ,UAAU,GAAG,IAAK;QAC5D,KAAK,aAAa,UAAU;IAC7B;IAEA,OAAO,QAAQ,GAAA,CAAI,QAAQ;AAC5B;;ACtEO,SAAS,IAAA,GAAO,IAAA,EAAgB;IACtC,OAAO,KAAK,MAAA,CAAO,CAAC,KAAK,OAAS,MAAM,MAAM,CAAC;AAChD;;ACaA,eAAe,aACd,EAAE,IAAA,EAAM,GAAG,aAAa,CAAA,EACxB,EACC,UAAA,EACA,MAAA,EACA,UAAA,EACD,EAKC;IACD,IAAI,aAAa,SAAA,EAAW;QAC3B,MAAM,SAAS,MAAM,aAAa,mBAAA,CAAoB,MAAM,EAAE,IAAA,CAAK,CAAC;QAEpE,MAAM,SAAS,MAAM,YACpB,aAAa,mBAAA,CAAoB,GAAA,CAAI,CAAC,MAAM,QAAA,CAAW;gBACtD,GAAG,IAAA;gBACH,UAAU;gBACV,YAAY,CAAC,UAAU;oBACtB,MAAA,CAAO,KAAK,CAAA,GAAI,MAAM,MAAA;oBACtB,MAAM,QAAQ,IAAI,GAAG,MAAM;oBAC3B,aAAa,KAAK,KAAA,CAAO,QAAQ,KAAK,IAAA,GAAQ,GAAG,CAAC;gBACnD;gBACA;YACD,CAAA,CAAE,GACF;QAGD,OAAO;IACR;IAEA,MAAM,YACL;QACC;YACC,KAAK,aAAa,SAAA;YAClB,UAAU;YACV,YAAY;YACZ,SAAS,aAAa,OAAA;YACtB,YAAY,CAAC,UAAU;gBACtB,aAAa,KAAK,KAAA,CAAO,MAAM,MAAA,GAAS,KAAK,IAAA,GAAQ,GAAG,CAAC;YAC1D;YACA;QACD;KACD,EACA,YACA;IAGD,OAAO,CAAC,CAAA;AACT;AAaA,SAAS,aAAa,IAAA,EAA0B;IAC/C,OAAQ,MAAM;QACb,KAAK,KAAK,IAAA,CAAK,UAAA,CAAW,QAAQ;YACjC,OAAO;QACR,KAAK,KAAK,IAAA,CAAK,UAAA,CAAW,QAAQ;YACjC,OAAO;QACR,KAAK,KAAK,IAAA,CAAK,UAAA,CAAW,QAAQ;YACjC,OAAO;QACR;YACC,OAAO;IACT;AACD;AA4BO,SAAS,6BAA6B,EAC5C,UAAA,EACD,EAEG;IAOF,OAAO,eAAe,iBAGrB,KAAA,EACA,EAAE,UAAA,EAAY,MAAA,CAAO,CAAA,GAAuB,CAAC,CAAA,EACT;QAEpC,MAAM,qBACL,YAAY,SAAS,UAAU,QAC5B,MAAM,IAAA,CAAK,0BAAA,CAA2B,MAAM,IAAA,EAAM,MAAM,MAAM,IAC9D,MAAM;QAGV,MAAM,SAAS,MAAM,aAAa,oBAAoB;YACrD;YACA;YACA;QACD,CAAC;QAED,MAAM,YAAY,aAAa,mBAAmB,IAAI;QAGtD,IAAI,mBAAmB,SAAA,EAAW;YACjC,MAAM,IAAA,CAAK,WAAA,CAAY,iBAAA,CAAkB;gBACxC,gBAAgB,mBAAmB,EAAA;gBACnC;gBACA,mBAAmB,mBAAmB,iBAAA;gBACtC,gBAAgB;YACjB,CAAC;QACF,OAAO;YACN,MAAM,IAAA,CAAK,WAAA,CAAY,iBAAA,CAAkB;gBACxC,gBAAgB,mBAAmB,EAAA;gBACnC;YACD,CAAC;QACF;QAEA,MAAM,aAAa,MAAM,IAAA,CAAK,iBAAA,CAAkB,mBAAmB,EAAA,EAAI;YACtE;QACD,CAAC;QAED,IAAI,CAAC,YAAY;YAChB,MAAM,IAAI,MAAM,8BAA8B;QAC/C;QAEA,OAAO;YACN,gBAAgB,mBAAmB,EAAA;YACnC,QAAQ,mBAAmB,MAAA;YAC3B;QACD;IACD;AACD;;AC9KA,eAAsB,kBAErB,QAAA,EACA,IAAA,EAGC;IACD,MAAO,CAAC,MAAM,QAAQ,QAAS;QAC9B,MAAM,aAAa,MAAM,IAAA,CAAK,WAAA,CAC5B,aAAA,CAAc;YAAE,IAAI;QAAS,GAAG;YAAE,QAAQ,MAAM;QAAO,CAAC,EACxD,KAAA,CAAM,IAAM,IAAI;QAElB,IAAI,YAAY;YACf,OAAO;QACR;IACD;AACD;;ACzBO,IAAM,8BAA8B,IAAI,OAAO;;ACuB/C,IAAM,sBAAsB,CAClC,OACI;IAEJ,OAAO,CAAA,GAAoB,SAA2C;QAErE,MAAM,SAAS;QACf,MAAM,cAAc,OAAO,IAAA,CAAK,CAAC,MAAQ,eAAe,OAAO;QAC/D,IAAI,aAAa;YAChB,OAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;gBACvC,OAAO,QAAQ,GAAA,CAAI,MAAM,EACvB,IAAA,CAAK,CAACC,UAAS;oBACf,OAAO,GAAG,GAAGA,KAAI;gBAClB,CAAC,EACA,IAAA,CAAK,OAAO,EACZ,KAAA,CAAM,MAAM;YACf,CAAC;QACF;QACA,OAAO,GAAG,GAAG,IAAI;IAClB;AACD;;ACjCA,IAAM,YACL;AAED,SAAS,OAAO,WAAA,EAA0B;IACzC,IAAI,SAAS;IAEb,MAAM,QAAQ,IAAI,WAAW,WAAW;IACxC,MAAM,aAAa,MAAM,UAAA;IACzB,MAAM,gBAAgB,aAAa;IACnC,MAAM,aAAa,aAAa;IAEhC,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IAGJ,IAAA,IAAS,IAAI,GAAG,IAAI,YAAY,IAAI,IAAI,EAAG;QAE1C,QAAS,KAAA,CAAM,CAAC,CAAA,IAAK,KAAO,KAAA,CAAM,IAAI,CAAC,CAAA,IAAK,IAAK,KAAA,CAAM,IAAI,CAAC,CAAA;QAG5D,IAAA,CAAK,QAAQ,QAAA,KAAa;QAC1B,IAAA,CAAK,QAAQ,MAAA,KAAW;QACxB,IAAA,CAAK,QAAQ,IAAA,KAAS;QACtB,IAAI,QAAQ;QAGZ,UAAU,SAAA,CAAU,CAAC,CAAA,GAAI,SAAA,CAAU,CAAC,CAAA,GAAI,SAAA,CAAU,CAAC,CAAA,GAAI,SAAA,CAAU,CAAC,CAAA;IACnE;IAGA,IAAI,kBAAkB,GAAG;QACxB,QAAQ,KAAA,CAAM,UAAU,CAAA;QAExB,IAAA,CAAK,QAAQ,GAAA,KAAQ;QAGrB,IAAA,CAAK,QAAQ,CAAA,KAAM;QAEnB,UAAU,GAAG,SAAA,CAAU,CAAC,CAAC,GAAG,SAAA,CAAU,CAAC,CAAC,CAAA,EAAA,CAAA;IACzC,OAAA,IAAW,kBAAkB,GAAG;QAC/B,QAAS,KAAA,CAAM,UAAU,CAAA,IAAK,IAAK,KAAA,CAAM,aAAa,CAAC,CAAA;QAEvD,IAAA,CAAK,QAAQ,KAAA,KAAU;QACvB,IAAA,CAAK,QAAQ,IAAA,KAAS;QAGtB,IAAA,CAAK,QAAQ,EAAA,KAAO;QAEpB,UAAU,GAAG,SAAA,CAAU,CAAC,CAAC,GAAG,SAAA,CAAU,CAAC,CAAC,GAAG,SAAA,CAAU,CAAC,CAAC,CAAA,CAAA,CAAA;IACxD;IAEA,OAAO;AACR;AAOO,IAAM,MAAM,oBAAoB,MAAM;;ACjE7C,eAAsB,IAAI,MAAA,EAAoC;IAC7D,MAAM,SAAS,4LAAA,CAAM,MAAA,CAAO;IAC5B,MAAM,OAAO,MAAA,CACZ,IAAI,eAAe;QAClB,OAAM,KAAA,EAAO;YACZ,OAAO,MAAA,CAAO,KAAK;QACpB;IACD,CAAC;IAGF,OAAO,OAAO,WAAA,CAAY;AAC3B;;ACNA,eAAsB,2BAErB,IAAA,EACA,MAAA,EACC;IACD,MAAM,cAAc,KAAK,IAAA,GAAO;IAChC,MAAM,oBAAoB,MAAM,IAAA,CAAK,WAAA,CAAY,WAAA,CAAY;QAC5D,YAAY,KAAK,IAAA,CAAK,QAAA,CAAS;QAC/B;QACA,UAAU,gBAAgB,OAAO,KAAK,IAAA,GAAO,OAAO,UAAA,CAAW;QAC/D,aAAa,KAAK,IAAA;QAClB,UAAU,MAAM,IAAI,IAAI,KAAK,MAAA,CAAO,CAAC,CAAC;QACtC,WAAW;IACZ,CAAC;IAED,IAAI,aAAa;QAChB,IACC,CAAC,mBAAmB,qBACpB,CAAC,kBAAkB,mBAAA,EAClB;YACD,MAAM,IAAI,MAAM,wBAAwB;QACzC;QAEA,OAAO;YACN;YACA,IAAI,kBAAkB,EAAA;YACtB,qBAAqB,kBAAkB,mBAAA;YACvC,mBAAmB,kBAAkB,iBAAA;YACrC;YACA,WAAW;QACZ;IACD;IAEA,IAAI,CAAC,mBAAmB,MAAM,CAAC,kBAAkB,SAAA,EAAW;QAC3D,MAAM,IAAI,MAAM,wBAAwB;IACzC;IAEA,OAAO;QACN;QACA,IAAI,kBAAkB,EAAA;QACtB,WAAW,kBAAkB,SAAA;QAC7B,SAAS,kBAAkB,OAAA;QAC3B;QACA,WAAW;IACZ;AACD;;ACnDO,SAAS,yBAAyB,OAAA,EAAkB;IAC1D,MAAMC,8BAA6B,2BAA6B,IAAA,CAAK,OAAO;IAC5E,MAAMC,qBAAoB,kBAAoB,IAAA,CAAK,OAAO;IAC1D,OAAO;QACN,4BAAAD;QACA,mBAAAC;IACD;AACD;;ACPO,SAAS,kBACf,OAAA,EACA,kBAAA,EACC;IACD,MAAM,UAAU,yBAAyB,OAAO;IAEhD,MAAM,mBAAmB,mBAAmB,IAAA,CAAK;QAChD,GAAG,OAAA;QACH,GAAG,OAAA;IACJ,CAAC;IAED,OAAO;QACN,GAAG,OAAA;QACH;IACD;AACD;;ACwsQO,SAAS,YACf,GAAA,EACA,IAAA,EACuB;IACvB,IACC,OAAO,QAAQ,YACf,OACA,YAAY,OACZ,IAAI,MAAA,IACJ,IAAI,MAAA,YAAkB,SACtB,OAAO,SAAS,YAChB,MACC;QACA,KAAa,MAAA,GAAS,IAAI,MAAA;IAC5B;IACA,OAAO;AACR;AAEO,SAAS,OAAU,SAAA,EAAyB;IAClD,OAAO;QACN,cAAc;YACb,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,UAAU,CAAC;YACjD;QACD;QACA,aAAa;YACZ,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,mBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,qBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;YACA,aACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UACN,8FACA,eACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,iBAAiB,CAAC;YACxD;QACD;QACA,WAAW;YACV,YACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,cACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;QACD;QACA,SAAS;YACR,0BACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,4BACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,wBAAwB,CAAC;YAC/D;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,+BACC,SAAA,EACA,OAAA,EAKC;gBACD,OAAO,UAIN,8FACA,iCACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,6BAA6B,CAAC;YACpE;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,wBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,0BACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,WACC,SAAA,EACA,OAAA,EAC+C;gBAC/C,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,WACC,SAAA,EACA,OAAA,EAC+C;gBAC/C,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,2BACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UAIN,8FACA,6BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,uBACC,SAAA,EACA,OAAA,EAC4D;gBAC5D,OAAO,UAIN,8FACA,yBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,0BACC,SAAA,EACA,OAAA,EACwE;gBACxE,OAAO,UAIN,8FACA,4BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;YACA,uBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,yBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,qBAAqB,CAAC;YAC5D;YACA,YACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,cACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,oBACC,SAAA,EACA,OAAA,EACuE;gBACvE,OAAO,UAIN,8FACA,sBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,kBAAkB,CAAC;YACzD;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,mBACC,SAAA,EACA,OAAA,EACqE;gBACrE,OAAO,UAIN,8FACA,qBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,iBAAiB,CAAC;YACxD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,YAAY,CAAC;YACnD;QACD;QACA,aAAa;YACZ,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,wBACC,SAAA,EACA,OAAA,EACsE;gBACtE,OAAO,UAIN,8FACA,0BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;QACD;QACA,QAAQ;YACP,yBACC,SAAA,EACA,OAAA,EACgE;gBAChE,OAAO,UAIN,8FACA,2BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,SAAS,CAAC;YAChD;QACD;QACA,UAAU;YACT,sBACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UAIN,8FACA,wBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,SAAS,CAAC;YAChD;QACD;QACA,OAAO;YACN,gBACC,SAAA,EACA,OAAA,EACoD;gBACpD,OAAO,UACN,8FACA,kBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,sBACC,SAAA,EACA,OAAA,EAC0D;gBAC1D,OAAO,UAIN,8FACA,wBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,SACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,WACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQ,YAAY,KAAK,IAAI,UAAU,CAAC;YACjD;QACD;IACD;AACD;;AC5qRO,IAAM,qBAAqB;AAE3B,IAAM,kBAAN,cAA8B,MAAM;IAC1C,YAAY,CAAA,CAAY;QACvB,MAAM,UACL,aAAa,QACV,EAAE,OAAA,GACF,OAAO,MAAM,WACZ,IACA;QACL,KAAA,CAAM,OAAO;QACb,IAAI,aAAa,MAAO,CAAA,IAAA,CAAK,KAAA,GAAQ,EAAE,KAAA;IACxC;AACD;AAEO,IAAM,kBAAN,cAA8B,MAAM;IAC1C,WAAA;IAEA,YAAY,UAAA,EAAoB,OAAA,CAAiB;QAChD,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,UAAA,GAAa;IACnB;IAEA,iBAAiB;QAChB,OAAO,IAAA,CAAK,UAAA,KAAe;IAC5B;IAEA,cAAc;QACb,OAAO,IAAA,CAAK,UAAA,KAAe;IAC5B;IAEA,aAAa;QACZ,OAAO,IAAA,CAAK,UAAA,KAAe;IAC5B;IAEA,gBAAgB;QACf,OAAO,IAAA,CAAK,UAAA,IAAc;IAC3B;AACD;AAEO,IAAM,WAAN,cAAuB,MAAM;IACnC,OAAA;IAEA,YAAY,MAAA,CAA+B;QAC1C,KAAA,CAAM,MAAA,CAAO,CAAC,CAAA,CAAE,OAAO;QACvB,IAAA,CAAK,MAAA,GAAS;IACf;AACD;AAEA,eAAsB,aACrB,GAAA,EACA,WAAA,EACA,aAAA,EACA,aAAA,EACA,SAAA,EACA,cAA2B,CAAC,CAAA,EACf;IACb,IAAI;QACH,MAAM,OAAO;YACZ;YACA;YACA;YACA;QACD;QAEA,MAAM,UAAU,IAAI,QAAQ,WAAW;QACvC,QAAQ,GAAA,CAAI,gBAAgB,kBAAkB;QAC9C,QAAQ,GAAA,CAAI,UAAU,kBAAkB;QAExC,MAAM,YAAY,sBACjB,KACA,eACA,aACA;QAGD,MAAM,WAAW,MAAM,MAAM,WAAW;YACvC,QAAQ;YACR,MAAM,KAAK,SAAA,CAAU,IAAI;YACzB;QACD,CAAC;QAED,IAAI,CAAC,SAAS,EAAA,EAAI;YACjB,MAAM,eAAe,MAAM,SAAS,IAAA,CAAK;YACzC,MAAM,IAAI,gBAAgB,SAAS,MAAA,EAAQ,YAAY;QACxD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAA,CAAK;QAGjC,IAAI,KAAK,MAAA,IAAU,CAAC,KAAK,IAAA,EAAM;YAC9B,MAAM,IAAI,SAAS,KAAK,MAAM;QAC/B;QAGA,IAAI,KAAK,MAAA,IAAU,OAAO,KAAK,IAAA,KAAS,YAAY,KAAK,IAAA,EAAM;YAC9D,KAAK,IAAA,CAAK,MAAA,GAAS,IAAI,SAAS,KAAK,MAAM;QAC5C;QAEA,OAAO,KAAK,IAAA;IACb,EAAA,OAAS,GAAG;QACX,MAAM,IAAI,gBAAgB,CAAC;IAC5B;AACD;AAEA,SAAS,sBACR,GAAA,EACA,IAAA,EACA,WAAA,EACA,aAAA,EACM;IACN,MAAM,YAAY,IAAI,IAAI,GAAG;IAC7B,IAAI,WAAW,UAAU,QAAA;IACzB,IAAI,SAAS,QAAA,CAAS,GAAG,GAAG;QAC3B,WAAW,SAAS,KAAA,CAAM,GAAG,CAAA,CAAE;IAChC;IACA,YAAY,CAAA,CAAA,EAAI,IAAI,EAAA;IACpB,UAAU,QAAA,GAAW;IACrB,MAAM,CAAC,YAAY,IAAI,CAAA,GAAI,YAAY,KAAA,CAAM,GAAG;IAChD,UAAU,YAAA,CAAa,GAAA,CAAI,MAAM,IAAI;IACrC,UAAU,YAAA,CAAa,GAAA,CAAI,UAAU,UAAU;IAC/C,UAAU,YAAA,CAAa,GAAA,CAAI,QAAQ,aAAa;IAChD,OAAO;AACR;;ACrGO,IAAM,0BAAN,cAAsC,sNAAA,CAAkC;IACtE,YAA8B,KAAA;IAC9B,2BAA2B,EAAA;IAC3B,SAA0B,eAAA;IAC1B,qBAAqB,MAAA;IAEnB,gBAA2B;QACpC,MAAM,IAAI,MAAM,+BAA+B;IAChD;IAEO,UAAU;QAChB,IAAI,IAAA,CAAK,SAAA,EAAW;YACnB,IAAA,CAAK,UAAA,CAAW;QACjB;QAEA,IAAA,CAAK,kBAAA,GAAqB;QAE1B,IAAA,CAAK,SAAA,CAAU,YAAY;QAC3B,MAAM,YAAY,IAAA,CAAK,aAAA,CAAc;QACrC,IAAA,CAAK,SAAA,GAAY;QAEjB,UAAU,MAAA,GAAS,MAAM;YACxB,IAAA,CAAK,SAAA,CAAU,WAAW;QAC3B;QAEA,UAAU,SAAA,GAAY,CAAC,UAAwB;YAC9C,IAAI;gBACH,MAAM,UAAU,KAAK,KAAA,CAAM,MAAM,IAAI;gBACrC,IAAA,CAAK,IAAA,CAAK,WAAW,OAAO;gBAC5B,IAAI,QAAQ,UAAA,EAAY;oBACvB,IAAA,CAAK,IAAA,CAAK,cAAc,QAAQ,UAAU;gBAC3C;YACD,EAAA,OAAS,OAAO;gBACf,QAAQ,KAAA,CACP,+CACA,MAAM,IAAA;YAER;QACD;QAEA,UAAU,OAAA,GAAU,CAAC,UAAiB;YACrC,QAAQ,KAAA,CAAM,yCAAyC,KAAK;YAC5D,IAAA,CAAK,SAAA,CAAU,cAAc;QAC9B;QAEA,UAAU,OAAA,GAAU,CAAC,UAAiB;YACrC,IAAA,CAAK,SAAA,CAAU,cAAc;QAC9B;QAEA,OAAO,MAAM;YACZ,IAAA,CAAK,UAAA,CAAW;QACjB;IACD;IAEO,aAAa;QACnB,IAAI,IAAA,CAAK,SAAA,EAAW;YACnB,IAAA,CAAK,SAAA,CAAU,MAAA,GAAS;YACxB,IAAA,CAAK,SAAA,CAAU,SAAA,GAAY;YAC3B,IAAA,CAAK,SAAA,CAAU,OAAA,GAAU;YACzB,IAAA,CAAK,SAAA,CAAU,OAAA,GAAU;YACzB,IAAA,CAAK,SAAA,CAAU,KAAA,CAAM;YACrB,IAAA,CAAK,SAAA,GAAY;QAClB;QAEA,IAAA,CAAK,kBAAA,GAAqB;IAC3B;IAEO,KAAK,OAAA,EAAmC;QAC9C,IAAI,CAAC,IAAA,CAAK,SAAA,EAAW;YACpB,MAAM,IAAI,MAAM,yBAAyB;QAC1C;QAEA,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,KAAK,SAAA,CAAU,OAAO,CAAC;IAC5C;IAEO,UAAU,EAChB,OAAA,EACA,MAAA,EACD,EAA0D;QACzD,IAAA,CAAK,IAAA,CAAK;YACT,qBAAqB;gBACpB,SAAS,qCAAqC,MAAM;gBACpD,MAAM;YACP;QACD,CAAC;IACF;IAEQ,UAAU,MAAA,EAAyB;QAC1C,IAAI,WAAW,IAAA,CAAK,MAAA,CAAQ,CAAA;QAE5B,IAAA,CAAK,MAAA,GAAS;QAEd,IAAI,WAAW,gBAAgB;YAC9B,MAAM,UAAU,IAAA,CAAK,gBAAA,CAAiB;YACtC,IAAA,CAAK,wBAAA;YACL,WAAW,MAAM;gBAChB,IAAI,IAAA,CAAK,kBAAA,EAAoB;oBAC5B,IAAA,CAAK,OAAA,CAAQ;gBACd;YACD,GAAG,OAAO;YACV,IAAA,CAAK,IAAA,CAAK,YAAY;QACvB;QAEA,IAAI,WAAW,aAAa;YAC3B,IAAA,CAAK,wBAAA,GAA2B;YAChC,IAAA,CAAK,IAAA,CAAK,SAAS;QACpB;QAEA,IAAA,CAAK,IAAA,CAAK,oBAAoB,MAAM;IACrC;IAEQ,mBAAmB;QAC1B,OAAO,KAAK,GAAA,CAAI,KAAK,KAAK,IAAA,CAAK,wBAAA,EAA0B,MAAO,EAAE;IACnE;AACD;AAWA,SAAS,qCACR,MAAA,EACuB;IAEvB,IAAI,WAAW,YAAY;QAC1B,OAAO;YACN,MAAM;YACN,IAAI;QACL;IACD;IAEA,IAAI,kBAAkB,QAAQ;QAC7B,OAAO;YACN,MAAM;YACN,IAAI,CAAA,SAAA,EAAY,OAAO,YAAY,EAAA;QACpC;IACD;IAEA,IAAI,cAAc,QAAQ;QACzB,OAAO;YACN,MAAM;YACN,IAAI,CAAA,WAAA,EAAc,OAAO,QAAQ,EAAA;QAClC;IACD;IAEA,MAAM,IAAI,MAAM,0BAA0B;AAC3C;;AChKO,IAAM,6BAAN,cAAyC,wBAAwB;IAC/D,QAAA;IAER,YAAY,OAAA,CAAuC;QAClD,KAAA,CAAM;QACN,IAAA,CAAK,OAAA,GAAU;IAChB;IAEU,gBAA2B;QACpC,MAAM,OAAO;QAEb,MAAM,eAAe,IAAI,gBAAgB;QACzC,cAAc,cAAc,mBAAmB,IAAA,CAAK,OAAA,CAAQ,cAAc;QAC1E,cAAc,cAAc,eAAe,IAAA,CAAK,OAAA,CAAQ,UAAU;QAClE,cAAc,cAAc,eAAe,IAAA,CAAK,OAAA,CAAQ,UAAU;QAElE,MAAM,MAAM,IAAI,IAAI,MAAM,OAAO,QAAA,CAAS,MAAM;QAChD,IAAI,QAAA,GAAW,IAAI,QAAA,CAAS,OAAA,CAAQ,QAAQ,IAAI;QAChD,IAAI,MAAA,GAAS,aAAa,QAAA,CAAS;QAEnC,OAAO,IAAI,UAAU,IAAI,QAAA,CAAS,CAAC;IACpC;AACD;AAEA,SAAS,cACR,YAAA,EACA,GAAA,EACA,QAAA,EACC;IACD,IAAI,CAAC,UAAU;QACd;IACD;IAEA,IAAI,OAAO,aAAa,YAAY,SAAS,MAAA,GAAS,GAAG;QACxD,aAAa,GAAA,CAAI,KAAK,QAAQ;QAC9B;IACD;IAEA,KAAA,MAAW,WAAW,SAAU;QAC/B,aAAa,MAAA,CAAO,KAAK,OAAO;IACjC;AACD;AAEO,SAAS,iCAAiC;IAChD,OAAO,SAAS,mBAAmB,OAAA,EAAuC;QACzE,OAAO,IAAI,2BAA2B,OAAO;IAC9C;AACD;;AC5CO,SAAS,kBAAkB,EACjC,UAAA,EACD,EAAoE;IACnE,OAAO,SAAS,cAAc,OAAA,EAAgC;QAC7D,MAAM,UAAU,OACf,cAAc;YACb,SAAS;YACT,GAAG,OAAA;QACJ,CAAC;QAGF,MAAM,UAAU,kBAAkB,SAAS,UAAU;QAErD,MAAM,kBAAkB,+BAA+B;QAEvD,MAAM,MAAM;YACX,GAAG,OAAA;YACH,aAAa;gBACZ,GAAG,QAAQ,WAAA;gBACX,GAAG,OAAA;YACJ;YACA,YAAY;gBACX,QAAQ;YACT;QACD;QAEA,OAAO;IACR;AACD;AAIA,SAAS,cACR,UAAA,EACyB;IACzB,MAAM,WAAW,YAAY,UAAU;IACvC,OAAO,eAAe,QACrB,WAAA,EACA,aAAA,EACA,aAAA,EACA,IAAA,EACA,OAAA,EACa;QACb,MAAM,UAAU,IAAI,QAAQ,SAAS,OAAO;QAC5C,OAAO,aACN,UACA,aACA,eACA,eACA,MACA;IAEF;AACD;AAEA,SAAS,YAAY,UAAA,EAAkC;IACtD,IAAI,OAAO,aAAa,eAAe,CAAC,WAAW,SAAA,EAAW;QAC7D,MAAM,IAAI,MAAM,mDAAmD;IACpE;IAEA,MAAM,MAAM,IAAI,IACf,WAAW,OAAA,IAAW,mBACtB,WAAW,SAAA,IAAa,OAAO,QAAA,CAAS,MAAA;IAGzC,OAAO,IAAI,IAAA;AACZ;;ACs2TO,SAASC,aACf,GAAA,EACA,IAAA,EACuB;IACvB,IACC,OAAO,QAAQ,YACf,OACA,YAAY,OACZ,IAAI,MAAA,IACJ,IAAI,MAAA,YAAkB,SACtB,OAAO,SAAS,YAChB,MACC;QACA,KAAa,MAAA,GAAS,IAAI,MAAA;IAC5B;IACA,OAAO;AACR;AAEO,SAASC,QAAU,SAAA,EAAyB;IAClD,OAAO;QACN,cAAc;YACb,kBACC,SAAA,EACA,OAAA,EACmE;gBACnE,OAAO,UAIN,8FACA,oBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQD,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;YACA,kBACC,SAAA,EACA,OAAA,EACmE;gBACnE,OAAO,UAIN,8FACA,oBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;YACA,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,kBACC,SAAA,EACA,OAAA,EACmE;gBACnE,OAAO,UAIN,8FACA,oBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;QACD;QACA,QAAQ;YACP,kCACC,SAAA,EACA,OAAA,EAKC;gBACD,OAAO,UAIN,8FACA,oCACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,qBAAqB,CAAC;YAC5D;YACA,+BACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,iCACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,kBAAkB,CAAC;YACzD;YACA,kCACC,SAAA,EACA,OAAA,EAKC;gBACD,OAAO,UAIN,8FACA,oCACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,qBAAqB,CAAC;YAC5D;QACD;QACA,YAAY;YACX,iBACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;YACA,cACC,SAAA,EACA,OAAA,EACmD;gBACnD,OAAO,UACN,8FACA,gBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,gBACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,kBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,iBACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;QACD;QACA,MAAM;YACL,gBACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UAIN,8FACA,kBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,cAAc,CAAC;YACrD;YACA,WACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,aACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;YACA,QACC,SAAA,EACA,OAAA,EAC6C;gBAC7C,OAAO,UACN,8FACA,UACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,UACC,SAAA,EACA,OAAA,EAC+C;gBAC/C,OAAO,UACN,8FACA,YACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,iBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,2BAA2B,CAAC;YAClE;YACA,kBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,oBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,0BAA0B,CAAC;YACjE;YACA,sBACC,SAAA,EACA,OAAA,EAKC;gBACD,OAAO,UAIN,8FACA,wBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,+BAA+B,CAAC;YACtE;YACA,WACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,aACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;QACD;QACA,aAAa;YACZ,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,mBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,qBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;YACA,aACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UACN,8FACA,eACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,iBAAiB,CAAC;YACxD;QACD;QACA,WAAW;YACV,yBACC,SAAA,EACA,OAAA,EAC8D;gBAC9D,OAAO,UAIN,8FACA,2BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,YACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,cACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,WACC,SAAA,EACA,OAAA,EACgD;gBAChD,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,kBACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,oBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,qBACC,SAAA,EACA,OAAA,EAC0D;gBAC1D,OAAO,UAIN,8FACA,uBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,aACC,SAAA,EACA,OAAA,EACkD;gBAClD,OAAO,UACN,8FACA,eACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,iBACC,SAAA,EACA,OAAA,EACsD;gBACtD,OAAO,UACN,8FACA,mBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,WACC,SAAA,EACA,OAAA,EACgD;gBAChD,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,qBACC,SAAA,EACA,OAAA,EAC0D;gBAC1D,OAAO,UAIN,8FACA,uBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;QACD;QACA,SAAS;YACR,0BACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,4BACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,wBAAwB,CAAC;YAC/D;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,+BACC,SAAA,EACA,OAAA,EAKC;gBACD,OAAO,UAIN,8FACA,iCACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,6BAA6B,CAAC;YACpE;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,wBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,0BACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,YAAY,CAAC;YACnD;YACA,WACC,SAAA,EACA,OAAA,EAC+C;gBAC/C,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,WACC,SAAA,EACA,OAAA,EAC+C;gBAC/C,OAAO,UACN,8FACA,aACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,2BACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UAIN,8FACA,6BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,uBACC,SAAA,EACA,OAAA,EAC4D;gBAC5D,OAAO,UAIN,8FACA,yBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,0BACC,SAAA,EACA,OAAA,EACwE;gBACxE,OAAO,UAIN,8FACA,4BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;YACA,uBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,yBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,qBAAqB,CAAC;YAC5D;YACA,YACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,cACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,oBACC,SAAA,EACA,OAAA,EACuE;gBACvE,OAAO,UAIN,8FACA,sBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,kBAAkB,CAAC;YACzD;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,mBACC,SAAA,EACA,OAAA,EACqE;gBACrE,OAAO,UAIN,8FACA,qBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,iBAAiB,CAAC;YACxD;YACA,cACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,gBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,YAAY,CAAC;YACnD;QACD;QACA,aAAa;YACZ,eACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,iBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,+BACC,SAAA,EACA,OAAA,EACuE;gBACvE,OAAO,UAIN,8FACA,iCACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,iBACC,SAAA,EACA,OAAA,EACsD;gBACtD,OAAO,UACN,8FACA,mBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,wBACC,SAAA,EACA,OAAA,EACsE;gBACtE,OAAO,UAIN,8FACA,0BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;QACD;QACA,QAAQ;YACP,iBACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;YACA,mBACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UAIN,8FACA,qBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,WAAW,CAAC;YAClD;YACA,yBACC,SAAA,EACA,OAAA,EACgE;gBAChE,OAAO,UAIN,8FACA,2BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;QACD;QACA,UAAU;YACT,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,YACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,cACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,cACC,SAAA,EACA,OAAA,EACmD;gBACnD,OAAO,UACN,8FACA,gBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;QACD;QACA,UAAU;YACT,kBACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UAIN,8FACA,oBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,gCACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,kCACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;YACA,sBACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UAIN,8FACA,wBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;YACA,yBACC,SAAA,EACA,OAAA,EACqE;gBACrE,OAAO,UAIN,8FACA,2BACA,YACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,WAAW,CAAC;YAClD;YACA,mBACC,SAAA,EACA,OAAA,EAC+D;gBAC/D,OAAO,UAIN,8FACA,qBACA,YACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,WAAW,CAAC;YAClD;QACD;QACA,eAAe;YACd,sBACC,SAAA,EACA,OAAA,EACuE;gBACvE,OAAO,UAIN,8FACA,wBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,gBAAgB,CAAC;YACvD;QACD;QACA,UAAU;YACT,YACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,cACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,uBACC,SAAA,EACA,OAAA,EAGC;gBACD,OAAO,UAIN,8FACA,yBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,qBAAqB,CAAC;YAC5D;YACA,wBACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UAIN,8FACA,0BACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,SACC,SAAA,EACA,OAAA,EACuD;gBACvD,OAAO,UACN,8FACA,WACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;QACD;QACA,YAAY;YACX,iBACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;YACA,iBACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UAIN,8FACA,mBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,eAAe,CAAC;YACtD;YACA,cACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,gBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;YACA,gBACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,kBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;QACD;QACA,OAAO;YACN,SACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,WACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,gBACC,SAAA,EACA,OAAA,EACoD;gBACpD,OAAO,UACN,8FACA,kBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,sBACC,SAAA,EACA,OAAA,EAC0D;gBAC1D,OAAO,UAIN,8FACA,wBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,MAAM,CAAC;YAC7C;YACA,SACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,WACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,iBACC,SAAA,EACA,OAAA,EACyD;gBACzD,OAAO,UACN,8FACA,mBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,UAAU,CAAC;YACjD;YACA,UACC,SAAA,EACA,OAAA,EACiE;gBACjE,OAAO,UACN,8FACA,YACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;YACA,WACC,SAAA,EACA,OAAA,EACqD;gBACrD,OAAO,UACN,8FACA,aACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,SAAS,CAAC;YAChD;YACA,YACC,SAAA,EACA,OAAA,EACmE;gBACnE,OAAO,UACN,8FACA,cACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,sBAAsB,CAAC;YAC7D;QACD;QACA,UAAU;YACT,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,YACC,SAAA,EACA,OAAA,EACiD;gBACjD,OAAO,UACN,8FACA,cACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,cACC,SAAA,EACA,OAAA,EACmD;gBACnD,OAAO,UACN,8FACA,gBACA,SACA,WACA,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,OAAO,CAAC;YAC9C;YACA,aACC,SAAA,EACA,OAAA,EAC2D;gBAC3D,OAAO,UACN,8FACA,eACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;YACA,eACC,SAAA,EACA,OAAA,EAC6D;gBAC7D,OAAO,UACN,8FACA,iBACA,YACA;oBAAE,OAAO;gBAAU,GACnB,SACC,IAAA,CAAK,CAAC,MAAQA,aAAY,KAAK,IAAI,aAAa,CAAC;YACpD;QACD;IACD;AACD;;ACzoWO,IAAM,YAAN,MAAM,WAAU;IAGtB,YAMkB,KAAA,EAMA,SAAA,EAMA,YAAY,sBAAA,CAC5B;QAbgB,IAAA,CAAA,KAAA,GAAA;QAMA,IAAA,CAAA,SAAA,GAAA;QAMA,IAAA,CAAA,SAAA,GAAA;IACf;IArBH,OAAuB,YAAY,0BAAA;IAAA;;;;;;;;;GAAA,GAiC5B,oBAAoB,EAC1B,QAAQ,OAAO,UAAA,CAAW,CAAA,EAC1B,WAAA,EACA,QAAQ;QAAC,WAAW;KAAA,EACrB,EA8BE;QACD,MAAM,WAAW,IAAI,IAAI,WAAU,SAAS;QAE5C,SAAS,YAAA,CAAa,GAAA,CAAI,aAAa,IAAA,CAAK,KAAK;QACjD,SAAS,YAAA,CAAa,GAAA,CAAI,iBAAiB,MAAM;QACjD,SAAS,YAAA,CAAa,GAAA,CAAI,SAAS,MAAM,IAAA,CAAK,GAAG,CAAC;QAClD,SAAS,YAAA,CAAa,GAAA,CAAI,SAAS,KAAK;QAExC,IAAI,uBAAuB,KAAK;YAC/B,SAAS,YAAA,CAAa,GAAA,CAAI,gBAAgB,YAAY,QAAA,CAAS,CAAC;QACjE,OAAO;YACN,SAAS,YAAA,CAAa,GAAA,CAAI,gBAAgB,WAAW;QACtD;QAEA,OAAO;YACN,KAAK,SAAS,QAAA,CAAS;YACvB;QACD;IACD;IAAA;;;;;;;;;;;;;;;GAAA,GAkBA,MAAa,aAAa,EACzB,IAAA,EACA,WAAA,EACD,EA8BE;QACD,MAAM,sBACL,uBAAuB,MAAM,YAAY,QAAA,CAAS,IAAI;QAEvD,MAAM,iBAAiB,IAAI,IAAI,oBAAoB,IAAA,CAAK,SAAS;QACjE,MAAM,iBAAiB,MAAM,MAAM,gBAAgB;YAClD,QAAQ;YACR,MAAM,KAAK,SAAA,CAAU;gBACpB;gBACA,WAAW,IAAA,CAAK,KAAA;gBAChB,eAAe,IAAA,CAAK,SAAA;gBACpB,YAAY;gBACZ,cAAc;YACf,CAAC;YACD,SAAS;gBACR,gBAAgB;gBAChB,iBAAiB;gBACjB,QAAQ;YACT;YACA,OAAO;QACR,CAAC;QAED,IAAI,CAAC,eAAe,EAAA,EAAI;YACvB,OAAO;gBACN,IAAI;gBACJ,MAAM,eAAe,MAAA;gBACrB,KAAK;YACN;QACD;QAEA,MAAM,SAAS,MAAM,eAAe,IAAA,CAAK;QAEzC,OAAO;YACN,IAAI;YACJ;QACD;IACD;IAAA;;;;;;;;;;;;;;;;;;;GAAA,GAsBO,eAAe,EACrB,QAAQ;QAAC,WAAW;KAAA,EACrB,EAOmC;QAClC,OAAO;YACN,IAAI;YACJ,MAAM;YACN,MAAM;YACN,UAAU,IAAA,CAAK,KAAA;YACf,cAAc,IAAA,CAAK,SAAA;YACnB,eAAe;gBACd,KAAK,WAAU,SAAA;gBACf,QAAQ;oBACP,OAAO,MAAM,IAAA,CAAK,GAAG;gBACtB;YACD;YACA,QAAQ;gBAAC,OAAgB;aAAA;YACzB,OAAO,IAAI,IAAI,oBAAoB,IAAA,CAAK,SAAS,EAAE,IAAA;YACnD,UAAU,IAAI,IAAI,cAAc,IAAA,CAAK,SAAS,EAAE,IAAA;YAChD,SAAQ,OAAA,EAA2B;gBAClC,OAAO;oBACN,IAAI,QAAQ,EAAA;oBACZ,MAAM,QAAQ,QAAA,IAAY,QAAQ,KAAA;oBAClC,OAAO,QAAQ,KAAA;oBACf,OAAO,QAAQ,eAAA;gBAChB;YACD;QACD;IACD;AACD;;ACrQO,IAAM,2BAA2B;AAiBjC,SAAS,6BAA6B,UAAA,EAAkC;IAC9E,MAAM,SAAS,WAAW,eAAA,IAAmB;IAC7C,MAAM,OAAO;IACb,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM;IAChC,MAAM,UAAU,IAAI,QAAQ;IAC5B,QAAQ,GAAA,CAAI,gBAAgB,kBAAkB;IAC9C,QAAQ,GAAA,CAAI,iBAAiB,CAAA,OAAA,EAAU,WAAW,SAAS,EAAE;IAE7D,OAAO,eAAe,qBAAqB,KAAA,EAAkC;QAC5E,MAAM,WAAW,MAAM,MAAM,KAAK;YACjC,QAAQ;YACR,MAAM,KAAK,SAAA,CAAU,KAAK;YAC1B;QACD,CAAC;QAED,IAAI,CAAC,SAAS,EAAA,EAAI;YACjB,MAAM,QAAQ,MAAM,SAAS,IAAA,CAAK;YAClC,MAAM,IAAI,MACT,CAAA,wCAAA,EAA2C,SAAS,MAAM,CAAA,WAAA,EAAc,KAAK,EAAA;QAE/E;QAEA,MAAM,OAAQ,MAAM,SAAS,IAAA,CAAK;QAElC,IAAI,CAAC,KAAK,EAAA,EAAI;YACb,MAAM,IAAI,MAAM,kCAAkC;QACnD;IACD;AACD;;AC3CO,IAAM,4BAAN,cAAwC,wBAAwB;IAC9D,KAAA;IAER,YAAY,IAAA,CAA4B;QACvC,KAAA,CAAM;QACN,IAAA,CAAK,IAAA,GAAO;IACb;IAEU,gBAA2B;QACpC,MAAM,OAAO;QACb,MAAM,SAAS,IAAA,CAAK,IAAA,CAAK,eAAA,IAAmB;QAC5C,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM;QAChC,IAAI,QAAA,GAAW,IAAI,QAAA,CAAS,OAAA,CAAQ,QAAQ,IAAI;QAEhD,MAAM,UAAU;YACf,eAAe,CAAA,OAAA,EAAU,IAAA,CAAK,IAAA,CAAK,SAAS,EAAA;YAC5C,kBAAkB,IAAA,CAAK,IAAA,CAAK,gBAAA;QAC7B;QAKA,OAAO,IAAI,UAAU,KAAK;YAAE;QAAQ,CAAwB;IAC7D;AACD;AAEO,SAASE,gCAA+B,OAAA,EAA+B;IAC7E,OAAO,SAAS,qBAAqB;QACpC,OAAO,IAAI,0BAA0B,OAAO;IAC7C;AACD;;ACLA,SAAS,kBACR,OAAA,EACA,UAAA,EACC;IACD,MAAM,UAAUC,QAAOC,eAAc,OAAO,CAAC;IAE7C,MAAM,uBAAuB,6BAA6B,OAAO;IACjE,MAAM,kBAAkBC,gCAA+B,OAAO;IAE9D,MAAM,UAAU,kBAAkB,SAAS,UAAU;IACrD,MAAM,QAAQ,IAAI,UACjB,QAAQ,KAAA,EACR,QAAQ,SAAA,EACR,QAAQ,SAAA;IAET,MAAMC,mBAAkB,sBAAsB;QAC7C,OAAO,QAAQ,KAAA;QACf,WAAW;IACZ,CAAC;IAED,OAAO;QACN,GAAG,OAAA;QACH,aAAa;YACZ,GAAG,QAAQ,WAAA;YACX,GAAG,OAAA;QACJ;QACA,YAAY;YACX,aAAa;YACb,QAAQ;QACT;QACA;QACA,iBAAAA;IACD;AACD;AAEO,SAAS,kBAAkB,EACjC,UAAA,EACD,EAAoE;IACnE,OAAO,SAAS,cAAc,OAAA,EAA8C;QAC3E,MAAM,UAAU,kBAAkB,SAAS,UAAU;QAErD,OAAO;YACN,GAAG,OAAA;YACH,UAAU,CAAC,SACV,cAAc;oBAAE,GAAG,OAAA;oBAAS,kBAAkB;gBAAO,CAAC;YACvD,aAAa,CAAC,YACb,cAAc;oBAAE,GAAG,OAAA;oBAAS;gBAAU,CAAC;QACzC;IACD;AACD;AAOA,SAASF,eACR,UAAA,EACyB;IACzB,MAAM,WAAWG,aAAY,UAAU;IACvC,MAAM,UAAU,WAAW,UAAU;IACrC,OAAO,eAAe,QACrB,WAAA,EACA,aAAA,EACA,aAAA,EACA,IAAA,EACA,OAAA,EACa;QACb,MAAM,gBAAgB,IAAI,QAAQ,SAAS,OAAO;QAClD,MAAM,gBAAgB,IAAI,QAAQ,OAAO;QACzC,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,cAAc,OAAA,CAAQ,EAAG;YACnD,cAAc,GAAA,CAAI,KAAK,KAAK;QAC7B;QACA,OAAO,aACN,UACA,aACA,eACA,eACA,MACA;IAEF;AACD;AAEA,SAASA,aAAY,UAAA,EAAkC;IACtD,MAAM,MAAM,IAAI,IACf,WAAW,OAAA,IAAW,mBACtB,WAAW,SAAA,IAAa;IAEzB,OAAO,IAAI,IAAA;AACZ;AAEO,SAAS,WAAW,OAAA,EAA+B;IACzD,MAAM,UAAU,IAAI,QAAQ;IAE5B,QAAQ,GAAA,CAAI,iBAAiB,CAAA,OAAA,EAAU,QAAQ,SAAS,EAAE;IAC1D,IAAI,QAAQ,gBAAA,EACX,QAAQ,GAAA,CAAI,kBAAkB,QAAQ,gBAAgB;IACvD,IAAI,QAAQ,SAAA,CAAW,CAAA,QAAQ,GAAA,CAAI,gBAAgB,QAAQ,SAAS;IAEpE,OAAO;AACR","debugId":null}},
    {"offset": {"line": 5095, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload-part-node.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/client-sdk-node.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/server-sdk-node.ts"],"sourcesContent":["import { request } from \"node:https\";\nimport { Readable } from \"node:stream\";\nimport type { ReadableStream as NodeReadableStream } from \"node:stream/web\";\nimport {\n\tMULTIPART_UPLOAD_CHUNK_SIZE,\n\ttype MultipartUploadTask,\n} from \"@/attachments/common\";\n\n/**\n * Uploads a part of a file in a node.js environment.\n * @param task The task to upload.\n * @returns The etag of the uploaded part.\n */\nexport async function uploadPartImpl({\n\turl,\n\tfullData,\n\tpartNumber,\n\theaders,\n\tonProgress,\n\tsignal,\n}: MultipartUploadTask) {\n\tconst offset = (partNumber - 1) * MULTIPART_UPLOAD_CHUNK_SIZE;\n\tconst data = fullData.slice(\n\t\toffset,\n\t\tMath.min(offset + MULTIPART_UPLOAD_CHUNK_SIZE, fullData.size),\n\t);\n\n\tsignal?.throwIfAborted();\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\tconst fullURL = new URL(url);\n\t\tconst req = request(fullURL, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\thost: fullURL.host,\n\t\t\t\t\"content-length\": data.size.toString(),\n\t\t\t},\n\t\t\tsignal,\n\t\t});\n\n\t\tlet uploadedBytes = 0;\n\n\t\treq.on(\"response\", async (res) => {\n\t\t\tconst statusCode = res.statusCode ?? 0;\n\t\t\tif (statusCode >= 200 && statusCode < 300) {\n\t\t\t\tconst etag = res.headers.etag;\n\t\t\t\tif (!etag) {\n\t\t\t\t\treject(new Error(\"Missing etag on upload response\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(etag.slice(1, -1));\n\t\t\t} else {\n\t\t\t\tlet chunks = \"\";\n\t\t\t\tfor await (const chunk of res) {\n\t\t\t\t\tchunks += chunk.toString();\n\t\t\t\t}\n\t\t\t\treject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Failed to upload part with ${statusCode}: ${res.statusMessage}`,\n\t\t\t\t\t\t{ cause: chunks },\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treq.on(\"error\", (error) => {\n\t\t\treject(error);\n\t\t});\n\n\t\treq.on(\"drain\", () => {\n\t\t\tonProgress?.({\n\t\t\t\ttotal: data.size,\n\t\t\t\tloaded: uploadedBytes,\n\t\t\t});\n\t\t});\n\n\t\tReadable.fromWeb(data.stream() as NodeReadableStream)\n\t\t\t.on(\"data\", (chunk) => {\n\t\t\t\tuploadedBytes += chunk.length;\n\t\t\t\tonProgress?.({\n\t\t\t\t\ttotal: data.size,\n\t\t\t\t\tloaded: uploadedBytes,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.pipe(req);\n\n\t\tonProgress?.({ total: data.size, loaded: 0 });\n\t});\n}\n","import { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { uploadPartImpl } from \"@/attachments/upload-part-node\";\nimport { makeWhopClientSdk } from \"./client-sdk-shared\";\n\nconst uploadFile = makeUploadAttachmentFunction({ uploadPart: uploadPartImpl });\n\nconst sdk = makeWhopClientSdk({ uploadFile });\n\nimport type { WhopClientSdkOptions } from \"./client-sdk-shared\";\n\nexport function WhopClientSdk(options?: WhopClientSdkOptions) {\n\treturn sdk(options);\n}\n\nexport type WhopClientSdk = ReturnType<typeof WhopClientSdk>;\nexport type { WhopClientSdkOptions };\n","import { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { uploadPartImpl } from \"@/attachments/upload-part-node\";\n\nconst uploadFile = makeUploadAttachmentFunction({ uploadPart: uploadPartImpl });\n\nconst sdk = makeWhopServerSdk({ uploadFile });\n\nimport type { WhopServerSdkOptions } from \"./server-sdk-shared\";\nimport { makeWhopServerSdk } from \"./server-sdk-shared\";\n\nexport function WhopServerSdk(options: WhopServerSdkOptions) {\n\treturn sdk(options);\n}\n\nexport type WhopServerSdk = ReturnType<typeof WhopServerSdk>;\nexport type { WhopServerSdkOptions };\n"],"names":["uploadFile","sdk"],"mappings":";;;;;;;;AAAA,SAAS,eAAe;AACxB,SAAS,gBAAgB;;;;AAYzB,eAAsB,eAAe,EACpC,GAAA,EACA,QAAA,EACA,UAAA,EACA,OAAA,EACA,UAAA,EACA,MAAA,EACD,EAAwB;IACvB,MAAM,SAAA,CAAU,aAAa,CAAA,IAAK,wOAAA;IAClC,MAAM,OAAO,SAAS,KAAA,CACrB,QACA,KAAK,GAAA,CAAI,SAAS,wOAAA,EAA6B,SAAS,IAAI;IAG7D,QAAQ,eAAe;IAEvB,OAAO,IAAI,QAAgB,CAAC,SAAS,WAAW;QAC/C,MAAM,UAAU,IAAI,IAAI,GAAG;QAC3B,MAAM,UAAM,8GAAA,EAAQ,SAAS;YAC5B,QAAQ;YACR,SAAS;gBACR,GAAG,OAAA;gBACH,MAAM,QAAQ,IAAA;gBACd,kBAAkB,KAAK,IAAA,CAAK,QAAA,CAAS;YACtC;YACA;QACD,CAAC;QAED,IAAI,gBAAgB;QAEpB,IAAI,EAAA,CAAG,YAAY,OAAO,QAAQ;YACjC,MAAM,aAAa,IAAI,UAAA,IAAc;YACrC,IAAI,cAAc,OAAO,aAAa,KAAK;gBAC1C,MAAM,OAAO,IAAI,OAAA,CAAQ,IAAA;gBACzB,IAAI,CAAC,MAAM;oBACV,OAAO,IAAI,MAAM,iCAAiC,CAAC;oBACnD;gBACD;gBACA,QAAQ,KAAK,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC;YAC1B,OAAO;gBACN,IAAI,SAAS;gBACb,WAAA,MAAiB,SAAS,IAAK;oBAC9B,UAAU,MAAM,QAAA,CAAS;gBAC1B;gBACA,OACC,IAAI,MACH,CAAA,2BAAA,EAA8B,UAAU,CAAA,EAAA,EAAK,IAAI,aAAa,EAAA,EAC9D;oBAAE,OAAO;gBAAO;YAGnB;QACD,CAAC;QAED,IAAI,EAAA,CAAG,SAAS,CAAC,UAAU;YAC1B,OAAO,KAAK;QACb,CAAC;QAED,IAAI,EAAA,CAAG,SAAS,MAAM;YACrB,aAAa;gBACZ,OAAO,KAAK,IAAA;gBACZ,QAAQ;YACT,CAAC;QACF,CAAC;QAED,iHAAA,CAAS,OAAA,CAAQ,KAAK,MAAA,CAAO,CAAuB,EAClD,EAAA,CAAG,QAAQ,CAAC,UAAU;YACtB,iBAAiB,MAAM,MAAA;YACvB,aAAa;gBACZ,OAAO,KAAK,IAAA;gBACZ,QAAQ;YACT,CAAC;QACF,CAAC,EACA,IAAA,CAAK,GAAG;QAEV,aAAa;YAAE,OAAO,KAAK,IAAA;YAAM,QAAQ;QAAE,CAAC;IAC7C,CAAC;AACF;;ACrFA,IAAM,iBAAa,yOAAA,EAA6B;IAAE,YAAY;AAAe,CAAC;AAE9E,IAAM,UAAM,8NAAA,EAAkB;IAAE;AAAW,CAAC;AAIrC,SAAS,cAAc,OAAA,EAAgC;IAC7D,OAAO,IAAI,OAAO;AACnB;;ACTA,IAAMA,kBAAa,yOAAA,EAA6B;IAAE,YAAY;AAAe,CAAC;AAE9E,IAAMC,WAAM,8NAAA,EAAkB;IAAE,YAAAD;AAAW,CAAC;AAKrC,SAAS,cAAc,OAAA,EAA+B;IAC5D,OAAOC,KAAI,OAAO;AACnB","debugId":null}},
    {"offset": {"line": 5191, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/tslib/tslib.es6.mjs"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5826, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/functions-js/dist/module/helper.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/functions-js/src/helper.ts"],"sourcesContent":["import { Fetch } from './types'\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = (...args) =>\n      import('@supabase/node-fetch' as any).then(({ default: fetch }) => fetch(...args))\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n"],"names":[],"mappings":";;;;AAEO,MAAM,YAAY,GAAG,CAAC,WAAmB,EAAS,EAAE;IACzD,IAAI,MAAa,CAAA;IACjB,IAAI,WAAW,EAAE,CAAC;QAChB,MAAM,GAAG,WAAW,CAAA;IACtB,CAAC,MAAM,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE,CAAC;QACxC,MAAM,GAAG,CAAC,GAAG,IAAI,EAAE,CACjB,CADmB,KACb,CAAC,sBAA6B,CAAC,gIAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,MAAK,EAAE,EAAE,CAAG,CAAD,IAAM,CAAC,IAAG,IAAI,CAAC,CAAC,CAAA;IACtF,CAAC,MAAM,CAAC;QACN,MAAM,GAAG,KAAK,CAAA;IAChB,CAAC;IACD,OAAO,CAAC,GAAG,IAAI,EAAE,CAAG,CAAD,KAAO,CAAC,GAAG,IAAI,CAAC,CAAA;AACrC,CAAC,CAAA","debugId":null}},
    {"offset": {"line": 5845, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/functions-js/dist/module/types.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/functions-js/src/types.ts"],"sourcesContent":["export type Fetch = typeof fetch\n\n/**\n * Response format\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n  response?: Response\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n  response?: Response\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    this.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n// Define the enum for the 'region' property\nexport enum FunctionRegion {\n  Any = 'any',\n  ApNortheast1 = 'ap-northeast-1',\n  ApNortheast2 = 'ap-northeast-2',\n  ApSouth1 = 'ap-south-1',\n  ApSoutheast1 = 'ap-southeast-1',\n  ApSoutheast2 = 'ap-southeast-2',\n  CaCentral1 = 'ca-central-1',\n  EuCentral1 = 'eu-central-1',\n  EuWest1 = 'eu-west-1',\n  EuWest2 = 'eu-west-2',\n  EuWest3 = 'eu-west-3',\n  SaEast1 = 'sa-east-1',\n  UsEast1 = 'us-east-1',\n  UsWest1 = 'us-west-1',\n  UsWest2 = 'us-west-2',\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * Object representing the headers to send with the request.\n   */\n  headers?: { [key: string]: string }\n  /**\n   * The HTTP verb of the request\n   */\n  method?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n  /**\n   * The Region to invoke the function in.\n   */\n  region?: FunctionRegion\n  /**\n   * The body of the request.\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n  /**\n   * The AbortSignal to use for the request.\n   * */\n  signal?: AbortSignal\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAiBM,MAAO,cAAe,SAAQ,KAAK;IAEvC,YAAY,OAAe,EAAE,IAAI,GAAG,gBAAgB,EAAE,OAAa,CAAA;QACjE,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;IACxB,CAAC;CACF;AAEK,MAAO,mBAAoB,SAAQ,cAAc;IACrD,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,+CAA+C,EAAE,qBAAqB,EAAE,OAAO,CAAC,CAAA;IACxF,CAAC;CACF;AAEK,MAAO,mBAAoB,SAAQ,cAAc;IACrD,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,wCAAwC,EAAE,qBAAqB,EAAE,OAAO,CAAC,CAAA;IACjF,CAAC;CACF;AAEK,MAAO,kBAAmB,SAAQ,cAAc;IACpD,YAAY,OAAY,CAAA;QACtB,KAAK,CAAC,8CAA8C,EAAE,oBAAoB,EAAE,OAAO,CAAC,CAAA;IACtF,CAAC;CACF;AAED,IAAY,cAgBX;AAhBD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,MAAA,GAAA,KAAW,CAAA;IACX,cAAA,CAAA,eAAA,GAAA,gBAA+B,CAAA;IAC/B,cAAA,CAAA,eAAA,GAAA,gBAA+B,CAAA;IAC/B,cAAA,CAAA,WAAA,GAAA,YAAuB,CAAA;IACvB,cAAA,CAAA,eAAA,GAAA,gBAA+B,CAAA;IAC/B,cAAA,CAAA,eAAA,GAAA,gBAA+B,CAAA;IAC/B,cAAA,CAAA,aAAA,GAAA,cAA2B,CAAA;IAC3B,cAAA,CAAA,aAAA,GAAA,cAA2B,CAAA;IAC3B,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;IACrB,cAAA,CAAA,UAAA,GAAA,WAAqB,CAAA;AACvB,CAAC,EAhBW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAgBzB","debugId":null}},
    {"offset": {"line": 5901, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/functions-js/src/FunctionsClient.ts"],"sourcesContent":["import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionInvokeOptions,\n  FunctionRegion,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected region: FunctionRegion\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n      region = FunctionRegion.Any,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n      region?: FunctionRegion\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.region = region\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - The name of the Function to invoke.\n   * @param options - Options for invoking the Function.\n   */\n  async invoke<T = any>(\n    functionName: string,\n    options: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, method, body: functionArgs, signal } = options\n      let _headers: Record<string, string> = {}\n      let { region } = options\n      if (!region) {\n        region = this.region\n      }\n      // Add region as query parameter using URL API\n      const url = new URL(`${this.url}/${functionName}`)\n      if (region && region !== 'any') {\n        _headers['x-region'] = region\n        url.searchParams.set('forceFunctionRegion', region)\n      }\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      } else {\n        // if the Content-Type was supplied, simply set the body\n        body = functionArgs\n      }\n\n      const response = await this.fetch(url.toString(), {\n        method: method || 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n        signal,\n      }).catch((fetchError) => {\n        if (fetchError.name === 'AbortError') {\n          throw fetchError\n        }\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (\n        responseType === 'application/octet-stream' ||\n        responseType === 'application/pdf'\n      ) {\n        data = await response.blob()\n      } else if (responseType === 'text/event-stream') {\n        data = response\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null, response }\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        return { data: null, error: new FunctionsFetchError(error) }\n      }\n      return {\n        data: null,\n        error,\n        response:\n          error instanceof FunctionsHttpError || error instanceof FunctionsRelayError\n            ? error.context\n            : undefined,\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6029, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/webidl-conversions/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6199, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/whatwg-url/lib/utils.js"],"sourcesContent":["\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n"],"names":[],"mappings":"AAEA,OAAO,OAAO,CAAC,KAAK,GAAG,SAAS,MAAM,MAAM,EAAE,MAAM;IAClD,MAAM,OAAO,OAAO,mBAAmB,CAAC;IACxC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAAG;QACpC,OAAO,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE,OAAO,wBAAwB,CAAC,QAAQ,IAAI,CAAC,EAAE;IACxF;AACF;AAEA,OAAO,OAAO,CAAC,aAAa,GAAG,OAAO;AACtC,OAAO,OAAO,CAAC,UAAU,GAAG,OAAO;AAEnC,OAAO,OAAO,CAAC,cAAc,GAAG,SAAU,IAAI;IAC5C,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,aAAa,CAAC;AAC3C;AAEA,OAAO,OAAO,CAAC,cAAc,GAAG,SAAU,OAAO;IAC/C,OAAO,OAAO,CAAC,OAAO,OAAO,CAAC,UAAU,CAAC;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6217, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/whatwg-url/lib/url-state-machine.js"],"sourcesContent":["\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7336, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/whatwg-url/lib/URL-impl.js"],"sourcesContent":["\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7515, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/whatwg-url/lib/URL.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7698, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/whatwg-url/lib/public-api.js"],"sourcesContent":["\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n"],"names":[],"mappings":"AAEA,QAAQ,GAAG,GAAG,oIAAiB,SAAS;AACxC,QAAQ,YAAY,GAAG,kJAA+B,YAAY;AAClE,QAAQ,kBAAkB,GAAG,kJAA+B,kBAAkB;AAC9E,QAAQ,aAAa,GAAG,kJAA+B,aAAa;AACpE,QAAQ,cAAc,GAAG,kJAA+B,cAAc;AACtE,QAAQ,cAAc,GAAG,kJAA+B,cAAc;AACtE,QAAQ,aAAa,GAAG,kJAA+B,aAAa;AACpE,QAAQ,gBAAgB,GAAG,kJAA+B,gBAAgB;AAC1E,QAAQ,QAAQ,GAAG,kJAA+B,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7711, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/node-fetch/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\t{\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9293, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestError.ts"],"sourcesContent":["/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */\nexport default class PostgrestError extends Error {\n  details: string\n  hint: string\n  code: string\n\n  constructor(context: { message: string; details: string; hint: string; code: string }) {\n    super(context.message)\n    this.name = 'PostgrestError'\n    this.details = context.details\n    this.hint = context.hint\n    this.code = context.code\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;;;GAIG,CACH,MAAqB,cAAe,SAAQ,KAAK;IAK/C,YAAY,OAAyE,CAAA;QACnF,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;QACtB,IAAI,CAAC,IAAI,GAAG,gBAAgB,CAAA;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAA;QAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;QACxB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;IAC1B,CAAC;CACF;AAZD,QAAA,OAAA,GAAA,eAYC","debugId":null}},
    {"offset": {"line": 9314, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestBuilder.ts"],"sourcesContent":["// @ts-ignore\nimport nodeFetch from '@supabase/node-fetch'\n\nimport type {\n  PostgrestSingleResponse,\n  PostgrestResponseSuccess,\n  CheckMatchingArrayTypes,\n  MergePartialResult,\n  IsValidResultOverride,\n} from './types/types'\nimport { ClientServerOptions, Fetch } from './types/common/common'\nimport PostgrestError from './PostgrestError'\nimport { ContainsNull } from './select-query-parser/types'\n\nexport default abstract class PostgrestBuilder<\n  ClientOptions extends ClientServerOptions,\n  Result,\n  ThrowOnError extends boolean = false,\n> implements\n    PromiseLike<\n      ThrowOnError extends true ? PostgrestResponseSuccess<Result> : PostgrestSingleResponse<Result>\n    >\n{\n  protected method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url: URL\n  protected headers: Headers\n  protected schema?: string\n  protected body?: unknown\n  protected shouldThrowOnError = false\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected isMaybeSingle: boolean\n\n  constructor(builder: {\n    method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n    url: URL\n    headers: HeadersInit\n    schema?: string\n    body?: unknown\n    shouldThrowOnError?: boolean\n    signal?: AbortSignal\n    fetch?: Fetch\n    isMaybeSingle?: boolean\n  }) {\n    this.method = builder.method\n    this.url = builder.url\n    this.headers = new Headers(builder.headers)\n    this.schema = builder.schema\n    this.body = builder.body\n    this.shouldThrowOnError = builder.shouldThrowOnError ?? false\n    this.signal = builder.signal\n    this.isMaybeSingle = builder.isMaybeSingle ?? false\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = nodeFetch\n    } else {\n      this.fetch = fetch\n    }\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(): this & PostgrestBuilder<ClientOptions, Result, true> {\n    this.shouldThrowOnError = true\n    return this as this & PostgrestBuilder<ClientOptions, Result, true>\n  }\n\n  /**\n   * Set an HTTP header for the request.\n   */\n  setHeader(name: string, value: string): this {\n    this.headers = new Headers(this.headers)\n    this.headers.set(name, value)\n    return this\n  }\n\n  then<\n    TResult1 = ThrowOnError extends true\n      ? PostgrestResponseSuccess<Result>\n      : PostgrestSingleResponse<Result>,\n    TResult2 = never,\n  >(\n    onfulfilled?:\n      | ((\n          value: ThrowOnError extends true\n            ? PostgrestResponseSuccess<Result>\n            : PostgrestSingleResponse<Result>\n        ) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers.set('Accept-Profile', this.schema)\n    } else {\n      this.headers.set('Content-Profile', this.schema)\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers.set('Content-Type', 'application/json')\n    }\n\n    // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n    const _fetch = this.fetch\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count: number | null = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = await res.text()\n          if (body === '') {\n            // Prefer: return=minimal\n          } else if (this.headers.get('Accept') === 'text/csv') {\n            data = body\n          } else if (\n            this.headers.get('Accept') &&\n            this.headers.get('Accept')?.includes('application/vnd.pgrst.plan+text')\n          ) {\n            data = body\n          } else {\n            data = JSON.parse(body)\n          }\n        }\n\n        const countHeader = this.headers.get('Prefer')?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n          if (data.length > 1) {\n            error = {\n              // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n              code: 'PGRST116',\n              details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n              hint: null,\n              message: 'JSON object requested, multiple (or no) rows returned',\n            }\n            data = null\n            count = null\n            status = 406\n            statusText = 'Not Acceptable'\n          } else if (data.length === 1) {\n            data = data[0]\n          } else {\n            data = null\n          }\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (Array.isArray(error) && res.status === 404) {\n            data = []\n            error = null\n            status = 200\n            statusText = 'OK'\n          }\n        } catch {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204\n            statusText = 'No Content'\n          } else {\n            error = {\n              message: body,\n            }\n          }\n        }\n\n        if (error && this.isMaybeSingle && error?.details?.includes('0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw new PostgrestError(error)\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `${fetchError?.name ?? 'FetchError'}: ${fetchError?.message}`,\n          details: `${fetchError?.stack ?? ''}`,\n          hint: '',\n          code: `${fetchError?.code ?? ''}`,\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: '',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n   */\n  returns<NewResult>(): PostgrestBuilder<\n    ClientOptions,\n    CheckMatchingArrayTypes<Result, NewResult>,\n    ThrowOnError\n  > {\n    /* istanbul ignore next */\n    return this as unknown as PostgrestBuilder<\n      ClientOptions,\n      CheckMatchingArrayTypes<Result, NewResult>,\n      ThrowOnError\n    >\n  }\n\n  /**\n   * Override the type of the returned `data` field in the response.\n   *\n   * @typeParam NewResult - The new type to cast the response data to\n   * @typeParam Options - Optional type configuration (defaults to { merge: true })\n   * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n   * @example\n   * ```typescript\n   * // Merge with existing types (default behavior)\n   * const query = supabase\n   *   .from('users')\n   *   .select()\n   *   .overrideTypes<{ custom_field: string }>()\n   *\n   * // Replace existing types completely\n   * const replaceQuery = supabase\n   *   .from('users')\n   *   .select()\n   *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n   * ```\n   * @returns A PostgrestBuilder instance with the new type\n   */\n  overrideTypes<\n    NewResult,\n    Options extends { merge?: boolean } = { merge: true },\n  >(): PostgrestBuilder<\n    ClientOptions,\n    IsValidResultOverride<Result, NewResult, false, false> extends true\n      ? // Preserve the optionality of the result if the overriden type is an object (case of chaining with `maybeSingle`)\n        ContainsNull<Result> extends true\n        ? MergePartialResult<NewResult, NonNullable<Result>, Options> | null\n        : MergePartialResult<NewResult, Result, Options>\n      : CheckMatchingArrayTypes<Result, NewResult>,\n    ThrowOnError\n  > {\n    return this as unknown as PostgrestBuilder<\n      ClientOptions,\n      IsValidResultOverride<Result, NewResult, false, false> extends true\n        ? // Preserve the optionality of the result if the overriden type is an object (case of chaining with `maybeSingle`)\n          ContainsNull<Result> extends true\n          ? MergePartialResult<NewResult, NonNullable<Result>, Options> | null\n          : MergePartialResult<NewResult, Result, Options>\n        : CheckMatchingArrayTypes<Result, NewResult>,\n      ThrowOnError\n    >\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9523, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestTransformBuilder.ts"],"sourcesContent":["import PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestFilterBuilder, { InvalidMethodError } from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser/result'\nimport { CheckMatchingArrayTypes, MaxAffectedEnabled } from './types/types'\nimport { ClientServerOptions, GenericSchema } from './types/common/common'\n\nexport default class PostgrestTransformBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  RelationName = unknown,\n  Relationships = unknown,\n  Method = unknown,\n> extends PostgrestBuilder<ClientOptions, Result> {\n  /**\n   * Perform a SELECT on the query result.\n   *\n   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n   * return modified rows. By calling this method, modified rows are returned in\n   * `data`.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   */\n  select<\n    Query extends string = '*',\n    NewResultOne = GetResult<Schema, Row, RelationName, Relationships, Query, ClientOptions>,\n  >(\n    columns?: Query\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Row,\n    Method extends 'RPC'\n      ? Result extends unknown[]\n        ? NewResultOne[]\n        : NewResultOne\n      : NewResultOne[],\n    RelationName,\n    Relationships,\n    Method\n  > {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    this.headers.append('Prefer', 'return=representation')\n    return this as unknown as PostgrestFilterBuilder<\n      ClientOptions,\n      Schema,\n      Row,\n      Method extends 'RPC'\n        ? Result extends unknown[]\n          ? NewResultOne[]\n          : NewResultOne\n        : NewResultOne[],\n      RelationName,\n      Relationships,\n      Method\n    >\n  }\n\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; referencedTable?: undefined }\n  ): this\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; referencedTable?: string }\n  ): this\n  /**\n   * @deprecated Use `options.referencedTable` instead of `options.foreignTable`\n   */\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: undefined }\n  ): this\n  /**\n   * @deprecated Use `options.referencedTable` instead of `options.foreignTable`\n   */\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string }\n  ): this\n  /**\n   * Order the query result by `column`.\n   *\n   * You can call this method multiple times to order by multiple columns.\n   *\n   * You can order referenced tables, but it only affects the ordering of the\n   * parent table if you use `!inner` in the query.\n   *\n   * @param column - The column to order by\n   * @param options - Named parameters\n   * @param options.ascending - If `true`, the result will be in ascending order\n   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n   * `null`s appear last.\n   * @param options.referencedTable - Set this to order a referenced table by\n   * its columns\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  order(\n    column: string,\n    {\n      ascending = true,\n      nullsFirst,\n      foreignTable,\n      referencedTable = foreignTable,\n    }: {\n      ascending?: boolean\n      nullsFirst?: boolean\n      foreignTable?: string\n      referencedTable?: string\n    } = {}\n  ): this {\n    const key = referencedTable ? `${referencedTable}.order` : 'order'\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${\n        nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limit the query result by `count`.\n   *\n   * @param count - The maximum number of rows to return\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to limit rows of referenced\n   * tables instead of the parent table\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  limit(\n    count: number,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const key = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n   * Only records within this range are returned.\n   * This respects the query order and if there is no order clause the range could behave unexpectedly.\n   * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n   * and fourth rows of the query.\n   *\n   * @param from - The starting index from which to limit the result\n   * @param to - The last index to which to limit the result\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to limit rows of referenced\n   * tables instead of the parent table\n   * @param options.foreignTable - Deprecated, use `options.referencedTable`\n   * instead\n   */\n  range(\n    from: number,\n    to: number,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const keyOffset =\n      typeof referencedTable === 'undefined' ? 'offset' : `${referencedTable}.offset`\n    const keyLimit = typeof referencedTable === 'undefined' ? 'limit' : `${referencedTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Set the AbortSignal for the fetch request.\n   *\n   * @param signal - The AbortSignal to use for the fetch request\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n   * returns an error.\n   */\n  single<ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never>(): PostgrestBuilder<\n    ClientOptions,\n    ResultOne\n  > {\n    this.headers.set('Accept', 'application/vnd.pgrst.object+json')\n    return this as unknown as PostgrestBuilder<ClientOptions, ResultOne>\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n   * this returns an error.\n   */\n  maybeSingle<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never,\n  >(): PostgrestBuilder<ClientOptions, ResultOne | null> {\n    // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n    // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n    if (this.method === 'GET') {\n      this.headers.set('Accept', 'application/json')\n    } else {\n      this.headers.set('Accept', 'application/vnd.pgrst.object+json')\n    }\n    this.isMaybeSingle = true\n    return this as unknown as PostgrestBuilder<ClientOptions, ResultOne | null>\n  }\n\n  /**\n   * Return `data` as a string in CSV format.\n   */\n  csv(): PostgrestBuilder<ClientOptions, string> {\n    this.headers.set('Accept', 'text/csv')\n    return this as unknown as PostgrestBuilder<ClientOptions, string>\n  }\n\n  /**\n   * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n   */\n  geojson(): PostgrestBuilder<ClientOptions, Record<string, unknown>> {\n    this.headers.set('Accept', 'application/geo+json')\n    return this as unknown as PostgrestBuilder<ClientOptions, Record<string, unknown>>\n  }\n\n  /**\n   * Return `data` as the EXPLAIN plan for the query.\n   *\n   * You need to enable the\n   * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n   * setting before using this method.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.analyze - If `true`, the query will be executed and the\n   * actual run time will be returned\n   *\n   * @param options.verbose - If `true`, the query identifier will be returned\n   * and `data` will include the output columns of the query\n   *\n   * @param options.settings - If `true`, include information on configuration\n   * parameters that affect query planning\n   *\n   * @param options.buffers - If `true`, include information on buffer usage\n   *\n   * @param options.wal - If `true`, include information on WAL record generation\n   *\n   * @param options.format - The format of the output, can be `\"text\"` (default)\n   * or `\"json\"`\n   */\n  explain({\n    analyze = false,\n    verbose = false,\n    settings = false,\n    buffers = false,\n    wal = false,\n    format = 'text',\n  }: {\n    analyze?: boolean\n    verbose?: boolean\n    settings?: boolean\n    buffers?: boolean\n    wal?: boolean\n    format?: 'json' | 'text'\n  } = {}) {\n    const options = [\n      analyze ? 'analyze' : null,\n      verbose ? 'verbose' : null,\n      settings ? 'settings' : null,\n      buffers ? 'buffers' : null,\n      wal ? 'wal' : null,\n    ]\n      .filter(Boolean)\n      .join('|')\n    // An Accept header can carry multiple media types but postgrest-js always sends one\n    const forMediatype = this.headers.get('Accept') ?? 'application/json'\n    this.headers.set(\n      'Accept',\n      `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`\n    )\n    if (format === 'json') {\n      return this as unknown as PostgrestBuilder<ClientOptions, Record<string, unknown>[]>\n    } else {\n      return this as unknown as PostgrestBuilder<ClientOptions, string>\n    }\n  }\n\n  /**\n   * Rollback the query.\n   *\n   * `data` will still be returned, but the query is not committed.\n   */\n  rollback(): this {\n    this.headers.append('Prefer', 'tx=rollback')\n    return this\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n   */\n  returns<NewResult>(): PostgrestTransformBuilder<\n    ClientOptions,\n    Schema,\n    Row,\n    CheckMatchingArrayTypes<Result, NewResult>,\n    RelationName,\n    Relationships,\n    Method\n  > {\n    return this as unknown as PostgrestTransformBuilder<\n      ClientOptions,\n      Schema,\n      Row,\n      CheckMatchingArrayTypes<Result, NewResult>,\n      RelationName,\n      Relationships,\n      Method\n    >\n  }\n\n  /**\n   * Set the maximum number of rows that can be affected by the query.\n   * Only available in PostgREST v13+ and only works with PATCH and DELETE methods.\n   *\n   * @param value - The maximum number of rows that can be affected\n   */\n  maxAffected(value: number): MaxAffectedEnabled<ClientOptions['PostgrestVersion']> extends true\n    ? // TODO: update the RPC case to only work on RPC that returns SETOF rows\n      Method extends 'PATCH' | 'DELETE' | 'RPC'\n      ? this\n      : InvalidMethodError<'maxAffected method only available on update or delete'>\n    : InvalidMethodError<'maxAffected method only available on postgrest 13+'> {\n    this.headers.append('Prefer', 'handling=strict')\n    this.headers.append('Prefer', `max-affected=${value}`)\n    return this as unknown as MaxAffectedEnabled<ClientOptions['PostgrestVersion']> extends true\n      ? Method extends 'PATCH' | 'DELETE' | 'RPC'\n        ? this\n        : InvalidMethodError<'maxAffected method only available on update or delete'>\n      : InvalidMethodError<'maxAffected method only available on postgrest 13+'>\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9731, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestFilterBuilder.ts"],"sourcesContent":["import PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport { JsonPathToAccessor, JsonPathToType } from './select-query-parser/utils'\nimport { ClientServerOptions, GenericSchema } from './types/common/common'\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n\nexport type IsStringOperator<Path extends string> = Path extends `${string}->>${string}`\n  ? true\n  : false\n\n// Match relationship filters with `table.column` syntax and resolve underlying\n// column value. If not matched, fallback to generic type.\n// TODO: Validate the relationship itself ala select-query-parser. Currently we\n// assume that all tables have valid relationships to each other, despite\n// nonexistent foreign keys.\ntype ResolveFilterValue<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  ColumnName extends string,\n> = ColumnName extends `${infer RelationshipTable}.${infer Remainder}`\n  ? Remainder extends `${infer _}.${infer _}`\n    ? ResolveFilterValue<Schema, Row, Remainder>\n    : ResolveFilterRelationshipValue<Schema, RelationshipTable, Remainder>\n  : ColumnName extends keyof Row\n    ? Row[ColumnName]\n    : // If the column selection is a jsonpath like `data->value` or `data->>value` we attempt to match\n      // the expected type with the parsed custom json type\n      IsStringOperator<ColumnName> extends true\n      ? string\n      : JsonPathToType<Row, JsonPathToAccessor<ColumnName>> extends infer JsonPathValue\n        ? JsonPathValue extends never\n          ? never\n          : JsonPathValue\n        : never\n\ntype ResolveFilterRelationshipValue<\n  Schema extends GenericSchema,\n  RelationshipTable extends string,\n  RelationshipColumn extends string,\n> = Schema['Tables'] & Schema['Views'] extends infer TablesAndViews\n  ? RelationshipTable extends keyof TablesAndViews\n    ? 'Row' extends keyof TablesAndViews[RelationshipTable]\n      ? RelationshipColumn extends keyof TablesAndViews[RelationshipTable]['Row']\n        ? TablesAndViews[RelationshipTable]['Row'][RelationshipColumn]\n        : unknown\n      : unknown\n    : unknown\n  : never\n\nexport type InvalidMethodError<S extends string> = { Error: S }\n\nexport default class PostgrestFilterBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result,\n  RelationName = unknown,\n  Relationships = unknown,\n  Method = unknown,\n> extends PostgrestTransformBuilder<\n  ClientOptions,\n  Schema,\n  Row,\n  Result,\n  RelationName,\n  Relationships,\n  Method\n> {\n  /**\n   * Match only rows where `column` is equal to `value`.\n   *\n   * To check if the value of `column` is NULL, you should use `.is()` instead.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  eq<ColumnName extends string>(\n    column: ColumnName,\n    value: ResolveFilterValue<Schema, Row, ColumnName> extends never\n      ? NonNullable<unknown>\n      : // We want to infer the type before wrapping it into a `NonNullable` to avoid too deep\n        // type resolution error\n        ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n        ? NonNullable<ResolvedFilterValue>\n        : // We should never enter this case as all the branches are covered above\n          never\n  ): this {\n    this.url.searchParams.append(column, `eq.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows where `column` is not equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  neq<ColumnName extends string>(\n    column: ColumnName,\n    value: ResolveFilterValue<Schema, Row, ColumnName> extends never\n      ? unknown\n      : ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n        ? ResolvedFilterValue\n        : never\n  ): this {\n    this.url.searchParams.append(column, `neq.${value}`)\n    return this\n  }\n\n  gt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gt.${value}`)\n    return this\n  }\n\n  gte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gte.${value}`)\n    return this\n  }\n\n  lt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lt.${value}`)\n    return this\n  }\n\n  lte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lte.${value}`)\n    return this\n  }\n\n  like<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  like(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  like(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `like.${pattern}`)\n    return this\n  }\n\n  likeAllOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  likeAllOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAllOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  likeAnyOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  likeAnyOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  likeAnyOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilike<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  ilike(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  ilike(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `ilike.${pattern}`)\n    return this\n  }\n\n  ilikeAllOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  ilikeAllOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches all of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAllOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`)\n    return this\n  }\n\n  ilikeAnyOf<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    patterns: readonly string[]\n  ): this\n  ilikeAnyOf(column: string, patterns: readonly string[]): this\n  /**\n   * Match only rows where `column` matches any of `patterns` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param patterns - The patterns to match with\n   */\n  ilikeAnyOf(column: string, patterns: readonly string[]): this {\n    this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`)\n    return this\n  }\n\n  is<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: Row[ColumnName] & (boolean | null)\n  ): this\n  is(column: string, value: boolean | null): this\n  /**\n   * Match only rows where `column` IS `value`.\n   *\n   * For non-boolean columns, this is only relevant for checking if the value of\n   * `column` is NULL by setting `value` to `null`.\n   *\n   * For boolean columns, you can also set `value` to `true` or `false` and it\n   * will behave the same way as `.eq()`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  is(column: string, value: boolean | null): this {\n    this.url.searchParams.append(column, `is.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows where `column` is included in the `values` array.\n   *\n   * @param column - The column to filter on\n   * @param values - The values array to filter with\n   */\n  in<ColumnName extends string>(\n    column: ColumnName,\n    values: ReadonlyArray<\n      ResolveFilterValue<Schema, Row, ColumnName> extends never\n        ? unknown\n        : // We want to infer the type before wrapping it into a `NonNullable` to avoid too deep\n          // type resolution error\n          ResolveFilterValue<Schema, Row, ColumnName> extends infer ResolvedFilterValue\n          ? ResolvedFilterValue\n          : // We should never enter this case as all the branches are covered above\n            never\n    >\n  ): this {\n    const cleanedValues = Array.from(new Set(values))\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(column, `in.(${cleanedValues})`)\n    return this\n  }\n\n  contains<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]> | Record<string, unknown>\n  ): this\n  contains(column: string, value: string | readonly unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * `column` contains every element appearing in `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  contains(column: string, value: string | readonly unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(column, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  containedBy<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]> | Record<string, unknown>\n  ): this\n  containedBy(column: string, value: string | readonly unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * every element appearing in `column` is contained by `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  containedBy(column: string, value: string | readonly unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  rangeGt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is greater than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sr.${range}`)\n    return this\n  }\n\n  rangeGte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or greater than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxl.${range}`)\n    return this\n  }\n\n  rangeLt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is less than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sl.${range}`)\n    return this\n  }\n\n  rangeLte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or less than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxr.${range}`)\n    return this\n  }\n\n  rangeAdjacent<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeAdjacent(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where `column` is\n   * mutually exclusive to `range` and there can be no element between the two\n   * ranges.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeAdjacent(column: string, range: string): this {\n    this.url.searchParams.append(column, `adj.${range}`)\n    return this\n  }\n\n  overlaps<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | ReadonlyArray<Row[ColumnName]>\n  ): this\n  overlaps(column: string, value: string | readonly unknown[]): this\n  /**\n   * Only relevant for array and range columns. Match only rows where\n   * `column` and `value` have an element in common.\n   *\n   * @param column - The array or range column to filter on\n   * @param value - The array or range value to filter with\n   */\n  overlaps(column: string, value: string | readonly unknown[]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(column, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  textSearch<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  textSearch(\n    column: string,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  /**\n   * Only relevant for text and tsvector columns. Match only rows where\n   * `column` matches the query string in `query`.\n   *\n   * @param column - The text or tsvector column to filter on\n   * @param query - The query text to match with\n   * @param options - Named parameters\n   * @param options.config - The text search configuration to use\n   * @param options.type - Change how the `query` text is interpreted\n   */\n  textSearch(\n    column: string,\n    query: string,\n    { config, type }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  match<ColumnName extends string & keyof Row>(query: Record<ColumnName, Row[ColumnName]>): this\n  match(query: Record<string, unknown>): this\n  /**\n   * Match only rows where each column in `query` keys is equal to its\n   * associated value. Shorthand for multiple `.eq()`s.\n   *\n   * @param query - The object to filter with, with column names as keys mapped\n   * to their filter values\n   */\n  match(query: Record<string, unknown>): this {\n    Object.entries(query).forEach(([column, value]) => {\n      this.url.searchParams.append(column, `eq.${value}`)\n    })\n    return this\n  }\n\n  not<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: FilterOperator,\n    value: Row[ColumnName]\n  ): this\n  not(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which doesn't satisfy the filter.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to be negated to filter with, following\n   * PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  not(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows which satisfy at least one of the filters.\n   *\n   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure it's properly sanitized.\n   *\n   * It's currently not possible to do an `.or()` filter across multiple tables.\n   *\n   * @param filters - The filters to use, following PostgREST syntax\n   * @param options - Named parameters\n   * @param options.referencedTable - Set this to filter on referenced tables\n   * instead of the parent table\n   * @param options.foreignTable - Deprecated, use `referencedTable` instead\n   */\n  or(\n    filters: string,\n    {\n      foreignTable,\n      referencedTable = foreignTable,\n    }: { foreignTable?: string; referencedTable?: string } = {}\n  ): this {\n    const key = referencedTable ? `${referencedTable}.or` : 'or'\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  filter<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: `${'' | 'not.'}${FilterOperator}`,\n    value: unknown\n  ): this\n  filter(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which satisfy the filter. This is an escape hatch - you\n   * should use the specific filter methods wherever possible.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to filter with, following PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  filter(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `${operator}.${value}`)\n    return this\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10076, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestQueryBuilder.ts"],"sourcesContent":["import PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser/result'\nimport {\n  ClientServerOptions,\n  Fetch,\n  GenericSchema,\n  GenericTable,\n  GenericView,\n} from './types/common/common'\n\nexport default class PostgrestQueryBuilder<\n  ClientOptions extends ClientServerOptions,\n  Schema extends GenericSchema,\n  Relation extends GenericTable | GenericView,\n  RelationName = unknown,\n  Relationships = Relation extends { Relationships: infer R } ? R : unknown,\n> {\n  url: URL\n  headers: Headers\n  schema?: string\n  signal?: AbortSignal\n  fetch?: Fetch\n\n  constructor(\n    url: URL,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: HeadersInit\n      schema?: string\n      fetch?: Fetch\n    }\n  ) {\n    this.url = url\n    this.headers = new Headers(headers)\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  /**\n   * Perform a SELECT query on the table or view.\n   *\n   * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n   *\n   * @param options - Named parameters\n   *\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   *\n   * @param options.count - Count algorithm to use to count rows in the table or view.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  select<\n    Query extends string = '*',\n    ResultOne = GetResult<\n      Schema,\n      Relation['Row'],\n      RelationName,\n      Relationships,\n      Query,\n      ClientOptions\n    >,\n  >(\n    columns?: Query,\n    options?: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    ResultOne[],\n    RelationName,\n    Relationships,\n    'GET'\n  > {\n    const { head = false, count } = options ?? {}\n\n    const method = head ? 'HEAD' : 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n    })\n  }\n\n  // TODO(v3): Make `defaultToNull` consistent for both single & bulk inserts.\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row,\n    options?: {\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row[],\n    options?: {\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  /**\n   * Perform an INSERT into the table or view.\n   *\n   * By default, inserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to insert. Pass an object to insert a single row\n   * or an array to insert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count inserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column. Only applies for bulk\n   * inserts.\n   */\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      count,\n      defaultToNull = true,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  > {\n    const method = 'POST'\n\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n    if (!defaultToNull) {\n      this.headers.append('Prefer', `missing=default`)\n    }\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  // TODO(v3): Make `defaultToNull` consistent for both single & bulk upserts.\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row,\n    options?: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row[],\n    options?: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  >\n  /**\n   * Perform an UPSERT on the table or view. Depending on the column(s) passed\n   * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n   * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n   * exist, or if it does exist, perform an alternative action depending on\n   * `ignoreDuplicates`.\n   *\n   * By default, upserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to upsert with. Pass an object to upsert a\n   * single row or an array to upsert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n   * duplicate rows are determined. Two rows are duplicates if all the\n   * `onConflict` columns are equal.\n   *\n   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n   * `false`, duplicate rows are merged with existing rows.\n   *\n   * @param options.count - Count algorithm to use to count upserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   *\n   * @param options.defaultToNull - Make missing fields default to `null`.\n   * Otherwise, use the default value for the column. This only applies when\n   * inserting new rows, not when merging with existing rows under\n   * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n   */\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      onConflict,\n      ignoreDuplicates = false,\n      count,\n      defaultToNull = true,\n    }: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n      defaultToNull?: boolean\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'POST'\n  > {\n    const method = 'POST'\n\n    this.headers.append('Prefer', `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`)\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n    if (!defaultToNull) {\n      this.headers.append('Prefer', 'missing=default')\n    }\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  /**\n   * Perform an UPDATE on the table or view.\n   *\n   * By default, updated rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param values - The values to update with\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count updated rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  update<Row extends Relation extends { Update: unknown } ? Relation['Update'] : never>(\n    values: Row,\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'PATCH'\n  > {\n    const method = 'PATCH'\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body: values,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n\n  /**\n   * Perform a DELETE on the table or view.\n   *\n   * By default, deleted rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count deleted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  delete({\n    count,\n  }: {\n    count?: 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    Relation['Row'],\n    null,\n    RelationName,\n    Relationships,\n    'DELETE'\n  > {\n    const method = 'DELETE'\n    if (count) {\n      this.headers.append('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10325, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/PostgrestClient.ts"],"sourcesContent":["import PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { Fetch, GenericSchema, ClientServerOptions } from './types/common/common'\nimport { GetRpcFunctionFilterBuilderByArgs } from './types/common/rpc'\n\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient<\n  Database = any,\n  ClientOptions extends ClientServerOptions = Database extends {\n    __InternalSupabase: infer I extends ClientServerOptions\n  }\n    ? I\n    : {},\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = 'public' extends keyof Omit<\n    Database,\n    '__InternalSupabase'\n  >\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  Schema extends GenericSchema = Omit<\n    Database,\n    '__InternalSupabase'\n  >[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : any,\n> {\n  url: string\n  headers: Headers\n  schemaName?: SchemaName\n  fetch?: Fetch\n\n  // TODO: Add back shouldThrowOnError once we figure out the typings\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url - URL of the PostgREST endpoint\n   * @param options - Named parameters\n   * @param options.headers - Custom headers\n   * @param options.schema - Postgres schema to switch to\n   * @param options.fetch - Custom fetch\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: HeadersInit\n      schema?: SchemaName\n      fetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = new Headers(headers)\n    this.schemaName = schema\n    this.fetch = fetch\n  }\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName],\n  >(relation: TableName): PostgrestQueryBuilder<ClientOptions, Schema, Table, TableName>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<ClientOptions, Schema, View, ViewName>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<ClientOptions, Schema, any, any> {\n    const url = new URL(`${this.url}/${relation}`)\n    return new PostgrestQueryBuilder(url, {\n      headers: new Headers(this.headers),\n      schema: this.schemaName,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Select a schema to query or perform an function (rpc) call.\n   *\n   * The schema needs to be on the list of exposed schemas inside Supabase.\n   *\n   * @param schema - The schema to query\n   */\n  schema<DynamicSchema extends string & keyof Omit<Database, '__InternalSupabase'>>(\n    schema: DynamicSchema\n  ): PostgrestClient<\n    Database,\n    ClientOptions,\n    DynamicSchema,\n    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any\n  > {\n    return new PostgrestClient(this.url, {\n      headers: this.headers,\n      schema,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.get - When set to `true`, the function will be called with\n   * read-only access mode.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FnName extends string & keyof Schema['Functions'],\n    Args extends Schema['Functions'][FnName]['Args'] = never,\n    FilterBuilder extends GetRpcFunctionFilterBuilderByArgs<\n      Schema,\n      FnName,\n      Args\n    > = GetRpcFunctionFilterBuilderByArgs<Schema, FnName, Args>,\n  >(\n    fn: FnName,\n    args: Args = {} as Args,\n    {\n      head = false,\n      get = false,\n      count,\n    }: {\n      head?: boolean\n      get?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    FilterBuilder['Row'],\n    FilterBuilder['Result'],\n    FilterBuilder['RelationName'],\n    FilterBuilder['Relationships'],\n    'RPC'\n  > {\n    let method: 'HEAD' | 'GET' | 'POST'\n    const url = new URL(`${this.url}/rpc/${fn}`)\n    let body: unknown | undefined\n    if (head || get) {\n      method = head ? 'HEAD' : 'GET'\n      Object.entries(args)\n        // params with undefined value needs to be filtered out, otherwise it'll\n        // show up as `?param=undefined`\n        .filter(([_, value]) => value !== undefined)\n        // array values need special syntax\n        .map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(',')}}` : `${value}`])\n        .forEach(([name, value]) => {\n          url.searchParams.append(name, value)\n        })\n    } else {\n      method = 'POST'\n      body = args\n    }\n\n    const headers = new Headers(this.headers)\n    if (count) {\n      headers.set('Prefer', `count=${count}`)\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url,\n      headers,\n      schema: this.schemaName,\n      body,\n      fetch: this.fetch ?? fetch,\n    })\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10442, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/postgrest-js/dist/cjs/index.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/src/index.ts"],"sourcesContent":["// Always update wrapper.mjs when updating this file.\nimport PostgrestClient from './PostgrestClient'\nimport PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestError from './PostgrestError'\n\nexport {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\nexport type {\n  PostgrestResponse,\n  PostgrestResponseFailure,\n  PostgrestResponseSuccess,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n} from './types/types'\nexport type { ClientServerOptions as PostgrestClientOptions } from './types/common/common'\n// https://github.com/supabase/postgrest-js/issues/551\n// To be replaced with a helper type that only uses public types\nexport type { GetResult as UnstableGetResult } from './select-query-parser/result'\n"],"names":[],"mappings":";;;;;AAAA,qDAAqD;AACrD,MAAA,oBAAA,QAAA,eAAA,+BAA+C;AAQ7C,QAAA,eAAA,GARK,kBAAA,OAAe,CAQL;AAPjB,MAAA,0BAAA,QAAA,eAAA,qCAA2D;AAQzD,QAAA,qBAAA,GARK,wBAAA,OAAqB,CAQL;AAPvB,MAAA,2BAAA,QAAA,eAAA,sCAA6D;AAQ3D,QAAA,sBAAA,GARK,yBAAA,OAAsB,CAQL;AAPxB,MAAA,8BAAA,QAAA,eAAA,yCAAmE;AAQjE,QAAA,yBAAA,GARK,4BAAA,OAAyB,CAQL;AAP3B,MAAA,qBAAA,QAAA,eAAA,gCAAiD;AAQ/C,QAAA,gBAAA,GARK,mBAAA,OAAgB,CAQL;AAPlB,MAAA,mBAAA,QAAA,eAAA,8BAA6C;AAQ3C,QAAA,cAAA,GARK,iBAAA,OAAc,CAQL;AAEhB,QAAA,OAAA,GAAe;IACb,eAAe,EAAf,kBAAA,OAAe;IACf,qBAAqB,EAArB,wBAAA,OAAqB;IACrB,sBAAsB,EAAtB,yBAAA,OAAsB;IACtB,yBAAyB,EAAzB,4BAAA,OAAyB;IACzB,gBAAgB,EAAhB,mBAAA,OAAgB;IAChB,cAAc,EAAd,iBAAA,OAAc;CACf,CAAA","debugId":null}},
    {"offset": {"line": 10472, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/postgrest-js/dist/esm/wrapper.mjs"],"sourcesContent":["import index from '../cjs/index.js'\nconst {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n} = index\n\nexport {\n  PostgrestBuilder,\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n  PostgrestTransformBuilder,\n  PostgrestError,\n}\n\n// compatibility with CJS output\nexport default {\n  PostgrestClient,\n  PostgrestQueryBuilder,\n  PostgrestFilterBuilder,\n  PostgrestTransformBuilder,\n  PostgrestBuilder,\n  PostgrestError,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA,MAAM,EACJ,eAAe,EACf,qBAAqB,EACrB,sBAAsB,EACtB,yBAAyB,EACzB,gBAAgB,EAChB,cAAc,EACf,GAAG,8NAAK;;uCAYM;IACb;IACA;IACA;IACA;IACA;IACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10504, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/websocket-factory.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/websocket-factory.ts"],"sourcesContent":["export interface WebSocketLike {\n  readonly CONNECTING: number\n  readonly OPEN: number\n  readonly CLOSING: number\n  readonly CLOSED: number\n  readonly readyState: number\n  readonly url: string\n  readonly protocol: string\n\n  close(code?: number, reason?: string): void\n  send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void\n\n  onopen: ((this: any, ev: Event) => any) | null\n  onmessage: ((this: any, ev: MessageEvent) => any) | null\n  onclose: ((this: any, ev: CloseEvent) => any) | null\n  onerror: ((this: any, ev: Event) => any) | null\n\n  addEventListener(type: string, listener: EventListener): void\n  removeEventListener(type: string, listener: EventListener): void\n\n  // Add additional properties that may exist on WebSocket implementations\n  binaryType?: string\n  bufferedAmount?: number\n  extensions?: string\n  dispatchEvent?: (event: Event) => boolean\n}\n\nexport interface WebSocketEnvironment {\n  type: 'native' | 'ws' | 'cloudflare' | 'unsupported'\n  constructor?: any\n  error?: string\n  workaround?: string\n}\n\nexport class WebSocketFactory {\n  private static detectEnvironment(): WebSocketEnvironment {\n    if (typeof WebSocket !== 'undefined') {\n      return { type: 'native', constructor: WebSocket }\n    }\n\n    if (typeof globalThis !== 'undefined' && typeof (globalThis as any).WebSocket !== 'undefined') {\n      return { type: 'native', constructor: (globalThis as any).WebSocket }\n    }\n\n    if (typeof global !== 'undefined' && typeof (global as any).WebSocket !== 'undefined') {\n      return { type: 'native', constructor: (global as any).WebSocket }\n    }\n\n    if (\n      typeof globalThis !== 'undefined' &&\n      typeof (globalThis as any).WebSocketPair !== 'undefined' &&\n      typeof globalThis.WebSocket === 'undefined'\n    ) {\n      return {\n        type: 'cloudflare',\n        error:\n          'Cloudflare Workers detected. WebSocket clients are not supported in Cloudflare Workers.',\n        workaround:\n          'Use Cloudflare Workers WebSocket API for server-side WebSocket handling, or deploy to a different runtime.',\n      }\n    }\n\n    if (\n      (typeof globalThis !== 'undefined' && (globalThis as any).EdgeRuntime) ||\n      (typeof navigator !== 'undefined' && navigator.userAgent?.includes('Vercel-Edge'))\n    ) {\n      return {\n        type: 'unsupported',\n        error:\n          'Edge runtime detected (Vercel Edge/Netlify Edge). WebSockets are not supported in edge functions.',\n        workaround:\n          'Use serverless functions or a different deployment target for WebSocket functionality.',\n      }\n    }\n\n    if (typeof process !== 'undefined') {\n      // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n      const processVersions = (process as any)['versions']\n      if (processVersions && processVersions['node']) {\n        // Remove 'v' prefix if present and parse the major version\n        const versionString = processVersions['node']\n        const nodeVersion = parseInt(versionString.replace(/^v/, '').split('.')[0])\n\n        // Node.js 22+ should have native WebSocket\n        if (nodeVersion >= 22) {\n          // Check if native WebSocket is available (should be in Node.js 22+)\n          if (typeof globalThis.WebSocket !== 'undefined') {\n            return { type: 'native', constructor: globalThis.WebSocket }\n          }\n          // If not available, user needs to provide it\n          return {\n            type: 'unsupported',\n            error: `Node.js ${nodeVersion} detected but native WebSocket not found.`,\n            workaround: 'Provide a WebSocket implementation via the transport option.',\n          }\n        }\n\n        // Node.js < 22 doesn't have native WebSocket\n        return {\n          type: 'unsupported',\n          error: `Node.js ${nodeVersion} detected without native WebSocket support.`,\n          workaround:\n            'For Node.js < 22, install \"ws\" package and provide it via the transport option:\\n' +\n            'import ws from \"ws\"\\n' +\n            'new RealtimeClient(url, { transport: ws })',\n        }\n      }\n    }\n\n    return {\n      type: 'unsupported',\n      error: 'Unknown JavaScript runtime without WebSocket support.',\n      workaround:\n        \"Ensure you're running in a supported environment (browser, Node.js, Deno) or provide a custom WebSocket implementation.\",\n    }\n  }\n\n  public static getWebSocketConstructor(): typeof WebSocket {\n    const env = this.detectEnvironment()\n    if (env.constructor) {\n      return env.constructor\n    }\n    let errorMessage = env.error || 'WebSocket not supported in this environment.'\n    if (env.workaround) {\n      errorMessage += `\\n\\nSuggested solution: ${env.workaround}`\n    }\n    throw new Error(errorMessage)\n  }\n\n  public static createWebSocket(url: string | URL, protocols?: string | string[]): WebSocketLike {\n    const WS = this.getWebSocketConstructor()\n    return new WS(url, protocols)\n  }\n\n  public static isWebSocketSupported(): boolean {\n    try {\n      const env = this.detectEnvironment()\n      return env.type === 'native' || env.type === 'ws'\n    } catch {\n      return false\n    }\n  }\n}\n\nexport default WebSocketFactory\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10612, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/version.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.76.1'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;;AAC1D,MAAM,OAAO,GAAG,QAAQ,CAAA","debugId":null}},
    {"offset": {"line": 10627, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/constants.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/constants.ts"],"sourcesContent":["import { version } from './version'\n\nexport const DEFAULT_VERSION = `realtime-js/${version}`\nexport const VSN: string = '1.0.0'\n\nexport const VERSION = version\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\nexport const MAX_PUSH_BUFFER_SIZE = 100\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAE5B,MAAM,eAAe,GAAG,CAAA,YAAA,EAAe,yOAAO,EAAE,CAAA;AAChD,MAAM,GAAG,GAAW,OAAO,CAAA;AAE3B,MAAM,OAAO,GAAG,yOAAO,CAAA;AAEvB,MAAM,eAAe,GAAG,KAAK,CAAA;AAE7B,MAAM,eAAe,GAAG,IAAI,CAAA;AAC5B,MAAM,oBAAoB,GAAG,GAAG,CAAA;AAEvC,IAAY,aAKX;AALD,CAAA,SAAY,aAAa;IACvB,aAAA,CAAA,aAAA,CAAA,aAAA,GAAA,EAAA,GAAA,YAAc,CAAA;IACd,aAAA,CAAA,aAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;IACR,aAAA,CAAA,aAAA,CAAA,UAAA,GAAA,EAAA,GAAA,SAAW,CAAA;IACX,aAAA,CAAA,aAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;AACZ,CAAC,EALW,aAAa,IAAA,CAAb,aAAa,GAAA,CAAA,CAAA,GAKxB;AAED,IAAY,cAMX;AAND,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,cAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;IACnB,cAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,cAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;IACnB,cAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EANW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAMzB;AAED,IAAY,cAOX;AAPD,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,QAAA,GAAA,WAAmB,CAAA;IACnB,cAAA,CAAA,QAAA,GAAA,WAAmB,CAAA;IACnB,cAAA,CAAA,OAAA,GAAA,UAAiB,CAAA;IACjB,cAAA,CAAA,QAAA,GAAA,WAAmB,CAAA;IACnB,cAAA,CAAA,QAAA,GAAA,WAAmB,CAAA;IACnB,cAAA,CAAA,eAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAPW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAOzB;AAED,IAAY,UAEX;AAFD,CAAA,SAAY,UAAU;IACpB,UAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;AACzB,CAAC,EAFW,UAAU,IAAA,CAAV,UAAU,GAAA,CAAA,CAAA,GAErB;AAED,IAAY,gBAKX;AALD,CAAA,SAAY,gBAAgB;IAC1B,gBAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,gBAAA,CAAA,OAAA,GAAA,MAAa,CAAA;IACb,gBAAA,CAAA,UAAA,GAAA,SAAmB,CAAA;IACnB,gBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;AACnB,CAAC,EALW,gBAAgB,IAAA,CAAhB,gBAAgB,GAAA,CAAA,CAAA,GAK3B","debugId":null}},
    {"offset": {"line": 10698, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/serializer.ts"],"sourcesContent":["// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: { [key: string]: any }\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)))\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n"],"names":[],"mappings":"AAAA,2HAA2H;AAC3H,8EAA8E;;;;;AAEhE,MAAO,UAAU;IAA/B,aAAA;QACE,IAAA,CAAA,aAAa,GAAG,CAAC,CAAA;IA0CnB,CAAC;IAxCC,MAAM,CAAC,UAAgC,EAAE,QAAkB,EAAA;QACzD,IAAI,UAAU,CAAC,WAAW,KAAK,WAAW,EAAE,CAAC;YAC3C,OAAO,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAA;QACjD,CAAC;QAED,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE,CAAC;YACnC,OAAO,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAA;QACzC,CAAC;QAED,OAAO,QAAQ,CAAC,CAAA,CAAE,CAAC,CAAA;IACrB,CAAC;IAEO,aAAa,CAAC,MAAmB,EAAA;QACvC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;QACjC,MAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAA;QAEjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IACrD,CAAC;IAEO,gBAAgB,CACtB,MAAmB,EACnB,IAAc,EACd,OAAoB,EAAA;QAOpB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAClC,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QAClC,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAA;QACnC,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,SAAS,CAAC,CAAC,CAAA;QACtE,MAAM,GAAG,MAAM,GAAG,SAAS,CAAA;QAC3B,MAAM,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,SAAS,CAAC,CAAC,CAAA;QACtE,MAAM,GAAG,MAAM,GAAG,SAAS,CAAA;QAC3B,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;QAEhF,OAAO;YAAE,GAAG,EAAE,IAAI;YAAE,KAAK,EAAE,KAAK;YAAE,KAAK,EAAE,KAAK;YAAE,OAAO,EAAE,IAAI;QAAA,CAAE,CAAA;IACjE,CAAC;CACF","debugId":null}},
    {"offset": {"line": 10743, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/timer.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/timer.ts"],"sourcesContent":["/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(\n    public callback: Function,\n    public timerCalc: Function\n  ) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n    this.timer = undefined\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(\n      () => {\n        this.tries = this.tries + 1\n        this.callback()\n      },\n      this.timerCalc(this.tries + 1)\n    )\n  }\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;;;;AACW,MAAO,KAAK;IAIxB,YACS,QAAkB,EAClB,SAAmB,CAAA;QADnB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAU;QAClB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAU;QAL5B,IAAA,CAAA,KAAK,GAAuB,SAAS,CAAA;QACrC,IAAA,CAAA,KAAK,GAAW,CAAC,CAAA;QAMf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC5B,CAAC;IAED,KAAK,GAAA;QACH,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;QACd,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACxB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAA;IACxB,CAAC;IAED,8DAA8D;IAC9D,eAAe,GAAA;QACb,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAExB,IAAI,CAAC,KAAK,GAAQ,UAAU,CAC1B,GAAG,EAAE;YACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;YAC3B,IAAI,CAAC,QAAQ,EAAE,CAAA;QACjB,CAAC,EACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAC/B,CAAA;IACH,CAAC;CACF","debugId":null}},
    {"offset": {"line": 10785, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/transformers.ts"],"sourcesContent":["/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record | null,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  if (!record) {\n    return {}\n  }\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n\nexport const httpEndpointURL = (socketUrl: string): string => {\n  const wsUrl = new URL(socketUrl)\n\n  wsUrl.protocol = wsUrl.protocol.replace(/^ws/i, 'http')\n\n  wsUrl.pathname = wsUrl.pathname\n    .replace(/\\/+$/, '') // remove all trailing slashes\n    .replace(/\\/socket\\/websocket$/i, '') // remove the socket/websocket path\n    .replace(/\\/socket$/i, '') // remove the socket path\n    .replace(/\\/websocket$/i, '') // remove the websocket path\n\n  if (wsUrl.pathname === '' || wsUrl.pathname === '/') {\n    wsUrl.pathname = '/api/broadcast'\n  } else {\n    wsUrl.pathname = wsUrl.pathname + '/api/broadcast'\n  }\n\n  return wsUrl.href\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10979, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/lib/push.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/lib/push.ts"],"sourcesContent":["import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport type RealtimeChannel from '../RealtimeChannel'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: { [key: string]: any }\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: any } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef(),\n    })\n  }\n\n  updatePayload(payload: { [key: string]: any }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket._makeRef()\n    this.refEvent = this.channel._replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel._on(this.refEvent, {}, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent) this.channel._trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel._off(this.refEvent, {})\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({ status, response }: { status: string; response: Function }) {\n    this.recHooks.filter((h) => h.status === status).forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11090, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/RealtimePresence.ts"],"sourcesContent":["/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport type { PresenceOpts, PresenceOnJoinCallback, PresenceOnLeaveCallback } from 'phoenix'\nimport type RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState<T extends { [key: string]: any } = {}> = {\n  [key: string]: Presence<T>[]\n}\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  enabled: boolean = false\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    opts?: PresenceOpts\n  ) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave)\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave)\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave)\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map((m: Presence) => m.presence_ref)\n        const curPresenceRefs = currentPresences.map((m: Presence) => m.presence_ref)\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map((m: Presence) => m.presence_ref)\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map((m: Presence) => m.presence_ref)\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(obj: RealtimePresenceState, func: PresenceChooser<T>): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11313, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/RealtimeChannel.ts"],"sourcesContent":["import { CHANNEL_EVENTS, CHANNEL_STATES, MAX_PUSH_BUFFER_SIZE } from './lib/constants'\nimport Push from './lib/push'\nimport type RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence, { REALTIME_PRESENCE_LISTEN_EVENTS } from './RealtimePresence'\nimport type {\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n} from './RealtimePresence'\nimport * as Transformers from './lib/transformers'\nimport { httpEndpointURL } from './lib/transformers'\n\ntype ReplayOption = {\n  since: number\n  limit?: number\n}\n\nexport type RealtimeChannelOptions = {\n  config: {\n    /**\n     * self option enables client to receive message it broadcast\n     * ack option instructs server to acknowledge that broadcast message was received\n     * replay option instructs server to replay broadcast messages\n     */\n    broadcast?: { self?: boolean; ack?: boolean; replay?: ReplayOption }\n    /**\n     * key option is used to track presence payload across clients\n     */\n    presence?: { key?: string; enabled?: boolean }\n    /**\n     * defines if the channel is private or not and if RLS policies will be used to check data\n     */\n    private?: boolean\n  }\n}\n\ntype RealtimeChangesPayloadBase = {\n  schema: string\n  table: string\n}\n\ntype RealtimeBroadcastChangesPayloadBase = RealtimeChangesPayloadBase & {\n  id: string\n}\n\nexport type RealtimeBroadcastInsertPayload<T extends { [key: string]: any }> =\n  RealtimeBroadcastChangesPayloadBase & {\n    operation: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    record: T\n    old_record: null\n  }\n\nexport type RealtimeBroadcastUpdatePayload<T extends { [key: string]: any }> =\n  RealtimeBroadcastChangesPayloadBase & {\n    operation: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    record: T\n    old_record: T\n  }\n\nexport type RealtimeBroadcastDeletePayload<T extends { [key: string]: any }> =\n  RealtimeBroadcastChangesPayloadBase & {\n    operation: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    record: null\n    old_record: T\n  }\n\nexport type RealtimeBroadcastPayload<T extends { [key: string]: any }> =\n  | RealtimeBroadcastInsertPayload<T>\n  | RealtimeBroadcastUpdatePayload<T>\n  | RealtimeBroadcastDeletePayload<T>\n\ntype RealtimePostgresChangesPayloadBase = {\n  schema: string\n  table: string\n  commit_timestamp: string\n  errors: string[]\n}\n\nexport type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    new: T\n    old: {}\n  }\n\nexport type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    new: T\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    new: {}\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =\n  | RealtimePostgresInsertPayload<T>\n  | RealtimePostgresUpdatePayload<T>\n  | RealtimePostgresDeletePayload<T>\n\nexport type RealtimePostgresChangesFilter<T extends `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT}`> = {\n  /**\n   * The type of database change to listen to.\n   */\n  event: T\n  /**\n   * The database schema to listen to.\n   */\n  schema: string\n  /**\n   * The database table to listen to.\n   */\n  table?: string\n  /**\n   * Receive database changes when filter is matched.\n   */\n  filter?: string\n}\n\nexport type RealtimeChannelSendResponse = 'ok' | 'timed out' | 'error'\n\nexport enum REALTIME_POSTGRES_CHANGES_LISTEN_EVENT {\n  ALL = '*',\n  INSERT = 'INSERT',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport enum REALTIME_LISTEN_TYPES {\n  BROADCAST = 'broadcast',\n  PRESENCE = 'presence',\n  POSTGRES_CHANGES = 'postgres_changes',\n  SYSTEM = 'system',\n}\n\nexport enum REALTIME_SUBSCRIBE_STATES {\n  SUBSCRIBED = 'SUBSCRIBED',\n  TIMED_OUT = 'TIMED_OUT',\n  CLOSED = 'CLOSED',\n  CHANNEL_ERROR = 'CHANNEL_ERROR',\n}\n\nexport const REALTIME_CHANNEL_STATES = CHANNEL_STATES\n\ninterface PostgresChangesFilters {\n  postgres_changes: {\n    id: string\n    event: string\n    schema?: string\n    table?: string\n    filter?: string\n  }[]\n}\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */\nexport default class RealtimeChannel {\n  bindings: {\n    [key: string]: {\n      type: string\n      filter: { [key: string]: any }\n      callback: Function\n      id?: string\n    }[]\n  } = {}\n  timeout: number\n  state: CHANNEL_STATES = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n  broadcastEndpointURL: string\n  subTopic: string\n  private: boolean\n\n  constructor(\n    /** Topic name can be any string. */\n    public topic: string,\n    public params: RealtimeChannelOptions = { config: {} },\n    public socket: RealtimeClient\n  ) {\n    this.subTopic = topic.replace(/^realtime:/i, '')\n    this.params.config = {\n      ...{\n        broadcast: { ack: false, self: false },\n        presence: { key: '', enabled: false },\n        private: false,\n      },\n      ...params.config,\n    }\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs)\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this._onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket._remove(this)\n    })\n    this._onError((reason: string) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this._isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n\n    this.joinPush.receive('error', (reason: any) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this._trigger(this._replyEventName(ref), payload)\n    })\n\n    this.presence = new RealtimePresence(this)\n\n    this.broadcastEndpointURL = httpEndpointURL(this.socket.endPoint)\n    this.private = this.params.config.private || false\n\n    if (!this.private && this.params.config?.broadcast?.replay) {\n      throw `tried to use replay on public channel '${this.topic}'. It must be a private channel.`\n    }\n  }\n\n  /** Subscribe registers your client with the server */\n  subscribe(\n    callback?: (status: REALTIME_SUBSCRIBE_STATES, err?: Error) => void,\n    timeout = this.timeout\n  ): RealtimeChannel {\n    if (!this.socket.isConnected()) {\n      this.socket.connect()\n    }\n    if (this.state == CHANNEL_STATES.closed) {\n      const {\n        config: { broadcast, presence, private: isPrivate },\n      } = this.params\n\n      const postgres_changes = this.bindings.postgres_changes?.map((r) => r.filter) ?? []\n\n      const presence_enabled =\n        (!!this.bindings[REALTIME_LISTEN_TYPES.PRESENCE] &&\n          this.bindings[REALTIME_LISTEN_TYPES.PRESENCE].length > 0) ||\n        this.params.config.presence?.enabled === true\n      const accessTokenPayload: { access_token?: string } = {}\n      const config = {\n        broadcast,\n        presence: { ...presence, enabled: presence_enabled },\n        postgres_changes,\n        private: isPrivate,\n      }\n\n      if (this.socket.accessTokenValue) {\n        accessTokenPayload.access_token = this.socket.accessTokenValue\n      }\n\n      this._onError((e: Error) => callback?.(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e))\n\n      this._onClose(() => callback?.(REALTIME_SUBSCRIBE_STATES.CLOSED))\n\n      this.updateJoinPayload({ ...{ config }, ...accessTokenPayload })\n\n      this.joinedOnce = true\n      this._rejoin(timeout)\n\n      this.joinPush\n        .receive('ok', async ({ postgres_changes }: PostgresChangesFilters) => {\n          this.socket.setAuth()\n          if (postgres_changes === undefined) {\n            callback?.(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED)\n            return\n          } else {\n            const clientPostgresBindings = this.bindings.postgres_changes\n            const bindingsLen = clientPostgresBindings?.length ?? 0\n            const newPostgresBindings = []\n\n            for (let i = 0; i < bindingsLen; i++) {\n              const clientPostgresBinding = clientPostgresBindings[i]\n              const {\n                filter: { event, schema, table, filter },\n              } = clientPostgresBinding\n              const serverPostgresFilter = postgres_changes && postgres_changes[i]\n\n              if (\n                serverPostgresFilter &&\n                serverPostgresFilter.event === event &&\n                serverPostgresFilter.schema === schema &&\n                serverPostgresFilter.table === table &&\n                serverPostgresFilter.filter === filter\n              ) {\n                newPostgresBindings.push({\n                  ...clientPostgresBinding,\n                  id: serverPostgresFilter.id,\n                })\n              } else {\n                this.unsubscribe()\n                this.state = CHANNEL_STATES.errored\n\n                callback?.(\n                  REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR,\n                  new Error('mismatch between server and client bindings for postgres changes')\n                )\n                return\n              }\n            }\n\n            this.bindings.postgres_changes = newPostgresBindings\n\n            callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED)\n            return\n          }\n        })\n        .receive('error', (error: { [key: string]: any }) => {\n          this.state = CHANNEL_STATES.errored\n          callback?.(\n            REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR,\n            new Error(JSON.stringify(Object.values(error).join(', ') || 'error'))\n          )\n          return\n        })\n        .receive('timeout', () => {\n          callback?.(REALTIME_SUBSCRIBE_STATES.TIMED_OUT)\n          return\n        })\n    }\n    return this\n  }\n\n  presenceState<T extends { [key: string]: any } = {}>(): RealtimePresenceState<T> {\n    return this.presence.state as RealtimePresenceState<T>\n  }\n\n  async track(\n    payload: { [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'track',\n        payload,\n      },\n      opts.timeout || this.timeout\n    )\n  }\n\n  async untrack(opts: { [key: string]: any } = {}): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'untrack',\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates an event handler that listens to changes.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.SYNC}` },\n    callback: () => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}` },\n    callback: (payload: RealtimePresenceJoinPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}` },\n    callback: (payload: RealtimePresenceLeavePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL}`>,\n    callback: (payload: RealtimePostgresChangesPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`>,\n    callback: (payload: RealtimePostgresInsertPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`>,\n    callback: (payload: RealtimePostgresUpdatePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`>,\n    callback: (payload: RealtimePostgresDeletePayload<T>) => void\n  ): RealtimeChannel\n  /**\n   * The following is placed here to display on supabase.com/docs/reference/javascript/subscribe.\n   * @param type One of \"broadcast\", \"presence\", or \"postgres_changes\".\n   * @param filter Custom object specific to the Realtime feature detailing which payloads to receive.\n   * @param callback Function to be invoked when event handler is triggered.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      meta?: {\n        replayed?: boolean\n        id: string\n      }\n      [key: string]: any\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      meta?: {\n        replayed?: boolean\n        id: string\n      }\n      payload: T\n    }) => void\n  ): RealtimeChannel\n  on<T extends Record<string, unknown>>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL\n      payload: RealtimeBroadcastPayload<T>\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT\n      payload: RealtimeBroadcastInsertPayload<T>\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE\n      payload: RealtimeBroadcastUpdatePayload<T>\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE\n      payload: RealtimeBroadcastDeletePayload<T>\n    }) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.SYSTEM}`,\n    filter: {},\n    callback: (payload: any) => void\n  ): RealtimeChannel\n  on(\n    type: `${REALTIME_LISTEN_TYPES}`,\n    filter: { event: string; [key: string]: string },\n    callback: (payload: any) => void\n  ): RealtimeChannel {\n    if (this.state === CHANNEL_STATES.joined && type === REALTIME_LISTEN_TYPES.PRESENCE) {\n      this.socket.log(\n        'channel',\n        `resubscribe to ${this.topic} due to change in presence callbacks on joined channel`\n      )\n      this.unsubscribe().then(() => this.subscribe())\n    }\n    return this._on(type, filter, callback)\n  }\n  /**\n   * Sends a broadcast message explicitly via REST API.\n   *\n   * This method always uses the REST API endpoint regardless of WebSocket connection state.\n   * Useful when you want to guarantee REST delivery or when gradually migrating from implicit REST fallback.\n   *\n   * @param event The name of the broadcast event\n   * @param payload Payload to be sent (required)\n   * @param opts Options including timeout\n   * @returns Promise resolving to object with success status, and error details if failed\n   */\n  async httpSend(\n    event: string,\n    payload: any,\n    opts: { timeout?: number } = {}\n  ): Promise<{ success: true } | { success: false; status: number; error: string }> {\n    const authorization = this.socket.accessTokenValue\n      ? `Bearer ${this.socket.accessTokenValue}`\n      : ''\n\n    if (payload === undefined || payload === null) {\n      return Promise.reject('Payload is required for httpSend()')\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        Authorization: authorization,\n        apikey: this.socket.apiKey ? this.socket.apiKey : '',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        messages: [\n          {\n            topic: this.subTopic,\n            event,\n            payload: payload,\n            private: this.private,\n          },\n        ],\n      }),\n    }\n\n    const response = await this._fetchWithTimeout(\n      this.broadcastEndpointURL,\n      options,\n      opts.timeout ?? this.timeout\n    )\n\n    if (response.status === 202) {\n      return { success: true }\n    }\n\n    let errorMessage = response.statusText\n    try {\n      const errorBody = await response.json()\n      errorMessage = errorBody.error || errorBody.message || errorMessage\n    } catch {}\n\n    return Promise.reject(new Error(errorMessage))\n  }\n\n  /**\n   * Sends a message into the channel.\n   *\n   * @param args Arguments to send to channel\n   * @param args.type The type of event to send\n   * @param args.event The name of the event being sent\n   * @param args.payload Payload to be sent\n   * @param opts Options to be used during the send process\n   */\n  async send(\n    args: {\n      type: 'broadcast' | 'presence' | 'postgres_changes'\n      event: string\n      payload?: any\n      [key: string]: any\n    },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    if (!this._canPush() && args.type === 'broadcast') {\n      console.warn(\n        'Realtime send() is automatically falling back to REST API. ' +\n          'This behavior will be deprecated in the future. ' +\n          'Please use httpSend() explicitly for REST delivery.'\n      )\n\n      const { event, payload: endpoint_payload } = args\n      const authorization = this.socket.accessTokenValue\n        ? `Bearer ${this.socket.accessTokenValue}`\n        : ''\n      const options = {\n        method: 'POST',\n        headers: {\n          Authorization: authorization,\n          apikey: this.socket.apiKey ? this.socket.apiKey : '',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          messages: [\n            {\n              topic: this.subTopic,\n              event,\n              payload: endpoint_payload,\n              private: this.private,\n            },\n          ],\n        }),\n      }\n\n      try {\n        const response = await this._fetchWithTimeout(\n          this.broadcastEndpointURL,\n          options,\n          opts.timeout ?? this.timeout\n        )\n\n        await response.body?.cancel()\n        return response.ok ? 'ok' : 'error'\n      } catch (error: any) {\n        if (error.name === 'AbortError') {\n          return 'timed out'\n        } else {\n          return 'error'\n        }\n      }\n    } else {\n      return new Promise((resolve) => {\n        const push = this._push(args.type, args, opts.timeout || this.timeout)\n\n        if (args.type === 'broadcast' && !this.params?.config?.broadcast?.ack) {\n          resolve('ok')\n        }\n\n        push.receive('ok', () => resolve('ok'))\n        push.receive('error', () => resolve('error'))\n        push.receive('timeout', () => resolve('timed out'))\n      })\n    }\n  }\n\n  updateJoinPayload(payload: { [key: string]: any }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel.\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout): Promise<'ok' | 'timed out' | 'error'> {\n    this.state = CHANNEL_STATES.leaving\n    const onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef())\n    }\n\n    this.joinPush.destroy()\n\n    let leavePush: Push | null = null\n\n    return new Promise<RealtimeChannelSendResponse>((resolve) => {\n      leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n      leavePush\n        .receive('ok', () => {\n          onClose()\n          resolve('ok')\n        })\n        .receive('timeout', () => {\n          onClose()\n          resolve('timed out')\n        })\n        .receive('error', () => {\n          resolve('error')\n        })\n\n      leavePush.send()\n      if (!this._canPush()) {\n        leavePush.trigger('ok', {})\n      }\n    }).finally(() => {\n      leavePush?.destroy()\n    })\n  }\n  /**\n   * Teardown the channel.\n   *\n   * Destroys and stops related timers.\n   */\n  teardown() {\n    this.pushBuffer.forEach((push: Push) => push.destroy())\n    this.pushBuffer = []\n    this.rejoinTimer.reset()\n    this.joinPush.destroy()\n    this.state = CHANNEL_STATES.closed\n    this.bindings = {}\n  }\n\n  /** @internal */\n\n  async _fetchWithTimeout(url: string, options: { [key: string]: any }, timeout: number) {\n    const controller = new AbortController()\n    const id = setTimeout(() => controller.abort(), timeout)\n\n    const response = await this.socket.fetch(url, {\n      ...options,\n      signal: controller.signal,\n    })\n\n    clearTimeout(id)\n\n    return response\n  }\n\n  /** @internal */\n  _push(event: string, payload: { [key: string]: any }, timeout = this.timeout) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this._canPush()) {\n      pushEvent.send()\n    } else {\n      this._addToPushBuffer(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** @internal */\n  _addToPushBuffer(pushEvent: Push) {\n    pushEvent.startTimeout()\n    this.pushBuffer.push(pushEvent)\n\n    // Enforce buffer size limit\n    if (this.pushBuffer.length > MAX_PUSH_BUFFER_SIZE) {\n      const removedPush = this.pushBuffer.shift()\n      if (removedPush) {\n        removedPush.destroy()\n        this.socket.log(\n          'channel',\n          `discarded push due to buffer overflow: ${removedPush.event}`,\n          removedPush.payload\n        )\n      }\n    }\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   *\n   * @internal\n   */\n  _onMessage(_event: string, payload: any, _ref?: string) {\n    return payload\n  }\n\n  /** @internal */\n  _isMember(topic: string): boolean {\n    return this.topic === topic\n  }\n\n  /** @internal */\n  _joinRef(): string {\n    return this.joinPush.ref\n  }\n\n  /** @internal */\n  _trigger(type: string, payload?: any, ref?: string) {\n    const typeLower = type.toLocaleLowerCase()\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n      return\n    }\n    let handledPayload = this._onMessage(typeLower, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    if (['insert', 'update', 'delete'].includes(typeLower)) {\n      this.bindings.postgres_changes\n        ?.filter((bind) => {\n          return bind.filter?.event === '*' || bind.filter?.event?.toLocaleLowerCase() === typeLower\n        })\n        .map((bind) => bind.callback(handledPayload, ref))\n    } else {\n      this.bindings[typeLower]\n        ?.filter((bind) => {\n          if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n            if ('id' in bind) {\n              const bindId = bind.id\n              const bindEvent = bind.filter?.event\n              return (\n                bindId &&\n                payload.ids?.includes(bindId) &&\n                (bindEvent === '*' ||\n                  bindEvent?.toLocaleLowerCase() === payload.data?.type.toLocaleLowerCase())\n              )\n            } else {\n              const bindEvent = bind?.filter?.event?.toLocaleLowerCase()\n              return bindEvent === '*' || bindEvent === payload?.event?.toLocaleLowerCase()\n            }\n          } else {\n            return bind.type.toLocaleLowerCase() === typeLower\n          }\n        })\n        .map((bind) => {\n          if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n            const postgresChanges = handledPayload.data\n            const { schema, table, commit_timestamp, type, errors } = postgresChanges\n            const enrichedPayload = {\n              schema: schema,\n              table: table,\n              commit_timestamp: commit_timestamp,\n              eventType: type,\n              new: {},\n              old: {},\n              errors: errors,\n            }\n            handledPayload = {\n              ...enrichedPayload,\n              ...this._getPayloadRecords(postgresChanges),\n            }\n          }\n          bind.callback(handledPayload, ref)\n        })\n    }\n  }\n\n  /** @internal */\n  _isClosed(): boolean {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /** @internal */\n  _isJoined(): boolean {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /** @internal */\n  _isJoining(): boolean {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /** @internal */\n  _isLeaving(): boolean {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  /** @internal */\n  _replyEventName(ref: string): string {\n    return `chan_reply_${ref}`\n  }\n\n  /** @internal */\n  _on(type: string, filter: { [key: string]: any }, callback: Function) {\n    const typeLower = type.toLocaleLowerCase()\n    const binding = {\n      type: typeLower,\n      filter: filter,\n      callback: callback,\n    }\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower].push(binding)\n    } else {\n      this.bindings[typeLower] = [binding]\n    }\n\n    return this\n  }\n\n  /** @internal */\n  _off(type: string, filter: { [key: string]: any }) {\n    const typeLower = type.toLocaleLowerCase()\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n        return !(\n          bind.type?.toLocaleLowerCase() === typeLower &&\n          RealtimeChannel.isEqual(bind.filter, filter)\n        )\n      })\n    }\n    return this\n  }\n\n  /** @internal */\n  private static isEqual(obj1: { [key: string]: string }, obj2: { [key: string]: string }) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /** @internal */\n  private _rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this._rejoin()\n    }\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel closes.\n   *\n   * @internal\n   */\n  private _onClose(callback: Function) {\n    this._on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel encounteres an error.\n   *\n   * @internal\n   */\n  private _onError(callback: Function) {\n    this._on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  /**\n   * Returns `true` if the socket is connected and the channel has been joined.\n   *\n   * @internal\n   */\n  private _canPush(): boolean {\n    return this.socket.isConnected() && this._isJoined()\n  }\n\n  /** @internal */\n  private _rejoin(timeout = this.timeout): void {\n    if (this._isLeaving()) {\n      return\n    }\n    this.socket._leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /** @internal */\n  private _getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(payload.columns, payload.record)\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(payload.columns, payload.old_record)\n    }\n\n    return records\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11893, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/RealtimeClient.ts"],"sourcesContent":["import WebSocketFactory, { WebSocketLike } from './lib/websocket-factory'\n\nimport {\n  CHANNEL_EVENTS,\n  CONNECTION_STATE,\n  DEFAULT_VERSION,\n  DEFAULT_TIMEOUT,\n  SOCKET_STATES,\n  TRANSPORTS,\n  VSN,\n  WS_CLOSE_NORMAL,\n} from './lib/constants'\n\nimport Serializer from './lib/serializer'\nimport Timer from './lib/timer'\n\nimport { httpEndpointURL } from './lib/transformers'\nimport RealtimeChannel from './RealtimeChannel'\nimport type { RealtimeChannelOptions } from './RealtimeChannel'\n\ntype Fetch = typeof fetch\n\nexport type Channel = {\n  name: string\n  inserted_at: string\n  updated_at: string\n  id: number\n}\nexport type LogLevel = 'info' | 'warn' | 'error'\n\nexport type RealtimeMessage = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\nexport type RealtimeRemoveChannelResponse = 'ok' | 'timed out' | 'error'\nexport type HeartbeatStatus = 'sent' | 'ok' | 'error' | 'timeout' | 'disconnected'\n\nconst noop = () => {}\n\ntype RealtimeClientState = 'connecting' | 'connected' | 'disconnecting' | 'disconnected'\n\n// Connection-related constants\nconst CONNECTION_TIMEOUTS = {\n  HEARTBEAT_INTERVAL: 25000,\n  RECONNECT_DELAY: 10,\n  HEARTBEAT_TIMEOUT_FALLBACK: 100,\n} as const\n\nconst RECONNECT_INTERVALS = [1000, 2000, 5000, 10000] as const\nconst DEFAULT_RECONNECT_FALLBACK = 10000\n\nexport interface WebSocketLikeConstructor {\n  new (address: string | URL, subprotocols?: string | string[] | undefined): WebSocketLike\n  // Allow additional properties that may exist on WebSocket constructors\n  [key: string]: any\n}\n\nexport interface WebSocketLikeError {\n  error: any\n  message: string\n  type: string\n}\n\nexport type RealtimeClientOptions = {\n  transport?: WebSocketLikeConstructor\n  timeout?: number\n  heartbeatIntervalMs?: number\n  heartbeatCallback?: (status: HeartbeatStatus) => void\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: any }\n  //Deprecated: Use it in favour of correct casing `logLevel`\n  log_level?: LogLevel\n  logLevel?: LogLevel\n  fetch?: Fetch\n  worker?: boolean\n  workerUrl?: string\n  accessToken?: () => Promise<string | null>\n}\n\nconst WORKER_SCRIPT = `\n  addEventListener(\"message\", (e) => {\n    if (e.data.event === \"start\") {\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\n    }\n  });`\n\nexport default class RealtimeClient {\n  accessTokenValue: string | null = null\n  apiKey: string | null = null\n  channels: RealtimeChannel[] = new Array()\n  endPoint: string = ''\n  httpEndpoint: string = ''\n  /** @deprecated headers cannot be set on websocket connections */\n  headers?: { [key: string]: string } = {}\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: WebSocketLikeConstructor | null = null\n  heartbeatIntervalMs: number = CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  heartbeatCallback: (status: HeartbeatStatus) => void = noop\n  ref: number = 0\n  reconnectTimer: Timer | null = null\n  logger: Function = noop\n  logLevel?: LogLevel\n  encode!: Function\n  decode!: Function\n  reconnectAfterMs!: Function\n  conn: WebSocketLike | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n  fetch: Fetch\n  accessToken: (() => Promise<string | null>) | null = null\n  worker?: boolean\n  workerUrl?: string\n  workerRef?: Worker\n  private _connectionState: RealtimeClientState = 'disconnected'\n  private _wasManualDisconnect: boolean = false\n  private _authPromise: Promise<void> | null = null\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket. This can be a custom implementation\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers Deprecated: headers cannot be set on websocket connections and this option will be removed in the future.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.heartbeatCallback The optional function to handle heartbeat status.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.logLevel Sets the log level for Realtime\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n   * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n   */\n  constructor(endPoint: string, options?: RealtimeClientOptions) {\n    // Validate required parameters\n    if (!options?.params?.apikey) {\n      throw new Error('API key is required to connect to Realtime')\n    }\n    this.apiKey = options.params.apikey\n\n    // Initialize endpoint URLs\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.httpEndpoint = httpEndpointURL(endPoint)\n\n    this._initializeOptions(options)\n    this._setupReconnectionTimer()\n    this.fetch = this._resolveFetch(options?.fetch)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    // Skip if already connecting, disconnecting, or connected\n    if (\n      this.isConnecting() ||\n      this.isDisconnecting() ||\n      (this.conn !== null && this.isConnected())\n    ) {\n      return\n    }\n\n    this._setConnectionState('connecting')\n    this._setAuthSafely('connect')\n\n    // Establish WebSocket connection\n    if (this.transport) {\n      // Use custom transport if provided\n      this.conn = new this.transport(this.endpointURL()) as WebSocketLike\n    } else {\n      // Try to use native WebSocket\n      try {\n        this.conn = WebSocketFactory.createWebSocket(this.endpointURL())\n      } catch (error) {\n        this._setConnectionState('disconnected')\n        const errorMessage = (error as Error).message\n\n        // Provide helpful error message based on environment\n        if (errorMessage.includes('Node.js')) {\n          throw new Error(\n            `${errorMessage}\\n\\n` +\n              'To use Realtime in Node.js, you need to provide a WebSocket implementation:\\n\\n' +\n              'Option 1: Use Node.js 22+ which has native WebSocket support\\n' +\n              'Option 2: Install and provide the \"ws\" package:\\n\\n' +\n              '  npm install ws\\n\\n' +\n              '  import ws from \"ws\"\\n' +\n              '  const client = new RealtimeClient(url, {\\n' +\n              '    ...options,\\n' +\n              '    transport: ws\\n' +\n              '  })'\n          )\n        }\n        throw new Error(`WebSocket not available: ${errorMessage}`)\n      }\n    }\n    this._setupConnectionHandlers()\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   * @returns string The URL of the websocket.\n   */\n  endpointURL(): string {\n    return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }))\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(code?: number, reason?: string): void {\n    if (this.isDisconnecting()) {\n      return\n    }\n\n    this._setConnectionState('disconnecting', true)\n\n    if (this.conn) {\n      // Setup fallback timer to prevent hanging in disconnecting state\n      const fallbackTimer = setTimeout(() => {\n        this._setConnectionState('disconnected')\n      }, 100)\n\n      this.conn.onclose = () => {\n        clearTimeout(fallbackTimer)\n        this._setConnectionState('disconnected')\n      }\n\n      // Close the WebSocket connection\n      if (code) {\n        this.conn.close(code, reason ?? '')\n      } else {\n        this.conn.close()\n      }\n\n      this._teardownConnection()\n    } else {\n      this._setConnectionState('disconnected')\n    }\n  }\n\n  /**\n   * Returns all created channels\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.channels\n  }\n\n  /**\n   * Unsubscribes and removes a single channel\n   * @param channel A RealtimeChannel instance\n   */\n  async removeChannel(channel: RealtimeChannel): Promise<RealtimeRemoveChannelResponse> {\n    const status = await channel.unsubscribe()\n\n    if (this.channels.length === 0) {\n      this.disconnect()\n    }\n\n    return status\n  }\n\n  /**\n   * Unsubscribes and removes all channels\n   */\n  async removeAllChannels(): Promise<RealtimeRemoveChannelResponse[]> {\n    const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()))\n    this.channels = []\n    this.disconnect()\n    return values_1\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overridden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Returns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  /**\n   * Returns `true` if the connection is currently connecting.\n   */\n  isConnecting(): boolean {\n    return this._connectionState === 'connecting'\n  }\n\n  /**\n   * Returns `true` if the connection is currently disconnecting.\n   */\n  isDisconnecting(): boolean {\n    return this._connectionState === 'disconnecting'\n  }\n\n  channel(topic: string, params: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    const realtimeTopic = `realtime:${topic}`\n    const exists = this.getChannels().find((c: RealtimeChannel) => c.topic === realtimeTopic)\n\n    if (!exists) {\n      const chan = new RealtimeChannel(`realtime:${topic}`, params, this)\n      this.channels.push(chan)\n\n      return chan\n    } else {\n      return exists\n    }\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: RealtimeMessage): void {\n    const { topic, event, payload, ref } = data\n    const callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      callback()\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * If param is null it will use the `accessToken` callback function or the token set on the client.\n   *\n   * On callback used, it will set the value of the token internal to the client.\n   *\n   * @param token A JWT string to override the token set on the client.\n   */\n  async setAuth(token: string | null = null): Promise<void> {\n    this._authPromise = this._performAuth(token)\n    try {\n      await this._authPromise\n    } finally {\n      this._authPromise = null\n    }\n  }\n  /**\n   * Sends a heartbeat message if the socket is connected.\n   */\n  async sendHeartbeat() {\n    if (!this.isConnected()) {\n      try {\n        this.heartbeatCallback('disconnected')\n      } catch (e) {\n        this.log('error', 'error in heartbeat callback', e)\n      }\n      return\n    }\n\n    // Handle heartbeat timeout and force reconnection if needed\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log('transport', 'heartbeat timeout. Attempting to re-establish connection')\n      try {\n        this.heartbeatCallback('timeout')\n      } catch (e) {\n        this.log('error', 'error in heartbeat callback', e)\n      }\n\n      // Force reconnection after heartbeat timeout\n      this._wasManualDisconnect = false\n      this.conn?.close(WS_CLOSE_NORMAL, 'heartbeat timeout')\n\n      setTimeout(() => {\n        if (!this.isConnected()) {\n          this.reconnectTimer?.scheduleTimeout()\n        }\n      }, CONNECTION_TIMEOUTS.HEARTBEAT_TIMEOUT_FALLBACK)\n      return\n    }\n\n    // Send heartbeat message to server\n    this.pendingHeartbeatRef = this._makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    try {\n      this.heartbeatCallback('sent')\n    } catch (e) {\n      this.log('error', 'error in heartbeat callback', e)\n    }\n\n    this._setAuthSafely('heartbeat')\n  }\n\n  onHeartbeat(callback: (status: HeartbeatStatus) => void): void {\n    this.heartbeatCallback = callback\n  }\n  /**\n   * Flushes send buffer\n   */\n  flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  /**\n   * Use either custom fetch, if provided, or default fetch to make HTTP requests\n   *\n   * @internal\n   */\n  _resolveFetch = (customFetch?: Fetch): Fetch => {\n    let _fetch: Fetch\n    if (customFetch) {\n      _fetch = customFetch\n    } else if (typeof fetch === 'undefined') {\n      // Node.js environment without native fetch\n      _fetch = (...args) =>\n        import('@supabase/node-fetch' as any)\n          .then(({ default: fetch }) => fetch(...args))\n          .catch((error) => {\n            throw new Error(\n              `Failed to load @supabase/node-fetch: ${error.message}. ` +\n                `This is required for HTTP requests in Node.js environments without native fetch.`\n            )\n          })\n    } else {\n      _fetch = fetch\n    }\n    return (...args) => _fetch(...args)\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   *\n   * @internal\n   */\n  _makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   *\n   * @internal\n   */\n  _leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c._isJoined() || c._isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   *\n   * @internal\n   */\n  _remove(channel: RealtimeChannel) {\n    this.channels = this.channels.filter((c) => c.topic !== channel.topic)\n  }\n\n  /** @internal */\n  private _onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: RealtimeMessage) => {\n      // Handle heartbeat responses\n      if (msg.topic === 'phoenix' && msg.event === 'phx_reply') {\n        try {\n          this.heartbeatCallback(msg.payload.status === 'ok' ? 'ok' : 'error')\n        } catch (e) {\n          this.log('error', 'error in heartbeat callback', e)\n        }\n      }\n\n      // Handle pending heartbeat reference cleanup\n      if (msg.ref && msg.ref === this.pendingHeartbeatRef) {\n        this.pendingHeartbeatRef = null\n      }\n\n      // Log incoming message\n      const { topic, event, payload, ref } = msg\n      const refString = ref ? `(${ref})` : ''\n      const status = payload.status || ''\n      this.log('receive', `${status} ${topic} ${event} ${refString}`.trim(), payload)\n\n      // Route message to appropriate channels\n      this.channels\n        .filter((channel: RealtimeChannel) => channel._isMember(topic))\n        .forEach((channel: RealtimeChannel) => channel._trigger(event, payload, ref))\n\n      this._triggerStateCallbacks('message', msg)\n    })\n  }\n\n  /**\n   * Clear specific timer\n   * @internal\n   */\n  private _clearTimer(timer: 'heartbeat' | 'reconnect'): void {\n    if (timer === 'heartbeat' && this.heartbeatTimer) {\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = undefined\n    } else if (timer === 'reconnect') {\n      this.reconnectTimer?.reset()\n    }\n  }\n\n  /**\n   * Clear all timers\n   * @internal\n   */\n  private _clearAllTimers(): void {\n    this._clearTimer('heartbeat')\n    this._clearTimer('reconnect')\n  }\n\n  /**\n   * Setup connection handlers for WebSocket events\n   * @internal\n   */\n  private _setupConnectionHandlers(): void {\n    if (!this.conn) return\n\n    // Set binary type if supported (browsers and most WebSocket implementations)\n    if ('binaryType' in this.conn) {\n      ;(this.conn as any).binaryType = 'arraybuffer'\n    }\n\n    this.conn.onopen = () => this._onConnOpen()\n    this.conn.onerror = (error: Event) => this._onConnError(error)\n    this.conn.onmessage = (event: any) => this._onConnMessage(event)\n    this.conn.onclose = (event: any) => this._onConnClose(event)\n  }\n\n  /**\n   * Teardown connection and cleanup resources\n   * @internal\n   */\n  private _teardownConnection(): void {\n    if (this.conn) {\n      this.conn.onopen = null\n      this.conn.onerror = null\n      this.conn.onmessage = null\n      this.conn.onclose = null\n      this.conn = null\n    }\n    this._clearAllTimers()\n    this.channels.forEach((channel) => channel.teardown())\n  }\n\n  /** @internal */\n  private _onConnOpen() {\n    this._setConnectionState('connected')\n    this.log('transport', `connected to ${this.endpointURL()}`)\n    this.flushSendBuffer()\n    this._clearTimer('reconnect')\n\n    if (!this.worker) {\n      this._startHeartbeat()\n    } else {\n      if (!this.workerRef) {\n        this._startWorkerHeartbeat()\n      }\n    }\n\n    this._triggerStateCallbacks('open')\n  }\n  /** @internal */\n  private _startHeartbeat() {\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  /** @internal */\n  private _startWorkerHeartbeat() {\n    if (this.workerUrl) {\n      this.log('worker', `starting worker for from ${this.workerUrl}`)\n    } else {\n      this.log('worker', `starting default worker`)\n    }\n    const objectUrl = this._workerObjectUrl(this.workerUrl!)\n    this.workerRef = new Worker(objectUrl)\n    this.workerRef.onerror = (error) => {\n      this.log('worker', 'worker error', (error as ErrorEvent).message)\n      this.workerRef!.terminate()\n    }\n    this.workerRef.onmessage = (event) => {\n      if (event.data.event === 'keepAlive') {\n        this.sendHeartbeat()\n      }\n    }\n    this.workerRef.postMessage({\n      event: 'start',\n      interval: this.heartbeatIntervalMs,\n    })\n  }\n  /** @internal */\n  private _onConnClose(event: any) {\n    this._setConnectionState('disconnected')\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this._clearTimer('heartbeat')\n\n    // Only schedule reconnection if it wasn't a manual disconnect\n    if (!this._wasManualDisconnect) {\n      this.reconnectTimer?.scheduleTimeout()\n    }\n\n    this._triggerStateCallbacks('close', event)\n  }\n\n  /** @internal */\n  private _onConnError(error: Event) {\n    this._setConnectionState('disconnected')\n    this.log('transport', `${error}`)\n    this._triggerChanError()\n    this._triggerStateCallbacks('error', error)\n  }\n\n  /** @internal */\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeChannel) => channel._trigger(CHANNEL_EVENTS.error))\n  }\n\n  /** @internal */\n  private _appendParams(url: string, params: { [key: string]: string }): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n    return `${url}${prefix}${query}`\n  }\n\n  private _workerObjectUrl(url: string | undefined): string {\n    let result_url: string\n    if (url) {\n      result_url = url\n    } else {\n      const blob = new Blob([WORKER_SCRIPT], { type: 'application/javascript' })\n      result_url = URL.createObjectURL(blob)\n    }\n    return result_url\n  }\n\n  /**\n   * Set connection state with proper state management\n   * @internal\n   */\n  private _setConnectionState(state: RealtimeClientState, manual = false): void {\n    this._connectionState = state\n\n    if (state === 'connecting') {\n      this._wasManualDisconnect = false\n    } else if (state === 'disconnecting') {\n      this._wasManualDisconnect = manual\n    }\n  }\n\n  /**\n   * Perform the actual auth operation\n   * @internal\n   */\n  private async _performAuth(token: string | null = null): Promise<void> {\n    let tokenToSend: string | null\n\n    if (token) {\n      tokenToSend = token\n    } else if (this.accessToken) {\n      // Always call the accessToken callback to get fresh token\n      tokenToSend = await this.accessToken()\n    } else {\n      tokenToSend = this.accessTokenValue\n    }\n\n    if (this.accessTokenValue != tokenToSend) {\n      this.accessTokenValue = tokenToSend\n      this.channels.forEach((channel) => {\n        const payload = {\n          access_token: tokenToSend,\n          version: DEFAULT_VERSION,\n        }\n\n        tokenToSend && channel.updateJoinPayload(payload)\n\n        if (channel.joinedOnce && channel._isJoined()) {\n          channel._push(CHANNEL_EVENTS.access_token, {\n            access_token: tokenToSend,\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Wait for any in-flight auth operations to complete\n   * @internal\n   */\n  private async _waitForAuthIfNeeded(): Promise<void> {\n    if (this._authPromise) {\n      await this._authPromise\n    }\n  }\n\n  /**\n   * Safely call setAuth with standardized error handling\n   * @internal\n   */\n  private _setAuthSafely(context = 'general'): void {\n    this.setAuth().catch((e) => {\n      this.log('error', `error setting auth in ${context}`, e)\n    })\n  }\n\n  /**\n   * Trigger state change callbacks with proper error handling\n   * @internal\n   */\n  private _triggerStateCallbacks(event: keyof typeof this.stateChangeCallbacks, data?: any): void {\n    try {\n      this.stateChangeCallbacks[event].forEach((callback) => {\n        try {\n          callback(data)\n        } catch (e) {\n          this.log('error', `error in ${event} callback`, e)\n        }\n      })\n    } catch (e) {\n      this.log('error', `error triggering ${event} callbacks`, e)\n    }\n  }\n\n  /**\n   * Setup reconnection timer with proper configuration\n   * @internal\n   */\n  private _setupReconnectionTimer(): void {\n    this.reconnectTimer = new Timer(async () => {\n      setTimeout(async () => {\n        await this._waitForAuthIfNeeded()\n        if (!this.isConnected()) {\n          this.connect()\n        }\n      }, CONNECTION_TIMEOUTS.RECONNECT_DELAY)\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Initialize client options with defaults\n   * @internal\n   */\n  private _initializeOptions(options?: RealtimeClientOptions): void {\n    // Set defaults\n    this.transport = options?.transport ?? null\n    this.timeout = options?.timeout ?? DEFAULT_TIMEOUT\n    this.heartbeatIntervalMs =\n      options?.heartbeatIntervalMs ?? CONNECTION_TIMEOUTS.HEARTBEAT_INTERVAL\n    this.worker = options?.worker ?? false\n    this.accessToken = options?.accessToken ?? null\n    this.heartbeatCallback = options?.heartbeatCallback ?? noop\n    // Handle special cases\n    if (options?.params) this.params = options.params\n    if (options?.logger) this.logger = options.logger\n    if (options?.logLevel || options?.log_level) {\n      this.logLevel = options.logLevel || options.log_level\n      this.params = { ...this.params, log_level: this.logLevel as string }\n    }\n\n    // Set up functions with defaults\n    this.reconnectAfterMs =\n      options?.reconnectAfterMs ??\n      ((tries: number) => {\n        return RECONNECT_INTERVALS[tries - 1] || DEFAULT_RECONNECT_FALLBACK\n      })\n\n    this.encode =\n      options?.encode ??\n      ((payload: JSON, callback: Function) => {\n        return callback(JSON.stringify(payload))\n      })\n\n    this.decode = options?.decode ?? this.serializer.decode.bind(this.serializer)\n\n    // Handle worker setup\n    if (this.worker) {\n      if (typeof window !== 'undefined' && !window.Worker) {\n        throw new Error('Web Worker is not supported')\n      }\n      this.workerUrl = options?.workerUrl\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 12555, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/realtime-js/dist/module/index.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/realtime-js/src/index.ts"],"sourcesContent":["import RealtimeClient, {\n  RealtimeClientOptions,\n  RealtimeMessage,\n  RealtimeRemoveChannelResponse,\n  WebSocketLikeConstructor,\n} from './RealtimeClient'\nimport RealtimeChannel, {\n  RealtimeChannelOptions,\n  RealtimeChannelSendResponse,\n  RealtimePostgresChangesFilter,\n  RealtimePostgresChangesPayload,\n  RealtimePostgresInsertPayload,\n  RealtimePostgresUpdatePayload,\n  RealtimePostgresDeletePayload,\n  REALTIME_LISTEN_TYPES,\n  REALTIME_POSTGRES_CHANGES_LISTEN_EVENT,\n  REALTIME_SUBSCRIBE_STATES,\n  REALTIME_CHANNEL_STATES,\n} from './RealtimeChannel'\nimport RealtimePresence, {\n  RealtimePresenceState,\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n} from './RealtimePresence'\nimport WebSocketFactory, { WebSocketLike } from './lib/websocket-factory'\n\nexport {\n  RealtimePresence,\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeChannelSendResponse,\n  RealtimeClient,\n  RealtimeClientOptions,\n  RealtimeMessage,\n  RealtimePostgresChangesFilter,\n  RealtimePostgresChangesPayload,\n  RealtimePostgresInsertPayload,\n  RealtimePostgresUpdatePayload,\n  RealtimePostgresDeletePayload,\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n  RealtimeRemoveChannelResponse,\n  REALTIME_LISTEN_TYPES,\n  REALTIME_POSTGRES_CHANGES_LISTEN_EVENT,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n  REALTIME_SUBSCRIBE_STATES,\n  REALTIME_CHANNEL_STATES,\n  WebSocketFactory,\n  WebSocketLike,\n  WebSocketLikeConstructor,\n}\n"],"names":[],"mappings":";AAAA,OAAO,cAKN,MAAM,kBAAkB,CAAA;AACzB,OAAO,eAAe,EAAE,EAQtB,qBAAqB,EACrB,sCAAsC,EACtC,yBAAyB,EACzB,uBAAuB,GACxB,MAAM,mBAAmB,CAAA;AAC1B,OAAO,gBAAgB,EAAE,EAIvB,+BAA+B,GAChC,MAAM,oBAAoB,CAAA;AAC3B,OAAO,gBAAmC,MAAM,yBAAyB,CAAA","debugId":null}},
    {"offset": {"line": 12579, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/lib/version.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/lib/version.ts"],"sourcesContent":["// Generated automatically during releases by scripts/update-version-files.ts\n// This file provides runtime access to the package version for:\n// - HTTP request headers (e.g., X-Client-Info header for API requests)\n// - Debugging and support (identifying which version is running)\n// - Telemetry and logging (version reporting in errors/analytics)\n// - Ensuring build artifacts match the published package version\nexport const version = '2.76.1'\n"],"names":[],"mappings":"AAAA,6EAA6E;AAC7E,gEAAgE;AAChE,uEAAuE;AACvE,iEAAiE;AACjE,kEAAkE;AAClE,iEAAiE;;;;;AAC1D,MAAM,OAAO,GAAG,QAAQ,CAAA","debugId":null}},
    {"offset": {"line": 12594, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/lib/constants.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/lib/constants.ts"],"sourcesContent":["// constants.ts\nimport { RealtimeClientOptions } from '@supabase/realtime-js'\nimport { SupabaseAuthClientOptions } from './types'\nimport { version } from './version'\n\nlet JS_ENV = ''\n// @ts-ignore\nif (typeof Deno !== 'undefined') {\n  JS_ENV = 'deno'\n} else if (typeof document !== 'undefined') {\n  JS_ENV = 'web'\n} else if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n  JS_ENV = 'react-native'\n} else {\n  JS_ENV = 'node'\n}\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js-${JS_ENV}/${version}` }\n\nexport const DEFAULT_GLOBAL_OPTIONS = {\n  headers: DEFAULT_HEADERS,\n}\n\nexport const DEFAULT_DB_OPTIONS = {\n  schema: 'public',\n}\n\nexport const DEFAULT_AUTH_OPTIONS: SupabaseAuthClientOptions = {\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  flowType: 'implicit',\n}\n\nexport const DEFAULT_REALTIME_OPTIONS: RealtimeClientOptions = {}\n"],"names":[],"mappings":";;;;;;;;;;;;AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;;AAEnC,IAAI,MAAM,GAAG,EAAE,CAAA;AACf,aAAa;AACb,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE,CAAC;IAChC,MAAM,GAAG,MAAM,CAAA;AACjB,CAAC,MAAM,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE,CAAC;IAC3C,MAAM,GAAG,KAAK,CAAA;AAChB,CAAC,MAAM,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,CAAC,OAAO,KAAK,aAAa,EAAE,CAAC;IACnF,MAAM,GAAG,cAAc,CAAA;AACzB,CAAC,MAAM,CAAC;IACN,MAAM,GAAG,MAAM,CAAA;AACjB,CAAC;AAEM,MAAM,eAAe,GAAG;IAAE,eAAe,EAAE,CAAA,YAAA,EAAe,MAAM,CAAA,CAAA,EAAI,yOAAO,EAAE;AAAA,CAAE,CAAA;AAE/E,MAAM,sBAAsB,GAAG;IACpC,OAAO,EAAE,eAAe;CACzB,CAAA;AAEM,MAAM,kBAAkB,GAAG;IAChC,MAAM,EAAE,QAAQ;CACjB,CAAA;AAEM,MAAM,oBAAoB,GAA8B;IAC7D,gBAAgB,EAAE,IAAI;IACtB,cAAc,EAAE,IAAI;IACpB,kBAAkB,EAAE,IAAI;IACxB,QAAQ,EAAE,UAAU;CACrB,CAAA;AAEM,MAAM,wBAAwB,GAA0B,CAAA,CAAE,CAAA","debugId":null}},
    {"offset": {"line": 12639, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/lib/fetch.ts"],"sourcesContent":["// @ts-ignore\nimport nodeFetch, { Headers as NodeFetchHeaders } from '@supabase/node-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = nodeFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args: Parameters<Fetch>) => _fetch(...args)\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return NodeFetchHeaders\n  }\n\n  return Headers\n}\n\nexport const fetchWithAuth = (\n  supabaseKey: string,\n  getAccessToken: () => Promise<string | null>,\n  customFetch?: Fetch\n): Fetch => {\n  const fetch = resolveFetch(customFetch)\n  const HeadersConstructor = resolveHeadersConstructor()\n\n  return async (input, init) => {\n    const accessToken = (await getAccessToken()) ?? supabaseKey\n    let headers = new HeadersConstructor(init?.headers)\n\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey)\n    }\n\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`)\n    }\n\n    return fetch(input, { ...init, headers })\n  }\n}\n"],"names":[],"mappings":"AAAA,aAAa;;;;;;;;;AACb,OAAO,SAAS,EAAE,EAAE,OAAO,IAAI,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;;AAItE,MAAM,YAAY,GAAG,CAAC,WAAmB,EAAS,EAAE;IACzD,IAAI,MAAa,CAAA;IACjB,IAAI,WAAW,EAAE,CAAC;QAChB,MAAM,GAAG,WAAW,CAAA;IACtB,CAAC,MAAM,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE,CAAC;QACxC,MAAM,GAAG,oNAA6B,CAAA;IACxC,CAAC,MAAM,CAAC;QACN,MAAM,GAAG,KAAK,CAAA;IAChB,CAAC;IACD,OAAO,CAAC,GAAG,IAAuB,EAAE,CAAG,CAAD,KAAO,CAAC,GAAG,IAAI,CAAC,CAAA;AACxD,CAAC,CAAA;AAEM,MAAM,yBAAyB,GAAG,GAAG,EAAE;IAC5C,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE,CAAC;QACnC,OAAO,oNAAgB,CAAA;IACzB,CAAC;IAED,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA;AAEM,MAAM,aAAa,GAAG,CAC3B,WAAmB,EACnB,cAA4C,EAC5C,WAAmB,EACZ,EAAE;IACT,MAAM,KAAK,IAAG,YAAY,CAAC,WAAW,CAAC,CAAA;IACvC,MAAM,kBAAkB,GAAG,yBAAyB,EAAE,CAAA;IAEtD,OAAO,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;;QAC3B,MAAM,WAAW,GAAG,CAAA,KAAA,AAAC,MAAM,cAAc,EAAE,AAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,WAAW,CAAA;QAC3D,IAAI,OAAO,GAAG,IAAI,kBAAkB,CAAC,IAAI,KAAA,QAAJ,IAAI,KAAA,KAAA,IAAA,KAAA,IAAJ,IAAI,CAAE,OAAO,CAAC,CAAA;QAEnD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAA;QACpC,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,CAAA,OAAA,EAAU,WAAW,EAAE,CAAC,CAAA;QACvD,CAAC;QAED,OAAO,KAAK,EAAC,KAAK,EAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GAAO,IAAI,GAAA;YAAE,OAAO;QAAA,GAAG,CAAA;IAC3C,CAAC,CAAA;AACH,CAAC,CAAA","debugId":null}},
    {"offset": {"line": 12689, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/lib/helpers.ts"],"sourcesContent":["// helpers.ts\nimport { SupabaseClientOptions } from './types'\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function ensureTrailingSlash(url: string): string {\n  return url.endsWith('/') ? url : url + '/'\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function applySettingDefaults<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n>(\n  options: SupabaseClientOptions<SchemaName>,\n  defaults: SupabaseClientOptions<any>\n): Required<SupabaseClientOptions<SchemaName>> {\n  const {\n    db: dbOptions,\n    auth: authOptions,\n    realtime: realtimeOptions,\n    global: globalOptions,\n  } = options\n  const {\n    db: DEFAULT_DB_OPTIONS,\n    auth: DEFAULT_AUTH_OPTIONS,\n    realtime: DEFAULT_REALTIME_OPTIONS,\n    global: DEFAULT_GLOBAL_OPTIONS,\n  } = defaults\n\n  const result: Required<SupabaseClientOptions<SchemaName>> = {\n    db: {\n      ...DEFAULT_DB_OPTIONS,\n      ...dbOptions,\n    },\n    auth: {\n      ...DEFAULT_AUTH_OPTIONS,\n      ...authOptions,\n    },\n    realtime: {\n      ...DEFAULT_REALTIME_OPTIONS,\n      ...realtimeOptions,\n    },\n    storage: {},\n    global: {\n      ...DEFAULT_GLOBAL_OPTIONS,\n      ...globalOptions,\n      headers: {\n        ...(DEFAULT_GLOBAL_OPTIONS?.headers ?? {}),\n        ...(globalOptions?.headers ?? {}),\n      },\n    },\n    accessToken: async () => '',\n  }\n\n  if (options.accessToken) {\n    result.accessToken = options.accessToken\n  } else {\n    // hack around Required<>\n    delete (result as any).accessToken\n  }\n\n  return result\n}\n\n/**\n * Validates a Supabase client URL\n *\n * @param {string} supabaseUrl - The Supabase client URL string.\n * @returns {URL} - The validated base URL.\n * @throws {Error}\n */\nexport function validateSupabaseUrl(supabaseUrl: string): URL {\n  const trimmedUrl = supabaseUrl?.trim()\n\n  if (!trimmedUrl) {\n    throw new Error('supabaseUrl is required.')\n  }\n\n  if (!trimmedUrl.match(/^https?:\\/\\//i)) {\n    throw new Error('Invalid supabaseUrl: Must be a valid HTTP or HTTPS URL.')\n  }\n\n  try {\n    return new URL(ensureTrailingSlash(trimmedUrl))\n  } catch {\n    throw Error('Invalid supabaseUrl: Provided URL is malformed.')\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 12751, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/lib/SupabaseAuthClient.ts"],"sourcesContent":["import { AuthClient } from '@supabase/auth-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends AuthClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;;AAGxC,MAAO,kBAAmB,SAAQ,6QAAU;IAChD,YAAY,OAAkC,CAAA;QAC5C,KAAK,CAAC,OAAO,CAAC,CAAA;IAChB,CAAC;CACF","debugId":null}},
    {"offset": {"line": 12767, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/SupabaseClient.ts"],"sourcesContent":["import type { AuthChangeEvent } from '@supabase/auth-js'\nimport { FunctionsClient } from '@supabase/functions-js'\nimport {\n  PostgrestClient,\n  type PostgrestFilterBuilder,\n  type PostgrestQueryBuilder,\n} from '@supabase/postgrest-js'\nimport {\n  type RealtimeChannel,\n  type RealtimeChannelOptions,\n  RealtimeClient,\n  type RealtimeClientOptions,\n} from '@supabase/realtime-js'\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js'\nimport {\n  DEFAULT_AUTH_OPTIONS,\n  DEFAULT_DB_OPTIONS,\n  DEFAULT_GLOBAL_OPTIONS,\n  DEFAULT_REALTIME_OPTIONS,\n} from './lib/constants'\nimport { fetchWithAuth } from './lib/fetch'\nimport { applySettingDefaults, validateSupabaseUrl } from './lib/helpers'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport type {\n  Fetch,\n  GenericSchema,\n  SupabaseAuthClientOptions,\n  SupabaseClientOptions,\n} from './lib/types'\nimport { GetRpcFunctionFilterBuilderByArgs } from './lib/rest/types/common/rpc'\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient<\n  Database = any,\n  // The second type parameter is also used for specifying db_schema, so we\n  // support both cases.\n  // TODO: Allow setting db_schema from ClientOptions.\n  SchemaNameOrClientOptions extends\n    | (string & keyof Omit<Database, '__InternalSupabase'>)\n    | { PostgrestVersion: string } = 'public' extends keyof Omit<Database, '__InternalSupabase'>\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? SchemaNameOrClientOptions\n    : 'public' extends keyof Omit<Database, '__InternalSupabase'>\n      ? 'public'\n      : string & keyof Omit<Omit<Database, '__InternalSupabase'>, '__InternalSupabase'>,\n  Schema extends Omit<Database, '__InternalSupabase'>[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : never = Omit<Database, '__InternalSupabase'>[SchemaName] extends GenericSchema\n    ? Omit<Database, '__InternalSupabase'>[SchemaName]\n    : never,\n  ClientOptions extends { PostgrestVersion: string } = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? // If the version isn't explicitly set, look for it in the __InternalSupabase object to infer the right version\n      Database extends { __InternalSupabase: { PostgrestVersion: string } }\n      ? Database['__InternalSupabase']\n      : // otherwise default to 12\n        { PostgrestVersion: '12' }\n    : SchemaNameOrClientOptions extends { PostgrestVersion: string }\n      ? SchemaNameOrClientOptions\n      : never,\n> {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n  realtime: RealtimeClient\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  storage: SupabaseStorageClient\n\n  protected realtimeUrl: URL\n  protected authUrl: URL\n  protected storageUrl: URL\n  protected functionsUrl: URL\n  protected rest: PostgrestClient<Database, ClientOptions, SchemaName>\n  protected storageKey: string\n  protected fetch?: Fetch\n  protected changedAccessToken?: string\n  protected accessToken?: () => Promise<string | null>\n\n  protected headers: Record<string, string>\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.storage Options passed along to the storage-js constructor.\n   * @param options.global.fetch A custom fetch implementation.\n   * @param options.global.headers Any additional headers to send with each network request.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions<SchemaName>\n  ) {\n    const baseUrl = validateSupabaseUrl(supabaseUrl)\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    this.realtimeUrl = new URL('realtime/v1', baseUrl)\n    this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws')\n    this.authUrl = new URL('auth/v1', baseUrl)\n    this.storageUrl = new URL('storage/v1', baseUrl)\n    this.functionsUrl = new URL('functions/v1', baseUrl)\n\n    // default storage key uses the supabase project ref as a namespace\n    const defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`\n    const DEFAULTS = {\n      db: DEFAULT_DB_OPTIONS,\n      realtime: DEFAULT_REALTIME_OPTIONS,\n      auth: { ...DEFAULT_AUTH_OPTIONS, storageKey: defaultStorageKey },\n      global: DEFAULT_GLOBAL_OPTIONS,\n    }\n\n    const settings = applySettingDefaults(options ?? {}, DEFAULTS)\n\n    this.storageKey = settings.auth.storageKey ?? ''\n    this.headers = settings.global.headers ?? {}\n\n    if (!settings.accessToken) {\n      this.auth = this._initSupabaseAuthClient(\n        settings.auth ?? {},\n        this.headers,\n        settings.global.fetch\n      )\n    } else {\n      this.accessToken = settings.accessToken\n\n      this.auth = new Proxy<SupabaseAuthClient>({} as any, {\n        get: (_, prop) => {\n          throw new Error(\n            `@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(\n              prop\n            )} is not possible`\n          )\n        },\n      })\n    }\n\n    this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch)\n    this.realtime = this._initRealtimeClient({\n      headers: this.headers,\n      accessToken: this._getAccessToken.bind(this),\n      ...settings.realtime,\n    })\n    this.rest = new PostgrestClient(new URL('rest/v1', baseUrl).href, {\n      headers: this.headers,\n      schema: settings.db.schema,\n      fetch: this.fetch,\n    })\n\n    this.storage = new SupabaseStorageClient(\n      this.storageUrl.href,\n      this.headers,\n      this.fetch,\n      options?.storage\n    )\n\n    if (!settings.accessToken) {\n      this._listenForAuthEvents()\n    }\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions(): FunctionsClient {\n    return new FunctionsClient(this.functionsUrl.href, {\n      headers: this.headers,\n      customFetch: this.fetch,\n    })\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.from\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName],\n  >(relation: TableName): PostgrestQueryBuilder<ClientOptions, Schema, Table, TableName>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<ClientOptions, Schema, View, ViewName>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<ClientOptions, Schema, any> {\n    return this.rest.from(relation)\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.schema\n  /**\n   * Select a schema to query or perform an function (rpc) call.\n   *\n   * The schema needs to be on the list of exposed schemas inside Supabase.\n   *\n   * @param schema - The schema to query\n   */\n  schema<DynamicSchema extends string & keyof Omit<Database, '__InternalSupabase'>>(\n    schema: DynamicSchema\n  ): PostgrestClient<\n    Database,\n    ClientOptions,\n    DynamicSchema,\n    Database[DynamicSchema] extends GenericSchema ? Database[DynamicSchema] : any\n  > {\n    return this.rest.schema<DynamicSchema>(schema)\n  }\n\n  // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.get - When set to `true`, the function will be called with\n   * read-only access mode.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FnName extends string & keyof Schema['Functions'],\n    Args extends Schema['Functions'][FnName]['Args'] = never,\n    FilterBuilder extends GetRpcFunctionFilterBuilderByArgs<\n      Schema,\n      FnName,\n      Args\n    > = GetRpcFunctionFilterBuilderByArgs<Schema, FnName, Args>,\n  >(\n    fn: FnName,\n    args: Args = {} as Args,\n    options: {\n      head?: boolean\n      get?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {\n      head: false,\n      get: false,\n      count: undefined,\n    }\n  ): PostgrestFilterBuilder<\n    ClientOptions,\n    Schema,\n    FilterBuilder['Row'],\n    FilterBuilder['Result'],\n    FilterBuilder['RelationName'],\n    FilterBuilder['Relationships'],\n    'RPC'\n  > {\n    return this.rest.rpc(fn, args, options) as unknown as PostgrestFilterBuilder<\n      ClientOptions,\n      Schema,\n      FilterBuilder['Row'],\n      FilterBuilder['Result'],\n      FilterBuilder['RelationName'],\n      FilterBuilder['Relationships'],\n      'RPC'\n    >\n  }\n\n  /**\n   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n   *\n   * @param {string} name - The name of the Realtime channel.\n   * @param {Object} opts - The options to pass to the Realtime channel.\n   *\n   */\n  channel(name: string, opts: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    return this.realtime.channel(name, opts)\n  }\n\n  /**\n   * Returns all Realtime channels.\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.realtime.getChannels()\n  }\n\n  /**\n   * Unsubscribes and removes Realtime channel from Realtime client.\n   *\n   * @param {RealtimeChannel} channel - The name of the Realtime channel.\n   *\n   */\n  removeChannel(channel: RealtimeChannel): Promise<'ok' | 'timed out' | 'error'> {\n    return this.realtime.removeChannel(channel)\n  }\n\n  /**\n   * Unsubscribes and removes all Realtime channels from Realtime client.\n   */\n  removeAllChannels(): Promise<('ok' | 'timed out' | 'error')[]> {\n    return this.realtime.removeAllChannels()\n  }\n\n  private async _getAccessToken() {\n    if (this.accessToken) {\n      return await this.accessToken()\n    }\n\n    const { data } = await this.auth.getSession()\n\n    return data.session?.access_token ?? this.supabaseKey\n  }\n\n  private _initSupabaseAuthClient(\n    {\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      storageKey,\n      flowType,\n      lock,\n      debug,\n    }: SupabaseAuthClientOptions,\n    headers?: Record<string, string>,\n    fetch?: Fetch\n  ) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl.href,\n      headers: { ...authHeaders, ...headers },\n      storageKey: storageKey,\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      userStorage,\n      flowType,\n      lock,\n      debug,\n      fetch,\n      // auth checks if there is a custom authorizaiton header using this flag\n      // so it knows whether to return an error when getUser is called with no session\n      hasCustomAuthorizationHeader: Object.keys(this.headers).some(\n        (key) => key.toLowerCase() === 'authorization'\n      ),\n    })\n  }\n\n  private _initRealtimeClient(options: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl.href, {\n      ...options,\n      params: { ...{ apikey: this.supabaseKey }, ...options?.params },\n    })\n  }\n\n  private _listenForAuthEvents() {\n    const data = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, 'CLIENT', session?.access_token)\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    source: 'CLIENT' | 'STORAGE',\n    token?: string\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      this.changedAccessToken = token\n      this.realtime.setAuth(token)\n    } else if (event === 'SIGNED_OUT') {\n      this.realtime.setAuth()\n      if (source == 'STORAGE') this.auth.signOut()\n      this.changedAccessToken = undefined\n    }\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 12993, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/whopWorkoutPlanner/workout-planner/node_modules/@supabase/supabase-js/dist/module/index.js","sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40supabase/supabase-js/src/index.ts"],"sourcesContent":["import SupabaseClient from './SupabaseClient'\nimport type { SupabaseClientOptions } from './lib/types'\n\nexport * from '@supabase/auth-js'\nexport type { User as AuthUser, Session as AuthSession } from '@supabase/auth-js'\nexport {\n  type PostgrestResponse,\n  type PostgrestSingleResponse,\n  type PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport {\n  FunctionsHttpError,\n  FunctionsFetchError,\n  FunctionsRelayError,\n  FunctionsError,\n  type FunctionInvokeOptions,\n  FunctionRegion,\n} from '@supabase/functions-js'\nexport * from '@supabase/realtime-js'\nexport { default as SupabaseClient } from './SupabaseClient'\nexport type { SupabaseClientOptions, QueryResult, QueryData, QueryError } from './lib/types'\n\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = <\n  Database = any,\n  SchemaNameOrClientOptions extends\n    | (string & keyof Omit<Database, '__InternalSupabase'>)\n    | { PostgrestVersion: string } = 'public' extends keyof Omit<Database, '__InternalSupabase'>\n    ? 'public'\n    : string & keyof Omit<Database, '__InternalSupabase'>,\n  SchemaName extends string &\n    keyof Omit<Database, '__InternalSupabase'> = SchemaNameOrClientOptions extends string &\n    keyof Omit<Database, '__InternalSupabase'>\n    ? SchemaNameOrClientOptions\n    : 'public' extends keyof Omit<Database, '__InternalSupabase'>\n      ? 'public'\n      : string & keyof Omit<Omit<Database, '__InternalSupabase'>, '__InternalSupabase'>,\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName>\n): SupabaseClient<Database, SchemaNameOrClientOptions, SchemaName> => {\n  return new SupabaseClient<Database, SchemaNameOrClientOptions, SchemaName>(\n    supabaseUrl,\n    supabaseKey,\n    options\n  )\n}\n\n// Check for Node.js <= 18 deprecation\nfunction shouldShowDeprecationWarning(): boolean {\n  // Skip in browser environments\n  if (typeof window !== 'undefined') {\n    return false\n  }\n\n  // Skip if process is not available (e.g., Edge Runtime)\n  if (typeof process === 'undefined') {\n    return false\n  }\n\n  // Use dynamic property access to avoid Next.js Edge Runtime static analysis warnings\n  const processVersion = (process as any)['version']\n  if (processVersion === undefined || processVersion === null) {\n    return false\n  }\n\n  const versionMatch = processVersion.match(/^v(\\d+)\\./)\n  if (!versionMatch) {\n    return false\n  }\n\n  const majorVersion = parseInt(versionMatch[1], 10)\n  return majorVersion <= 18\n}\n\nif (shouldShowDeprecationWarning()) {\n  console.warn(\n    `⚠️  Node.js 18 and below are deprecated and will no longer be supported in future versions of @supabase/supabase-js. ` +\n      `Please upgrade to Node.js 20 or later. ` +\n      `For more information, visit: https://github.com/orgs/supabase/discussions/37217`\n  )\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAA;AAG7C,cAAc,mBAAmB,CAAA;AAEjC,OAAO,EAIL,cAAc,GACf,MAAM,wBAAwB,CAAA;AAS/B,cAAc,uBAAuB,CAAA;;;;;;;AAO9B,MAAM,YAAY,GAAG,CAe1B,WAAmB,EACnB,WAAmB,EACnB,OAA2C,EACsB,EAAE;IACnE,OAAO,IAAI,yOAAc,CACvB,WAAW,EACX,WAAW,EACX,OAAO,CACR,CAAA;AACH,CAAC,CAAA;AAED,sCAAsC;AACtC,SAAS,4BAA4B;IACnC,+BAA+B;IAC/B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;;IAIpC,wDAAwD;IACxD,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE,CAAC;QACnC,OAAO,KAAK,CAAA;IACd,CAAC;IAED,qFAAqF;IACrF,MAAM,cAAc,GAAI,OAAe,CAAC,SAAS,CAAC,CAAA;IAClD,IAAI,cAAc,KAAK,SAAS,IAAI,cAAc,KAAK,IAAI,EAAE,CAAC;QAC5D,OAAO,KAAK,CAAA;IACd,CAAC;IAED,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;IACtD,IAAI,CAAC,YAAY,EAAE,CAAC;QAClB,OAAO,KAAK,CAAA;IACd,CAAC;IAED,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;IAClD,OAAO,YAAY,IAAI,EAAE,CAAA;AAC3B,CAAC;AAED,IAAI,4BAA4B,EAAE,EAAE,CAAC;IACnC,OAAO,CAAC,IAAI,CACV,CAAA,qHAAA,CAAuH,GACrH,CAAA,uCAAA,CAAyC,GACzC,CAAA,+EAAA,CAAiF,CACpF,CAAA;AACH,CAAC","debugId":null}},
    {"offset": {"line": 13038, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/query.js"],"sourcesContent":["const originCache = new Map()\n    , originStackCache = new Map()\n    , originError = Symbol('OriginError')\n\nexport const CLOSE = {}\nexport class Query extends Promise {\n  constructor(strings, args, handler, canceller, options = {}) {\n    let resolve\n      , reject\n\n    super((a, b) => {\n      resolve = a\n      reject = b\n    })\n\n    this.tagged = Array.isArray(strings.raw)\n    this.strings = strings\n    this.args = args\n    this.handler = handler\n    this.canceller = canceller\n    this.options = options\n\n    this.state = null\n    this.statement = null\n\n    this.resolve = x => (this.active = false, resolve(x))\n    this.reject = x => (this.active = false, reject(x))\n\n    this.active = false\n    this.cancelled = null\n    this.executed = false\n    this.signature = ''\n\n    this[originError] = this.handler.debug\n      ? new Error()\n      : this.tagged && cachedError(this.strings)\n  }\n\n  get origin() {\n    return (this.handler.debug\n      ? this[originError].stack\n      : this.tagged && originStackCache.has(this.strings)\n        ? originStackCache.get(this.strings)\n        : originStackCache.set(this.strings, this[originError].stack).get(this.strings)\n    ) || ''\n  }\n\n  static get [Symbol.species]() {\n    return Promise\n  }\n\n  cancel() {\n    return this.canceller && (this.canceller(this), this.canceller = null)\n  }\n\n  simple() {\n    this.options.simple = true\n    this.options.prepare = false\n    return this\n  }\n\n  async readable() {\n    this.simple()\n    this.streaming = true\n    return this\n  }\n\n  async writable() {\n    this.simple()\n    this.streaming = true\n    return this\n  }\n\n  cursor(rows = 1, fn) {\n    this.options.simple = false\n    if (typeof rows === 'function') {\n      fn = rows\n      rows = 1\n    }\n\n    this.cursorRows = rows\n\n    if (typeof fn === 'function')\n      return (this.cursorFn = fn, this)\n\n    let prev\n    return {\n      [Symbol.asyncIterator]: () => ({\n        next: () => {\n          if (this.executed && !this.active)\n            return { done: true }\n\n          prev && prev()\n          const promise = new Promise((resolve, reject) => {\n            this.cursorFn = value => {\n              resolve({ value, done: false })\n              return new Promise(r => prev = r)\n            }\n            this.resolve = () => (this.active = false, resolve({ done: true }))\n            this.reject = x => (this.active = false, reject(x))\n          })\n          this.execute()\n          return promise\n        },\n        return() {\n          prev && prev(CLOSE)\n          return { done: true }\n        }\n      })\n    }\n  }\n\n  describe() {\n    this.options.simple = false\n    this.onlyDescribe = this.options.prepare = true\n    return this\n  }\n\n  stream() {\n    throw new Error('.stream has been renamed to .forEach')\n  }\n\n  forEach(fn) {\n    this.forEachFn = fn\n    this.handle()\n    return this\n  }\n\n  raw() {\n    this.isRaw = true\n    return this\n  }\n\n  values() {\n    this.isRaw = 'values'\n    return this\n  }\n\n  async handle() {\n    !this.executed && (this.executed = true) && await 1 && this.handler(this)\n  }\n\n  execute() {\n    this.handle()\n    return this\n  }\n\n  then() {\n    this.handle()\n    return super.then.apply(this, arguments)\n  }\n\n  catch() {\n    this.handle()\n    return super.catch.apply(this, arguments)\n  }\n\n  finally() {\n    this.handle()\n    return super.finally.apply(this, arguments)\n  }\n}\n\nfunction cachedError(xs) {\n  if (originCache.has(xs))\n    return originCache.get(xs)\n\n  const x = Error.stackTraceLimit\n  Error.stackTraceLimit = 4\n  originCache.set(xs, new Error())\n  Error.stackTraceLimit = x\n  return originCache.get(xs)\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13187, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/errors.js"],"sourcesContent":["export class PostgresError extends Error {\n  constructor(x) {\n    super(x.message)\n    this.name = this.constructor.name\n    Object.assign(this, x)\n  }\n}\n\nexport const Errors = {\n  connection,\n  postgres,\n  generic,\n  notSupported\n}\n\nfunction connection(x, options, socket) {\n  const { host, port } = socket || options\n  const error = Object.assign(\n    new Error(('write ' + x + ' ' + (options.path || (host + ':' + port)))),\n    {\n      code: x,\n      errno: x,\n      address: options.path || host\n    }, options.path ? {} : { port: port }\n  )\n  Error.captureStackTrace(error, connection)\n  return error\n}\n\nfunction postgres(x) {\n  const error = new PostgresError(x)\n  Error.captureStackTrace(error, postgres)\n  return error\n}\n\nfunction generic(code, message) {\n  const error = Object.assign(new Error(code + ': ' + message), { code })\n  Error.captureStackTrace(error, generic)\n  return error\n}\n\n/* c8 ignore next 10 */\nfunction notSupported(x) {\n  const error = Object.assign(\n    new Error(x + ' (B) is not supported'),\n    {\n      code: 'MESSAGE_NOT_SUPPORTED',\n      name: x\n    }\n  )\n  Error.captureStackTrace(error, notSupported)\n  return error\n}\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,sBAAsB;IACjC,YAAY,CAAC,CAAE;QACb,KAAK,CAAC,EAAE,OAAO;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;QACjC,OAAO,MAAM,CAAC,IAAI,EAAE;IACtB;AACF;AAEO,MAAM,SAAS;IACpB;IACA;IACA;IACA;AACF;AAEA,SAAS,WAAW,CAAC,EAAE,OAAO,EAAE,MAAM;IACpC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,UAAU;IACjC,MAAM,QAAQ,OAAO,MAAM,CACzB,IAAI,MAAO,WAAW,IAAI,MAAM,CAAC,QAAQ,IAAI,IAAK,OAAO,MAAM,IAAK,IACpE;QACE,MAAM;QACN,OAAO;QACP,SAAS,QAAQ,IAAI,IAAI;IAC3B,GAAG,QAAQ,IAAI,GAAG,CAAC,IAAI;QAAE,MAAM;IAAK;IAEtC,MAAM,iBAAiB,CAAC,OAAO;IAC/B,OAAO;AACT;AAEA,SAAS,SAAS,CAAC;IACjB,MAAM,QAAQ,IAAI,cAAc;IAChC,MAAM,iBAAiB,CAAC,OAAO;IAC/B,OAAO;AACT;AAEA,SAAS,QAAQ,IAAI,EAAE,OAAO;IAC5B,MAAM,QAAQ,OAAO,MAAM,CAAC,IAAI,MAAM,OAAO,OAAO,UAAU;QAAE;IAAK;IACrE,MAAM,iBAAiB,CAAC,OAAO;IAC/B,OAAO;AACT;AAEA,qBAAqB,GACrB,SAAS,aAAa,CAAC;IACrB,MAAM,QAAQ,OAAO,MAAM,CACzB,IAAI,MAAM,IAAI,0BACd;QACE,MAAM;QACN,MAAM;IACR;IAEF,MAAM,iBAAiB,CAAC,OAAO;IAC/B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13242, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/types.js"],"sourcesContent":["import { Query } from './query.js'\nimport { Errors } from './errors.js'\n\nexport const types = {\n  string: {\n    to: 25,\n    from: null,             // defaults to string\n    serialize: x => '' + x\n  },\n  number: {\n    to: 0,\n    from: [21, 23, 26, 700, 701],\n    serialize: x => '' + x,\n    parse: x => +x\n  },\n  json: {\n    to: 114,\n    from: [114, 3802],\n    serialize: x => JSON.stringify(x),\n    parse: x => JSON.parse(x)\n  },\n  boolean: {\n    to: 16,\n    from: 16,\n    serialize: x => x === true ? 't' : 'f',\n    parse: x => x === 't'\n  },\n  date: {\n    to: 1184,\n    from: [1082, 1114, 1184],\n    serialize: x => (x instanceof Date ? x : new Date(x)).toISOString(),\n    parse: x => new Date(x)\n  },\n  bytea: {\n    to: 17,\n    from: 17,\n    serialize: x => '\\\\x' + Buffer.from(x).toString('hex'),\n    parse: x => Buffer.from(x.slice(2), 'hex')\n  }\n}\n\nclass NotTagged { then() { notTagged() } catch() { notTagged() } finally() { notTagged() }}\n\nexport class Identifier extends NotTagged {\n  constructor(value) {\n    super()\n    this.value = escapeIdentifier(value)\n  }\n}\n\nexport class Parameter extends NotTagged {\n  constructor(value, type, array) {\n    super()\n    this.value = value\n    this.type = type\n    this.array = array\n  }\n}\n\nexport class Builder extends NotTagged {\n  constructor(first, rest) {\n    super()\n    this.first = first\n    this.rest = rest\n  }\n\n  build(before, parameters, types, options) {\n    const keyword = builders.map(([x, fn]) => ({ fn, i: before.search(x) })).sort((a, b) => a.i - b.i).pop()\n    return keyword.i === -1\n      ? escapeIdentifiers(this.first, options)\n      : keyword.fn(this.first, this.rest, parameters, types, options)\n  }\n}\n\nexport function handleValue(x, parameters, types, options) {\n  let value = x instanceof Parameter ? x.value : x\n  if (value === undefined) {\n    x instanceof Parameter\n      ? x.value = options.transform.undefined\n      : value = x = options.transform.undefined\n\n    if (value === undefined)\n      throw Errors.generic('UNDEFINED_VALUE', 'Undefined values are not allowed')\n  }\n\n  return '$' + (types.push(\n    x instanceof Parameter\n      ? (parameters.push(x.value), x.array\n        ? x.array[x.type || inferType(x.value)] || x.type || firstIsString(x.value)\n        : x.type\n      )\n      : (parameters.push(x), inferType(x))\n  ))\n}\n\nconst defaultHandlers = typeHandlers(types)\n\nexport function stringify(q, string, value, parameters, types, options) { // eslint-disable-line\n  for (let i = 1; i < q.strings.length; i++) {\n    string += (stringifyValue(string, value, parameters, types, options)) + q.strings[i]\n    value = q.args[i]\n  }\n\n  return string\n}\n\nfunction stringifyValue(string, value, parameters, types, o) {\n  return (\n    value instanceof Builder ? value.build(string, parameters, types, o) :\n    value instanceof Query ? fragment(value, parameters, types, o) :\n    value instanceof Identifier ? value.value :\n    value && value[0] instanceof Query ? value.reduce((acc, x) => acc + ' ' + fragment(x, parameters, types, o), '') :\n    handleValue(value, parameters, types, o)\n  )\n}\n\nfunction fragment(q, parameters, types, options) {\n  q.fragment = true\n  return stringify(q, q.strings[0], q.args[0], parameters, types, options)\n}\n\nfunction valuesBuilder(first, parameters, types, columns, options) {\n  return first.map(row =>\n    '(' + columns.map(column =>\n      stringifyValue('values', row[column], parameters, types, options)\n    ).join(',') + ')'\n  ).join(',')\n}\n\nfunction values(first, rest, parameters, types, options) {\n  const multi = Array.isArray(first[0])\n  const columns = rest.length ? rest.flat() : Object.keys(multi ? first[0] : first)\n  return valuesBuilder(multi ? first : [first], parameters, types, columns, options)\n}\n\nfunction select(first, rest, parameters, types, options) {\n  typeof first === 'string' && (first = [first].concat(rest))\n  if (Array.isArray(first))\n    return escapeIdentifiers(first, options)\n\n  let value\n  const columns = rest.length ? rest.flat() : Object.keys(first)\n  return columns.map(x => {\n    value = first[x]\n    return (\n      value instanceof Query ? fragment(value, parameters, types, options) :\n      value instanceof Identifier ? value.value :\n      handleValue(value, parameters, types, options)\n    ) + ' as ' + escapeIdentifier(options.transform.column.to ? options.transform.column.to(x) : x)\n  }).join(',')\n}\n\nconst builders = Object.entries({\n  values,\n  in: (...xs) => {\n    const x = values(...xs)\n    return x === '()' ? '(null)' : x\n  },\n  select,\n  as: select,\n  returning: select,\n  '\\\\(': select,\n\n  update(first, rest, parameters, types, options) {\n    return (rest.length ? rest.flat() : Object.keys(first)).map(x =>\n      escapeIdentifier(options.transform.column.to ? options.transform.column.to(x) : x) +\n      '=' + stringifyValue('values', first[x], parameters, types, options)\n    )\n  },\n\n  insert(first, rest, parameters, types, options) {\n    const columns = rest.length ? rest.flat() : Object.keys(Array.isArray(first) ? first[0] : first)\n    return '(' + escapeIdentifiers(columns, options) + ')values' +\n    valuesBuilder(Array.isArray(first) ? first : [first], parameters, types, columns, options)\n  }\n}).map(([x, fn]) => ([new RegExp('((?:^|[\\\\s(])' + x + '(?:$|[\\\\s(]))(?![\\\\s\\\\S]*\\\\1)', 'i'), fn]))\n\nfunction notTagged() {\n  throw Errors.generic('NOT_TAGGED_CALL', 'Query not called as a tagged template literal')\n}\n\nexport const serializers = defaultHandlers.serializers\nexport const parsers = defaultHandlers.parsers\n\nexport const END = {}\n\nfunction firstIsString(x) {\n  if (Array.isArray(x))\n    return firstIsString(x[0])\n  return typeof x === 'string' ? 1009 : 0\n}\n\nexport const mergeUserTypes = function(types) {\n  const user = typeHandlers(types || {})\n  return {\n    serializers: Object.assign({}, serializers, user.serializers),\n    parsers: Object.assign({}, parsers, user.parsers)\n  }\n}\n\nfunction typeHandlers(types) {\n  return Object.keys(types).reduce((acc, k) => {\n    types[k].from && [].concat(types[k].from).forEach(x => acc.parsers[x] = types[k].parse)\n    if (types[k].serialize) {\n      acc.serializers[types[k].to] = types[k].serialize\n      types[k].from && [].concat(types[k].from).forEach(x => acc.serializers[x] = types[k].serialize)\n    }\n    return acc\n  }, { parsers: {}, serializers: {} })\n}\n\nfunction escapeIdentifiers(xs, { transform: { column } }) {\n  return xs.map(x => escapeIdentifier(column.to ? column.to(x) : x)).join(',')\n}\n\nexport const escapeIdentifier = function escape(str) {\n  return '\"' + str.replace(/\"/g, '\"\"').replace(/\\./g, '\".\"') + '\"'\n}\n\nexport const inferType = function inferType(x) {\n  return (\n    x instanceof Parameter ? x.type :\n    x instanceof Date ? 1184 :\n    x instanceof Uint8Array ? 17 :\n    (x === true || x === false) ? 16 :\n    typeof x === 'bigint' ? 20 :\n    Array.isArray(x) ? inferType(x[0]) :\n    0\n  )\n}\n\nconst escapeBackslash = /\\\\/g\nconst escapeQuote = /\"/g\n\nfunction arrayEscape(x) {\n  return x\n    .replace(escapeBackslash, '\\\\\\\\')\n    .replace(escapeQuote, '\\\\\"')\n}\n\nexport const arraySerializer = function arraySerializer(xs, serializer, options, typarray) {\n  if (Array.isArray(xs) === false)\n    return xs\n\n  if (!xs.length)\n    return '{}'\n\n  const first = xs[0]\n  // Only _box (1020) has the ';' delimiter for arrays, all other types use the ',' delimiter\n  const delimiter = typarray === 1020 ? ';' : ','\n\n  if (Array.isArray(first) && !first.type)\n    return '{' + xs.map(x => arraySerializer(x, serializer, options, typarray)).join(delimiter) + '}'\n\n  return '{' + xs.map(x => {\n    if (x === undefined) {\n      x = options.transform.undefined\n      if (x === undefined)\n        throw Errors.generic('UNDEFINED_VALUE', 'Undefined values are not allowed')\n    }\n\n    return x === null\n      ? 'null'\n      : '\"' + arrayEscape(serializer ? serializer(x.type ? x.value : x) : '' + x) + '\"'\n  }).join(delimiter) + '}'\n}\n\nconst arrayParserState = {\n  i: 0,\n  char: null,\n  str: '',\n  quoted: false,\n  last: 0\n}\n\nexport const arrayParser = function arrayParser(x, parser, typarray) {\n  arrayParserState.i = arrayParserState.last = 0\n  return arrayParserLoop(arrayParserState, x, parser, typarray)\n}\n\nfunction arrayParserLoop(s, x, parser, typarray) {\n  const xs = []\n  // Only _box (1020) has the ';' delimiter for arrays, all other types use the ',' delimiter\n  const delimiter = typarray === 1020 ? ';' : ','\n  for (; s.i < x.length; s.i++) {\n    s.char = x[s.i]\n    if (s.quoted) {\n      if (s.char === '\\\\') {\n        s.str += x[++s.i]\n      } else if (s.char === '\"') {\n        xs.push(parser ? parser(s.str) : s.str)\n        s.str = ''\n        s.quoted = x[s.i + 1] === '\"'\n        s.last = s.i + 2\n      } else {\n        s.str += s.char\n      }\n    } else if (s.char === '\"') {\n      s.quoted = true\n    } else if (s.char === '{') {\n      s.last = ++s.i\n      xs.push(arrayParserLoop(s, x, parser, typarray))\n    } else if (s.char === '}') {\n      s.quoted = false\n      s.last < s.i && xs.push(parser ? parser(x.slice(s.last, s.i)) : x.slice(s.last, s.i))\n      s.last = s.i + 1\n      break\n    } else if (s.char === delimiter && s.p !== '}' && s.p !== '\"') {\n      xs.push(parser ? parser(x.slice(s.last, s.i)) : x.slice(s.last, s.i))\n      s.last = s.i + 1\n    }\n    s.p = s.char\n  }\n  s.last < s.i && xs.push(parser ? parser(x.slice(s.last, s.i + 1)) : x.slice(s.last, s.i + 1))\n  return xs\n}\n\nexport const toCamel = x => {\n  let str = x[0]\n  for (let i = 1; i < x.length; i++)\n    str += x[i] === '_' ? x[++i].toUpperCase() : x[i]\n  return str\n}\n\nexport const toPascal = x => {\n  let str = x[0].toUpperCase()\n  for (let i = 1; i < x.length; i++)\n    str += x[i] === '_' ? x[++i].toUpperCase() : x[i]\n  return str\n}\n\nexport const toKebab = x => x.replace(/_/g, '-')\n\nexport const fromCamel = x => x.replace(/([A-Z])/g, '_$1').toLowerCase()\nexport const fromPascal = x => (x.slice(0, 1) + x.slice(1).replace(/([A-Z])/g, '_$1')).toLowerCase()\nexport const fromKebab = x => x.replace(/-/g, '_')\n\nfunction createJsonTransform(fn) {\n  return function jsonTransform(x, column) {\n    return typeof x === 'object' && x !== null && (column.type === 114 || column.type === 3802)\n      ? Array.isArray(x)\n        ? x.map(x => jsonTransform(x, column))\n        : Object.entries(x).reduce((acc, [k, v]) => Object.assign(acc, { [fn(k)]: jsonTransform(v, column) }), {})\n      : x\n  }\n}\n\ntoCamel.column = { from: toCamel }\ntoCamel.value = { from: createJsonTransform(toCamel) }\nfromCamel.column = { to: fromCamel }\n\nexport const camel = { ...toCamel }\ncamel.column.to = fromCamel\n\ntoPascal.column = { from: toPascal }\ntoPascal.value = { from: createJsonTransform(toPascal) }\nfromPascal.column = { to: fromPascal }\n\nexport const pascal = { ...toPascal }\npascal.column.to = fromPascal\n\ntoKebab.column = { from: toKebab }\ntoKebab.value = { from: createJsonTransform(toKebab) }\nfromKebab.column = { to: fromKebab }\n\nexport const kebab = { ...toKebab }\nkebab.column.to = fromKebab\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13621, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/result.js"],"sourcesContent":["export default class Result extends Array {\n  constructor() {\n    super()\n    Object.defineProperties(this, {\n      count: { value: null, writable: true },\n      state: { value: null, writable: true },\n      command: { value: null, writable: true },\n      columns: { value: null, writable: true },\n      statement: { value: null, writable: true }\n    })\n  }\n\n  static get [Symbol.species]() {\n    return Array\n  }\n}\n"],"names":[],"mappings":";;;;AAAe,MAAM,eAAe;IAClC,aAAc;QACZ,KAAK;QACL,OAAO,gBAAgB,CAAC,IAAI,EAAE;YAC5B,OAAO;gBAAE,OAAO;gBAAM,UAAU;YAAK;YACrC,OAAO;gBAAE,OAAO;gBAAM,UAAU;YAAK;YACrC,SAAS;gBAAE,OAAO;gBAAM,UAAU;YAAK;YACvC,SAAS;gBAAE,OAAO;gBAAM,UAAU;YAAK;YACvC,WAAW;gBAAE,OAAO;gBAAM,UAAU;YAAK;QAC3C;IACF;IAEA,WAAW,CAAC,OAAO,OAAO,CAAC,GAAG;QAC5B,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13659, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/queue.js"],"sourcesContent":["export default Queue\n\nfunction Queue(initial = []) {\n  let xs = initial.slice()\n  let index = 0\n\n  return {\n    get length() {\n      return xs.length - index\n    },\n    remove: (x) => {\n      const index = xs.indexOf(x)\n      return index === -1\n        ? null\n        : (xs.splice(index, 1), x)\n    },\n    push: (x) => (xs.push(x), x),\n    shift: () => {\n      const out = xs[index++]\n\n      if (index === xs.length) {\n        index = 0\n        xs = []\n      } else {\n        xs[index - 1] = undefined\n      }\n\n      return out\n    }\n  }\n}\n"],"names":[],"mappings":";;;;uCAAe;AAEf,SAAS,MAAM,UAAU,EAAE;IACzB,IAAI,KAAK,QAAQ,KAAK;IACtB,IAAI,QAAQ;IAEZ,OAAO;QACL,IAAI,UAAS;YACX,OAAO,GAAG,MAAM,GAAG;QACrB;QACA,QAAQ,CAAC;YACP,MAAM,QAAQ,GAAG,OAAO,CAAC;YACzB,OAAO,UAAU,CAAC,IACd,OACA,CAAC,GAAG,MAAM,CAAC,OAAO,IAAI,CAAC;QAC7B;QACA,MAAM,CAAC,IAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,OAAO;YACL,MAAM,MAAM,EAAE,CAAC,QAAQ;YAEvB,IAAI,UAAU,GAAG,MAAM,EAAE;gBACvB,QAAQ;gBACR,KAAK,EAAE;YACT,OAAO;gBACL,EAAE,CAAC,QAAQ,EAAE,GAAG;YAClB;YAEA,OAAO;QACT;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13692, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/bytes.js"],"sourcesContent":["const size = 256\nlet buffer = Buffer.allocUnsafe(size)\n\nconst messages = 'BCcDdEFfHPpQSX'.split('').reduce((acc, x) => {\n  const v = x.charCodeAt(0)\n  acc[x] = () => {\n    buffer[0] = v\n    b.i = 5\n    return b\n  }\n  return acc\n}, {})\n\nconst b = Object.assign(reset, messages, {\n  N: String.fromCharCode(0),\n  i: 0,\n  inc(x) {\n    b.i += x\n    return b\n  },\n  str(x) {\n    const length = Buffer.byteLength(x)\n    fit(length)\n    b.i += buffer.write(x, b.i, length, 'utf8')\n    return b\n  },\n  i16(x) {\n    fit(2)\n    buffer.writeUInt16BE(x, b.i)\n    b.i += 2\n    return b\n  },\n  i32(x, i) {\n    if (i || i === 0) {\n      buffer.writeUInt32BE(x, i)\n      return b\n    }\n    fit(4)\n    buffer.writeUInt32BE(x, b.i)\n    b.i += 4\n    return b\n  },\n  z(x) {\n    fit(x)\n    buffer.fill(0, b.i, b.i + x)\n    b.i += x\n    return b\n  },\n  raw(x) {\n    buffer = Buffer.concat([buffer.subarray(0, b.i), x])\n    b.i = buffer.length\n    return b\n  },\n  end(at = 1) {\n    buffer.writeUInt32BE(b.i - at, at)\n    const out = buffer.subarray(0, b.i)\n    b.i = 0\n    buffer = Buffer.allocUnsafe(size)\n    return out\n  }\n})\n\nexport default b\n\nfunction fit(x) {\n  if (buffer.length - b.i < x) {\n    const prev = buffer\n        , length = prev.length\n\n    buffer = Buffer.allocUnsafe(length + (length >> 1) + x)\n    prev.copy(buffer)\n  }\n}\n\nfunction reset() {\n  b.i = 0\n  return b\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,OAAO;AACb,IAAI,SAAS,OAAO,WAAW,CAAC;AAEhC,MAAM,WAAW,iBAAiB,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK;IACvD,MAAM,IAAI,EAAE,UAAU,CAAC;IACvB,GAAG,CAAC,EAAE,GAAG;QACP,MAAM,CAAC,EAAE,GAAG;QACZ,EAAE,CAAC,GAAG;QACN,OAAO;IACT;IACA,OAAO;AACT,GAAG,CAAC;AAEJ,MAAM,IAAI,OAAO,MAAM,CAAC,OAAO,UAAU;IACvC,GAAG,OAAO,YAAY,CAAC;IACvB,GAAG;IACH,KAAI,CAAC;QACH,EAAE,CAAC,IAAI;QACP,OAAO;IACT;IACA,KAAI,CAAC;QACH,MAAM,SAAS,OAAO,UAAU,CAAC;QACjC,IAAI;QACJ,EAAE,CAAC,IAAI,OAAO,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,QAAQ;QACpC,OAAO;IACT;IACA,KAAI,CAAC;QACH,IAAI;QACJ,OAAO,aAAa,CAAC,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,IAAI;QACP,OAAO;IACT;IACA,KAAI,CAAC,EAAE,CAAC;QACN,IAAI,KAAK,MAAM,GAAG;YAChB,OAAO,aAAa,CAAC,GAAG;YACxB,OAAO;QACT;QACA,IAAI;QACJ,OAAO,aAAa,CAAC,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,IAAI;QACP,OAAO;IACT;IACA,GAAE,CAAC;QACD,IAAI;QACJ,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG;QAC1B,EAAE,CAAC,IAAI;QACP,OAAO;IACT;IACA,KAAI,CAAC;QACH,SAAS,OAAO,MAAM,CAAC;YAAC,OAAO,QAAQ,CAAC,GAAG,EAAE,CAAC;YAAG;SAAE;QACnD,EAAE,CAAC,GAAG,OAAO,MAAM;QACnB,OAAO;IACT;IACA,KAAI,KAAK,CAAC;QACR,OAAO,aAAa,CAAC,EAAE,CAAC,GAAG,IAAI;QAC/B,MAAM,MAAM,OAAO,QAAQ,CAAC,GAAG,EAAE,CAAC;QAClC,EAAE,CAAC,GAAG;QACN,SAAS,OAAO,WAAW,CAAC;QAC5B,OAAO;IACT;AACF;uCAEe;AAEf,SAAS,IAAI,CAAC;IACZ,IAAI,OAAO,MAAM,GAAG,EAAE,CAAC,GAAG,GAAG;QAC3B,MAAM,OAAO,QACP,SAAS,KAAK,MAAM;QAE1B,SAAS,OAAO,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI;QACrD,KAAK,IAAI,CAAC;IACZ;AACF;AAEA,SAAS;IACP,EAAE,CAAC,GAAG;IACN,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 13774, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/connection.js"],"sourcesContent":["import net from 'net'\nimport tls from 'tls'\nimport crypto from 'crypto'\nimport Stream from 'stream'\nimport { performance } from 'perf_hooks'\n\nimport { stringify, handleValue, arrayParser, arraySerializer } from './types.js'\nimport { Errors } from './errors.js'\nimport Result from './result.js'\nimport Queue from './queue.js'\nimport { Query, CLOSE } from './query.js'\nimport b from './bytes.js'\n\nexport default Connection\n\nlet uid = 1\n\nconst Sync = b().S().end()\n    , Flush = b().H().end()\n    , SSLRequest = b().i32(8).i32(80877103).end(8)\n    , ExecuteUnnamed = Buffer.concat([b().E().str(b.N).i32(0).end(), Sync])\n    , DescribeUnnamed = b().D().str('S').str(b.N).end()\n    , noop = () => { /* noop */ }\n\nconst retryRoutines = new Set([\n  'FetchPreparedStatement',\n  'RevalidateCachedQuery',\n  'transformAssignedExpr'\n])\n\nconst errorFields = {\n  83  : 'severity_local',    // S\n  86  : 'severity',          // V\n  67  : 'code',              // C\n  77  : 'message',           // M\n  68  : 'detail',            // D\n  72  : 'hint',              // H\n  80  : 'position',          // P\n  112 : 'internal_position', // p\n  113 : 'internal_query',    // q\n  87  : 'where',             // W\n  115 : 'schema_name',       // s\n  116 : 'table_name',        // t\n  99  : 'column_name',       // c\n  100 : 'data type_name',    // d\n  110 : 'constraint_name',   // n\n  70  : 'file',              // F\n  76  : 'line',              // L\n  82  : 'routine'            // R\n}\n\nfunction Connection(options, queues = {}, { onopen = noop, onend = noop, onclose = noop } = {}) {\n  const {\n    ssl,\n    max,\n    user,\n    host,\n    port,\n    database,\n    parsers,\n    transform,\n    onnotice,\n    onnotify,\n    onparameter,\n    max_pipeline,\n    keep_alive,\n    backoff,\n    target_session_attrs\n  } = options\n\n  const sent = Queue()\n      , id = uid++\n      , backend = { pid: null, secret: null }\n      , idleTimer = timer(end, options.idle_timeout)\n      , lifeTimer = timer(end, options.max_lifetime)\n      , connectTimer = timer(connectTimedOut, options.connect_timeout)\n\n  let socket = null\n    , cancelMessage\n    , result = new Result()\n    , incoming = Buffer.alloc(0)\n    , needsTypes = options.fetch_types\n    , backendParameters = {}\n    , statements = {}\n    , statementId = Math.random().toString(36).slice(2)\n    , statementCount = 1\n    , closedDate = 0\n    , remaining = 0\n    , hostIndex = 0\n    , retries = 0\n    , length = 0\n    , delay = 0\n    , rows = 0\n    , serverSignature = null\n    , nextWriteTimer = null\n    , terminated = false\n    , incomings = null\n    , results = null\n    , initial = null\n    , ending = null\n    , stream = null\n    , chunk = null\n    , ended = null\n    , nonce = null\n    , query = null\n    , final = null\n\n  const connection = {\n    queue: queues.closed,\n    idleTimer,\n    connect(query) {\n      initial = query\n      reconnect()\n    },\n    terminate,\n    execute,\n    cancel,\n    end,\n    count: 0,\n    id\n  }\n\n  queues.closed && queues.closed.push(connection)\n\n  return connection\n\n  async function createSocket() {\n    let x\n    try {\n      x = options.socket\n        ? (await Promise.resolve(options.socket(options)))\n        : new net.Socket()\n    } catch (e) {\n      error(e)\n      return\n    }\n    x.on('error', error)\n    x.on('close', closed)\n    x.on('drain', drain)\n    return x\n  }\n\n  async function cancel({ pid, secret }, resolve, reject) {\n    try {\n      cancelMessage = b().i32(16).i32(80877102).i32(pid).i32(secret).end(16)\n      await connect()\n      socket.once('error', reject)\n      socket.once('close', resolve)\n    } catch (error) {\n      reject(error)\n    }\n  }\n\n  function execute(q) {\n    if (terminated)\n      return queryError(q, Errors.connection('CONNECTION_DESTROYED', options))\n\n    if (q.cancelled)\n      return\n\n    try {\n      q.state = backend\n      query\n        ? sent.push(q)\n        : (query = q, query.active = true)\n\n      build(q)\n      return write(toBuffer(q))\n        && !q.describeFirst\n        && !q.cursorFn\n        && sent.length < max_pipeline\n        && (!q.options.onexecute || q.options.onexecute(connection))\n    } catch (error) {\n      sent.length === 0 && write(Sync)\n      errored(error)\n      return true\n    }\n  }\n\n  function toBuffer(q) {\n    if (q.parameters.length >= 65534)\n      throw Errors.generic('MAX_PARAMETERS_EXCEEDED', 'Max number of parameters (65534) exceeded')\n\n    return q.options.simple\n      ? b().Q().str(q.statement.string + b.N).end()\n      : q.describeFirst\n        ? Buffer.concat([describe(q), Flush])\n        : q.prepare\n          ? q.prepared\n            ? prepared(q)\n            : Buffer.concat([describe(q), prepared(q)])\n          : unnamed(q)\n  }\n\n  function describe(q) {\n    return Buffer.concat([\n      Parse(q.statement.string, q.parameters, q.statement.types, q.statement.name),\n      Describe('S', q.statement.name)\n    ])\n  }\n\n  function prepared(q) {\n    return Buffer.concat([\n      Bind(q.parameters, q.statement.types, q.statement.name, q.cursorName),\n      q.cursorFn\n        ? Execute('', q.cursorRows)\n        : ExecuteUnnamed\n    ])\n  }\n\n  function unnamed(q) {\n    return Buffer.concat([\n      Parse(q.statement.string, q.parameters, q.statement.types),\n      DescribeUnnamed,\n      prepared(q)\n    ])\n  }\n\n  function build(q) {\n    const parameters = []\n        , types = []\n\n    const string = stringify(q, q.strings[0], q.args[0], parameters, types, options)\n\n    !q.tagged && q.args.forEach(x => handleValue(x, parameters, types, options))\n\n    q.prepare = options.prepare && ('prepare' in q.options ? q.options.prepare : true)\n    q.string = string\n    q.signature = q.prepare && types + string\n    q.onlyDescribe && (delete statements[q.signature])\n    q.parameters = q.parameters || parameters\n    q.prepared = q.prepare && q.signature in statements\n    q.describeFirst = q.onlyDescribe || (parameters.length && !q.prepared)\n    q.statement = q.prepared\n      ? statements[q.signature]\n      : { string, types, name: q.prepare ? statementId + statementCount++ : '' }\n\n    typeof options.debug === 'function' && options.debug(id, string, parameters, types)\n  }\n\n  function write(x, fn) {\n    chunk = chunk ? Buffer.concat([chunk, x]) : Buffer.from(x)\n    if (fn || chunk.length >= 1024)\n      return nextWrite(fn)\n    nextWriteTimer === null && (nextWriteTimer = setImmediate(nextWrite))\n    return true\n  }\n\n  function nextWrite(fn) {\n    const x = socket.write(chunk, fn)\n    nextWriteTimer !== null && clearImmediate(nextWriteTimer)\n    chunk = nextWriteTimer = null\n    return x\n  }\n\n  function connectTimedOut() {\n    errored(Errors.connection('CONNECT_TIMEOUT', options, socket))\n    socket.destroy()\n  }\n\n  async function secure() {\n    write(SSLRequest)\n    const canSSL = await new Promise(r => socket.once('data', x => r(x[0] === 83))) // S\n\n    if (!canSSL && ssl === 'prefer')\n      return connected()\n\n    socket.removeAllListeners()\n    socket = tls.connect({\n      socket,\n      servername: net.isIP(socket.host) ? undefined : socket.host,\n      ...(ssl === 'require' || ssl === 'allow' || ssl === 'prefer'\n        ? { rejectUnauthorized: false }\n        : ssl === 'verify-full'\n          ? {}\n          : typeof ssl === 'object'\n            ? ssl\n            : {}\n      )\n    })\n    socket.on('secureConnect', connected)\n    socket.on('error', error)\n    socket.on('close', closed)\n    socket.on('drain', drain)\n  }\n\n  /* c8 ignore next 3 */\n  function drain() {\n    !query && onopen(connection)\n  }\n\n  function data(x) {\n    if (incomings) {\n      incomings.push(x)\n      remaining -= x.length\n      if (remaining > 0)\n        return\n    }\n\n    incoming = incomings\n      ? Buffer.concat(incomings, length - remaining)\n      : incoming.length === 0\n        ? x\n        : Buffer.concat([incoming, x], incoming.length + x.length)\n\n    while (incoming.length > 4) {\n      length = incoming.readUInt32BE(1)\n      if (length >= incoming.length) {\n        remaining = length - incoming.length\n        incomings = [incoming]\n        break\n      }\n\n      try {\n        handle(incoming.subarray(0, length + 1))\n      } catch (e) {\n        query && (query.cursorFn || query.describeFirst) && write(Sync)\n        errored(e)\n      }\n      incoming = incoming.subarray(length + 1)\n      remaining = 0\n      incomings = null\n    }\n  }\n\n  async function connect() {\n    terminated = false\n    backendParameters = {}\n    socket || (socket = await createSocket())\n\n    if (!socket)\n      return\n\n    connectTimer.start()\n\n    if (options.socket)\n      return ssl ? secure() : connected()\n\n    socket.on('connect', ssl ? secure : connected)\n\n    if (options.path)\n      return socket.connect(options.path)\n\n    socket.ssl = ssl\n    socket.connect(port[hostIndex], host[hostIndex])\n    socket.host = host[hostIndex]\n    socket.port = port[hostIndex]\n\n    hostIndex = (hostIndex + 1) % port.length\n  }\n\n  function reconnect() {\n    setTimeout(connect, closedDate ? closedDate + delay - performance.now() : 0)\n  }\n\n  function connected() {\n    try {\n      statements = {}\n      needsTypes = options.fetch_types\n      statementId = Math.random().toString(36).slice(2)\n      statementCount = 1\n      lifeTimer.start()\n      socket.on('data', data)\n      keep_alive && socket.setKeepAlive && socket.setKeepAlive(true, 1000 * keep_alive)\n      const s = StartupMessage()\n      write(s)\n    } catch (err) {\n      error(err)\n    }\n  }\n\n  function error(err) {\n    if (connection.queue === queues.connecting && options.host[retries + 1])\n      return\n\n    errored(err)\n    while (sent.length)\n      queryError(sent.shift(), err)\n  }\n\n  function errored(err) {\n    stream && (stream.destroy(err), stream = null)\n    query && queryError(query, err)\n    initial && (queryError(initial, err), initial = null)\n  }\n\n  function queryError(query, err) {\n    if (query.reserve)\n      return query.reject(err)\n\n    if (!err || typeof err !== 'object')\n      err = new Error(err)\n\n    'query' in err || 'parameters' in err || Object.defineProperties(err, {\n      stack: { value: err.stack + query.origin.replace(/.*\\n/, '\\n'), enumerable: options.debug },\n      query: { value: query.string, enumerable: options.debug },\n      parameters: { value: query.parameters, enumerable: options.debug },\n      args: { value: query.args, enumerable: options.debug },\n      types: { value: query.statement && query.statement.types, enumerable: options.debug }\n    })\n    query.reject(err)\n  }\n\n  function end() {\n    return ending || (\n      !connection.reserved && onend(connection),\n      !connection.reserved && !initial && !query && sent.length === 0\n        ? (terminate(), new Promise(r => socket && socket.readyState !== 'closed' ? socket.once('close', r) : r()))\n        : ending = new Promise(r => ended = r)\n    )\n  }\n\n  function terminate() {\n    terminated = true\n    if (stream || query || initial || sent.length)\n      error(Errors.connection('CONNECTION_DESTROYED', options))\n\n    clearImmediate(nextWriteTimer)\n    if (socket) {\n      socket.removeListener('data', data)\n      socket.removeListener('connect', connected)\n      socket.readyState === 'open' && socket.end(b().X().end())\n    }\n    ended && (ended(), ending = ended = null)\n  }\n\n  async function closed(hadError) {\n    incoming = Buffer.alloc(0)\n    remaining = 0\n    incomings = null\n    clearImmediate(nextWriteTimer)\n    socket.removeListener('data', data)\n    socket.removeListener('connect', connected)\n    idleTimer.cancel()\n    lifeTimer.cancel()\n    connectTimer.cancel()\n\n    socket.removeAllListeners()\n    socket = null\n\n    if (initial)\n      return reconnect()\n\n    !hadError && (query || sent.length) && error(Errors.connection('CONNECTION_CLOSED', options, socket))\n    closedDate = performance.now()\n    hadError && options.shared.retries++\n    delay = (typeof backoff === 'function' ? backoff(options.shared.retries) : backoff) * 1000\n    onclose(connection, Errors.connection('CONNECTION_CLOSED', options, socket))\n  }\n\n  /* Handlers */\n  function handle(xs, x = xs[0]) {\n    (\n      x === 68 ? DataRow :                   // D\n      x === 100 ? CopyData :                 // d\n      x === 65 ? NotificationResponse :      // A\n      x === 83 ? ParameterStatus :           // S\n      x === 90 ? ReadyForQuery :             // Z\n      x === 67 ? CommandComplete :           // C\n      x === 50 ? BindComplete :              // 2\n      x === 49 ? ParseComplete :             // 1\n      x === 116 ? ParameterDescription :     // t\n      x === 84 ? RowDescription :            // T\n      x === 82 ? Authentication :            // R\n      x === 110 ? NoData :                   // n\n      x === 75 ? BackendKeyData :            // K\n      x === 69 ? ErrorResponse :             // E\n      x === 115 ? PortalSuspended :          // s\n      x === 51 ? CloseComplete :             // 3\n      x === 71 ? CopyInResponse :            // G\n      x === 78 ? NoticeResponse :            // N\n      x === 72 ? CopyOutResponse :           // H\n      x === 99 ? CopyDone :                  // c\n      x === 73 ? EmptyQueryResponse :        // I\n      x === 86 ? FunctionCallResponse :      // V\n      x === 118 ? NegotiateProtocolVersion : // v\n      x === 87 ? CopyBothResponse :          // W\n      /* c8 ignore next */\n      UnknownMessage\n    )(xs)\n  }\n\n  function DataRow(x) {\n    let index = 7\n    let length\n    let column\n    let value\n\n    const row = query.isRaw ? new Array(query.statement.columns.length) : {}\n    for (let i = 0; i < query.statement.columns.length; i++) {\n      column = query.statement.columns[i]\n      length = x.readInt32BE(index)\n      index += 4\n\n      value = length === -1\n        ? null\n        : query.isRaw === true\n          ? x.subarray(index, index += length)\n          : column.parser === undefined\n            ? x.toString('utf8', index, index += length)\n            : column.parser.array === true\n              ? column.parser(x.toString('utf8', index + 1, index += length))\n              : column.parser(x.toString('utf8', index, index += length))\n\n      query.isRaw\n        ? (row[i] = query.isRaw === true\n          ? value\n          : transform.value.from ? transform.value.from(value, column) : value)\n        : (row[column.name] = transform.value.from ? transform.value.from(value, column) : value)\n    }\n\n    query.forEachFn\n      ? query.forEachFn(transform.row.from ? transform.row.from(row) : row, result)\n      : (result[rows++] = transform.row.from ? transform.row.from(row) : row)\n  }\n\n  function ParameterStatus(x) {\n    const [k, v] = x.toString('utf8', 5, x.length - 1).split(b.N)\n    backendParameters[k] = v\n    if (options.parameters[k] !== v) {\n      options.parameters[k] = v\n      onparameter && onparameter(k, v)\n    }\n  }\n\n  function ReadyForQuery(x) {\n    query && query.options.simple && query.resolve(results || result)\n    query = results = null\n    result = new Result()\n    connectTimer.cancel()\n\n    if (initial) {\n      if (target_session_attrs) {\n        if (!backendParameters.in_hot_standby || !backendParameters.default_transaction_read_only)\n          return fetchState()\n        else if (tryNext(target_session_attrs, backendParameters))\n          return terminate()\n      }\n\n      if (needsTypes) {\n        initial.reserve && (initial = null)\n        return fetchArrayTypes()\n      }\n\n      initial && !initial.reserve && execute(initial)\n      options.shared.retries = retries = 0\n      initial = null\n      return\n    }\n\n    while (sent.length && (query = sent.shift()) && (query.active = true, query.cancelled))\n      Connection(options).cancel(query.state, query.cancelled.resolve, query.cancelled.reject)\n\n    if (query)\n      return // Consider opening if able and sent.length < 50\n\n    connection.reserved\n      ? !connection.reserved.release && x[5] === 73 // I\n        ? ending\n          ? terminate()\n          : (connection.reserved = null, onopen(connection))\n        : connection.reserved()\n      : ending\n        ? terminate()\n        : onopen(connection)\n  }\n\n  function CommandComplete(x) {\n    rows = 0\n\n    for (let i = x.length - 1; i > 0; i--) {\n      if (x[i] === 32 && x[i + 1] < 58 && result.count === null)\n        result.count = +x.toString('utf8', i + 1, x.length - 1)\n      if (x[i - 1] >= 65) {\n        result.command = x.toString('utf8', 5, i)\n        result.state = backend\n        break\n      }\n    }\n\n    final && (final(), final = null)\n\n    if (result.command === 'BEGIN' && max !== 1 && !connection.reserved)\n      return errored(Errors.generic('UNSAFE_TRANSACTION', 'Only use sql.begin, sql.reserved or max: 1'))\n\n    if (query.options.simple)\n      return BindComplete()\n\n    if (query.cursorFn) {\n      result.count && query.cursorFn(result)\n      write(Sync)\n    }\n\n    query.resolve(result)\n  }\n\n  function ParseComplete() {\n    query.parsing = false\n  }\n\n  function BindComplete() {\n    !result.statement && (result.statement = query.statement)\n    result.columns = query.statement.columns\n  }\n\n  function ParameterDescription(x) {\n    const length = x.readUInt16BE(5)\n\n    for (let i = 0; i < length; ++i)\n      !query.statement.types[i] && (query.statement.types[i] = x.readUInt32BE(7 + i * 4))\n\n    query.prepare && (statements[query.signature] = query.statement)\n    query.describeFirst && !query.onlyDescribe && (write(prepared(query)), query.describeFirst = false)\n  }\n\n  function RowDescription(x) {\n    if (result.command) {\n      results = results || [result]\n      results.push(result = new Result())\n      result.count = null\n      query.statement.columns = null\n    }\n\n    const length = x.readUInt16BE(5)\n    let index = 7\n    let start\n\n    query.statement.columns = Array(length)\n\n    for (let i = 0; i < length; ++i) {\n      start = index\n      while (x[index++] !== 0);\n      const table = x.readUInt32BE(index)\n      const number = x.readUInt16BE(index + 4)\n      const type = x.readUInt32BE(index + 6)\n      query.statement.columns[i] = {\n        name: transform.column.from\n          ? transform.column.from(x.toString('utf8', start, index - 1))\n          : x.toString('utf8', start, index - 1),\n        parser: parsers[type],\n        table,\n        number,\n        type\n      }\n      index += 18\n    }\n\n    result.statement = query.statement\n    if (query.onlyDescribe)\n      return (query.resolve(query.statement), write(Sync))\n  }\n\n  async function Authentication(x, type = x.readUInt32BE(5)) {\n    (\n      type === 3 ? AuthenticationCleartextPassword :\n      type === 5 ? AuthenticationMD5Password :\n      type === 10 ? SASL :\n      type === 11 ? SASLContinue :\n      type === 12 ? SASLFinal :\n      type !== 0 ? UnknownAuth :\n      noop\n    )(x, type)\n  }\n\n  /* c8 ignore next 5 */\n  async function AuthenticationCleartextPassword() {\n    const payload = await Pass()\n    write(\n      b().p().str(payload).z(1).end()\n    )\n  }\n\n  async function AuthenticationMD5Password(x) {\n    const payload = 'md5' + (\n      await md5(\n        Buffer.concat([\n          Buffer.from(await md5((await Pass()) + user)),\n          x.subarray(9)\n        ])\n      )\n    )\n    write(\n      b().p().str(payload).z(1).end()\n    )\n  }\n\n  async function SASL() {\n    nonce = (await crypto.randomBytes(18)).toString('base64')\n    b().p().str('SCRAM-SHA-256' + b.N)\n    const i = b.i\n    write(b.inc(4).str('n,,n=*,r=' + nonce).i32(b.i - i - 4, i).end())\n  }\n\n  async function SASLContinue(x) {\n    const res = x.toString('utf8', 9).split(',').reduce((acc, x) => (acc[x[0]] = x.slice(2), acc), {})\n\n    const saltedPassword = await crypto.pbkdf2Sync(\n      await Pass(),\n      Buffer.from(res.s, 'base64'),\n      parseInt(res.i), 32,\n      'sha256'\n    )\n\n    const clientKey = await hmac(saltedPassword, 'Client Key')\n\n    const auth = 'n=*,r=' + nonce + ','\n               + 'r=' + res.r + ',s=' + res.s + ',i=' + res.i\n               + ',c=biws,r=' + res.r\n\n    serverSignature = (await hmac(await hmac(saltedPassword, 'Server Key'), auth)).toString('base64')\n\n    const payload = 'c=biws,r=' + res.r + ',p=' + xor(\n      clientKey, Buffer.from(await hmac(await sha256(clientKey), auth))\n    ).toString('base64')\n\n    write(\n      b().p().str(payload).end()\n    )\n  }\n\n  function SASLFinal(x) {\n    if (x.toString('utf8', 9).split(b.N, 1)[0].slice(2) === serverSignature)\n      return\n    /* c8 ignore next 5 */\n    errored(Errors.generic('SASL_SIGNATURE_MISMATCH', 'The server did not return the correct signature'))\n    socket.destroy()\n  }\n\n  function Pass() {\n    return Promise.resolve(typeof options.pass === 'function'\n      ? options.pass()\n      : options.pass\n    )\n  }\n\n  function NoData() {\n    result.statement = query.statement\n    result.statement.columns = []\n    if (query.onlyDescribe)\n      return (query.resolve(query.statement), write(Sync))\n  }\n\n  function BackendKeyData(x) {\n    backend.pid = x.readUInt32BE(5)\n    backend.secret = x.readUInt32BE(9)\n  }\n\n  async function fetchArrayTypes() {\n    needsTypes = false\n    const types = await new Query([`\n      select b.oid, b.typarray\n      from pg_catalog.pg_type a\n      left join pg_catalog.pg_type b on b.oid = a.typelem\n      where a.typcategory = 'A'\n      group by b.oid, b.typarray\n      order by b.oid\n    `], [], execute)\n    types.forEach(({ oid, typarray }) => addArrayType(oid, typarray))\n  }\n\n  function addArrayType(oid, typarray) {\n    if (!!options.parsers[typarray] && !!options.serializers[typarray]) return\n    const parser = options.parsers[oid]\n    options.shared.typeArrayMap[oid] = typarray\n    options.parsers[typarray] = (xs) => arrayParser(xs, parser, typarray)\n    options.parsers[typarray].array = true\n    options.serializers[typarray] = (xs) => arraySerializer(xs, options.serializers[oid], options, typarray)\n  }\n\n  function tryNext(x, xs) {\n    return (\n      (x === 'read-write' && xs.default_transaction_read_only === 'on') ||\n      (x === 'read-only' && xs.default_transaction_read_only === 'off') ||\n      (x === 'primary' && xs.in_hot_standby === 'on') ||\n      (x === 'standby' && xs.in_hot_standby === 'off') ||\n      (x === 'prefer-standby' && xs.in_hot_standby === 'off' && options.host[retries])\n    )\n  }\n\n  function fetchState() {\n    const query = new Query([`\n      show transaction_read_only;\n      select pg_catalog.pg_is_in_recovery()\n    `], [], execute, null, { simple: true })\n    query.resolve = ([[a], [b]]) => {\n      backendParameters.default_transaction_read_only = a.transaction_read_only\n      backendParameters.in_hot_standby = b.pg_is_in_recovery ? 'on' : 'off'\n    }\n    query.execute()\n  }\n\n  function ErrorResponse(x) {\n    query && (query.cursorFn || query.describeFirst) && write(Sync)\n    const error = Errors.postgres(parseError(x))\n    query && query.retried\n      ? errored(query.retried)\n      : query && query.prepared && retryRoutines.has(error.routine)\n        ? retry(query, error)\n        : errored(error)\n  }\n\n  function retry(q, error) {\n    delete statements[q.signature]\n    q.retried = error\n    execute(q)\n  }\n\n  function NotificationResponse(x) {\n    if (!onnotify)\n      return\n\n    let index = 9\n    while (x[index++] !== 0);\n    onnotify(\n      x.toString('utf8', 9, index - 1),\n      x.toString('utf8', index, x.length - 1)\n    )\n  }\n\n  async function PortalSuspended() {\n    try {\n      const x = await Promise.resolve(query.cursorFn(result))\n      rows = 0\n      x === CLOSE\n        ? write(Close(query.portal))\n        : (result = new Result(), write(Execute('', query.cursorRows)))\n    } catch (err) {\n      write(Sync)\n      query.reject(err)\n    }\n  }\n\n  function CloseComplete() {\n    result.count && query.cursorFn(result)\n    query.resolve(result)\n  }\n\n  function CopyInResponse() {\n    stream = new Stream.Writable({\n      autoDestroy: true,\n      write(chunk, encoding, callback) {\n        socket.write(b().d().raw(chunk).end(), callback)\n      },\n      destroy(error, callback) {\n        callback(error)\n        socket.write(b().f().str(error + b.N).end())\n        stream = null\n      },\n      final(callback) {\n        socket.write(b().c().end())\n        final = callback\n      }\n    })\n    query.resolve(stream)\n  }\n\n  function CopyOutResponse() {\n    stream = new Stream.Readable({\n      read() { socket.resume() }\n    })\n    query.resolve(stream)\n  }\n\n  /* c8 ignore next 3 */\n  function CopyBothResponse() {\n    stream = new Stream.Duplex({\n      autoDestroy: true,\n      read() { socket.resume() },\n      /* c8 ignore next 11 */\n      write(chunk, encoding, callback) {\n        socket.write(b().d().raw(chunk).end(), callback)\n      },\n      destroy(error, callback) {\n        callback(error)\n        socket.write(b().f().str(error + b.N).end())\n        stream = null\n      },\n      final(callback) {\n        socket.write(b().c().end())\n        final = callback\n      }\n    })\n    query.resolve(stream)\n  }\n\n  function CopyData(x) {\n    stream && (stream.push(x.subarray(5)) || socket.pause())\n  }\n\n  function CopyDone() {\n    stream && stream.push(null)\n    stream = null\n  }\n\n  function NoticeResponse(x) {\n    onnotice\n      ? onnotice(parseError(x))\n      : console.log(parseError(x)) // eslint-disable-line\n\n  }\n\n  /* c8 ignore next 3 */\n  function EmptyQueryResponse() {\n    /* noop */\n  }\n\n  /* c8 ignore next 3 */\n  function FunctionCallResponse() {\n    errored(Errors.notSupported('FunctionCallResponse'))\n  }\n\n  /* c8 ignore next 3 */\n  function NegotiateProtocolVersion() {\n    errored(Errors.notSupported('NegotiateProtocolVersion'))\n  }\n\n  /* c8 ignore next 3 */\n  function UnknownMessage(x) {\n    console.error('Postgres.js : Unknown Message:', x[0]) // eslint-disable-line\n  }\n\n  /* c8 ignore next 3 */\n  function UnknownAuth(x, type) {\n    console.error('Postgres.js : Unknown Auth:', type) // eslint-disable-line\n  }\n\n  /* Messages */\n  function Bind(parameters, types, statement = '', portal = '') {\n    let prev\n      , type\n\n    b().B().str(portal + b.N).str(statement + b.N).i16(0).i16(parameters.length)\n\n    parameters.forEach((x, i) => {\n      if (x === null)\n        return b.i32(0xFFFFFFFF)\n\n      type = types[i]\n      parameters[i] = x = type in options.serializers\n        ? options.serializers[type](x)\n        : '' + x\n\n      prev = b.i\n      b.inc(4).str(x).i32(b.i - prev - 4, prev)\n    })\n\n    b.i16(0)\n\n    return b.end()\n  }\n\n  function Parse(str, parameters, types, name = '') {\n    b().P().str(name + b.N).str(str + b.N).i16(parameters.length)\n    parameters.forEach((x, i) => b.i32(types[i] || 0))\n    return b.end()\n  }\n\n  function Describe(x, name = '') {\n    return b().D().str(x).str(name + b.N).end()\n  }\n\n  function Execute(portal = '', rows = 0) {\n    return Buffer.concat([\n      b().E().str(portal + b.N).i32(rows).end(),\n      Flush\n    ])\n  }\n\n  function Close(portal = '') {\n    return Buffer.concat([\n      b().C().str('P').str(portal + b.N).end(),\n      b().S().end()\n    ])\n  }\n\n  function StartupMessage() {\n    return cancelMessage || b().inc(4).i16(3).z(2).str(\n      Object.entries(Object.assign({\n        user,\n        database,\n        client_encoding: 'UTF8'\n      },\n        options.connection\n      )).filter(([, v]) => v).map(([k, v]) => k + b.N + v).join(b.N)\n    ).z(2).end(0)\n  }\n\n}\n\nfunction parseError(x) {\n  const error = {}\n  let start = 5\n  for (let i = 5; i < x.length - 1; i++) {\n    if (x[i] === 0) {\n      error[errorFields[x[start]]] = x.toString('utf8', start + 1, i)\n      start = i + 1\n    }\n  }\n  return error\n}\n\nfunction md5(x) {\n  return crypto.createHash('md5').update(x).digest('hex')\n}\n\nfunction hmac(key, x) {\n  return crypto.createHmac('sha256', key).update(x).digest()\n}\n\nfunction sha256(x) {\n  return crypto.createHash('sha256').update(x).digest()\n}\n\nfunction xor(a, b) {\n  const length = Math.max(a.length, b.length)\n  const buffer = Buffer.allocUnsafe(length)\n  for (let i = 0; i < length; i++)\n    buffer[i] = a[i] ^ b[i]\n  return buffer\n}\n\nfunction timer(fn, seconds) {\n  seconds = typeof seconds === 'function' ? seconds() : seconds\n  if (!seconds)\n    return { cancel: noop, start: noop }\n\n  let timer\n  return {\n    cancel() {\n      timer && (clearTimeout(timer), timer = null)\n    },\n    start() {\n      timer && clearTimeout(timer)\n      timer = setTimeout(done, seconds * 1000, arguments)\n    }\n  }\n\n  function done(args) {\n    fn.apply(null, args)\n    timer = null\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14507, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/subscribe.js"],"sourcesContent":["const noop = () => { /* noop */ }\n\nexport default function Subscribe(postgres, options) {\n  const subscribers = new Map()\n      , slot = 'postgresjs_' + Math.random().toString(36).slice(2)\n      , state = {}\n\n  let connection\n    , stream\n    , ended = false\n\n  const sql = subscribe.sql = postgres({\n    ...options,\n    transform: { column: {}, value: {}, row: {} },\n    max: 1,\n    fetch_types: false,\n    idle_timeout: null,\n    max_lifetime: null,\n    connection: {\n      ...options.connection,\n      replication: 'database'\n    },\n    onclose: async function() {\n      if (ended)\n        return\n      stream = null\n      state.pid = state.secret = undefined\n      connected(await init(sql, slot, options.publications))\n      subscribers.forEach(event => event.forEach(({ onsubscribe }) => onsubscribe()))\n    },\n    no_subscribe: true\n  })\n\n  const end = sql.end\n      , close = sql.close\n\n  sql.end = async() => {\n    ended = true\n    stream && (await new Promise(r => (stream.once('close', r), stream.end())))\n    return end()\n  }\n\n  sql.close = async() => {\n    stream && (await new Promise(r => (stream.once('close', r), stream.end())))\n    return close()\n  }\n\n  return subscribe\n\n  async function subscribe(event, fn, onsubscribe = noop, onerror = noop) {\n    event = parseEvent(event)\n\n    if (!connection)\n      connection = init(sql, slot, options.publications)\n\n    const subscriber = { fn, onsubscribe }\n    const fns = subscribers.has(event)\n      ? subscribers.get(event).add(subscriber)\n      : subscribers.set(event, new Set([subscriber])).get(event)\n\n    const unsubscribe = () => {\n      fns.delete(subscriber)\n      fns.size === 0 && subscribers.delete(event)\n    }\n\n    return connection.then(x => {\n      connected(x)\n      onsubscribe()\n      stream && stream.on('error', onerror)\n      return { unsubscribe, state, sql }\n    })\n  }\n\n  function connected(x) {\n    stream = x.stream\n    state.pid = x.state.pid\n    state.secret = x.state.secret\n  }\n\n  async function init(sql, slot, publications) {\n    if (!publications)\n      throw new Error('Missing publication names')\n\n    const xs = await sql.unsafe(\n      `CREATE_REPLICATION_SLOT ${ slot } TEMPORARY LOGICAL pgoutput NOEXPORT_SNAPSHOT`\n    )\n\n    const [x] = xs\n\n    const stream = await sql.unsafe(\n      `START_REPLICATION SLOT ${ slot } LOGICAL ${\n        x.consistent_point\n      } (proto_version '1', publication_names '${ publications }')`\n    ).writable()\n\n    const state = {\n      lsn: Buffer.concat(x.consistent_point.split('/').map(x => Buffer.from(('00000000' + x).slice(-8), 'hex')))\n    }\n\n    stream.on('data', data)\n    stream.on('error', error)\n    stream.on('close', sql.close)\n\n    return { stream, state: xs.state }\n\n    function error(e) {\n      console.error('Unexpected error during logical streaming - reconnecting', e) // eslint-disable-line\n    }\n\n    function data(x) {\n      if (x[0] === 0x77) {\n        parse(x.subarray(25), state, sql.options.parsers, handle, options.transform)\n      } else if (x[0] === 0x6b && x[17]) {\n        state.lsn = x.subarray(1, 9)\n        pong()\n      }\n    }\n\n    function handle(a, b) {\n      const path = b.relation.schema + '.' + b.relation.table\n      call('*', a, b)\n      call('*:' + path, a, b)\n      b.relation.keys.length && call('*:' + path + '=' + b.relation.keys.map(x => a[x.name]), a, b)\n      call(b.command, a, b)\n      call(b.command + ':' + path, a, b)\n      b.relation.keys.length && call(b.command + ':' + path + '=' + b.relation.keys.map(x => a[x.name]), a, b)\n    }\n\n    function pong() {\n      const x = Buffer.alloc(34)\n      x[0] = 'r'.charCodeAt(0)\n      x.fill(state.lsn, 1)\n      x.writeBigInt64BE(BigInt(Date.now() - Date.UTC(2000, 0, 1)) * BigInt(1000), 25)\n      stream.write(x)\n    }\n  }\n\n  function call(x, a, b) {\n    subscribers.has(x) && subscribers.get(x).forEach(({ fn }) => fn(a, b, x))\n  }\n}\n\nfunction Time(x) {\n  return new Date(Date.UTC(2000, 0, 1) + Number(x / BigInt(1000)))\n}\n\nfunction parse(x, state, parsers, handle, transform) {\n  const char = (acc, [k, v]) => (acc[k.charCodeAt(0)] = v, acc)\n\n  Object.entries({\n    R: x => {  // Relation\n      let i = 1\n      const r = state[x.readUInt32BE(i)] = {\n        schema: x.toString('utf8', i += 4, i = x.indexOf(0, i)) || 'pg_catalog',\n        table: x.toString('utf8', i + 1, i = x.indexOf(0, i + 1)),\n        columns: Array(x.readUInt16BE(i += 2)),\n        keys: []\n      }\n      i += 2\n\n      let columnIndex = 0\n        , column\n\n      while (i < x.length) {\n        column = r.columns[columnIndex++] = {\n          key: x[i++],\n          name: transform.column.from\n            ? transform.column.from(x.toString('utf8', i, i = x.indexOf(0, i)))\n            : x.toString('utf8', i, i = x.indexOf(0, i)),\n          type: x.readUInt32BE(i += 1),\n          parser: parsers[x.readUInt32BE(i)],\n          atttypmod: x.readUInt32BE(i += 4)\n        }\n\n        column.key && r.keys.push(column)\n        i += 4\n      }\n    },\n    Y: () => { /* noop */ }, // Type\n    O: () => { /* noop */ }, // Origin\n    B: x => { // Begin\n      state.date = Time(x.readBigInt64BE(9))\n      state.lsn = x.subarray(1, 9)\n    },\n    I: x => { // Insert\n      let i = 1\n      const relation = state[x.readUInt32BE(i)]\n      const { row } = tuples(x, relation.columns, i += 7, transform)\n\n      handle(row, {\n        command: 'insert',\n        relation\n      })\n    },\n    D: x => { // Delete\n      let i = 1\n      const relation = state[x.readUInt32BE(i)]\n      i += 4\n      const key = x[i] === 75\n      handle(key || x[i] === 79\n        ? tuples(x, relation.columns, i += 3, transform).row\n        : null\n      , {\n        command: 'delete',\n        relation,\n        key\n      })\n    },\n    U: x => { // Update\n      let i = 1\n      const relation = state[x.readUInt32BE(i)]\n      i += 4\n      const key = x[i] === 75\n      const xs = key || x[i] === 79\n        ? tuples(x, relation.columns, i += 3, transform)\n        : null\n\n      xs && (i = xs.i)\n\n      const { row } = tuples(x, relation.columns, i + 3, transform)\n\n      handle(row, {\n        command: 'update',\n        relation,\n        key,\n        old: xs && xs.row\n      })\n    },\n    T: () => { /* noop */ }, // Truncate,\n    C: () => { /* noop */ }  // Commit\n  }).reduce(char, {})[x[0]](x)\n}\n\nfunction tuples(x, columns, xi, transform) {\n  let type\n    , column\n    , value\n\n  const row = transform.raw ? new Array(columns.length) : {}\n  for (let i = 0; i < columns.length; i++) {\n    type = x[xi++]\n    column = columns[i]\n    value = type === 110 // n\n      ? null\n      : type === 117 // u\n        ? undefined\n        : column.parser === undefined\n          ? x.toString('utf8', xi + 4, xi += 4 + x.readUInt32BE(xi))\n          : column.parser.array === true\n            ? column.parser(x.toString('utf8', xi + 5, xi += 4 + x.readUInt32BE(xi)))\n            : column.parser(x.toString('utf8', xi + 4, xi += 4 + x.readUInt32BE(xi)))\n\n    transform.raw\n      ? (row[i] = transform.raw === true\n        ? value\n        : transform.value.from ? transform.value.from(value, column) : value)\n      : (row[column.name] = transform.value.from\n        ? transform.value.from(value, column)\n        : value\n      )\n  }\n\n  return { i: xi, row: transform.row.from ? transform.row.from(row) : row }\n}\n\nfunction parseEvent(x) {\n  const xs = x.match(/^(\\*|insert|update|delete)?:?([^.]+?\\.?[^=]+)?=?(.+)?/i) || []\n\n  if (!xs)\n    throw new Error('Malformed subscribe pattern: ' + x)\n\n  const [, command, path, key] = xs\n\n  return (command || '*')\n       + (path ? ':' + (path.indexOf('.') === -1 ? 'public.' + path : path) : '')\n       + (key ? '=' + key : '')\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14731, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/large.js"],"sourcesContent":["import Stream from 'stream'\n\nexport default function largeObject(sql, oid, mode = 0x00020000 | 0x00040000) {\n  return new Promise(async(resolve, reject) => {\n    await sql.begin(async sql => {\n      let finish\n      !oid && ([{ oid }] = await sql`select lo_creat(-1) as oid`)\n      const [{ fd }] = await sql`select lo_open(${ oid }, ${ mode }) as fd`\n\n      const lo = {\n        writable,\n        readable,\n        close     : () => sql`select lo_close(${ fd })`.then(finish),\n        tell      : () => sql`select lo_tell64(${ fd })`,\n        read      : (x) => sql`select loread(${ fd }, ${ x }) as data`,\n        write     : (x) => sql`select lowrite(${ fd }, ${ x })`,\n        truncate  : (x) => sql`select lo_truncate64(${ fd }, ${ x })`,\n        seek      : (x, whence = 0) => sql`select lo_lseek64(${ fd }, ${ x }, ${ whence })`,\n        size      : () => sql`\n          select\n            lo_lseek64(${ fd }, location, 0) as position,\n            seek.size\n          from (\n            select\n              lo_lseek64($1, 0, 2) as size,\n              tell.location\n            from (select lo_tell64($1) as location) tell\n          ) seek\n        `\n      }\n\n      resolve(lo)\n\n      return new Promise(async r => finish = r)\n\n      async function readable({\n        highWaterMark = 2048 * 8,\n        start = 0,\n        end = Infinity\n      } = {}) {\n        let max = end - start\n        start && await lo.seek(start)\n        return new Stream.Readable({\n          highWaterMark,\n          async read(size) {\n            const l = size > max ? size - max : size\n            max -= size\n            const [{ data }] = await lo.read(l)\n            this.push(data)\n            if (data.length < size)\n              this.push(null)\n          }\n        })\n      }\n\n      async function writable({\n        highWaterMark = 2048 * 8,\n        start = 0\n      } = {}) {\n        start && await lo.seek(start)\n        return new Stream.Writable({\n          highWaterMark,\n          write(chunk, encoding, callback) {\n            lo.write(chunk).then(() => callback(), callback)\n          }\n        })\n      }\n    }).catch(reject)\n  })\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEe,SAAS,YAAY,GAAG,EAAE,GAAG,EAAE,OAAO,aAAa,UAAU;IAC1E,OAAO,IAAI,QAAQ,OAAM,SAAS;QAChC,MAAM,IAAI,KAAK,CAAC,OAAM;YACpB,IAAI;YACJ,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,0BAA0B,CAAC;YAC1D,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,eAAe,EAAG,IAAK,EAAE,EAAG,KAAM,OAAO,CAAC;YAErE,MAAM,KAAK;gBACT;gBACA;gBACA,OAAY,IAAM,GAAG,CAAC,gBAAgB,EAAG,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACrD,MAAY,IAAM,GAAG,CAAC,iBAAiB,EAAG,GAAI,CAAC,CAAC;gBAChD,MAAY,CAAC,IAAM,GAAG,CAAC,cAAc,EAAG,GAAI,EAAE,EAAG,EAAG,SAAS,CAAC;gBAC9D,OAAY,CAAC,IAAM,GAAG,CAAC,eAAe,EAAG,GAAI,EAAE,EAAG,EAAG,CAAC,CAAC;gBACvD,UAAY,CAAC,IAAM,GAAG,CAAC,qBAAqB,EAAG,GAAI,EAAE,EAAG,EAAG,CAAC,CAAC;gBAC7D,MAAY,CAAC,GAAG,SAAS,CAAC,GAAK,GAAG,CAAC,kBAAkB,EAAG,GAAI,EAAE,EAAG,EAAG,EAAE,EAAG,OAAQ,CAAC,CAAC;gBACnF,MAAY,IAAM,GAAG,CAAC;;uBAEP,EAAG,GAAI;;;;;;;;QAQtB,CAAC;YACH;YAEA,QAAQ;YAER,OAAO,IAAI,QAAQ,OAAM,IAAK,SAAS;;;YAEvC,eAAe,SAAS,EACtB,gBAAgB,OAAO,CAAC,EACxB,QAAQ,CAAC,EACT,MAAM,QAAQ,EACf,GAAG,CAAC,CAAC;gBACJ,IAAI,MAAM,MAAM;gBAChB,SAAS,MAAM,GAAG,IAAI,CAAC;gBACvB,OAAO,IAAI,gHAAM,CAAC,QAAQ,CAAC;oBACzB;oBACA,MAAM,MAAK,IAAI;wBACb,MAAM,IAAI,OAAO,MAAM,OAAO,MAAM;wBACpC,OAAO;wBACP,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;wBACjC,IAAI,CAAC,IAAI,CAAC;wBACV,IAAI,KAAK,MAAM,GAAG,MAChB,IAAI,CAAC,IAAI,CAAC;oBACd;gBACF;YACF;YAEA,eAAe,SAAS,EACtB,gBAAgB,OAAO,CAAC,EACxB,QAAQ,CAAC,EACV,GAAG,CAAC,CAAC;gBACJ,SAAS,MAAM,GAAG,IAAI,CAAC;gBACvB,OAAO,IAAI,gHAAM,CAAC,QAAQ,CAAC;oBACzB;oBACA,OAAM,KAAK,EAAE,QAAQ,EAAE,QAAQ;wBAC7B,GAAG,KAAK,CAAC,OAAO,IAAI,CAAC,IAAM,YAAY;oBACzC;gBACF;YACF;QACF,GAAG,KAAK,CAAC;IACX;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14798, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/postgres/src/index.js"],"sourcesContent":["import os from 'os'\nimport fs from 'fs'\n\nimport {\n  mergeUserTypes,\n  inferType,\n  Parameter,\n  Identifier,\n  Builder,\n  toPascal,\n  pascal,\n  toCamel,\n  camel,\n  toKebab,\n  kebab,\n  fromPascal,\n  fromCamel,\n  fromKebab\n} from './types.js'\n\nimport Connection from './connection.js'\nimport { Query, CLOSE } from './query.js'\nimport Queue from './queue.js'\nimport { Errors, PostgresError } from './errors.js'\nimport Subscribe from './subscribe.js'\nimport largeObject from './large.js'\n\nObject.assign(Postgres, {\n  PostgresError,\n  toPascal,\n  pascal,\n  toCamel,\n  camel,\n  toKebab,\n  kebab,\n  fromPascal,\n  fromCamel,\n  fromKebab,\n  BigInt: {\n    to: 20,\n    from: [20],\n    parse: x => BigInt(x), // eslint-disable-line\n    serialize: x => x.toString()\n  }\n})\n\nexport default Postgres\n\nfunction Postgres(a, b) {\n  const options = parseOptions(a, b)\n      , subscribe = options.no_subscribe || Subscribe(Postgres, { ...options })\n\n  let ending = false\n\n  const queries = Queue()\n      , connecting = Queue()\n      , reserved = Queue()\n      , closed = Queue()\n      , ended = Queue()\n      , open = Queue()\n      , busy = Queue()\n      , full = Queue()\n      , queues = { connecting, reserved, closed, ended, open, busy, full }\n\n  const connections = [...Array(options.max)].map(() => Connection(options, queues, { onopen, onend, onclose }))\n\n  const sql = Sql(handler)\n\n  Object.assign(sql, {\n    get parameters() { return options.parameters },\n    largeObject: largeObject.bind(null, sql),\n    subscribe,\n    CLOSE,\n    END: CLOSE,\n    PostgresError,\n    options,\n    reserve,\n    listen,\n    begin,\n    close,\n    end\n  })\n\n  return sql\n\n  function Sql(handler) {\n    handler.debug = options.debug\n\n    Object.entries(options.types).reduce((acc, [name, type]) => {\n      acc[name] = (x) => new Parameter(x, type.to)\n      return acc\n    }, typed)\n\n    Object.assign(sql, {\n      types: typed,\n      typed,\n      unsafe,\n      notify,\n      array,\n      json,\n      file\n    })\n\n    return sql\n\n    function typed(value, type) {\n      return new Parameter(value, type)\n    }\n\n    function sql(strings, ...args) {\n      const query = strings && Array.isArray(strings.raw)\n        ? new Query(strings, args, handler, cancel)\n        : typeof strings === 'string' && !args.length\n          ? new Identifier(options.transform.column.to ? options.transform.column.to(strings) : strings)\n          : new Builder(strings, args)\n      return query\n    }\n\n    function unsafe(string, args = [], options = {}) {\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\n      const query = new Query([string], args, handler, cancel, {\n        prepare: false,\n        ...options,\n        simple: 'simple' in options ? options.simple : args.length === 0\n      })\n      return query\n    }\n\n    function file(path, args = [], options = {}) {\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\n      const query = new Query([], args, (query) => {\n        fs.readFile(path, 'utf8', (err, string) => {\n          if (err)\n            return query.reject(err)\n\n          query.strings = [string]\n          handler(query)\n        })\n      }, cancel, {\n        ...options,\n        simple: 'simple' in options ? options.simple : args.length === 0\n      })\n      return query\n    }\n  }\n\n  async function listen(name, fn, onlisten) {\n    const listener = { fn, onlisten }\n\n    const sql = listen.sql || (listen.sql = Postgres({\n      ...options,\n      max: 1,\n      idle_timeout: null,\n      max_lifetime: null,\n      fetch_types: false,\n      onclose() {\n        Object.entries(listen.channels).forEach(([name, { listeners }]) => {\n          delete listen.channels[name]\n          Promise.all(listeners.map(l => listen(name, l.fn, l.onlisten).catch(() => { /* noop */ })))\n        })\n      },\n      onnotify(c, x) {\n        c in listen.channels && listen.channels[c].listeners.forEach(l => l.fn(x))\n      }\n    }))\n\n    const channels = listen.channels || (listen.channels = {})\n        , exists = name in channels\n\n    if (exists) {\n      channels[name].listeners.push(listener)\n      const result = await channels[name].result\n      listener.onlisten && listener.onlisten()\n      return { state: result.state, unlisten }\n    }\n\n    channels[name] = { result: sql`listen ${\n      sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\n    }`, listeners: [listener] }\n    const result = await channels[name].result\n    listener.onlisten && listener.onlisten()\n    return { state: result.state, unlisten }\n\n    async function unlisten() {\n      if (name in channels === false)\n        return\n\n      channels[name].listeners = channels[name].listeners.filter(x => x !== listener)\n      if (channels[name].listeners.length)\n        return\n\n      delete channels[name]\n      return sql`unlisten ${\n        sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\n      }`\n    }\n  }\n\n  async function notify(channel, payload) {\n    return await sql`select pg_notify(${ channel }, ${ '' + payload })`\n  }\n\n  async function reserve() {\n    const queue = Queue()\n    const c = open.length\n      ? open.shift()\n      : await new Promise((resolve, reject) => {\n        const query = { reserve: resolve, reject }\n        queries.push(query)\n        closed.length && connect(closed.shift(), query)\n      })\n\n    move(c, reserved)\n    c.reserved = () => queue.length\n      ? c.execute(queue.shift())\n      : move(c, reserved)\n    c.reserved.release = true\n\n    const sql = Sql(handler)\n    sql.release = () => {\n      c.reserved = null\n      onopen(c)\n    }\n\n    return sql\n\n    function handler(q) {\n      c.queue === full\n        ? queue.push(q)\n        : c.execute(q) || move(c, full)\n    }\n  }\n\n  async function begin(options, fn) {\n    !fn && (fn = options, options = '')\n    const queries = Queue()\n    let savepoints = 0\n      , connection\n      , prepare = null\n\n    try {\n      await sql.unsafe('begin ' + options.replace(/[^a-z ]/ig, ''), [], { onexecute }).execute()\n      return await Promise.race([\n        scope(connection, fn),\n        new Promise((_, reject) => connection.onclose = reject)\n      ])\n    } catch (error) {\n      throw error\n    }\n\n    async function scope(c, fn, name) {\n      const sql = Sql(handler)\n      sql.savepoint = savepoint\n      sql.prepare = x => prepare = x.replace(/[^a-z0-9$-_. ]/gi)\n      let uncaughtError\n        , result\n\n      name && await sql`savepoint ${ sql(name) }`\n      try {\n        result = await new Promise((resolve, reject) => {\n          const x = fn(sql)\n          Promise.resolve(Array.isArray(x) ? Promise.all(x) : x).then(resolve, reject)\n        })\n\n        if (uncaughtError)\n          throw uncaughtError\n      } catch (e) {\n        await (name\n          ? sql`rollback to ${ sql(name) }`\n          : sql`rollback`\n        )\n        throw e instanceof PostgresError && e.code === '25P02' && uncaughtError || e\n      }\n\n      if (!name) {\n        prepare\n          ? await sql`prepare transaction '${ sql.unsafe(prepare) }'`\n          : await sql`commit`\n      }\n\n      return result\n\n      function savepoint(name, fn) {\n        if (name && Array.isArray(name.raw))\n          return savepoint(sql => sql.apply(sql, arguments))\n\n        arguments.length === 1 && (fn = name, name = null)\n        return scope(c, fn, 's' + savepoints++ + (name ? '_' + name : ''))\n      }\n\n      function handler(q) {\n        q.catch(e => uncaughtError || (uncaughtError = e))\n        c.queue === full\n          ? queries.push(q)\n          : c.execute(q) || move(c, full)\n      }\n    }\n\n    function onexecute(c) {\n      connection = c\n      move(c, reserved)\n      c.reserved = () => queries.length\n        ? c.execute(queries.shift())\n        : move(c, reserved)\n    }\n  }\n\n  function move(c, queue) {\n    c.queue.remove(c)\n    queue.push(c)\n    c.queue = queue\n    queue === open\n      ? c.idleTimer.start()\n      : c.idleTimer.cancel()\n    return c\n  }\n\n  function json(x) {\n    return new Parameter(x, 3802)\n  }\n\n  function array(x, type) {\n    if (!Array.isArray(x))\n      return array(Array.from(arguments))\n\n    return new Parameter(x, type || (x.length ? inferType(x) || 25 : 0), options.shared.typeArrayMap)\n  }\n\n  function handler(query) {\n    if (ending)\n      return query.reject(Errors.connection('CONNECTION_ENDED', options, options))\n\n    if (open.length)\n      return go(open.shift(), query)\n\n    if (closed.length)\n      return connect(closed.shift(), query)\n\n    busy.length\n      ? go(busy.shift(), query)\n      : queries.push(query)\n  }\n\n  function go(c, query) {\n    return c.execute(query)\n      ? move(c, busy)\n      : move(c, full)\n  }\n\n  function cancel(query) {\n    return new Promise((resolve, reject) => {\n      query.state\n        ? query.active\n          ? Connection(options).cancel(query.state, resolve, reject)\n          : query.cancelled = { resolve, reject }\n        : (\n          queries.remove(query),\n          query.cancelled = true,\n          query.reject(Errors.generic('57014', 'canceling statement due to user request')),\n          resolve()\n        )\n    })\n  }\n\n  async function end({ timeout = null } = {}) {\n    if (ending)\n      return ending\n\n    await 1\n    let timer\n    return ending = Promise.race([\n      new Promise(r => timeout !== null && (timer = setTimeout(destroy, timeout * 1000, r))),\n      Promise.all(connections.map(c => c.end()).concat(\n        listen.sql ? listen.sql.end({ timeout: 0 }) : [],\n        subscribe.sql ? subscribe.sql.end({ timeout: 0 }) : []\n      ))\n    ]).then(() => clearTimeout(timer))\n  }\n\n  async function close() {\n    await Promise.all(connections.map(c => c.end()))\n  }\n\n  async function destroy(resolve) {\n    await Promise.all(connections.map(c => c.terminate()))\n    while (queries.length)\n      queries.shift().reject(Errors.connection('CONNECTION_DESTROYED', options))\n    resolve()\n  }\n\n  function connect(c, query) {\n    move(c, connecting)\n    c.connect(query)\n    return c\n  }\n\n  function onend(c) {\n    move(c, ended)\n  }\n\n  function onopen(c) {\n    if (queries.length === 0)\n      return move(c, open)\n\n    let max = Math.ceil(queries.length / (connecting.length + 1))\n      , ready = true\n\n    while (ready && queries.length && max-- > 0) {\n      const query = queries.shift()\n      if (query.reserve)\n        return query.reserve(c)\n\n      ready = c.execute(query)\n    }\n\n    ready\n      ? move(c, busy)\n      : move(c, full)\n  }\n\n  function onclose(c, e) {\n    move(c, closed)\n    c.reserved = null\n    c.onclose && (c.onclose(e), c.onclose = null)\n    options.onclose && options.onclose(c.id)\n    queries.length && connect(c, queries.shift())\n  }\n}\n\nfunction parseOptions(a, b) {\n  if (a && a.shared)\n    return a\n\n  const env = process.env // eslint-disable-line\n      , o = (!a || typeof a === 'string' ? b : a) || {}\n      , { url, multihost } = parseUrl(a)\n      , query = [...url.searchParams].reduce((a, [b, c]) => (a[b] = c, a), {})\n      , host = o.hostname || o.host || multihost || url.hostname || env.PGHOST || 'localhost'\n      , port = o.port || url.port || env.PGPORT || 5432\n      , user = o.user || o.username || url.username || env.PGUSERNAME || env.PGUSER || osUsername()\n\n  o.no_prepare && (o.prepare = false)\n  query.sslmode && (query.ssl = query.sslmode, delete query.sslmode)\n  'timeout' in o && (console.log('The timeout option is deprecated, use idle_timeout instead'), o.idle_timeout = o.timeout) // eslint-disable-line\n  query.sslrootcert === 'system' && (query.ssl = 'verify-full')\n\n  const ints = ['idle_timeout', 'connect_timeout', 'max_lifetime', 'max_pipeline', 'backoff', 'keep_alive']\n  const defaults = {\n    max             : 10,\n    ssl             : false,\n    idle_timeout    : null,\n    connect_timeout : 30,\n    max_lifetime    : max_lifetime,\n    max_pipeline    : 100,\n    backoff         : backoff,\n    keep_alive      : 60,\n    prepare         : true,\n    debug           : false,\n    fetch_types     : true,\n    publications    : 'alltables',\n    target_session_attrs: null\n  }\n\n  return {\n    host            : Array.isArray(host) ? host : host.split(',').map(x => x.split(':')[0]),\n    port            : Array.isArray(port) ? port : host.split(',').map(x => parseInt(x.split(':')[1] || port)),\n    path            : o.path || host.indexOf('/') > -1 && host + '/.s.PGSQL.' + port,\n    database        : o.database || o.db || (url.pathname || '').slice(1) || env.PGDATABASE || user,\n    user            : user,\n    pass            : o.pass || o.password || url.password || env.PGPASSWORD || '',\n    ...Object.entries(defaults).reduce(\n      (acc, [k, d]) => {\n        const value = k in o ? o[k] : k in query\n          ? (query[k] === 'disable' || query[k] === 'false' ? false : query[k])\n          : env['PG' + k.toUpperCase()] || d\n        acc[k] = typeof value === 'string' && ints.includes(k)\n          ? +value\n          : value\n        return acc\n      },\n      {}\n    ),\n    connection      : {\n      application_name: env.PGAPPNAME || 'postgres.js',\n      ...o.connection,\n      ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})\n    },\n    types           : o.types || {},\n    target_session_attrs: tsa(o, url, env),\n    onnotice        : o.onnotice,\n    onnotify        : o.onnotify,\n    onclose         : o.onclose,\n    onparameter     : o.onparameter,\n    socket          : o.socket,\n    transform       : parseTransform(o.transform || { undefined: undefined }),\n    parameters      : {},\n    shared          : { retries: 0, typeArrayMap: {} },\n    ...mergeUserTypes(o.types)\n  }\n}\n\nfunction tsa(o, url, env) {\n  const x = o.target_session_attrs || url.searchParams.get('target_session_attrs') || env.PGTARGETSESSIONATTRS\n  if (!x || ['read-write', 'read-only', 'primary', 'standby', 'prefer-standby'].includes(x))\n    return x\n\n  throw new Error('target_session_attrs ' + x + ' is not supported')\n}\n\nfunction backoff(retries) {\n  return (0.5 + Math.random() / 2) * Math.min(3 ** retries / 100, 20)\n}\n\nfunction max_lifetime() {\n  return 60 * (30 + Math.random() * 30)\n}\n\nfunction parseTransform(x) {\n  return {\n    undefined: x.undefined,\n    column: {\n      from: typeof x.column === 'function' ? x.column : x.column && x.column.from,\n      to: x.column && x.column.to\n    },\n    value: {\n      from: typeof x.value === 'function' ? x.value : x.value && x.value.from,\n      to: x.value && x.value.to\n    },\n    row: {\n      from: typeof x.row === 'function' ? x.row : x.row && x.row.from,\n      to: x.row && x.row.to\n    }\n  }\n}\n\nfunction parseUrl(url) {\n  if (!url || typeof url !== 'string')\n    return { url: { searchParams: new Map() } }\n\n  let host = url\n  host = host.slice(host.indexOf('://') + 3).split(/[?/]/)[0]\n  host = decodeURIComponent(host.slice(host.indexOf('@') + 1))\n\n  const urlObj = new URL(url.replace(host, host.split(',')[0]))\n\n  return {\n    url: {\n      username: decodeURIComponent(urlObj.username),\n      password: decodeURIComponent(urlObj.password),\n      host: urlObj.host,\n      hostname: urlObj.hostname,\n      port: urlObj.port,\n      pathname: urlObj.pathname,\n      searchParams: urlObj.searchParams\n    },\n    multihost: host.indexOf(',') > -1 && host\n  }\n}\n\nfunction osUsername() {\n  try {\n    return os.userInfo().username // eslint-disable-line\n  } catch (_) {\n    return process.env.USERNAME || process.env.USER || process.env.LOGNAME  // eslint-disable-line\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15285, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40t3-oss/env-core/dist/src-Bb3GbGAa.js"],"sourcesContent":["//#region src/standard.ts\nfunction ensureSynchronous(value, message) {\n\tif (value instanceof Promise) throw new Error(message);\n}\nfunction parseWithDictionary(dictionary, value) {\n\tconst result = {};\n\tconst issues = [];\n\tfor (const key in dictionary) {\n\t\tconst propResult = dictionary[key][\"~standard\"].validate(value[key]);\n\t\tensureSynchronous(propResult, `Validation must be synchronous, but ${key} returned a Promise.`);\n\t\tif (propResult.issues) {\n\t\t\tissues.push(...propResult.issues.map((issue) => ({\n\t\t\t\t...issue,\n\t\t\t\tmessage: issue.message,\n\t\t\t\tpath: [key, ...issue.path ?? []]\n\t\t\t})));\n\t\t\tcontinue;\n\t\t}\n\t\tresult[key] = propResult.value;\n\t}\n\tif (issues.length) return { issues };\n\treturn { value: result };\n}\n\n//#endregion\n//#region src/index.ts\n/**\n* Create a new environment variable schema.\n*/\nfunction createEnv(opts) {\n\tconst runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\n\tconst emptyStringAsUndefined = opts.emptyStringAsUndefined ?? false;\n\tif (emptyStringAsUndefined) {\n\t\tfor (const [key, value] of Object.entries(runtimeEnv)) if (value === \"\") delete runtimeEnv[key];\n\t}\n\tconst skip = !!opts.skipValidation;\n\tif (skip) return runtimeEnv;\n\tconst _client = typeof opts.client === \"object\" ? opts.client : {};\n\tconst _server = typeof opts.server === \"object\" ? opts.server : {};\n\tconst _shared = typeof opts.shared === \"object\" ? opts.shared : {};\n\tconst isServer = opts.isServer ?? (typeof window === \"undefined\" || \"Deno\" in window);\n\tconst finalSchemaShape = isServer ? {\n\t\t..._server,\n\t\t..._shared,\n\t\t..._client\n\t} : {\n\t\t..._client,\n\t\t..._shared\n\t};\n\tconst parsed = opts.createFinalSchema?.(finalSchemaShape, isServer)[\"~standard\"].validate(runtimeEnv) ?? parseWithDictionary(finalSchemaShape, runtimeEnv);\n\tensureSynchronous(parsed, \"Validation must be synchronous\");\n\tconst onValidationError = opts.onValidationError ?? ((issues) => {\n\t\tconsole.error(\"❌ Invalid environment variables:\", issues);\n\t\tthrow new Error(\"Invalid environment variables\");\n\t});\n\tconst onInvalidAccess = opts.onInvalidAccess ?? (() => {\n\t\tthrow new Error(\"❌ Attempted to access a server-side environment variable on the client\");\n\t});\n\tif (parsed.issues) return onValidationError(parsed.issues);\n\tconst isServerAccess = (prop) => {\n\t\tif (!opts.clientPrefix) return true;\n\t\treturn !prop.startsWith(opts.clientPrefix) && !(prop in _shared);\n\t};\n\tconst isValidServerAccess = (prop) => {\n\t\treturn isServer || !isServerAccess(prop);\n\t};\n\tconst ignoreProp = (prop) => {\n\t\treturn prop === \"__esModule\" || prop === \"$$typeof\";\n\t};\n\tconst extendedObj = (opts.extends ?? []).reduce((acc, curr) => {\n\t\treturn Object.assign(acc, curr);\n\t}, {});\n\tconst fullObj = Object.assign(extendedObj, parsed.value);\n\tconst env = new Proxy(fullObj, { get(target, prop) {\n\t\tif (typeof prop !== \"string\") return void 0;\n\t\tif (ignoreProp(prop)) return void 0;\n\t\tif (!isValidServerAccess(prop)) return onInvalidAccess(prop);\n\t\treturn Reflect.get(target, prop);\n\t} });\n\treturn env;\n}\n\n//#endregion\nexport { createEnv };"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15382, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40t3-oss/env-core/dist/presets-zod.js"],"sourcesContent":["import { createEnv } from \"./src-Bb3GbGAa.js\";\nimport { z } from \"zod\";\n\n//#region src/presets-zod.ts\n/**\n* Vercel System Environment Variables\n* @see https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables\n*/\nconst vercel = () => createEnv({\n\tserver: {\n\t\tVERCEL: z.string().optional(),\n\t\tCI: z.string().optional(),\n\t\tVERCEL_ENV: z.enum([\n\t\t\t\"development\",\n\t\t\t\"preview\",\n\t\t\t\"production\"\n\t\t]).optional(),\n\t\tVERCEL_URL: z.string().optional(),\n\t\tVERCEL_PROJECT_PRODUCTION_URL: z.string().optional(),\n\t\tVERCEL_BRANCH_URL: z.string().optional(),\n\t\tVERCEL_REGION: z.string().optional(),\n\t\tVERCEL_DEPLOYMENT_ID: z.string().optional(),\n\t\tVERCEL_SKEW_PROTECTION_ENABLED: z.string().optional(),\n\t\tVERCEL_AUTOMATION_BYPASS_SECRET: z.string().optional(),\n\t\tVERCEL_GIT_PROVIDER: z.string().optional(),\n\t\tVERCEL_GIT_REPO_SLUG: z.string().optional(),\n\t\tVERCEL_GIT_REPO_OWNER: z.string().optional(),\n\t\tVERCEL_GIT_REPO_ID: z.string().optional(),\n\t\tVERCEL_GIT_COMMIT_REF: z.string().optional(),\n\t\tVERCEL_GIT_COMMIT_SHA: z.string().optional(),\n\t\tVERCEL_GIT_COMMIT_MESSAGE: z.string().optional(),\n\t\tVERCEL_GIT_COMMIT_AUTHOR_LOGIN: z.string().optional(),\n\t\tVERCEL_GIT_COMMIT_AUTHOR_NAME: z.string().optional(),\n\t\tVERCEL_GIT_PREVIOUS_SHA: z.string().optional(),\n\t\tVERCEL_GIT_PULL_REQUEST_ID: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Neon for Vercel Environment Variables\n* @see https://neon.tech/docs/guides/vercel-native-integration#environment-variables-set-by-the-integration\n*/\nconst neonVercel = () => createEnv({\n\tserver: {\n\t\tDATABASE_URL: z.string(),\n\t\tDATABASE_URL_UNPOOLED: z.string().optional(),\n\t\tPGHOST: z.string().optional(),\n\t\tPGHOST_UNPOOLED: z.string().optional(),\n\t\tPGUSER: z.string().optional(),\n\t\tPGDATABASE: z.string().optional(),\n\t\tPGPASSWORD: z.string().optional(),\n\t\tPOSTGRES_URL: z.string().url().optional(),\n\t\tPOSTGRES_URL_NON_POOLING: z.string().url().optional(),\n\t\tPOSTGRES_USER: z.string().optional(),\n\t\tPOSTGRES_HOST: z.string().optional(),\n\t\tPOSTGRES_PASSWORD: z.string().optional(),\n\t\tPOSTGRES_DATABASE: z.string().optional(),\n\t\tPOSTGRES_URL_NO_SSL: z.string().url().optional(),\n\t\tPOSTGRES_PRISMA_URL: z.string().url().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Supabase for Vercel Environment Variables\n* @see https://vercel.com/marketplace/supabase\n*/\nconst supabaseVercel = () => createEnv({\n\tserver: {\n\t\tPOSTGRES_URL: z.string().url(),\n\t\tPOSTGRES_PRISMA_URL: z.string().url().optional(),\n\t\tPOSTGRES_URL_NON_POOLING: z.string().url().optional(),\n\t\tPOSTGRES_USER: z.string().optional(),\n\t\tPOSTGRES_HOST: z.string().optional(),\n\t\tPOSTGRES_PASSWORD: z.string().optional(),\n\t\tPOSTGRES_DATABASE: z.string().optional(),\n\t\tSUPABASE_SERVICE_ROLE_KEY: z.string().optional(),\n\t\tSUPABASE_ANON_KEY: z.string().optional(),\n\t\tSUPABASE_URL: z.string().url().optional(),\n\t\tSUPABASE_JWT_SECRET: z.string().optional(),\n\t\tNEXT_PUBLIC_SUPABASE_ANON_KEY: z.string().optional(),\n\t\tNEXT_PUBLIC_SUPABASE_URL: z.string().url().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* @see https://v6.docs.uploadthing.com/getting-started/nuxt#add-env-variables\n*/\nconst uploadthingV6 = () => createEnv({\n\tserver: { UPLOADTHING_TOKEN: z.string() },\n\truntimeEnv: process.env\n});\n/**\n* @see https://docs.uploadthing.com/getting-started/appdir#add-env-variables\n*/\nconst uploadthing = () => createEnv({\n\tserver: { UPLOADTHING_TOKEN: z.string() },\n\truntimeEnv: process.env\n});\n/**\n* Render System Environment Variables\n* @see https://docs.render.com/environment-variables#all-runtimes\n*/\nconst render = () => createEnv({\n\tserver: {\n\t\tIS_PULL_REQUEST: z.string().optional(),\n\t\tRENDER_DISCOVERY_SERVICE: z.string().optional(),\n\t\tRENDER_EXTERNAL_HOSTNAME: z.string().optional(),\n\t\tRENDER_EXTERNAL_URL: z.string().url().optional(),\n\t\tRENDER_GIT_BRANCH: z.string().optional(),\n\t\tRENDER_GIT_COMMIT: z.string().optional(),\n\t\tRENDER_GIT_REPO_SLUG: z.string().optional(),\n\t\tRENDER_INSTANCE_ID: z.string().optional(),\n\t\tRENDER_SERVICE_ID: z.string().optional(),\n\t\tRENDER_SERVICE_NAME: z.string().optional(),\n\t\tRENDER_SERVICE_TYPE: z.enum([\n\t\t\t\"web\",\n\t\t\t\"pserv\",\n\t\t\t\"cron\",\n\t\t\t\"worker\",\n\t\t\t\"static\"\n\t\t]).optional(),\n\t\tRENDER: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Railway Environment Variables\n* @see https://docs.railway.app/reference/variables#railway-provided-variables\n*/\nconst railway = () => createEnv({\n\tserver: {\n\t\tRAILWAY_PUBLIC_DOMAIN: z.string().optional(),\n\t\tRAILWAY_PRIVATE_DOMAIN: z.string().optional(),\n\t\tRAILWAY_TCP_PROXY_DOMAIN: z.string().optional(),\n\t\tRAILWAY_TCP_PROXY_PORT: z.string().optional(),\n\t\tRAILWAY_TCP_APPLICATION_PORT: z.string().optional(),\n\t\tRAILWAY_PROJECT_NAME: z.string().optional(),\n\t\tRAILWAY_PROJECT_ID: z.string().optional(),\n\t\tRAILWAY_ENVIRONMENT_NAME: z.string().optional(),\n\t\tRAILWAY_ENVIRONMENT_ID: z.string().optional(),\n\t\tRAILWAY_SERVICE_NAME: z.string().optional(),\n\t\tRAILWAY_SERVICE_ID: z.string().optional(),\n\t\tRAILWAY_REPLICA_ID: z.string().optional(),\n\t\tRAILWAY_DEPLOYMENT_ID: z.string().optional(),\n\t\tRAILWAY_SNAPSHOT_ID: z.string().optional(),\n\t\tRAILWAY_VOLUME_NAME: z.string().optional(),\n\t\tRAILWAY_VOLUME_MOUNT_PATH: z.string().optional(),\n\t\tRAILWAY_RUN_UID: z.string().optional(),\n\t\tRAILWAY_GIT_COMMIT_SHA: z.string().optional(),\n\t\tRAILWAY_GIT_AUTHOR_EMAIL: z.string().optional(),\n\t\tRAILWAY_GIT_BRANCH: z.string().optional(),\n\t\tRAILWAY_GIT_REPO_NAME: z.string().optional(),\n\t\tRAILWAY_GIT_REPO_OWNER: z.string().optional(),\n\t\tRAILWAY_GIT_COMMIT_MESSAGE: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Fly.io Environment Variables\n* @see https://fly.io/docs/machines/runtime-environment/#environment-variables\n*/\nconst fly = () => createEnv({\n\tserver: {\n\t\tFLY_APP_NAME: z.string().optional(),\n\t\tFLY_MACHINE_ID: z.string().optional(),\n\t\tFLY_ALLOC_ID: z.string().optional(),\n\t\tFLY_REGION: z.string().optional(),\n\t\tFLY_PUBLIC_IP: z.string().optional(),\n\t\tFLY_IMAGE_REF: z.string().optional(),\n\t\tFLY_MACHINE_VERSION: z.string().optional(),\n\t\tFLY_PRIVATE_IP: z.string().optional(),\n\t\tFLY_PROCESS_GROUP: z.string().optional(),\n\t\tFLY_VM_MEMORY_MB: z.string().optional(),\n\t\tPRIMARY_REGION: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Netlify Environment Variables\n* @see https://docs.netlify.com/configure-builds/environment-variables\n*/\nconst netlify = () => createEnv({\n\tserver: {\n\t\tNETLIFY: z.string().optional(),\n\t\tBUILD_ID: z.string().optional(),\n\t\tCONTEXT: z.enum([\n\t\t\t\"production\",\n\t\t\t\"deploy-preview\",\n\t\t\t\"branch-deploy\",\n\t\t\t\"dev\"\n\t\t]).optional(),\n\t\tREPOSITORY_URL: z.string().optional(),\n\t\tBRANCH: z.string().optional(),\n\t\tURL: z.string().optional(),\n\t\tDEPLOY_URL: z.string().optional(),\n\t\tDEPLOY_PRIME_URL: z.string().optional(),\n\t\tDEPLOY_ID: z.string().optional(),\n\t\tSITE_NAME: z.string().optional(),\n\t\tSITE_ID: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Upstash redis Environment Variables\n* @see https://upstash.com/docs/redis/howto/connectwithupstashredis\n*/\nconst upstashRedis = () => createEnv({\n\tserver: {\n\t\tUPSTASH_REDIS_REST_URL: z.string().url(),\n\t\tUPSTASH_REDIS_REST_TOKEN: z.string()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Coolify Environment Variables\n* @see https://coolify.io/docs/knowledge-base/environment-variables#predefined-variables\n*/\nconst coolify = () => createEnv({\n\tserver: {\n\t\tCOOLIFY_FQDN: z.string().optional(),\n\t\tCOOLIFY_URL: z.string().optional(),\n\t\tCOOLIFY_BRANCH: z.string().optional(),\n\t\tCOOLIFY_RESOURCE_UUID: z.string().optional(),\n\t\tCOOLIFY_CONTAINER_NAME: z.string().optional(),\n\t\tSOURCE_COMMIT: z.string().optional(),\n\t\tPORT: z.string().optional(),\n\t\tHOST: z.string().optional()\n\t},\n\truntimeEnv: process.env\n});\n/**\n* Vite Environment Variables\n* @see https://vite.dev/guide/env-and-mode\n*/\nconst vite = () => createEnv({\n\tserver: {\n\t\tBASE_URL: z.string(),\n\t\tMODE: z.string(),\n\t\tDEV: z.boolean(),\n\t\tPROD: z.boolean(),\n\t\tSSR: z.boolean()\n\t},\n\truntimeEnv: import.meta.env\n});\n/**\n* WXT Environment Variables\n* @see https://wxt.dev/guide/essentials/config/environment-variables.html#built-in-environment-variables\n*/\nconst wxt = () => createEnv({\n\tserver: {\n\t\tMANIFEST_VERSION: z.union([z.literal(2), z.literal(3)]).optional(),\n\t\tBROWSER: z.enum([\n\t\t\t\"chrome\",\n\t\t\t\"firefox\",\n\t\t\t\"safari\",\n\t\t\t\"edge\",\n\t\t\t\"opera\"\n\t\t]).optional(),\n\t\tCHROME: z.boolean().optional(),\n\t\tFIREFOX: z.boolean().optional(),\n\t\tSAFARI: z.boolean().optional(),\n\t\tEDGE: z.boolean().optional(),\n\t\tOPERA: z.boolean().optional()\n\t},\n\truntimeEnv: import.meta.env\n});\n\n//#endregion\nexport { coolify, fly, neonVercel, netlify, railway, render, supabaseVercel, uploadthing, uploadthingV6, upstashRedis, vercel, vite, wxt };"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15681, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40t3-oss/env-core/dist/index.js"],"sourcesContent":["import { createEnv } from \"./src-Bb3GbGAa.js\";\n\nexport { createEnv };"],"names":[],"mappings":";AAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15689, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40t3-oss/env-nextjs/dist/index.js"],"sourcesContent":["import { createEnv as createEnv$1 } from \"@t3-oss/env-core\";\n\n//#region src/index.ts\nconst CLIENT_PREFIX = \"NEXT_PUBLIC_\";\n/**\n* Create a new environment variable schema.\n*/\nfunction createEnv(opts) {\n\tconst client = typeof opts.client === \"object\" ? opts.client : {};\n\tconst server = typeof opts.server === \"object\" ? opts.server : {};\n\tconst shared = opts.shared;\n\tconst runtimeEnv = opts.runtimeEnv ? opts.runtimeEnv : {\n\t\t...process.env,\n\t\t...opts.experimental__runtimeEnv\n\t};\n\treturn createEnv$1({\n\t\t...opts,\n\t\tshared,\n\t\tclient,\n\t\tserver,\n\t\tclientPrefix: CLIENT_PREFIX,\n\t\truntimeEnv\n\t});\n}\n\n//#endregion\nexport { createEnv };"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,sBAAsB;AACtB,MAAM,gBAAgB;AACtB;;AAEA,GACA,SAAS,UAAU,IAAI;IACtB,MAAM,SAAS,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IAChE,MAAM,SAAS,OAAO,KAAK,MAAM,KAAK,WAAW,KAAK,MAAM,GAAG,CAAC;IAChE,MAAM,SAAS,KAAK,MAAM;IAC1B,MAAM,aAAa,KAAK,UAAU,GAAG,KAAK,UAAU,GAAG;QACtD,GAAG,QAAQ,GAAG;QACd,GAAG,KAAK,wBAAwB;IACjC;IACA,OAAO,IAAA,gOAAW,EAAC;QAClB,GAAG,IAAI;QACP;QACA;QACA;QACA,cAAc;QACd;IACD;AACD","ignoreList":[0],"debugId":null}}]
}