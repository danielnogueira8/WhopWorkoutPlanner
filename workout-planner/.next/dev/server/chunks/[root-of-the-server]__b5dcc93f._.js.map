{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/src/env.ts"],"sourcesContent":["import { vercel } from '@t3-oss/env-core/presets-zod'\nimport { createEnv } from '@t3-oss/env-nextjs'\nimport z from 'zod'\n\nexport const env = createEnv({\n\tserver: {\n\t\tWHOP_API_KEY: z.string(),\n\n\t\t// Whop Payments\n\t\tONE_TIME_PURCHASE_ACCESS_PASS_PLAN_ID: z.string(),\n\t\tONE_TIME_PURCHASE_ACCESS_PASS_ID: z.string(),\n\t\tSUBSCRIPTION_PURCHASE_ACCESS_PASS_PLAN_ID: z.string(),\n\t\tSUBSCRIPTION_PURCHASE_ACCESS_PASS_ID: z.string(),\n\t},\n\tclient: {\n\t\tNEXT_PUBLIC_WHOP_APP_ID: z.string(),\n\t\tNEXT_PUBLIC_WHOP_AGENT_USER_ID: z.string(),\n\t\tNEXT_PUBLIC_WHOP_COMPANY_ID: z.string(),\n\t\tNEXT_PUBLIC_VERCEL_URL: z.string().default('http://localhost:3000'),\n\t},\n\truntimeEnv: {\n\t\t// Server\n\t\tWHOP_API_KEY: process.env.WHOP_API_KEY,\n\t\tONE_TIME_PURCHASE_ACCESS_PASS_PLAN_ID: process.env.ONE_TIME_PURCHASE_ACCESS_PASS_PLAN_ID,\n\t\tONE_TIME_PURCHASE_ACCESS_PASS_ID: process.env.ONE_TIME_PURCHASE_ACCESS_PASS_ID,\n\t\tSUBSCRIPTION_PURCHASE_ACCESS_PASS_PLAN_ID:\n\t\t\tprocess.env.SUBSCRIPTION_PURCHASE_ACCESS_PASS_PLAN_ID,\n\t\tSUBSCRIPTION_PURCHASE_ACCESS_PASS_ID: process.env.SUBSCRIPTION_PURCHASE_ACCESS_PASS_ID,\n\n\t\t// Client\n\t\tNEXT_PUBLIC_WHOP_APP_ID: process.env.NEXT_PUBLIC_WHOP_APP_ID,\n\t\tNEXT_PUBLIC_WHOP_AGENT_USER_ID: process.env.NEXT_PUBLIC_WHOP_AGENT_USER_ID,\n\t\tNEXT_PUBLIC_WHOP_COMPANY_ID: process.env.NEXT_PUBLIC_WHOP_COMPANY_ID,\n\t\tNEXT_PUBLIC_VERCEL_URL: process.env.NEXT_PUBLIC_VERCEL_URL,\n\t},\n\textends: [vercel()],\n})\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,MAAM,MAAM,IAAA,wNAAS,EAAC;IAC5B,QAAQ;QACP,cAAc,qMAAC,CAAC,MAAM;QAEtB,gBAAgB;QAChB,uCAAuC,qMAAC,CAAC,MAAM;QAC/C,kCAAkC,qMAAC,CAAC,MAAM;QAC1C,2CAA2C,qMAAC,CAAC,MAAM;QACnD,sCAAsC,qMAAC,CAAC,MAAM;IAC/C;IACA,QAAQ;QACP,yBAAyB,qMAAC,CAAC,MAAM;QACjC,gCAAgC,qMAAC,CAAC,MAAM;QACxC,6BAA6B,qMAAC,CAAC,MAAM;QACrC,wBAAwB,qMAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAC5C;IACA,YAAY;QACX,SAAS;QACT,cAAc,QAAQ,GAAG,CAAC,YAAY;QACtC,uCAAuC,QAAQ,GAAG,CAAC,qCAAqC;QACxF,kCAAkC,QAAQ,GAAG,CAAC,gCAAgC;QAC9E,2CACC,QAAQ,GAAG,CAAC,yCAAyC;QACtD,sCAAsC,QAAQ,GAAG,CAAC,oCAAoC;QAEtF,SAAS;QACT,uBAAuB;QACvB,8BAA8B;QAC9B,2BAA2B;QAC3B,wBAAwB,QAAQ,GAAG,CAAC,sBAAsB;IAC3D;IACA,SAAS;QAAC,IAAA,4NAAM;KAAG;AACpB","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/src/lib/whop.ts"],"sourcesContent":["import {\n\ttype CheckIfUserHasAccessToExperienceQuery,\n\ttype GetExperienceQuery,\n\ttype GetUserQuery,\n\tWhopServerSdk,\n} from '@whop/api'\nimport { env } from '~/env'\n\n// Type exports from Whop API queries\nexport type WhopExperience = GetExperienceQuery['experience']\nexport type WhopUser = GetUserQuery['publicUser']\nexport type WhopAccess = CheckIfUserHasAccessToExperienceQuery['hasAccessToExperience']\n\n// Initialize WhopServerSdk with app configuration\nexport const whop = WhopServerSdk({\n\tappId: env.NEXT_PUBLIC_WHOP_APP_ID,\n\tappApiKey: env.WHOP_API_KEY,\n\tonBehalfOfUserId: env.NEXT_PUBLIC_WHOP_AGENT_USER_ID,\n\tcompanyId: env.NEXT_PUBLIC_WHOP_COMPANY_ID,\n})\n\n// Note: For authentication in API routes, import verifyUserToken separately:\n// import { verifyUserToken } from '@whop/api'\n// const { userId } = await verifyUserToken(req.headers)\n\n// This is for the new @whop/sdk package\n// For the time being it has some missing features and is not recommended to use\n// Oct 21, 2025\n// import Whop from '@whop/sdk'\n// export const whopClient = new Whop({\n// \tappID: env.WHOP_API_KEY,\n// \tapiKey: env.WHOP_API_KEY,\n// })\n"],"names":[],"mappings":";;;;AAAA;AAMA;;;AAQO,MAAM,OAAO,IAAA,sOAAa,EAAC;IACjC,OAAO,+JAAG,CAAC,uBAAuB;IAClC,WAAW,+JAAG,CAAC,YAAY;IAC3B,kBAAkB,+JAAG,CAAC,8BAA8B;IACpD,WAAW,+JAAG,CAAC,2BAA2B;AAC3C,GAEA,6EAA6E;CAC7E,8CAA8C;CAC9C,wDAAwD;CAExD,wCAAwC;CACxC,gFAAgF;CAChF,eAAe;CACf,+BAA+B;CAC/B,uCAAuC;CACvC,4BAA4B;CAC5B,6BAA6B;CAC7B,KAAK","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/src/app/%28whop-api%29/api/experience/%5BexperienceId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport { WhopExperience, whop } from '~/lib/whop'\n\nexport async function GET(\n\treq: NextRequest,\n\t{ params }: { params: Promise<{ experienceId: string }> },\n) {\n\tconst { experienceId } = await params\n\tif (!experienceId)\n\t\treturn NextResponse.json({ error: 'Missing params' }, { status: 400 })\n\n\ttry {\n\t\tconst experience = await whop.experiences.getExperience({ experienceId })\n\t\treturn NextResponse.json<WhopExperience>(experience)\n\t} catch (error) {\n\t\tconsole.error('Failed to fetch experience:', error)\n\t\treturn NextResponse.json({ error: 'Failed to fetch' }, { status: 500 })\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IACrB,GAAgB,EAChB,EAAE,MAAM,EAAiD;IAEzD,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM;IAC/B,IAAI,CAAC,cACJ,OAAO,4LAAY,CAAC,IAAI,CAAC;QAAE,OAAO;IAAiB,GAAG;QAAE,QAAQ;IAAI;IAErE,IAAI;QACH,MAAM,aAAa,MAAM,wKAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YAAE;QAAa;QACvE,OAAO,4LAAY,CAAC,IAAI,CAAiB;IAC1C,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,4LAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACtE;AACD","debugId":null}}]
}