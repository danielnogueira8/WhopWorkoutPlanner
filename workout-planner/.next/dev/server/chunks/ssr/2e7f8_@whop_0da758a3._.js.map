{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/iframe/context.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from \"react\";\nexport const WhopIframeSdkContext = createContext(null);\n"],"names":[],"mappings":";;;;AACA;AADA;;AAEO,MAAM,uBAAuB,IAAA,kQAAa,EAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/util/use-lazy-ref.mjs"],"sourcesContent":["import { useRef } from \"react\";\nconst none = Symbol(\"none\");\nexport function useLazyRef(fn) {\n    const ref = useRef(none);\n    if (ref.current === none) {\n        ref.current = fn();\n    }\n    return ref;\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,OAAO,OAAO;AACb,SAAS,WAAW,EAAE;IACzB,MAAM,MAAM,IAAA,2PAAM,EAAC;IACnB,IAAI,IAAI,OAAO,KAAK,MAAM;QACtB,IAAI,OAAO,GAAG;IAClB;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/iframe/provider.mjs"],"sourcesContent":["\"use client\";\nimport { createSdk } from \"@whop/iframe\";\nimport React from \"react\";\nimport { useLazyRef } from \"../util/use-lazy-ref.mjs\";\nimport { WhopIframeSdkContext } from \"./context.mjs\";\nexport function WhopIframeSdkProvider({ children, options = {} }) {\n    const sdk = useLazyRef(()=>createSdk(options));\n    return React.createElement(WhopIframeSdkContext, {\n        value: sdk.current\n    }, children);\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;AAKO,SAAS,sBAAsB,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,EAAE;IAC5D,MAAM,MAAM,IAAA,gOAAU,EAAC,IAAI,IAAA,2NAAS,EAAC;IACrC,OAAO,4PAAK,CAAC,aAAa,CAAC,iOAAoB,EAAE;QAC7C,OAAO,IAAI,OAAO;IACtB,GAAG;AACP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/context.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from \"react\";\nexport const WhopWebsocketContext = createContext({\n    status: \"initializing\"\n});\n"],"names":[],"mappings":";;;;AACA;AADA;;AAEO,MAAM,uBAAuB,IAAA,kQAAa,EAAC;IAC9C,QAAQ;AACZ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/provider.mjs"],"sourcesContent":["\"use client\";\nimport { WhopClientSdk } from \"@whop/api\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { WhopWebsocketContext } from \"./context.mjs\";\nexport function WhopWebsocketProvider({ children, joinCustom, joinExperience, onAppMessage }) {\n    const [websocket, setWebsocket] = useState();\n    const [connectionStatus, setConnectionStatus] = useState(\"disconnected\");\n    const sdkRef = useRef(null);\n    useEffect(()=>{\n        if (!sdkRef.current) {\n            sdkRef.current = WhopClientSdk();\n        }\n        const whopSdk = sdkRef.current;\n        const websocket = whopSdk.websockets.client({\n            joinCustom,\n            joinExperience\n        });\n        setWebsocket(websocket);\n        websocket.on(\"connectionStatus\", setConnectionStatus);\n        return websocket.connect();\n    }, [\n        joinExperience,\n        joinCustom\n    ]);\n    useEffect(()=>{\n        if (websocket && onAppMessage) {\n            websocket.on(\"appMessage\", onAppMessage);\n            return ()=>{\n                websocket.off(\"appMessage\", onAppMessage);\n            };\n        }\n    }, [\n        onAppMessage,\n        websocket\n    ]);\n    const value = useMemo(()=>{\n        if (websocket) {\n            return {\n                status: connectionStatus,\n                websocket\n            };\n        }\n        return {\n            status: \"initializing\"\n        };\n    }, [\n        websocket,\n        connectionStatus\n    ]);\n    return React.createElement(WhopWebsocketContext, {\n        value: value\n    }, children);\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;AAIO,SAAS,sBAAsB,EAAE,QAAQ,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE;IACxF,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,6PAAQ;IAC1C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,6PAAQ,EAAC;IACzD,MAAM,SAAS,IAAA,2PAAM,EAAC;IACtB,IAAA,8PAAS,EAAC;QACN,IAAI,CAAC,OAAO,OAAO,EAAE;YACjB,OAAO,OAAO,GAAG,IAAA,oOAAa;QAClC;QACA,MAAM,UAAU,OAAO,OAAO;QAC9B,MAAM,YAAY,QAAQ,UAAU,CAAC,MAAM,CAAC;YACxC;YACA;QACJ;QACA,aAAa;QACb,UAAU,EAAE,CAAC,oBAAoB;QACjC,OAAO,UAAU,OAAO;IAC5B,GAAG;QACC;QACA;KACH;IACD,IAAA,8PAAS,EAAC;QACN,IAAI,aAAa,cAAc;YAC3B,UAAU,EAAE,CAAC,cAAc;YAC3B,OAAO;gBACH,UAAU,GAAG,CAAC,cAAc;YAChC;QACJ;IACJ,GAAG;QACC;QACA;KACH;IACD,MAAM,QAAQ,IAAA,4PAAO,EAAC;QAClB,IAAI,WAAW;YACX,OAAO;gBACH,QAAQ;gBACR;YACJ;QACJ;QACA,OAAO;YACH,QAAQ;QACZ;IACJ,GAAG;QACC;QACA;KACH;IACD,OAAO,4PAAK,CAAC,aAAa,CAAC,qOAAoB,EAAE;QAC7C,OAAO;IACX,GAAG;AACP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/use-websocket.mjs"],"sourcesContent":["\"use client\";\nimport { use } from \"react\";\nimport { WhopWebsocketContext } from \"./context.mjs\";\nexport function useWebsocket() {\n    const context = use(WhopWebsocketContext);\n    return context;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGO,SAAS;IACZ,MAAM,UAAU,IAAA,wPAAG,EAAC,qOAAoB;IACxC,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/use-websocket-status.mjs"],"sourcesContent":["\"use client\";\nimport { use } from \"react\";\nimport { WhopWebsocketContext } from \"./context.mjs\";\nexport function useWebsocketStatus() {\n    const context = use(WhopWebsocketContext);\n    return context.status;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGO,SAAS;IACZ,MAAM,UAAU,IAAA,wPAAG,EAAC,qOAAoB;IACxC,OAAO,QAAQ,MAAM;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/use-send-websocket-message.mjs"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef } from \"react\";\nimport { useWebsocket } from \"./use-websocket.mjs\";\nexport function useSendWebsocketMessage() {\n    const websocket = useWebsocket();\n    const queue = useRef([]);\n    useEffect(()=>{\n        if (websocket.status === \"connected\") {\n            for (const message of queue.current){\n                websocket.websocket.send(message);\n            }\n            queue.current = [];\n        }\n    }, [\n        websocket\n    ]);\n    return (message)=>{\n        if (websocket.status !== \"connected\") {\n            queue.current.push(message);\n        } else {\n            websocket.websocket.send(message);\n        }\n    };\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGO,SAAS;IACZ,MAAM,YAAY,IAAA,sOAAY;IAC9B,MAAM,QAAQ,IAAA,2PAAM,EAAC,EAAE;IACvB,IAAA,8PAAS,EAAC;QACN,IAAI,UAAU,MAAM,KAAK,aAAa;YAClC,KAAK,MAAM,WAAW,MAAM,OAAO,CAAC;gBAChC,UAAU,SAAS,CAAC,IAAI,CAAC;YAC7B;YACA,MAAM,OAAO,GAAG,EAAE;QACtB;IACJ,GAAG;QACC;KACH;IACD,OAAO,CAAC;QACJ,IAAI,UAAU,MAAM,KAAK,aAAa;YAClC,MAAM,OAAO,CAAC,IAAI,CAAC;QACvB,OAAO;YACH,UAAU,SAAS,CAAC,IAAI,CAAC;QAC7B;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/use-broadcast-websocket-message.mjs"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef } from \"react\";\nimport { useWebsocket } from \"./use-websocket.mjs\";\nexport function useBroadcastWebsocketMessage() {\n    const websocket = useWebsocket();\n    const queue = useRef([]);\n    useEffect(()=>{\n        if (websocket.status === \"connected\") {\n            for (const message of queue.current){\n                websocket.websocket.broadcast(message);\n            }\n            queue.current = [];\n        }\n    }, [\n        websocket\n    ]);\n    return (message)=>{\n        if (websocket.status !== \"connected\") {\n            queue.current.push(message);\n        } else {\n            websocket.websocket.broadcast(message);\n        }\n    };\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGO,SAAS;IACZ,MAAM,YAAY,IAAA,sOAAY;IAC9B,MAAM,QAAQ,IAAA,2PAAM,EAAC,EAAE;IACvB,IAAA,8PAAS,EAAC;QACN,IAAI,UAAU,MAAM,KAAK,aAAa;YAClC,KAAK,MAAM,WAAW,MAAM,OAAO,CAAC;gBAChC,UAAU,SAAS,CAAC,SAAS,CAAC;YAClC;YACA,MAAM,OAAO,GAAG,EAAE;QACtB;IACJ,GAAG;QACC;KACH;IACD,OAAO,CAAC;QACJ,IAAI,UAAU,MAAM,KAAK,aAAa;YAClC,MAAM,OAAO,CAAC,IAAI,CAAC;QACvB,OAAO;YACH,UAAU,SAAS,CAAC,SAAS,CAAC;QAClC;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/react/dist/websockets/use-on-websocket-message.mjs"],"sourcesContent":["\"use client\";\nimport { useEffect } from \"react\";\nimport { useWebsocket } from \"./use-websocket.mjs\";\nexport function useOnWebsocketMessage(callback) {\n    const websocket = useWebsocket();\n    useEffect(()=>{\n        if (websocket.status !== \"initializing\" && callback) {\n            websocket.websocket.on(\"appMessage\", callback);\n            return ()=>{\n                websocket.websocket.off(\"appMessage\", callback);\n            };\n        }\n    }, [\n        websocket,\n        callback\n    ]);\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;AAGO,SAAS,sBAAsB,QAAQ;IAC1C,MAAM,YAAY,IAAA,sOAAY;IAC9B,IAAA,8PAAS,EAAC;QACN,IAAI,UAAU,MAAM,KAAK,kBAAkB,UAAU;YACjD,UAAU,SAAS,CAAC,EAAE,CAAC,cAAc;YACrC,OAAO;gBACH,UAAU,SAAS,CAAC,GAAG,CAAC,cAAc;YAC1C;QACJ;IACJ,GAAG;QACC;QACA;KACH;AACL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/apps-server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/utils.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/transport/utils.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/transport/sdk.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/transport/postmessage.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/transport/index.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/transport/handler.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/whop-server.ts"],"sourcesContent":["import { z } from \"zod\";\nimport { frostedV2Theme } from \"./utils\";\n\nexport const appsServerSchema = z.discriminatedUnion(\"event\", [\n\tz.object({\n\t\tevent: z.literal(\"appPing\"),\n\t\trequest: z.literal(\"app_ping\"),\n\t\tresponse: z.literal(\"app_pong\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"onColorThemeChange\"),\n\t\trequest: frostedV2Theme,\n\t\tresponse: z.void(),\n\t}),\n]);\n\nexport type AppsServerSchema = z.TypeOf<typeof appsServerSchema>;\n","import { type ZodSchema, z } from \"zod\";\n\nexport const withError = <T extends ZodSchema, E extends ZodSchema>(\n\tschema: T,\n\terror: E,\n) => {\n\treturn z.discriminatedUnion(\"status\", [\n\t\tz.object({\n\t\t\tstatus: z.literal(\"ok\"),\n\t\t\tdata: schema,\n\t\t}),\n\t\tz.object({\n\t\t\tstatus: z.literal(\"error\"),\n\t\t\terror: error,\n\t\t}),\n\t]);\n};\n\nexport const frostedV2Theme = z\n\t.object({\n\t\tappearance: z.enum([\"light\", \"dark\"]),\n\t\taccentColor: z.string(),\n\t\tdangerColor: z.string(),\n\t\tgrayColor: z.string(),\n\t\tinfoColor: z.string(),\n\t\tsuccessColor: z.string(),\n\t\twarningColor: z.string(),\n\t})\n\t.partial();\n","export class TimeoutError extends Error {\n\tconstructor() {\n\t\tsuper(\"Timeout\");\n\t}\n}\n\nexport function randomId(length: number) {\n\tconst alphabet =\n\t\t\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\tlet str = \"\";\n\tfor (let i = 0; i < length; i++) {\n\t\tstr += alphabet[Math.floor(Math.random() * alphabet.length)];\n\t}\n\treturn str;\n}\n","import type {\n\tZodDiscriminatedUnion,\n\tZodLiteral,\n\tZodObject,\n\tZodRawShape,\n\tZodTypeAny,\n\tz,\n} from \"zod\";\nimport { TimeoutError, randomId } from \"./utils\";\n\nexport type ValidZodEventSchema = ZodDiscriminatedUnion<\n\t\"event\",\n\tZodObject<\n\t\t{\n\t\t\tevent: ZodLiteral<string>;\n\t\t\trequest: ZodTypeAny;\n\t\t\tresponse: ZodTypeAny;\n\t\t} & ZodRawShape\n\t>[]\n>;\n\ntype MaybePromise<T> = Promise<T> | T;\n\ntype T = z.infer<ValidZodEventSchema>;\n\ntype FullServerImplementation<Schema extends ValidZodEventSchema> = {\n\t[K in NonNullable<z.infer<Schema>[\"event\"]>]: (\n\t\trequest: Extract<z.infer<Schema>, { event: K }>[\"request\"],\n\t) => MaybePromise<Extract<z.infer<Schema>, { event: K }>[\"response\"]>;\n};\n\nexport type ClientSDK<\n\tClientSchema extends ValidZodEventSchema,\n\tComplete extends boolean,\n> = {\n\t[K in NonNullable<z.infer<ClientSchema>[\"event\"]>]: (\n\t\treq: Extract<z.infer<ClientSchema>, { event: K }>[\"request\"],\n\t) => Promise<\n\t\tComplete extends true\n\t\t\t? Extract<z.infer<ClientSchema>, { event: K }>[\"response\"]\n\t\t\t: Extract<z.infer<ClientSchema>, { event: K }>[\"response\"] | undefined\n\t>;\n};\n\nexport type ServerImplementation<\n\tSchema extends ValidZodEventSchema,\n\tForceCompleteness extends boolean = false,\n> = ForceCompleteness extends true\n\t? FullServerImplementation<Schema>\n\t: Partial<FullServerImplementation<Schema>>;\n\ntype FullServerMiddlewareImplementation<\n\tSchema extends ValidZodEventSchema,\n\tForceCompleteness extends boolean = false,\n> = {\n\t[K in NonNullable<z.infer<Schema>[\"event\"]>]: (\n\t\trequest: Extract<z.infer<Schema>, { event: K }>[\"request\"],\n\t\tnext: ForceCompleteness extends true\n\t\t\t? (\n\t\t\t\t\trequest: Extract<z.infer<Schema>, { event: K }>[\"request\"],\n\t\t\t\t) => MaybePromise<Extract<z.infer<Schema>, { event: K }>[\"response\"]>\n\t\t\t:\n\t\t\t\t\t| ((\n\t\t\t\t\t\t\trequest: Extract<z.infer<Schema>, { event: K }>[\"request\"],\n\t\t\t\t\t  ) => MaybePromise<\n\t\t\t\t\t\t\tExtract<z.infer<Schema>, { event: K }>[\"response\"]\n\t\t\t\t\t  >)\n\t\t\t\t\t| undefined,\n\t) => MaybePromise<\n\t\tForceCompleteness extends true\n\t\t\t? Extract<z.infer<Schema>, { event: K }>[\"response\"]\n\t\t\t: Extract<z.infer<Schema>, { event: K }>[\"response\"] | undefined\n\t>;\n};\nexport type ServerMiddleware<\n\tSchema extends ValidZodEventSchema,\n\tForceCompleteness extends boolean = false,\n> = Partial<FullServerMiddlewareImplementation<Schema, ForceCompleteness>>;\n\nexport type Transport<ServerSchema extends ValidZodEventSchema | undefined> = {\n\tsend: (\n\t\tevent: string,\n\t\tdata: unknown,\n\t\tparams: { localAppId: string; remoteAppId: string },\n\t) => unknown;\n\trecv: (\n\t\thandler: (\n\t\t\tevent: string,\n\t\t\tdata: unknown,\n\t\t) => Promise<\n\t\t\t| (ServerSchema extends ValidZodEventSchema\n\t\t\t\t\t? z.infer<ServerSchema>[\"response\"]\n\t\t\t\t\t: undefined)\n\t\t\t| undefined\n\t\t>,\n\t\tparams: { localAppId: string; remoteAppId: string },\n\t\t// biome-ignore lint/suspicious/noConfusingVoidType: idk\n\t) => void | (() => void);\n\tcleanup?: () => void;\n};\n\nexport function createSDK<\n\tClientSchema extends ValidZodEventSchema | undefined,\n\tServerSchema extends ValidZodEventSchema | undefined,\n\tForceCompleteness extends boolean = false,\n\tServerComplete extends boolean = false,\n>({\n\tclientSchema,\n\tserverSchema,\n\tserverComplete,\n\ttransport,\n\ttimeout = 1000,\n\ttimeouts,\n\tlocalAppId,\n\tremoteAppId,\n\tserverImplementation = {},\n\tserverMiddleware,\n}: {\n\tclientSchema: ClientSchema;\n\tserverSchema: ServerSchema;\n\tforceCompleteness?: ForceCompleteness;\n\tserverComplete?: ServerComplete;\n\tlocalAppId: string;\n\tremoteAppId: string;\n\tserverMiddleware?: ServerSchema extends ValidZodEventSchema\n\t\t? ServerMiddleware<ServerSchema, ForceCompleteness>[]\n\t\t: undefined;\n\tserverImplementation: ServerSchema extends ValidZodEventSchema\n\t\t? ServerImplementation<ServerSchema, ForceCompleteness>\n\t\t: undefined;\n\ttransport: Transport<ServerSchema>;\n\ttimeout?: number;\n\ttimeouts?: ClientSchema extends ValidZodEventSchema\n\t\t? {\n\t\t\t\t[K in NonNullable<z.infer<ClientSchema>[\"event\"]>]?: number;\n\t\t\t}\n\t\t: never;\n}): (ClientSchema extends ValidZodEventSchema\n\t? ClientSDK<ClientSchema, ServerComplete>\n\t: object) & {\n\t_cleanupTransport: () => void;\n} {\n\tconst callbacks: {\n\t\tid: string;\n\t\tresolve: (data: unknown) => void;\n\t}[] = [];\n\n\tconst keys =\n\t\tclientSchema?.options.map(\n\t\t\t(option) => option._def.shape().event._def.value,\n\t\t) ?? [];\n\n\tconst client = Object.fromEntries(\n\t\tkeys.map((key) => [\n\t\t\tkey,\n\t\t\tasync (req: unknown) => {\n\t\t\t\t// We make event id unique so that we can fire many requests at the same time.\n\t\t\t\tconst eventId = `${localAppId}:${key}:${randomId(8)}`;\n\n\t\t\t\tconsole.debug(\"[typed-transport] app. Created eventId\", eventId);\n\n\t\t\t\tconst responseData = new Promise((resolve, reject) => {\n\t\t\t\t\t// Timeout the request after the specified timeout\n\t\t\t\t\tconst customTimeout = timeouts?.[key];\n\n\t\t\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\t\t\tconst index = callbacks.findIndex((cb) => cb.id === eventId);\n\t\t\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t\t\t\tif (serverComplete) {\n\t\t\t\t\t\t\tconsole.debug(\"[typed-transport] app. Timeout error\");\n\t\t\t\t\t\t\treject(new TimeoutError());\n\t\t\t\t\t\t} else resolve(undefined);\n\t\t\t\t\t}, customTimeout ?? timeout);\n\n\t\t\t\t\tif (customTimeout && customTimeout > timeout && !serverComplete) {\n\t\t\t\t\t\tconst timeoutId = setTimeout(() => {\n\t\t\t\t\t\t\tconst index = callbacks.findIndex((cb) => cb.id === eventId);\n\t\t\t\t\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}, timeout);\n\t\t\t\t\t\tcallbacks.push({\n\t\t\t\t\t\t\tid: `${eventId}:processing`,\n\t\t\t\t\t\t\tresolve: () => clearTimeout(timeoutId),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tcallbacks.push({\n\t\t\t\t\t\tid: eventId,\n\t\t\t\t\t\tresolve: (data) => {\n\t\t\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tconsole.debug(\"[typed-transport] app sending event\", {\n\t\t\t\t\teventId,\n\t\t\t\t\tlocalAppId,\n\t\t\t\t\tremoteAppId,\n\t\t\t\t});\n\t\t\t\tawait transport.send?.(eventId, req, { localAppId, remoteAppId });\n\n\t\t\t\tconst data = await responseData;\n\n\t\t\t\tconsole.debug(\"[typed-transport] received response\", data);\n\n\t\t\t\treturn data;\n\t\t\t},\n\t\t]),\n\t) as (ClientSchema extends ValidZodEventSchema\n\t\t? ClientSDK<ClientSchema, ServerComplete>\n\t\t: object) & {\n\t\t_cleanupTransport: () => void;\n\t};\n\n\tconst cleanupRecv = transport.recv(\n\t\tasync (event, dataAny) => {\n\t\t\tconst [app, key, _randomId, type] = event.split(\":\");\n\t\t\tif (app === localAppId) {\n\t\t\t\t// Here we are receiving a response from a request we made.\n\t\t\t\tconst idx = callbacks.findIndex((cb) => cb.id === event);\n\t\t\t\tif (idx === -1) return;\n\t\t\t\tconst dataSchema = clientSchema?.optionsMap.get(key);\n\t\t\t\tif (!dataSchema) return;\n\t\t\t\tconst cb = callbacks[idx];\n\t\t\t\tif (type === \"processing\") {\n\t\t\t\t\tcb.resolve(undefined);\n\t\t\t\t} else {\n\t\t\t\t\tconst data = dataSchema.shape.response.parse(dataAny);\n\t\t\t\t\tcallbacks.splice(idx, 1);\n\t\t\t\t\tcb.resolve(data);\n\t\t\t\t}\n\t\t\t} else if (app === remoteAppId) {\n\t\t\t\tif (serverImplementation === undefined) return;\n\t\t\t\t// Here we are responding to a request from a client.\n\n\t\t\t\t// final handler\n\t\t\t\tlet handler = (\n\t\t\t\t\tserverImplementation as unknown as Record<\n\t\t\t\t\t\tstring,\n\t\t\t\t\t\t(data: unknown) => Promise<unknown>\n\t\t\t\t\t>\n\t\t\t\t)[key];\n\n\t\t\t\t// Build a linked list of middleware invocations that will call the final handler.\n\t\t\t\tif (serverMiddleware) {\n\t\t\t\t\tfor (let i = serverMiddleware.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst middlewareDef = serverMiddleware[i];\n\t\t\t\t\t\tconst middleware = middlewareDef[key] as (\n\t\t\t\t\t\t\tdata: unknown,\n\t\t\t\t\t\t\tnext: unknown,\n\t\t\t\t\t\t) => Promise<unknown>;\n\t\t\t\t\t\tif (!middleware) continue;\n\t\t\t\t\t\tconst ref = handler;\n\t\t\t\t\t\thandler = (data: unknown) => middleware(data, ref);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!handler) return;\n\t\t\t\tconst dataSchema = serverSchema?.optionsMap.get(key);\n\t\t\t\tif (!dataSchema) return;\n\t\t\t\tconst data = dataSchema.shape.request.parse(dataAny);\n\n\t\t\t\t// If our handler doesn't complete in 80% of the default message timeout, we send a message to the caller, saying that we are expecting an answer.\n\t\t\t\tconst timeoutId = setTimeout(async () => {\n\t\t\t\t\tawait transport.send(\n\t\t\t\t\t\t`${event}:processing`,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{ localAppId, remoteAppId },\n\t\t\t\t\t);\n\t\t\t\t}, 50);\n\n\t\t\t\tconst response = await handler(data);\n\n\t\t\t\tclearTimeout(timeoutId);\n\n\t\t\t\tawait transport.send(event, response, { localAppId, remoteAppId });\n\t\t\t\t// biome-ignore lint/suspicious/noExplicitAny: will fix at some point\n\t\t\t\treturn response as any;\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tlocalAppId,\n\t\t\tremoteAppId,\n\t\t},\n\t);\n\n\tconst cleanupFunctions: (() => void)[] = [];\n\tif (transport.cleanup) cleanupFunctions.push(transport.cleanup);\n\tif (cleanupRecv) cleanupFunctions.push(cleanupRecv);\n\n\tclient._cleanupTransport = () => {\n\t\tfor (const fn of cleanupFunctions) fn();\n\t};\n\n\treturn client;\n}\n","import type { Transport, ValidZodEventSchema } from \"./sdk\";\n\nexport const MESSAGE_TAG = \"typed-transport\";\n\nexport function postmessageTransport<\n\tServerSchema extends ValidZodEventSchema | undefined = undefined,\n>({\n\tremoteWindow,\n\ttargetOrigins,\n}: {\n\tremoteWindow: Window | undefined;\n\ttargetOrigins: string[];\n}): Transport<ServerSchema> {\n\treturn {\n\t\tsend(event, data, { remoteAppId, localAppId }) {\n\t\t\tif (!remoteWindow) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"No remote window. Is the SDK running on a server without a global window object?\",\n\t\t\t\t);\n\t\t\t}\n\t\t\tconsole.debug(\n\t\t\t\t\"[typed-transport] postmessagetransport. Sending event\",\n\t\t\t\tevent,\n\t\t\t\tdata,\n\t\t\t);\n\t\t\tconsole.debug(\n\t\t\t\t\"[typed-transport] postmessagetransport. target origins =\",\n\t\t\t\ttargetOrigins,\n\t\t\t);\n\n\t\t\tfor (const targetOrigin of targetOrigins) {\n\t\t\t\tconsole.debug(\"[typed-transport] remoteWindow.postMessage\", {\n\t\t\t\t\tevent,\n\t\t\t\t\tlibId: MESSAGE_TAG,\n\t\t\t\t\treceiverAppId: remoteAppId,\n\t\t\t\t\tsenderAppId: localAppId,\n\t\t\t\t});\n\t\t\t\tconsole.debug(\n\t\t\t\t\t\"[typed-transport] remoteWindow.postMessage.data\",\n\t\t\t\t\tdata,\n\t\t\t\t\tJSON.stringify(data),\n\t\t\t\t);\n\n\t\t\t\tremoteWindow.postMessage(\n\t\t\t\t\t{\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tlibId: MESSAGE_TAG,\n\t\t\t\t\t\treceiverAppId: remoteAppId,\n\t\t\t\t\t\tsenderAppId: localAppId,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttargetOrigin,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (targetOrigins.length === 0) {\n\t\t\t\tremoteWindow.postMessage({\n\t\t\t\t\tevent,\n\t\t\t\t\tdata,\n\t\t\t\t\tlibId: MESSAGE_TAG,\n\t\t\t\t\treceiverAppId: remoteAppId,\n\t\t\t\t\tsenderAppId: localAppId,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\trecv(handler, { localAppId, remoteAppId }) {\n\t\t\tconst listener = (event: MessageEvent) => {\n\t\t\t\tconsole.debug(\n\t\t\t\t\t\"[typed-transport] postmessagetransport. Receiving event\",\n\t\t\t\t\tevent,\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tevent.source !== remoteWindow ||\n\t\t\t\t\t(!targetOrigins.includes(event.origin) && targetOrigins.length > 0) ||\n\t\t\t\t\t!event.data ||\n\t\t\t\t\t!event.data.event ||\n\t\t\t\t\tevent.data.libId !== MESSAGE_TAG ||\n\t\t\t\t\tevent.data.receiverAppId !== localAppId ||\n\t\t\t\t\tevent.data.senderAppId !== remoteAppId\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandler(event.data.event, event.data.data);\n\t\t\t};\n\n\t\t\tif (typeof window === \"undefined\") {\n\t\t\t\t// Stop logging this as it's causing more confusion than it's worth.\n\t\t\t\t// console.warn(\n\t\t\t\t//   'No window. Is the SDK running on a server without a global window object?',\n\t\t\t\t// );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twindow.addEventListener(\"message\", listener);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener(\"message\", listener);\n\t\t\t};\n\t\t},\n\t};\n}\n\nexport function reactNativeClientTransport<\n\tServerSchema extends ValidZodEventSchema | undefined = undefined,\n>({\n\tpostMessage,\n\ttargetOrigin,\n}: {\n\tpostMessage: (data: string) => void;\n\ttargetOrigin: string;\n}): Transport<ServerSchema> {\n\treturn {\n\t\tsend(event, data, { remoteAppId, localAppId }) {\n\t\t\tpostMessage(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tevent,\n\t\t\t\t\tdata,\n\t\t\t\t\tlibId: MESSAGE_TAG,\n\t\t\t\t\treceiverAppId: remoteAppId,\n\t\t\t\t\tsenderAppId: localAppId,\n\t\t\t\t}),\n\t\t\t);\n\t\t},\n\t\trecv(handler, { localAppId, remoteAppId }) {\n\t\t\tconst listener = (event: MessageEvent) => {\n\t\t\t\tconst dataString = typeof event.data === \"string\" ? event.data : null;\n\t\t\t\tif (!dataString) return;\n\n\t\t\t\tconst data = JSON.parse(dataString);\n\n\t\t\t\tif (\n\t\t\t\t\tevent.origin !== targetOrigin ||\n\t\t\t\t\t!data ||\n\t\t\t\t\t!data.event ||\n\t\t\t\t\t!data.data ||\n\t\t\t\t\tdata.libId !== MESSAGE_TAG ||\n\t\t\t\t\tdata.receiverAppId !== localAppId ||\n\t\t\t\t\tdata.senderAppId !== remoteAppId\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\thandler(data.event, data.data);\n\t\t\t};\n\n\t\t\tif (typeof window === \"undefined\") {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"No window. Is the SDK running on a server without a global window object?\",\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twindow.addEventListener(\"message\", listener);\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener(\"message\", listener);\n\t\t\t};\n\t\t},\n\t};\n}\n","export { createHandler } from \"./handler\";\nexport { MESSAGE_TAG, postmessageTransport } from \"./postmessage\";\nexport { createSDK } from \"./sdk\";\n\nexport type {\n\tClientSDK,\n\tServerImplementation,\n\tTransport,\n\tValidZodEventSchema,\n} from \"./sdk\";\n\nexport { TimeoutError } from \"./utils\";\n","import type { z } from \"zod\";\nimport {\n\ttype ServerImplementation,\n\ttype ValidZodEventSchema,\n\tcreateSDK,\n} from \"./sdk\";\n\nexport function createHandler<\n\tSchema extends ValidZodEventSchema,\n\tForceCompleteness extends boolean = false,\n>({\n\tschema,\n\tforceCompleteness,\n\thandlers,\n}: {\n\tschema: Schema;\n\tforceCompleteness?: ForceCompleteness;\n\thandlers: Schema extends ValidZodEventSchema\n\t\t? ServerImplementation<Schema, ForceCompleteness>\n\t\t: undefined;\n}) {\n\tlet eventHandler: (\n\t\tevent: string,\n\t\tdata: unknown,\n\t) => Promise<\n\t\t| (Schema extends ValidZodEventSchema\n\t\t\t\t? z.TypeOf<Schema>[\"response\"]\n\t\t\t\t: undefined)\n\t\t| undefined\n\t>;\n\n\tcreateSDK<undefined, Schema, ForceCompleteness, false>({\n\t\tclientSchema: undefined,\n\t\tserverSchema: schema,\n\t\tlocalAppId: \"client\",\n\t\tremoteAppId: \"server\",\n\t\tforceCompleteness,\n\t\tserverImplementation: handlers,\n\t\ttransport: {\n\t\t\tsend() {\n\t\t\t\t// empty, only handling incoming events\n\t\t\t},\n\t\t\trecv(handler) {\n\t\t\t\teventHandler = handler;\n\t\t\t},\n\t\t},\n\t});\n\n\treturn (event: string, data: unknown) => {\n\t\treturn eventHandler(`server:${event}`, data);\n\t};\n}\n","import { z } from \"zod\";\nimport { frostedV2Theme, withError } from \"./utils\";\n\nexport const whopServerSchema = z.discriminatedUnion(\"event\", [\n\tz.object({\n\t\tevent: z.literal(\"ping\"),\n\t\trequest: z.literal(\"ping\"),\n\t\tresponse: z.literal(\"pong\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"getTopLevelUrlData\"),\n\t\trequest: z.object({}).optional(),\n\t\tresponse: z.object({\n\t\t\tcompanyRoute: z.string(),\n\t\t\texperienceRoute: z.string(),\n\t\t\texperienceId: z.string(),\n\t\t\tviewType: z.enum([\"app\", \"admin\", \"analytics\", \"preview\"]),\n\t\t\tbaseHref: z.string(),\n\t\t\tfullHref: z.string(),\n\t\t}),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"openExternalUrl\"),\n\t\trequest: z.object({\n\t\t\tnewTab: z.boolean().optional(),\n\t\t\turl: z.string(),\n\t\t}),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"onHrefChange\"),\n\t\trequest: z.object({\n\t\t\thref: z.string(),\n\t\t}),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"inAppPurchase\"),\n\t\trequest: z.object({\n\t\t\t/**\n\t\t\t * ID returned from the `chargeUser` API call.\n\t\t\t * @example \"ch_1234567890\"\n\t\t\t */\n\t\t\tid: z.string().optional(),\n\t\t\t/**\n\t\t\t * ID of the plan returned from the `chargeUser` API call.\n\t\t\t * @example \"plan_1234567890\"\n\t\t\t */\n\t\t\tplanId: z.string(),\n\t\t}),\n\t\tresponse: withError(\n\t\t\tz.object({\n\t\t\t\tsessionId: z.string(),\n\t\t\t\t/**\n\t\t\t\t * The receipt ID can be used to verify the purchase.\n\t\t\t\t *\n\t\t\t\t * NOTE: When receiving payments you should always listen to webhooks as a fallback\n\t\t\t\t * to process the payment. Do not solely rely on the client to process payments. The receipt ID\n\t\t\t\t * can be used to deduplicate payment events.\n\t\t\t\t */\n\t\t\t\treceiptId: z.string(),\n\t\t\t}),\n\t\t\tz.string(),\n\t\t),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"closeApp\"),\n\t\trequest: z.null(),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"openHelpChat\"),\n\t\trequest: z.null(),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"getColorTheme\"),\n\t\trequest: z.void(),\n\t\tresponse: frostedV2Theme,\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"earliestUnreadNotification\"),\n\t\trequest: z.object({\n\t\t\texperienceId: z.string(),\n\t\t}),\n\t\tresponse: z\n\t\t\t.object({\n\t\t\t\texternalId: z.string(),\n\t\t\t})\n\t\t\t.nullable(),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"markExperienceRead\"),\n\t\trequest: z.object({\n\t\t\texperienceId: z.string(),\n\t\t\tnotificationExternalId: z.string().optional(),\n\t\t}),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n\tz.object({\n\t\tevent: z.literal(\"performHaptic\"),\n\t\trequest: z.object({\n\t\t\ttype: z.enum([\"selection\", \"impact\", \"notification\"]),\n\t\t\tstyle: z.enum([\"light\", \"medium\", \"heavy\"]),\n\t\t}),\n\t\tresponse: z.literal(\"ok\"),\n\t}),\n]);\n\nexport type WhopServerSchema = z.TypeOf<typeof whopServerSchema>;\n"],"names":["z","z","timeoutId","data","cb","z","z"],"mappings":"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","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/mobile-app-postmessage.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/sync-href.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/iframe/src/sdk/index.ts"],"sourcesContent":["export function getReactNativePostMessage() {\n\tconst reactNativePostMessage =\n\t\ttypeof window !== \"undefined\" &&\n\t\t\"ReactNativeWebView\" in window &&\n\t\ttypeof window.ReactNativeWebView === \"object\" &&\n\t\twindow.ReactNativeWebView &&\n\t\t\"postMessage\" in window.ReactNativeWebView &&\n\t\ttypeof window.ReactNativeWebView.postMessage === \"function\"\n\t\t\t? (data: string) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof window !== \"undefined\" &&\n\t\t\t\t\t\t\"ReactNativeWebView\" in window &&\n\t\t\t\t\t\ttypeof window.ReactNativeWebView === \"object\" &&\n\t\t\t\t\t\twindow.ReactNativeWebView &&\n\t\t\t\t\t\t\"postMessage\" in window.ReactNativeWebView &&\n\t\t\t\t\t\ttypeof window.ReactNativeWebView.postMessage === \"function\"\n\t\t\t\t\t)\n\t\t\t\t\t\twindow?.ReactNativeWebView?.postMessage(data);\n\t\t\t\t}\n\t\t\t: undefined;\n\treturn reactNativePostMessage;\n}\n\nexport function getSwiftPostMessage() {\n\tconst swiftMessageHandler =\n\t\ttypeof window !== \"undefined\" &&\n\t\t\"webkit\" in window &&\n\t\ttypeof window.webkit === \"object\" &&\n\t\twindow.webkit !== null &&\n\t\t\"messageHandlers\" in window.webkit &&\n\t\ttypeof window.webkit.messageHandlers === \"object\" &&\n\t\twindow.webkit.messageHandlers !== null &&\n\t\t\"SwiftWebView\" in window.webkit.messageHandlers &&\n\t\ttypeof window.webkit.messageHandlers.SwiftWebView === \"object\" &&\n\t\twindow.webkit.messageHandlers.SwiftWebView !== null &&\n\t\t\"postMessage\" in window.webkit.messageHandlers.SwiftWebView\n\t\t\t? window.webkit.messageHandlers.SwiftWebView\n\t\t\t: null;\n\n\tconst swiftPostMessage = swiftMessageHandler\n\t\t? (data: string) => {\n\t\t\t\tif (typeof swiftMessageHandler.postMessage === \"function\") {\n\t\t\t\t\tswiftMessageHandler.postMessage(data);\n\t\t\t\t}\n\t\t\t}\n\t\t: undefined;\n\n\treturn swiftPostMessage;\n}\n","declare global {\n\tinterface Window {\n\t\t_whop_sync_href_interval?: ReturnType<typeof setInterval>;\n\t}\n}\n\nexport function syncHref({\n\tonChange,\n}: { onChange: (req: { href: string }) => Promise<\"ok\"> }) {\n\tif (typeof window === \"undefined\") return;\n\n\tconst initialHref = window.location.href;\n\tonChange({ href: initialHref }).catch(() => null);\n\tlet lastKnown = initialHref;\n\n\twindow.addEventListener(\"popstate\", () => {\n\t\tconst { href } = window.location;\n\t\tonChange({ href }).catch(() => null);\n\t\tlastKnown = href;\n\t});\n\n\tif (window._whop_sync_href_interval) {\n\t\tclearInterval(window._whop_sync_href_interval);\n\t}\n\twindow._whop_sync_href_interval = setInterval(() => {\n\t\tconst { href } = window.location;\n\t\tif (href === lastKnown) return;\n\t\tonChange({ href }).catch(() => null);\n\t\tlastKnown = href;\n\t}, 250);\n}\n","import { appsServerSchema } from \"@/sdk/apps-server\";\nimport {\n\tgetReactNativePostMessage,\n\tgetSwiftPostMessage,\n} from \"@/sdk/mobile-app-postmessage\";\nimport { syncHref } from \"@/sdk/sync-href\";\nimport {\n\ttype ServerImplementation,\n\tcreateSDK as createPostmessageSdk,\n\tpostmessageTransport,\n} from \"@/sdk/transport\";\nimport { reactNativeClientTransport } from \"@/sdk/transport/postmessage\";\nimport type { frostedV2Theme } from \"@/sdk/utils\";\nimport { whopServerSchema } from \"@/sdk/whop-server\";\nimport type { z } from \"zod\";\n\nexport { appsServerSchema, whopServerSchema };\n\nfunction setColorTheme(theme: z.infer<typeof frostedV2Theme>) {\n\tdocument.documentElement.dispatchEvent(\n\t\tnew CustomEvent(\"frosted-ui:set-theme\", {\n\t\t\tdetail: theme,\n\t\t}),\n\t);\n}\n\n/**\n * Create an iframe SDK for a client app. This will communicate with the parent\n * window which is required to be whop.com.\n */\nexport function createSdk({\n\tonMessage = {},\n\tappId = process.env.NEXT_PUBLIC_WHOP_APP_ID,\n\toverrideParentOrigins,\n}: {\n\tonMessage?: ServerImplementation<typeof appsServerSchema, false>;\n\tappId?: string;\n\toverrideParentOrigins?: string[];\n}) {\n\tconst mobileWebView = getSwiftPostMessage() ?? getReactNativePostMessage();\n\n\tconst remoteWindow =\n\t\ttypeof window === \"undefined\" ? undefined : window.parent;\n\n\tif (!appId) {\n\t\tthrow new Error(\n\t\t\t\"[createSdk]: appId is required. Please provide an appId or set the NEXT_PUBLIC_WHOP_APP_ID environment variable.\",\n\t\t);\n\t}\n\n\tconst sdk = createPostmessageSdk({\n\t\tclientSchema: whopServerSchema,\n\t\tserverSchema: appsServerSchema,\n\t\tforceCompleteness: false,\n\t\tserverImplementation: onMessage,\n\t\tlocalAppId: appId,\n\t\tremoteAppId: \"app_whop\",\n\t\ttransport: mobileWebView\n\t\t\t? reactNativeClientTransport({\n\t\t\t\t\tpostMessage: mobileWebView,\n\t\t\t\t\ttargetOrigin: \"com.whop.whopapp\",\n\t\t\t\t})\n\t\t\t: postmessageTransport({\n\t\t\t\t\tremoteWindow,\n\t\t\t\t\ttargetOrigins: overrideParentOrigins ?? [\n\t\t\t\t\t\t\"https://whop.com\",\n\t\t\t\t\t\t\"https://dash.whop.com\",\n\t\t\t\t\t\t\"http://localhost:8003\",\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\tserverComplete: true,\n\t\tserverMiddleware: [\n\t\t\t{\n\t\t\t\tonColorThemeChange: setColorTheme,\n\t\t\t},\n\t\t],\n\t\ttimeout: 15000,\n\t\ttimeouts: {\n\t\t\tinAppPurchase: 1000 * 60 * 60 * 24, // 24 hours, we never want this to timeout.\n\t\t\tonHrefChange: 500, // we don't really care about a response here.\n\t\t},\n\t});\n\n\tif (typeof window !== \"undefined\") {\n\t\tsdk\n\t\t\t.getColorTheme()\n\t\t\t.then(setColorTheme)\n\t\t\t.catch(() => null);\n\t\tdocument.documentElement.addEventListener(\"frosted-ui:mounted\", () => {\n\t\t\tsdk\n\t\t\t\t.getColorTheme()\n\t\t\t\t.then(setColorTheme)\n\t\t\t\t.catch(() => null);\n\t\t});\n\t}\n\n\tsyncHref({ onChange: sdk.onHrefChange });\n\n\treturn sdk;\n}\n\nexport type WhopIframeSdk = ReturnType<typeof createSdk>;\n"],"names":[],"mappings":";;;;;;;AAAO,SAAS,4BAA4B;IAC3C,MAAM,yBACL,OAAO,2CAAW,eAClB,wBAAwB,UACxB,OAAO,OAAO,kBAAA,KAAuB,YACrC,OAAO,kBAAA,IACP,iBAAiB,OAAO,kBAAA,IACxB,OAAO,OAAO,kBAAA,CAAmB,WAAA,KAAgB,aAC9C,CAAC,SAAiB,gBAWlB,KAAA;IACJ,OAAO;AACR;AAEO,SAAS,sBAAsB;IACrC,MAAM,sBACL,OAAO,2CAAW,eAClB,YAAY,UACZ,OAAO,OAAO,MAAA,KAAW,YACzB,OAAO,MAAA,KAAW,QAClB,qBAAqB,OAAO,MAAA,IAC5B,OAAO,OAAO,MAAA,CAAO,eAAA,KAAoB,YACzC,OAAO,MAAA,CAAO,eAAA,KAAoB,QAClC,kBAAkB,OAAO,MAAA,CAAO,eAAA,IAChC,OAAO,OAAO,MAAA,CAAO,eAAA,CAAgB,YAAA,KAAiB,YACtD,OAAO,MAAA,CAAO,eAAA,CAAgB,YAAA,KAAiB,QAC/C,iBAAiB,OAAO,MAAA,CAAO,eAAA,CAAgB,YAAA,GAC5C,OAAO,OAAO,YACd,IAD8B;IAGlC,MAAM,mBAAmB,sCACtB,CAAC,SAAiB,gBAKlB,KAAA;IAEH,OAAO;AACR;;AC1CO,SAAS,SAAS,EACxB,QAAA,EACD,EAA2D;IAC1D,IAAI,OAAO,WAAW,YAAa,MAAA;;;IAEnC,MAAM,cAAc,OAAO,SAAS;IAEpC,IAAI,YAAY;AAiBjB;;ACZA,SAAS,cAAc,KAAA,EAAuC;IAC7D,SAAS,eAAA,CAAgB,aAAA,CACxB,IAAI,YAAY,wBAAwB;QACvC,QAAQ;IACT,CAAC;AAEH;AAMO,SAAS,UAAU,EACzB,YAAY,CAAC,CAAA,EACb,QAAQ,QAAQ,IAAI,0CAAA,EACpB,qBAAA,EACD,EAIG;IACF,MAAM,gBAAgB,oBAAoB,KAAK,0BAA0B;IAEzE,MAAM,eACL,OAAO,WAAW,qBAAc,KAAA,IAAY,OAAO;IAEpD,IAAI,CAAC,OAAO;QACX,MAAM,IAAI,MACT;IAEF;IAEA,MAAM,UAAM,uNAAA,EAAqB;QAChC,cAAc,8NAAA;QACd,cAAc,8NAAA;QACd,mBAAmB;QACnB,sBAAsB;QACtB,YAAY;QACZ,aAAa;QACb,WAAW,sCACR,2BAA2B,GAI3B,kOAAA,EAAqB;YACrB;YACA,eAAe,yBAAyB;gBACvC;gBACA;gBACA;aACD;QACD,CAAC;QACH,gBAAgB;QAChB,kBAAkB;YACjB;gBACC,oBAAoB;YACrB;SACD;QACA,SAAS;QACT,UAAU;YACT,eAAe,MAAO,KAAK,KAAK;YAAA,2CAAA;YAChC,cAAc;QACf;IACD,CAAC;IAED,IAAI,OAAO,WAAW,aAAa;;IAanC,SAAS;QAAE,UAAU,IAAI,YAAA;IAAa,CAAC;IAEvC,OAAO;AACR","debugId":null}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/buffer_utils.js"],"sourcesContent":["export const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAO,MAAM,UAAU,IAAI;AACpB,MAAM,UAAU,IAAI;AAC3B,MAAM,YAAY,KAAK;AAChB,SAAS,OAAO,GAAG,OAAO;IAC7B,MAAM,OAAO,QAAQ,MAAM,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,GAAK,MAAM,QAAQ;IAC/D,MAAM,MAAM,IAAI,WAAW;IAC3B,IAAI,IAAI;IACR,KAAK,MAAM,UAAU,QAAS;QAC1B,IAAI,GAAG,CAAC,QAAQ;QAChB,KAAK,OAAO,MAAM;IACtB;IACA,OAAO;AACX;AACA,SAAS,cAAc,GAAG,EAAE,KAAK,EAAE,MAAM;IACrC,IAAI,QAAQ,KAAK,SAAS,WAAW;QACjC,MAAM,IAAI,WAAW,CAAC,0BAA0B,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO;IACxF;IACA,IAAI,GAAG,CAAC;QAAC,UAAU;QAAI,UAAU;QAAI,UAAU;QAAG,QAAQ;KAAK,EAAE;AACrE;AACO,SAAS,SAAS,KAAK;IAC1B,MAAM,OAAO,KAAK,KAAK,CAAC,QAAQ;IAChC,MAAM,MAAM,QAAQ;IACpB,MAAM,MAAM,IAAI,WAAW;IAC3B,cAAc,KAAK,MAAM;IACzB,cAAc,KAAK,KAAK;IACxB,OAAO;AACX;AACO,SAAS,SAAS,KAAK;IAC1B,MAAM,MAAM,IAAI,WAAW;IAC3B,cAAc,KAAK;IACnB,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 810, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/base64.js"],"sourcesContent":["export function encodeBase64(input) {\n    if (Uint8Array.prototype.toBase64) {\n        return input.toBase64();\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < input.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n}\nexport function decodeBase64(encoded) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(encoded);\n    }\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\n"],"names":[],"mappings":";;;;;;AAAO,SAAS,aAAa,KAAK;IAC9B,IAAI,WAAW,SAAS,CAAC,QAAQ,EAAE;QAC/B,OAAO,MAAM,QAAQ;IACzB;IACA,MAAM,aAAa;IACnB,MAAM,MAAM,EAAE;IACd,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,KAAK,WAAY;QAC/C,IAAI,IAAI,CAAC,OAAO,YAAY,CAAC,KAAK,CAAC,MAAM,MAAM,QAAQ,CAAC,GAAG,IAAI;IACnE;IACA,OAAO,KAAK,IAAI,IAAI,CAAC;AACzB;AACO,SAAS,aAAa,OAAO;IAChC,IAAI,WAAW,UAAU,EAAE;QACvB,OAAO,WAAW,UAAU,CAAC;IACjC;IACA,MAAM,SAAS,KAAK;IACpB,MAAM,QAAQ,IAAI,WAAW,OAAO,MAAM;IAC1C,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACpC,KAAK,CAAC,EAAE,GAAG,OAAO,UAAU,CAAC;IACjC;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/util/base64url.js"],"sourcesContent":["import { encoder, decoder } from '../lib/buffer_utils.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nexport function decode(input) {\n    if (Uint8Array.fromBase64) {\n        return Uint8Array.fromBase64(typeof input === 'string' ? input : decoder.decode(input), {\n            alphabet: 'base64url',\n        });\n    }\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n}\nexport function encode(input) {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    if (Uint8Array.prototype.toBase64) {\n        return unencoded.toBase64({ alphabet: 'base64url', omitPadding: true });\n    }\n    return encodeBase64(unencoded).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACO,SAAS,OAAO,KAAK;IACxB,IAAI,WAAW,UAAU,EAAE;QACvB,OAAO,WAAW,UAAU,CAAC,OAAO,UAAU,WAAW,QAAQ,qPAAO,CAAC,MAAM,CAAC,QAAQ;YACpF,UAAU;QACd;IACJ;IACA,IAAI,UAAU;IACd,IAAI,mBAAmB,YAAY;QAC/B,UAAU,qPAAO,CAAC,MAAM,CAAC;IAC7B;IACA,UAAU,QAAQ,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,OAAO;IACvE,IAAI;QACA,OAAO,IAAA,oPAAY,EAAC;IACxB,EACA,OAAM;QACF,MAAM,IAAI,UAAU;IACxB;AACJ;AACO,SAAS,OAAO,KAAK;IACxB,IAAI,YAAY;IAChB,IAAI,OAAO,cAAc,UAAU;QAC/B,YAAY,qPAAO,CAAC,MAAM,CAAC;IAC/B;IACA,IAAI,WAAW,SAAS,CAAC,QAAQ,EAAE;QAC/B,OAAO,UAAU,QAAQ,CAAC;YAAE,UAAU;YAAa,aAAa;QAAK;IACzE;IACA,OAAO,IAAA,oPAAY,EAAC,WAAW,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO;AACxF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 886, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/invalid_key_input.js"],"sourcesContent":["function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,QAAQ,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK;IAClC,QAAQ,MAAM,MAAM,CAAC;IACrB,IAAI,MAAM,MAAM,GAAG,GAAG;QAClB,MAAM,OAAO,MAAM,GAAG;QACtB,OAAO,CAAC,YAAY,EAAE,MAAM,IAAI,CAAC,MAAM,KAAK,EAAE,KAAK,CAAC,CAAC;IACzD,OACK,IAAI,MAAM,MAAM,KAAK,GAAG;QACzB,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,OACK;QACD,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC;IACA,IAAI,UAAU,MAAM;QAChB,OAAO,CAAC,UAAU,EAAE,QAAQ;IAChC,OACK,IAAI,OAAO,WAAW,cAAc,OAAO,IAAI,EAAE;QAClD,OAAO,CAAC,mBAAmB,EAAE,OAAO,IAAI,EAAE;IAC9C,OACK,IAAI,OAAO,WAAW,YAAY,UAAU,MAAM;QACnD,IAAI,OAAO,WAAW,EAAE,MAAM;YAC1B,OAAO,CAAC,yBAAyB,EAAE,OAAO,WAAW,CAAC,IAAI,EAAE;QAChE;IACJ;IACA,OAAO;AACX;uCACe,CAAC,QAAQ,GAAG;IACvB,OAAO,QAAQ,gBAAgB,WAAW;AAC9C;AACO,SAAS,QAAQ,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK;IACzC,OAAO,QAAQ,CAAC,YAAY,EAAE,IAAI,mBAAmB,CAAC,EAAE,WAAW;AACvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/util/errors.js"],"sourcesContent":["export class JOSEError extends Error {\n    static code = 'ERR_JOSE_GENERIC';\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static code = 'ERR_JWT_EXPIRED';\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    static code = 'ERR_JWE_INVALID';\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static code = 'ERR_JWS_INVALID';\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static code = 'ERR_JWT_INVALID';\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static code = 'ERR_JWK_INVALID';\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static code = 'ERR_JWKS_INVALID';\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    static code = 'ERR_JWKS_TIMEOUT';\n    code = 'ERR_JWKS_TIMEOUT';\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,kBAAkB;IAC3B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;IAC1B,YAAY,OAAO,EAAE,OAAO,CAAE;QAC1B,KAAK,CAAC,SAAS;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;QACjC,MAAM,iBAAiB,GAAG,IAAI,EAAE,IAAI,CAAC,WAAW;IACpD;AACJ;AACO,MAAM,iCAAiC;IAC1C,OAAO,OAAO,kCAAkC;IAChD,OAAO,kCAAkC;IACzC,MAAM;IACN,OAAO;IACP,QAAQ;IACR,YAAY,OAAO,EAAE,OAAO,EAAE,QAAQ,aAAa,EAAE,SAAS,aAAa,CAAE;QACzE,KAAK,CAAC,SAAS;YAAE,OAAO;gBAAE;gBAAO;gBAAQ;YAAQ;QAAE;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;AACJ;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;IACzB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,YAAY,OAAO,EAAE,OAAO,EAAE,QAAQ,aAAa,EAAE,SAAS,aAAa,CAAE;QACzE,KAAK,CAAC,SAAS;YAAE,OAAO;gBAAE;gBAAO;gBAAQ;YAAQ;QAAE;QACnD,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;AACJ;AACO,MAAM,0BAA0B;IACnC,OAAO,OAAO,2BAA2B;IACzC,OAAO,2BAA2B;AACtC;AACO,MAAM,yBAAyB;IAClC,OAAO,OAAO,yBAAyB;IACvC,OAAO,yBAAyB;AACpC;AACO,MAAM,4BAA4B;IACrC,OAAO,OAAO,4BAA4B;IAC1C,OAAO,4BAA4B;IACnC,YAAY,UAAU,6BAA6B,EAAE,OAAO,CAAE;QAC1D,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,mBAAmB;IAC5B,OAAO,OAAO,kBAAkB;IAChC,OAAO,kBAAkB;AAC7B;AACO,MAAM,oBAAoB;IAC7B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;AAC9B;AACO,MAAM,0BAA0B;IACnC,OAAO,OAAO,2BAA2B;IACzC,OAAO,2BAA2B;IAClC,YAAY,UAAU,iDAAiD,EAAE,OAAO,CAAE;QAC9E,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,iCAAiC;IAC1C,CAAC,OAAO,aAAa,CAAC,CAAC;IACvB,OAAO,OAAO,kCAAkC;IAChD,OAAO,kCAAkC;IACzC,YAAY,UAAU,sDAAsD,EAAE,OAAO,CAAE;QACnF,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,oBAAoB;IAC7B,OAAO,OAAO,mBAAmB;IACjC,OAAO,mBAAmB;IAC1B,YAAY,UAAU,mBAAmB,EAAE,OAAO,CAAE;QAChD,KAAK,CAAC,SAAS;IACnB;AACJ;AACO,MAAM,uCAAuC;IAChD,OAAO,OAAO,wCAAwC;IACtD,OAAO,wCAAwC;IAC/C,YAAY,UAAU,+BAA+B,EAAE,OAAO,CAAE;QAC5D,KAAK,CAAC,SAAS;IACnB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1070, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_key_like.js"],"sourcesContent":["export function assertCryptoKey(key) {\n    if (!isCryptoKey(key)) {\n        throw new Error('CryptoKey instance expected');\n    }\n}\nexport function isCryptoKey(key) {\n    return key?.[Symbol.toStringTag] === 'CryptoKey';\n}\nexport function isKeyObject(key) {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n}\nexport default (key) => {\n    return isCryptoKey(key) || isKeyObject(key);\n};\n"],"names":[],"mappings":";;;;;;;;;;AAAO,SAAS,gBAAgB,GAAG;IAC/B,IAAI,CAAC,YAAY,MAAM;QACnB,MAAM,IAAI,MAAM;IACpB;AACJ;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK;AACzC;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK;AACzC;uCACe,CAAC;IACZ,OAAO,YAAY,QAAQ,YAAY;AAC3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/asn1.js"],"sourcesContent":["import invalidKeyInput from './invalid_key_input.js';\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nconst formatPEM = (b64, descriptor) => {\n    const newlined = (b64.match(/.{1,64}/g) || []).join('\\n');\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n};\nconst genericExport = async (keyType, keyFormat, key) => {\n    if (isKeyObject(key)) {\n        if (key.type !== keyType) {\n            throw new TypeError(`key is not a ${keyType} key`);\n        }\n        return key.export({ format: 'pem', type: keyFormat });\n    }\n    if (!isCryptoKey(key)) {\n        throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject'));\n    }\n    if (!key.extractable) {\n        throw new TypeError('CryptoKey is not extractable');\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return formatPEM(encodeBase64(new Uint8Array(await crypto.subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nconst findOid = (keyData, oid, from = 0) => {\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    const i = keyData.indexOf(oid[0], from);\n    if (i === -1)\n        return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length)\n        return false;\n    return sub.every((value, index) => value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData) => {\n    switch (true) {\n        case findOid(keyData, [0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07]):\n            return 'P-256';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x22]):\n            return 'P-384';\n        case findOid(keyData, [0x2b, 0x81, 0x04, 0x00, 0x23]):\n            return 'P-521';\n        default:\n            return undefined;\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options) => {\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, ''))\n        .split('')\n        .map((c) => c.charCodeAt(0)));\n    const isPublic = keyFormat === 'spki';\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            algorithm = { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            algorithm = {\n                name: 'RSA-OAEP',\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n            };\n            keyUsages = isPublic ? ['encrypt', 'wrapKey'] : ['decrypt', 'unwrapKey'];\n            break;\n        case 'ES256':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES384':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ES512':\n            algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const namedCurve = getNamedCurve(keyData);\n            algorithm = namedCurve?.startsWith('P-') ? { name: 'ECDH', namedCurve } : { name: 'X25519' };\n            keyUsages = isPublic ? [] : ['deriveBits'];\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA':\n            algorithm = { name: 'Ed25519' };\n            keyUsages = isPublic ? ['verify'] : ['sign'];\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return crypto.subtle.importKey(keyFormat, keyData, algorithm, options?.extractable ?? (isPublic ? true : false), keyUsages);\n};\nexport const fromPKCS8 = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, 'pkcs8', pem, alg, options);\n};\nexport const fromSPKI = (pem, alg, options) => {\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, 'spki', pem, alg, options);\n};\nfunction getElement(seq) {\n    const result = [];\n    let next = 0;\n    while (next < seq.length) {\n        const nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while (bytes[position] >= 0x80) {\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    }\n    else if (length === 0x80) {\n        length = 0;\n        while (bytes[position + length] !== 0 || bytes[position + length + 1] !== 0) {\n            if (length > bytes.byteLength) {\n                throw new TypeError('invalid indefinite form length');\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength),\n        };\n    }\n    else {\n        const numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for (let i = 0; i < numberOfDigits; i++) {\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength),\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return encodeBase64(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nlet createPublicKey;\nfunction getSPKI(x509) {\n    try {\n        createPublicKey ??= globalThis.process?.getBuiltinModule?.('node:crypto')?.createPublicKey;\n    }\n    catch {\n        createPublicKey = 0;\n    }\n    if (createPublicKey) {\n        try {\n            return new createPublicKey(x509).export({ format: 'pem', type: 'spki' });\n        }\n        catch { }\n    }\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, '');\n    const raw = decodeBase64(pem);\n    return formatPEM(spkiFromX509(raw), 'PUBLIC KEY');\n}\nexport const fromX509 = (pem, alg, options) => {\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    }\n    catch (cause) {\n        throw new TypeError('Failed to parse the X.509 certificate', { cause });\n    }\n    return fromSPKI(spki, alg, options);\n};\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA,MAAM,YAAY,CAAC,KAAK;IACpB,MAAM,WAAW,CAAC,IAAI,KAAK,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC;IACpD,OAAO,CAAC,WAAW,EAAE,WAAW,OAAO,EAAE,SAAS,WAAW,EAAE,WAAW,KAAK,CAAC;AACpF;AACA,MAAM,gBAAgB,OAAO,SAAS,WAAW;IAC7C,IAAI,IAAA,wPAAW,EAAC,MAAM;QAClB,IAAI,IAAI,IAAI,KAAK,SAAS;YACtB,MAAM,IAAI,UAAU,CAAC,aAAa,EAAE,QAAQ,IAAI,CAAC;QACrD;QACA,OAAO,IAAI,MAAM,CAAC;YAAE,QAAQ;YAAO,MAAM;QAAU;IACvD;IACA,IAAI,CAAC,IAAA,wPAAW,EAAC,MAAM;QACnB,MAAM,IAAI,UAAU,IAAA,0PAAe,EAAC,KAAK,aAAa;IAC1D;IACA,IAAI,CAAC,IAAI,WAAW,EAAE;QAClB,MAAM,IAAI,UAAU;IACxB;IACA,IAAI,IAAI,IAAI,KAAK,SAAS;QACtB,MAAM,IAAI,UAAU,CAAC,aAAa,EAAE,QAAQ,IAAI,CAAC;IACrD;IACA,OAAO,UAAU,IAAA,oPAAY,EAAC,IAAI,WAAW,MAAM,OAAO,MAAM,CAAC,SAAS,CAAC,WAAW,QAAQ,GAAG,QAAQ,WAAW,GAAG,IAAI,CAAC;AAChI;AACO,MAAM,SAAS,CAAC;IACnB,OAAO,cAAc,UAAU,QAAQ;AAC3C;AACO,MAAM,UAAU,CAAC;IACpB,OAAO,cAAc,WAAW,SAAS;AAC7C;AACA,MAAM,UAAU,CAAC,SAAS,KAAK,OAAO,CAAC;IACnC,IAAI,SAAS,GAAG;QACZ,IAAI,OAAO,CAAC,IAAI,MAAM;QACtB,IAAI,OAAO,CAAC;IAChB;IACA,MAAM,IAAI,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE;IAClC,IAAI,MAAM,CAAC,GACP,OAAO;IACX,MAAM,MAAM,QAAQ,QAAQ,CAAC,GAAG,IAAI,IAAI,MAAM;IAC9C,IAAI,IAAI,MAAM,KAAK,IAAI,MAAM,EACzB,OAAO;IACX,OAAO,IAAI,KAAK,CAAC,CAAC,OAAO,QAAU,UAAU,GAAG,CAAC,MAAM,KAAK,QAAQ,SAAS,KAAK,IAAI;AAC1F;AACA,MAAM,gBAAgB,CAAC;IACnB,OAAQ;QACJ,KAAK,QAAQ,SAAS;YAAC;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;SAAK;YAClE,OAAO;QACX,KAAK,QAAQ,SAAS;YAAC;YAAM;YAAM;YAAM;YAAM;SAAK;YAChD,OAAO;QACX,KAAK,QAAQ,SAAS;YAAC;YAAM;YAAM;YAAM;YAAM;SAAK;YAChD,OAAO;QACX;YACI,OAAO;IACf;AACJ;AACA,MAAM,gBAAgB,OAAO,SAAS,WAAW,KAAK,KAAK;IACvD,IAAI;IACJ,IAAI;IACJ,MAAM,UAAU,IAAI,WAAW,KAAK,IAAI,OAAO,CAAC,SAAS,KACpD,KAAK,CAAC,IACN,GAAG,CAAC,CAAC,IAAM,EAAE,UAAU,CAAC;IAC7B,MAAM,WAAW,cAAc;IAC/B,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,YAAY;gBAAE,MAAM;gBAAW,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;YAAC;YAC5D,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,YAAY;gBAAE,MAAM;gBAAqB,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;YAAC;YACtE,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,YAAY;gBACR,MAAM;gBACN,MAAM,CAAC,IAAI,EAAE,SAAS,IAAI,KAAK,CAAC,CAAC,IAAI,OAAO,GAAG;YACnD;YACA,YAAY,WAAW;gBAAC;gBAAW;aAAU,GAAG;gBAAC;gBAAW;aAAY;YACxE;QACJ,KAAK;YACD,YAAY;gBAAE,MAAM;gBAAS,YAAY;YAAQ;YACjD,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ,KAAK;YACD,YAAY;gBAAE,MAAM;gBAAS,YAAY;YAAQ;YACjD,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ,KAAK;YACD,YAAY;gBAAE,MAAM;gBAAS,YAAY;YAAQ;YACjD,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YAAkB;gBACnB,MAAM,aAAa,cAAc;gBACjC,YAAY,YAAY,WAAW,QAAQ;oBAAE,MAAM;oBAAQ;gBAAW,IAAI;oBAAE,MAAM;gBAAS;gBAC3F,YAAY,WAAW,EAAE,GAAG;oBAAC;iBAAa;gBAC1C;YACJ;QACA,KAAK;QACL,KAAK;YACD,YAAY;gBAAE,MAAM;YAAU;YAC9B,YAAY,WAAW;gBAAC;aAAS,GAAG;gBAAC;aAAO;YAC5C;QACJ;YACI,MAAM,IAAI,yPAAgB,CAAC;IACnC;IACA,OAAO,OAAO,MAAM,CAAC,SAAS,CAAC,WAAW,SAAS,WAAW,SAAS,eAAe,CAAC,WAAW,OAAO,KAAK,GAAG;AACrH;AACO,MAAM,YAAY,CAAC,KAAK,KAAK;IAChC,OAAO,cAAc,+CAA+C,SAAS,KAAK,KAAK;AAC3F;AACO,MAAM,WAAW,CAAC,KAAK,KAAK;IAC/B,OAAO,cAAc,8CAA8C,QAAQ,KAAK,KAAK;AACzF;AACA,SAAS,WAAW,GAAG;IACnB,MAAM,SAAS,EAAE;IACjB,IAAI,OAAO;IACX,MAAO,OAAO,IAAI,MAAM,CAAE;QACtB,MAAM,WAAW,aAAa,IAAI,QAAQ,CAAC;QAC3C,OAAO,IAAI,CAAC;QACZ,QAAQ,SAAS,UAAU;IAC/B;IACA,OAAO;AACX;AACA,SAAS,aAAa,KAAK;IACvB,IAAI,WAAW;IACf,IAAI,MAAM,KAAK,CAAC,EAAE,GAAG;IACrB;IACA,IAAI,QAAQ,MAAM;QACd,MAAM;QACN,MAAO,KAAK,CAAC,SAAS,IAAI,KAAM;YAC5B,MAAM,MAAM,MAAM,KAAK,CAAC,SAAS,GAAG;YACpC;QACJ;QACA,MAAM,MAAM,MAAM,KAAK,CAAC,SAAS,GAAG;QACpC;IACJ;IACA,IAAI,SAAS;IACb,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM;QACxB,SAAS,KAAK,CAAC,SAAS;QACxB;IACJ,OACK,IAAI,WAAW,MAAM;QACtB,SAAS;QACT,MAAO,KAAK,CAAC,WAAW,OAAO,KAAK,KAAK,KAAK,CAAC,WAAW,SAAS,EAAE,KAAK,EAAG;YACzE,IAAI,SAAS,MAAM,UAAU,EAAE;gBAC3B,MAAM,IAAI,UAAU;YACxB;YACA;QACJ;QACA,MAAM,aAAa,WAAW,SAAS;QACvC,OAAO;YACH;YACA,UAAU,MAAM,QAAQ,CAAC,UAAU,WAAW;YAC9C,KAAK,MAAM,QAAQ,CAAC,GAAG;QAC3B;IACJ,OACK;QACD,MAAM,iBAAiB,KAAK,CAAC,SAAS,GAAG;QACzC;QACA,SAAS;QACT,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;YACrC,SAAS,SAAS,MAAM,KAAK,CAAC,SAAS;YACvC;QACJ;IACJ;IACA,MAAM,aAAa,WAAW;IAC9B,OAAO;QACH;QACA,UAAU,MAAM,QAAQ,CAAC,UAAU;QACnC,KAAK,MAAM,QAAQ,CAAC,GAAG;IAC3B;AACJ;AACA,SAAS,aAAa,GAAG;IACrB,MAAM,iBAAiB,WAAW,WAAW,aAAa,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ;IACpF,OAAO,IAAA,oPAAY,EAAC,cAAc,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,OAAO,IAAI,EAAE,CAAC,GAAG;AACrF;AACA,IAAI;AACJ,SAAS,QAAQ,IAAI;IACjB,IAAI;QACA,oBAAoB,WAAW,OAAO,EAAE,mBAAmB,gBAAgB;IAC/E,EACA,OAAM;QACF,kBAAkB;IACtB;IACA,IAAI,iBAAiB;QACjB,IAAI;YACA,OAAO,IAAI,gBAAgB,MAAM,MAAM,CAAC;gBAAE,QAAQ;gBAAO,MAAM;YAAO;QAC1E,EACA,OAAM,CAAE;IACZ;IACA,MAAM,MAAM,KAAK,OAAO,CAAC,+CAA+C;IACxE,MAAM,MAAM,IAAA,oPAAY,EAAC;IACzB,OAAO,UAAU,aAAa,MAAM;AACxC;AACO,MAAM,WAAW,CAAC,KAAK,KAAK;IAC/B,IAAI;IACJ,IAAI;QACA,OAAO,QAAQ;IACnB,EACA,OAAO,OAAO;QACV,MAAM,IAAI,UAAU,yCAAyC;YAAE;QAAM;IACzE;IACA,OAAO,SAAS,MAAM,KAAK;AAC/B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1408, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/jwk_to_key.js"],"sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                case 'EdDSA':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nexport default async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, algorithm, jwk.ext ?? (jwk.d ? false : true), jwk.key_ops ?? keyUsages);\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_object.js"],"sourcesContent":["function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default (input) => {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n};\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa,KAAK;IACvB,OAAO,OAAO,UAAU,YAAY,UAAU;AAClD;uCACe,CAAC;IACZ,IAAI,CAAC,aAAa,UAAU,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,mBAAmB;QACrF,OAAO;IACX;IACA,IAAI,OAAO,cAAc,CAAC,WAAW,MAAM;QACvC,OAAO;IACX;IACA,IAAI,QAAQ;IACZ,MAAO,OAAO,cAAc,CAAC,WAAW,KAAM;QAC1C,QAAQ,OAAO,cAAc,CAAC;IAClC;IACA,OAAO,OAAO,cAAc,CAAC,WAAW;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1599, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/key/import.js"],"sourcesContent":["import { decode as decodeBase64URL } from '../util/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../lib/asn1.js';\nimport toCryptoKey from '../lib/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg, options) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    let ext;\n    alg ??= jwk.alg;\n    ext ??= options?.extractable ?? jwk.ext;\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return toCryptoKey({ ...jwk, alg, ext });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AACO,eAAe,WAAW,IAAI,EAAE,GAAG,EAAE,OAAO;IAC/C,IAAI,OAAO,SAAS,YAAY,KAAK,OAAO,CAAC,kCAAkC,GAAG;QAC9E,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,8OAAQ,EAAC,MAAM,KAAK;AAC/B;AACO,eAAe,WAAW,IAAI,EAAE,GAAG,EAAE,OAAO;IAC/C,IAAI,OAAO,SAAS,YAAY,KAAK,OAAO,CAAC,mCAAmC,GAAG;QAC/E,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,8OAAQ,EAAC,MAAM,KAAK;AAC/B;AACO,eAAe,YAAY,KAAK,EAAE,GAAG,EAAE,OAAO;IACjD,IAAI,OAAO,UAAU,YAAY,MAAM,OAAO,CAAC,mCAAmC,GAAG;QACjF,MAAM,IAAI,UAAU;IACxB;IACA,OAAO,IAAA,+OAAS,EAAC,OAAO,KAAK;AACjC;AACO,eAAe,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO;IAC7C,IAAI,CAAC,IAAA,kPAAQ,EAAC,MAAM;QAChB,MAAM,IAAI,UAAU;IACxB;IACA,IAAI;IACJ,QAAQ,IAAI,GAAG;IACf,QAAQ,SAAS,eAAe,IAAI,GAAG;IACvC,OAAQ,IAAI,GAAG;QACX,KAAK;YACD,IAAI,OAAO,IAAI,CAAC,KAAK,YAAY,CAAC,IAAI,CAAC,EAAE;gBACrC,MAAM,IAAI,UAAU;YACxB;YACA,OAAO,IAAA,kPAAe,EAAC,IAAI,CAAC;QAChC,KAAK;YACD,IAAI,SAAS,OAAO,IAAI,GAAG,KAAK,WAAW;gBACvC,MAAM,IAAI,yPAAgB,CAAC;YAC/B;QACJ,KAAK;QACL,KAAK;YACD,OAAO,IAAA,mPAAW,EAAC;gBAAE,GAAG,GAAG;gBAAE;gBAAK;YAAI;QAC1C;YACI,MAAM,IAAI,yPAAgB,CAAC;IACnC;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1669, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/subtle_dsa.js"],"sourcesContent":["import { JOSENotSupported } from '../util/errors.js';\nexport default (alg, algorithm) => {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: parseInt(alg.slice(-3), 10) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n        case 'EdDSA':\n            return { name: 'Ed25519' };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAC,KAAK;IACjB,MAAM,OAAO,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;IACnC,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;YAAO;QAChC,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;gBAAW,YAAY,SAAS,IAAI,KAAK,CAAC,CAAC,IAAI,OAAO;YAAE;QACjF,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;YAAoB;QAC7C,KAAK;QACL,KAAK;QACL,KAAK;YACD,OAAO;gBAAE;gBAAM,MAAM;gBAAS,YAAY,UAAU,UAAU;YAAC;QACnE,KAAK;QACL,KAAK;YACD,OAAO;gBAAE,MAAM;YAAU;QAC7B;YACI,MAAM,IAAI,yPAAgB,CAAC,CAAC,IAAI,EAAE,IAAI,2DAA2D,CAAC;IAC1G;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1721, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/check_key_length.js"],"sourcesContent":["export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,KAAK;IACjB,IAAI,IAAI,UAAU,CAAC,SAAS,IAAI,UAAU,CAAC,OAAO;QAC9C,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,SAAS;QACvC,IAAI,OAAO,kBAAkB,YAAY,gBAAgB,MAAM;YAC3D,MAAM,IAAI,UAAU,GAAG,IAAI,qDAAqD,CAAC;QACrF;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1737, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/crypto_key.js"],"sourcesContent":["function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usage) {\n    if (usage && !key.usages.includes(usage)) {\n        throw new TypeError(`CryptoKey does not support this operation, its usages must include ${usage}.`);\n    }\n}\nexport function checkSigCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'Ed25519':\n        case 'EdDSA': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\nexport function checkEncCryptoKey(key, alg, usage) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                    break;\n                default:\n                    throw unusable('ECDH or X25519');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usage);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1880, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/get_sign_verify_key.js"],"sourcesContent":["import { checkSigCryptoKey } from './crypto_key.js';\nimport invalidKeyInput from './invalid_key_input.js';\nexport default async (alg, key, usage) => {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    checkSigCryptoKey(key, alg, usage);\n    return key;\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;;;uCACe,OAAO,KAAK,KAAK;IAC5B,IAAI,eAAe,YAAY;QAC3B,IAAI,CAAC,IAAI,UAAU,CAAC,OAAO;YACvB,MAAM,IAAI,UAAU,IAAA,0PAAe,EAAC,KAAK,aAAa,aAAa;QACvE;QACA,OAAO,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK;YAAE,MAAM,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI;YAAE,MAAM;QAAO,GAAG,OAAO;YAAC;SAAM;IAC7G;IACA,IAAA,6PAAiB,EAAC,KAAK,KAAK;IAC5B,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/verify.js"],"sourcesContent":["import subtleAlgorithm from './subtle_dsa.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nexport default async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;uCACe,OAAO,KAAK,KAAK,WAAW;IACvC,MAAM,YAAY,MAAM,IAAA,4PAAY,EAAC,KAAK,KAAK;IAC/C,IAAA,yPAAc,EAAC,KAAK;IACpB,MAAM,YAAY,IAAA,mPAAe,EAAC,KAAK,UAAU,SAAS;IAC1D,IAAI;QACA,OAAO,MAAM,OAAO,MAAM,CAAC,MAAM,CAAC,WAAW,WAAW,WAAW;IACvE,EACA,OAAM;QACF,OAAO;IACX;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_disjoint.js"],"sourcesContent":["export default (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,GAAG;IACf,MAAM,UAAU,QAAQ,MAAM,CAAC;IAC/B,IAAI,QAAQ,MAAM,KAAK,KAAK,QAAQ,MAAM,KAAK,GAAG;QAC9C,OAAO;IACX;IACA,IAAI;IACJ,KAAK,MAAM,UAAU,QAAS;QAC1B,MAAM,aAAa,OAAO,IAAI,CAAC;QAC/B,IAAI,CAAC,OAAO,IAAI,IAAI,KAAK,GAAG;YACxB,MAAM,IAAI,IAAI;YACd;QACJ;QACA,KAAK,MAAM,aAAa,WAAY;YAChC,IAAI,IAAI,GAAG,CAAC,YAAY;gBACpB,OAAO;YACX;YACA,IAAI,GAAG,CAAC;QACZ;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1960, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/is_jwk.js"],"sourcesContent":["import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return key.kty === 'oct' && typeof key.k === 'string';\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;AACO,SAAS,MAAM,GAAG;IACrB,OAAO,IAAA,kPAAQ,EAAC,QAAQ,OAAO,IAAI,GAAG,KAAK;AAC/C;AACO,SAAS,aAAa,GAAG;IAC5B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD;AACO,SAAS,YAAY,GAAG;IAC3B,OAAO,IAAI,GAAG,KAAK,SAAS,OAAO,IAAI,CAAC,KAAK;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1988, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/check_key_type.js"],"sourcesContent":["import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike from './is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined) {\n        let expected;\n        switch (usage) {\n            case 'sign':\n            case 'verify':\n                expected = 'sig';\n                break;\n            case 'encrypt':\n            case 'decrypt':\n                expected = 'enc';\n                break;\n        }\n        if (key.use !== expected) {\n            throw new TypeError(`Invalid key for this operation, its \"use\" must be \"${expected}\" when present`);\n        }\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, its \"alg\" must be \"${alg}\" when present`);\n    }\n    if (Array.isArray(key.key_ops)) {\n        let expectedKeyOp;\n        switch (true) {\n            case usage === 'sign' || usage === 'verify':\n            case alg === 'dir':\n            case alg.includes('CBC-HS'):\n                expectedKeyOp = usage;\n                break;\n            case alg.startsWith('PBES2'):\n                expectedKeyOp = 'deriveBits';\n                break;\n            case /^A\\d{3}(?:GCM)?(?:KW)?$/.test(alg):\n                if (!alg.includes('GCM') && alg.endsWith('KW')) {\n                    expectedKeyOp = usage === 'encrypt' ? 'wrapKey' : 'unwrapKey';\n                }\n                else {\n                    expectedKeyOp = usage;\n                }\n                break;\n            case usage === 'encrypt' && alg.startsWith('RSA'):\n                expectedKeyOp = 'wrapKey';\n                break;\n            case usage === 'decrypt':\n                expectedKeyOp = alg.startsWith('RSA') ? 'unwrapKey' : 'deriveBits';\n                break;\n        }\n        if (expectedKeyOp && key.key_ops?.includes?.(expectedKeyOp) === false) {\n            throw new TypeError(`Invalid key for this operation, its \"key_ops\" must include \"${expectedKeyOp}\" when present`);\n        }\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key', 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (jwk.isJWK(key)) {\n        switch (usage) {\n            case 'decrypt':\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'encrypt':\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (key.type === 'public') {\n        switch (usage) {\n            case 'sign':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n            case 'decrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n            default:\n                break;\n        }\n    }\n    if (key.type === 'private') {\n        switch (usage) {\n            case 'verify':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n            case 'encrypt':\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n            default:\n                break;\n        }\n    }\n};\nexport default (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(alg) ||\n        /^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2115, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/validate_crit.js"],"sourcesContent":["import { JOSENotSupported, JWEInvalid, JWSInvalid } from '../util/errors.js';\nexport default (Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) => {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n};\n"],"names":[],"mappings":";;;;AAAA;;uCACe,CAAC,KAAK,mBAAmB,kBAAkB,iBAAiB;IACvE,IAAI,WAAW,IAAI,KAAK,aAAa,iBAAiB,SAAS,WAAW;QACtE,MAAM,IAAI,IAAI;IAClB;IACA,IAAI,CAAC,mBAAmB,gBAAgB,IAAI,KAAK,WAAW;QACxD,OAAO,IAAI;IACf;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,gBAAgB,IAAI,KACnC,gBAAgB,IAAI,CAAC,MAAM,KAAK,KAChC,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,QAAU,OAAO,UAAU,YAAY,MAAM,MAAM,KAAK,IAAI;QACvF,MAAM,IAAI,IAAI;IAClB;IACA,IAAI;IACJ,IAAI,qBAAqB,WAAW;QAChC,aAAa,IAAI,IAAI;eAAI,OAAO,OAAO,CAAC;eAAsB,kBAAkB,OAAO;SAAG;IAC9F,OACK;QACD,aAAa;IACjB;IACA,KAAK,MAAM,aAAa,gBAAgB,IAAI,CAAE;QAC1C,IAAI,CAAC,WAAW,GAAG,CAAC,YAAY;YAC5B,MAAM,IAAI,yPAAgB,CAAC,CAAC,4BAA4B,EAAE,UAAU,mBAAmB,CAAC;QAC5F;QACA,IAAI,UAAU,CAAC,UAAU,KAAK,WAAW;YACrC,MAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE,UAAU,YAAY,CAAC;QACxE;QACA,IAAI,WAAW,GAAG,CAAC,cAAc,eAAe,CAAC,UAAU,KAAK,WAAW;YACvE,MAAM,IAAI,IAAI,CAAC,4BAA4B,EAAE,UAAU,6BAA6B,CAAC;QACzF;IACJ;IACA,OAAO,IAAI,IAAI,gBAAgB,IAAI;AACvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/validate_algorithms.js"],"sourcesContent":["export default (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n"],"names":[],"mappings":";;;;uCAAe,CAAC,QAAQ;IACpB,IAAI,eAAe,aACf,CAAC,CAAC,MAAM,OAAO,CAAC,eAAe,WAAW,IAAI,CAAC,CAAC,IAAM,OAAO,MAAM,SAAS,GAAG;QAC/E,MAAM,IAAI,UAAU,CAAC,CAAC,EAAE,OAAO,oCAAoC,CAAC;IACxE;IACA,IAAI,CAAC,YAAY;QACb,OAAO;IACX;IACA,OAAO,IAAI,IAAI;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2174, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/normalize_key.js"],"sourcesContent":["import { isJWK } from './is_jwk.js';\nimport { decode } from '../util/base64url.js';\nimport importJWK from './jwk_to_key.js';\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\nlet cache;\nconst handleJWK = async (key, jwk, alg, freeze = false) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst handleKeyObject = (keyObject, alg) => {\n    cache ||= new WeakMap();\n    let cached = cache.get(keyObject);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const isPublic = keyObject.type === 'public';\n    const extractable = isPublic ? true : false;\n    let cryptoKey;\n    if (keyObject.asymmetricKeyType === 'x25519') {\n        switch (alg) {\n            case 'ECDH-ES':\n            case 'ECDH-ES+A128KW':\n            case 'ECDH-ES+A192KW':\n            case 'ECDH-ES+A256KW':\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, isPublic ? [] : ['deriveBits']);\n    }\n    if (keyObject.asymmetricKeyType === 'ed25519') {\n        if (alg !== 'EdDSA' && alg !== 'Ed25519') {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\n            isPublic ? 'verify' : 'sign',\n        ]);\n    }\n    if (keyObject.asymmetricKeyType === 'rsa') {\n        let hash;\n        switch (alg) {\n            case 'RSA-OAEP':\n                hash = 'SHA-1';\n                break;\n            case 'RS256':\n            case 'PS256':\n            case 'RSA-OAEP-256':\n                hash = 'SHA-256';\n                break;\n            case 'RS384':\n            case 'PS384':\n            case 'RSA-OAEP-384':\n                hash = 'SHA-384';\n                break;\n            case 'RS512':\n            case 'PS512':\n            case 'RSA-OAEP-512':\n                hash = 'SHA-512';\n                break;\n            default:\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg.startsWith('RSA-OAEP')) {\n            return keyObject.toCryptoKey({\n                name: 'RSA-OAEP',\n                hash,\n            }, extractable, isPublic ? ['encrypt'] : ['decrypt']);\n        }\n        cryptoKey = keyObject.toCryptoKey({\n            name: alg.startsWith('PS') ? 'RSA-PSS' : 'RSASSA-PKCS1-v1_5',\n            hash,\n        }, extractable, [isPublic ? 'verify' : 'sign']);\n    }\n    if (keyObject.asymmetricKeyType === 'ec') {\n        const nist = new Map([\n            ['prime256v1', 'P-256'],\n            ['secp384r1', 'P-384'],\n            ['secp521r1', 'P-521'],\n        ]);\n        const namedCurve = nist.get(keyObject.asymmetricKeyDetails?.namedCurve);\n        if (!namedCurve) {\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n        }\n        if (alg === 'ES256' && namedCurve === 'P-256') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES384' && namedCurve === 'P-384') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg === 'ES512' && namedCurve === 'P-521') {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDSA',\n                namedCurve,\n            }, extractable, [isPublic ? 'verify' : 'sign']);\n        }\n        if (alg.startsWith('ECDH-ES')) {\n            cryptoKey = keyObject.toCryptoKey({\n                name: 'ECDH',\n                namedCurve,\n            }, extractable, isPublic ? [] : ['deriveBits']);\n        }\n    }\n    if (!cryptoKey) {\n        throw new TypeError('given KeyObject instance cannot be used for this algorithm');\n    }\n    if (!cached) {\n        cache.set(keyObject, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nexport default async (key, alg) => {\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        return key;\n    }\n    if (isKeyObject(key)) {\n        if (key.type === 'secret') {\n            return key.export();\n        }\n        if ('toCryptoKey' in key && typeof key.toCryptoKey === 'function') {\n            try {\n                return handleKeyObject(key, alg);\n            }\n            catch (err) {\n                if (err instanceof TypeError) {\n                    throw err;\n                }\n            }\n        }\n        let jwk = key.export({ format: 'jwk' });\n        return handleJWK(key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k) {\n            return decode(key.k);\n        }\n        return handleJWK(key, key, alg, true);\n    }\n    throw new Error('unreachable');\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2380, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jws/flattened/verify.js"],"sourcesContent":["import { decode as b64u } from '../../util/base64url.js';\nimport verify from '../../lib/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport normalizeKey from '../../lib/normalize_key.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = b64u(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = b64u(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const k = await normalizeKey(key, alg);\n    const verified = await verify(alg, k, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = b64u(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key: k };\n    }\n    return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2518, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jws/compact/verify.js"],"sourcesContent":["import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACO,eAAe,cAAc,GAAG,EAAE,GAAG,EAAE,OAAO;IACjD,IAAI,eAAe,YAAY;QAC3B,MAAM,qPAAO,CAAC,MAAM,CAAC;IACzB;IACA,IAAI,OAAO,QAAQ,UAAU;QACzB,MAAM,IAAI,mPAAU,CAAC;IACzB;IACA,MAAM,EAAE,GAAG,eAAe,EAAE,GAAG,OAAO,EAAE,GAAG,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC;IAC3E,IAAI,WAAW,GAAG;QACd,MAAM,IAAI,mPAAU,CAAC;IACzB;IACA,MAAM,WAAW,MAAM,IAAA,oQAAe,EAAC;QAAE;QAAS,WAAW;QAAiB;IAAU,GAAG,KAAK;IAChG,MAAM,SAAS;QAAE,SAAS,SAAS,OAAO;QAAE,iBAAiB,SAAS,eAAe;IAAC;IACtF,IAAI,OAAO,QAAQ,YAAY;QAC3B,OAAO;YAAE,GAAG,MAAM;YAAE,KAAK,SAAS,GAAG;QAAC;IAC1C;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2560, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/epoch.js"],"sourcesContent":["export default (date) => Math.floor(date.getTime() / 1000);\n"],"names":[],"mappings":";;;;uCAAe,CAAC,OAAS,KAAK,KAAK,CAAC,KAAK,OAAO,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2569, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/secs.js"],"sourcesContent":["const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n"],"names":[],"mappings":";;;;AAAA,MAAM,SAAS;AACf,MAAM,OAAO,SAAS;AACtB,MAAM,MAAM,OAAO;AACnB,MAAM,OAAO,MAAM;AACnB,MAAM,OAAO,MAAM;AACnB,MAAM,QAAQ;uCACC,CAAC;IACZ,MAAM,UAAU,MAAM,IAAI,CAAC;IAC3B,IAAI,CAAC,WAAY,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,EAAG;QACxC,MAAM,IAAI,UAAU;IACxB;IACA,MAAM,QAAQ,WAAW,OAAO,CAAC,EAAE;IACnC,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,WAAW;IACnC,IAAI;IACJ,OAAQ;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC;YACzB;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ,KAAK;QACL,KAAK;QACL,KAAK;YACD,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;QACJ;YACI,cAAc,KAAK,KAAK,CAAC,QAAQ;YACjC;IACR;IACA,IAAI,OAAO,CAAC,EAAE,KAAK,OAAO,OAAO,CAAC,EAAE,KAAK,OAAO;QAC5C,OAAO,CAAC;IACZ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2632, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/lib/jwt_claims_set.js"],"sourcesContent":["import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nimport { encoder } from './buffer_utils.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nconst normalizeTyp = (value) => {\n    if (value.includes('/')) {\n        return value.toLowerCase();\n    }\n    return `application/${value.toLowerCase()}`;\n};\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n}\nexport class JWTClaimsBuilder {\n    #payload;\n    constructor(payload) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this.#payload = structuredClone(payload);\n    }\n    data() {\n        return encoder.encode(JSON.stringify(this.#payload));\n    }\n    get iss() {\n        return this.#payload.iss;\n    }\n    set iss(value) {\n        this.#payload.iss = value;\n    }\n    get sub() {\n        return this.#payload.sub;\n    }\n    set sub(value) {\n        this.#payload.sub = value;\n    }\n    get aud() {\n        return this.#payload.aud;\n    }\n    set aud(value) {\n        this.#payload.aud = value;\n    }\n    set jti(value) {\n        this.#payload.jti = value;\n    }\n    set nbf(value) {\n        if (typeof value === 'number') {\n            this.#payload.nbf = validateInput('setNotBefore', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\n        }\n        else {\n            this.#payload.nbf = epoch(new Date()) + secs(value);\n        }\n    }\n    set exp(value) {\n        if (typeof value === 'number') {\n            this.#payload.exp = validateInput('setExpirationTime', value);\n        }\n        else if (value instanceof Date) {\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\n        }\n        else {\n            this.#payload.exp = epoch(new Date()) + secs(value);\n        }\n    }\n    set iat(value) {\n        if (typeof value === 'undefined') {\n            this.#payload.iat = epoch(new Date());\n        }\n        else if (value instanceof Date) {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\n        }\n        else if (typeof value === 'string') {\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\n        }\n        else {\n            this.#payload.iat = validateInput('setIssuedAt', value);\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2821, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/node_modules/jose/dist/webapi/jwt/verify.js"],"sourcesContent":["import { compactVerify } from '../jws/compact/verify.js';\nimport { validateClaimsSet } from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = validateClaimsSet(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AACO,eAAe,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO;IAC7C,MAAM,WAAW,MAAM,IAAA,gQAAa,EAAC,KAAK,KAAK;IAC/C,IAAI,SAAS,eAAe,CAAC,IAAI,EAAE,SAAS,UAAU,SAAS,eAAe,CAAC,GAAG,KAAK,OAAO;QAC1F,MAAM,IAAI,mPAAU,CAAC;IACzB;IACA,MAAM,UAAU,IAAA,iQAAiB,EAAC,SAAS,eAAe,EAAE,SAAS,OAAO,EAAE;IAC9E,MAAM,SAAS;QAAE;QAAS,iBAAiB,SAAS,eAAe;IAAC;IACpE,IAAI,OAAO,QAAQ,YAAY;QAC3B,OAAO;YAAE,GAAG,MAAM;YAAE,KAAK,SAAS,GAAG;QAAC;IAC1C;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2853, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/verify-user-token.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/users.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/feed.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/notifications.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/product_surface.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/common/websockets.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.google.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.google.protobuf.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/google/protobuf/struct.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.bounties_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/bounties_app/bounties_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.courses_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.games.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.games.quizzes.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/games/quizzes/quizzes.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.content_rewards_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/content_rewards_app/content_rewards_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.events_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/events_app/events_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.diagnostics.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/diagnostics/client_commands.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.content_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.calendar_bookings_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.wheel_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/wheel_app/wheel_app.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.experience.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/index.data_platform.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/proto/data_platform/dispute_rates_query.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/webhooks.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/retry.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload-parts.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/sum.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/analyze.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/with-awaitable-params.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/b64.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/utils/md5.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/prepare.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/partial-file-sdk-extensions.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/file-sdk-extensions.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/graphql/client.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/sdk-common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.common.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.browser.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/client-sdk-shared.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/codegen/graphql/server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/oauth/index.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/websockets/client.server.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/server-sdk-shared.ts"],"sourcesContent":["import { importJWK, jwtVerify } from \"jose\";\n\nconst USER_TOKEN_HEADER_NAME = \"x-whop-user-token\";\nconst USER_TOKEN_VERIFICATION_KEY =\n\t'{\"kty\":\"EC\",\"x\":\"rz8a8vxvexHC0TLT91g7llOdDOsNuYiGEfic4Qhni-E\",\"y\":\"zH0QblKYToexd5PEIMGXPVJS9AB5smKrW4S_TbiXrOs\",\"crv\":\"P-256\"}';\n\nexport function getUserToken(token: string): string;\nexport function getUserToken(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n): string | null;\nexport function getUserToken(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n): string | null {\n\tif (typeof tokenOrHeadersOrRequest === \"string\")\n\t\treturn tokenOrHeadersOrRequest;\n\n\tif (tokenOrHeadersOrRequest instanceof Headers)\n\t\treturn tokenOrHeadersOrRequest.get(USER_TOKEN_HEADER_NAME);\n\n\tif (tokenOrHeadersOrRequest instanceof Request)\n\t\treturn tokenOrHeadersOrRequest.headers.get(USER_TOKEN_HEADER_NAME);\n\n\treturn null;\n}\n\nexport interface UserTokenPayload {\n\t/// The user id of the user who is making the request.\n\tuserId: string;\n\n\t/// The app id of the app that is making the request.\n\t/// This will always be the same as the app id passed in the options.\n\tappId: string;\n}\n\nexport interface VerifyUserTokenOptions<DontThrow extends boolean = false> {\n\t/// This is the app id of your app. You can find it in the app settings dashboard.\n\tappId: string;\n\n\t/// The public key used to verify the user token. You don't need to provide this by default.\n\tpublicKey?: string;\n\n\t/// If true, the function will instead return null if the user token is invalid.\n\t/// Otherwise, it will throw an error.\n\tdontThrow?: DontThrow;\n}\n\nexport function makeUserTokenVerifier<DontThrow extends boolean = false>(\n\toptions: VerifyUserTokenOptions<DontThrow>,\n) {\n\treturn async function verifyUserToken<DT extends boolean = DontThrow>(\n\t\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\t\toverrideOptions?: Partial<VerifyUserTokenOptions<DT>>,\n\t) {\n\t\treturn await internalVerifyUserToken<DT>(tokenOrHeadersOrRequest, {\n\t\t\t...options,\n\t\t\t...overrideOptions,\n\t\t} as VerifyUserTokenOptions<DT>);\n\t};\n}\n\nexport function verifyUserToken<DontThrow extends boolean = false>(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\toverrideOptions?: Partial<VerifyUserTokenOptions<DontThrow>>,\n) {\n\treturn internalVerifyUserToken<DontThrow>(tokenOrHeadersOrRequest, {\n\t\t...overrideOptions,\n\t} as VerifyUserTokenOptions<DontThrow>);\n}\n\nasync function internalVerifyUserToken<DontThrow extends boolean = false>(\n\ttokenOrHeadersOrRequest: string | Headers | Request | null | undefined,\n\toptions: Partial<VerifyUserTokenOptions<DontThrow>>,\n): Promise<\n\tPromise<DontThrow extends true ? UserTokenPayload | null : UserTokenPayload>\n> {\n\ttry {\n\t\tconst tokenString = getUserToken(tokenOrHeadersOrRequest);\n\n\t\tif (!tokenString) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Whop user token not found. If you are the app developer, ensure you are developing in the whop.com iframe and have the dev proxy enabled.\",\n\t\t\t);\n\t\t}\n\n\t\tconst jwkString = options.publicKey ?? USER_TOKEN_VERIFICATION_KEY;\n\t\tconst key = await importJWK(JSON.parse(jwkString), \"ES256\").catch(() => {\n\t\t\tthrow new Error(\"Invalid public key provided to verifyUserToken\");\n\t\t});\n\t\tconst token = await jwtVerify(tokenString, key, {\n\t\t\tissuer: \"urn:whopcom:exp-proxy\",\n\t\t}).catch((_e) => {\n\t\t\tthrow new Error(\"Invalid user token provided to verifyUserToken\");\n\t\t});\n\t\tif (\n\t\t\t!(token.payload.sub && token.payload.aud) ||\n\t\t\tArray.isArray(token.payload.aud)\n\t\t) {\n\t\t\tthrow new Error(\"Invalid user token provided to verifyUserToken\");\n\t\t}\n\t\tif (options.appId && token.payload.aud !== options.appId)\n\t\t\tthrow new Error(\"Invalid app id provided to verifyUserToken\");\n\t\treturn {\n\t\t\tappId: token.payload.aud,\n\t\t\tuserId: token.payload.sub,\n\t\t};\n\t} catch (e) {\n\t\tif (options.dontThrow) {\n\t\t\treturn null as DontThrow extends true ? UserTokenPayload | null : never;\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * as common from \"./index.common\";\nexport * as google from \"./index.google\";\nexport * as bounties_app from \"./index.bounties_app\";\nexport * as courses_app from \"./index.courses_app\";\nexport * as games from \"./index.games\";\nexport * as content_rewards_app from \"./index.content_rewards_app\";\nexport * as events_app from \"./index.events_app\";\nexport * as diagnostics from \"./index.diagnostics\";\nexport * as content_app from \"./index.content_app\";\nexport * as calendar_bookings_app from \"./index.calendar_bookings_app\";\nexport * as wheel_app from \"./index.wheel_app\";\nexport * as experience from \"./index.experience\";\nexport * as data_platform from \"./index.data_platform\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./common/money\";\nexport * from \"./common/attachment\";\nexport * from \"./common/users\";\nexport * from \"./common/common\";\nexport * from \"./common/feed\";\nexport * from \"./common/notifications\";\nexport * from \"./common/product_surface\";\nexport * from \"./common/websockets\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/users.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\n\nexport const UserType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  HUMAN: \"HUMAN\",\n  SYSTEM: \"SYSTEM\",\n  AGENT: \"AGENT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type UserType = typeof UserType[keyof typeof UserType];\n\nexport namespace UserType {\n  export type UNKNOWN_TYPE = typeof UserType.UNKNOWN_TYPE;\n  export type HUMAN = typeof UserType.HUMAN;\n  export type SYSTEM = typeof UserType.SYSTEM;\n  export type AGENT = typeof UserType.AGENT;\n  export type UNRECOGNIZED = typeof UserType.UNRECOGNIZED;\n}\n\nexport interface User {\n  id: string;\n  email?: string | undefined;\n  name?: string | undefined;\n  username: string;\n  /** @deprecated */\n  profilePicUrl?: string | undefined;\n  userType: UserType;\n  roles: User_PlatformRole[];\n  profilePicture: FileAttachment | undefined;\n  banner: FileAttachment | undefined;\n  createdAt: string | undefined;\n  isSuspended: boolean;\n  isPlatformPolice: boolean;\n}\n\nexport const User_PlatformRole = {\n  UNKNOWN_ROLE: \"UNKNOWN_ROLE\",\n  SUPER_ADMIN: \"SUPER_ADMIN\",\n  ADMIN: \"ADMIN\",\n  TRUST_AND_SAFETY_MANAGER: \"TRUST_AND_SAFETY_MANAGER\",\n  MANAGER: \"MANAGER\",\n  SUPPORT: \"SUPPORT\",\n  TESTER: \"TESTER\",\n  SEO_MANAGER: \"SEO_MANAGER\",\n  TEMPLATE_USER: \"TEMPLATE_USER\",\n  MARKETPLACE_MANAGER: \"MARKETPLACE_MANAGER\",\n  DEVELOPER: \"DEVELOPER\",\n  FINANCE_MANAGER: \"FINANCE_MANAGER\",\n  RESOLUTION_CENTER_MANAGER: \"RESOLUTION_CENTER_MANAGER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type User_PlatformRole = typeof User_PlatformRole[keyof typeof User_PlatformRole];\n\nexport namespace User_PlatformRole {\n  export type UNKNOWN_ROLE = typeof User_PlatformRole.UNKNOWN_ROLE;\n  export type SUPER_ADMIN = typeof User_PlatformRole.SUPER_ADMIN;\n  export type ADMIN = typeof User_PlatformRole.ADMIN;\n  export type TRUST_AND_SAFETY_MANAGER = typeof User_PlatformRole.TRUST_AND_SAFETY_MANAGER;\n  export type MANAGER = typeof User_PlatformRole.MANAGER;\n  export type SUPPORT = typeof User_PlatformRole.SUPPORT;\n  export type TESTER = typeof User_PlatformRole.TESTER;\n  export type SEO_MANAGER = typeof User_PlatformRole.SEO_MANAGER;\n  export type TEMPLATE_USER = typeof User_PlatformRole.TEMPLATE_USER;\n  export type MARKETPLACE_MANAGER = typeof User_PlatformRole.MARKETPLACE_MANAGER;\n  export type DEVELOPER = typeof User_PlatformRole.DEVELOPER;\n  export type FINANCE_MANAGER = typeof User_PlatformRole.FINANCE_MANAGER;\n  export type RESOLUTION_CENTER_MANAGER = typeof User_PlatformRole.RESOLUTION_CENTER_MANAGER;\n  export type UNRECOGNIZED = typeof User_PlatformRole.UNRECOGNIZED;\n}\n\nexport interface UserStat {\n  userId: string;\n  moneyEarned24Hours: Money | undefined;\n  moneyEarned30Days: Money | undefined;\n  moneyEarned7Days: Money | undefined;\n  moneyEarnedLifetime: Money | undefined;\n}\n\nexport interface UserPresence {\n  userId: string;\n  lastSeenAt?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/common.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\nimport type { User } from \"./users\";\n\nexport const AppViewType = {\n  APP_VIEW_TYPE_UNKNOWN: \"APP_VIEW_TYPE_UNKNOWN\",\n  /**\n   * APP_VIEW_TYPE_HUB - This view shows in the consumer facing side of a creator's whop.\n   * It is scoped to an \"experience\" and can be seen by customer of a creator.\n   * Clients know this as the \"consumer\" view. (consumer_view_url_template)\n   */\n  APP_VIEW_TYPE_HUB: \"APP_VIEW_TYPE_HUB\",\n  /**\n   * APP_VIEW_TYPE_DASH - Deprecated - used only by legacy whop internal apps.\n   * This represents the \"experience admin\" view where a creator could customise settings for each experience powered by the app.\n   * Clients know this as the \"admin\" view. (admin_view_url_template)\n   *\n   * @deprecated\n   */\n  APP_VIEW_TYPE_DASH: \"APP_VIEW_TYPE_DASH\",\n  /**\n   * APP_VIEW_TYPE_ANALYTICS - Deprecated - used only by legacy whop internal apps.\n   *\n   * @deprecated\n   */\n  APP_VIEW_TYPE_ANALYTICS: \"APP_VIEW_TYPE_ANALYTICS\",\n  /**\n   * APP_VIEW_TYPE_DASHBOARD - New. This view shows up in the creator dashboard for each company that installs the app.\n   * One view is rendered per company per app. Only the companyId is available in the URL template.\n   */\n  APP_VIEW_TYPE_DASHBOARD: \"APP_VIEW_TYPE_DASHBOARD\",\n  /**\n   * APP_VIEW_TYPE_DISCOVER - Discover view shows up on the marketplace that allows an app to drive traffics to communities on whop.\n   * Essentially it is an unscoped view for an app.\n   */\n  APP_VIEW_TYPE_DISCOVER: \"APP_VIEW_TYPE_DISCOVER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AppViewType = typeof AppViewType[keyof typeof AppViewType];\n\nexport namespace AppViewType {\n  export type APP_VIEW_TYPE_UNKNOWN = typeof AppViewType.APP_VIEW_TYPE_UNKNOWN;\n  export type APP_VIEW_TYPE_HUB = typeof AppViewType.APP_VIEW_TYPE_HUB;\n  export type APP_VIEW_TYPE_DASH = typeof AppViewType.APP_VIEW_TYPE_DASH;\n  export type APP_VIEW_TYPE_ANALYTICS = typeof AppViewType.APP_VIEW_TYPE_ANALYTICS;\n  export type APP_VIEW_TYPE_DASHBOARD = typeof AppViewType.APP_VIEW_TYPE_DASHBOARD;\n  export type APP_VIEW_TYPE_DISCOVER = typeof AppViewType.APP_VIEW_TYPE_DISCOVER;\n  export type UNRECOGNIZED = typeof AppViewType.UNRECOGNIZED;\n}\n\nexport const AccessType = {\n  UNKNOWN_ACCESS_TYPE: \"UNKNOWN_ACCESS_TYPE\",\n  NO_ACCESS: \"NO_ACCESS\",\n  CUSTOMER: \"CUSTOMER\",\n  ADMIN: \"ADMIN\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessType = typeof AccessType[keyof typeof AccessType];\n\nexport namespace AccessType {\n  export type UNKNOWN_ACCESS_TYPE = typeof AccessType.UNKNOWN_ACCESS_TYPE;\n  export type NO_ACCESS = typeof AccessType.NO_ACCESS;\n  export type CUSTOMER = typeof AccessType.CUSTOMER;\n  export type ADMIN = typeof AccessType.ADMIN;\n  export type UNRECOGNIZED = typeof AccessType.UNRECOGNIZED;\n}\n\nexport const Platform = {\n  UNKNOWN: \"UNKNOWN\",\n  WEB: \"WEB\",\n  IOS: \"IOS\",\n  ANDROID: \"ANDROID\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Platform = typeof Platform[keyof typeof Platform];\n\nexport namespace Platform {\n  export type UNKNOWN = typeof Platform.UNKNOWN;\n  export type WEB = typeof Platform.WEB;\n  export type IOS = typeof Platform.IOS;\n  export type ANDROID = typeof Platform.ANDROID;\n  export type UNRECOGNIZED = typeof Platform.UNRECOGNIZED;\n}\n\nexport interface App {\n  id: string;\n  name: string;\n  internalIdentifier: string;\n  imageUrl: string;\n  icon?: FileAttachment | undefined;\n  consumerViewUrlTemplate?: string | undefined;\n  adminViewUrlTemplate?: string | undefined;\n  analyticsViewUrlTemplate?: string | undefined;\n  discoverViewUrlTemplate?: string | undefined;\n  dashboardViewUrlTemplate?: string | undefined;\n  description?: string | undefined;\n  prodIosBuildId?: string | undefined;\n  prodAndroidBuildId?: string | undefined;\n  prodWebBuildId?: string | undefined;\n  botId: string;\n}\n\nexport interface AppBuild {\n  id: string;\n  appId: string;\n  checksum: string;\n  platform: Platform;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  status: AppBuild_Status;\n  fileUrl: string;\n  reviewMessage?: string | undefined;\n  supportedAppViewTypes: AppViewType[];\n}\n\nexport const AppBuild_Status = {\n  STATUS_UNKNOWN: \"STATUS_UNKNOWN\",\n  STATUS_DRAFT: \"STATUS_DRAFT\",\n  STATUS_PENDING: \"STATUS_PENDING\",\n  STATUS_APPROVED: \"STATUS_APPROVED\",\n  STATUS_REJECTED: \"STATUS_REJECTED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AppBuild_Status = typeof AppBuild_Status[keyof typeof AppBuild_Status];\n\nexport namespace AppBuild_Status {\n  export type STATUS_UNKNOWN = typeof AppBuild_Status.STATUS_UNKNOWN;\n  export type STATUS_DRAFT = typeof AppBuild_Status.STATUS_DRAFT;\n  export type STATUS_PENDING = typeof AppBuild_Status.STATUS_PENDING;\n  export type STATUS_APPROVED = typeof AppBuild_Status.STATUS_APPROVED;\n  export type STATUS_REJECTED = typeof AppBuild_Status.STATUS_REJECTED;\n  export type UNRECOGNIZED = typeof AppBuild_Status.UNRECOGNIZED;\n}\n\nexport interface Bot {\n  id: string;\n  /** @deprecated */\n  hubRoute: string;\n  title: string;\n  imageUrl: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  isVerified: boolean;\n  installedFirstAppAt?: string | undefined;\n  whopFourFiveEnabledAt?: string | undefined;\n  logo?: FileAttachment | undefined;\n  bannerImage?: FileAttachment | undefined;\n  route?: string | undefined;\n  opengraphImage?: FileAttachment | undefined;\n  opengraphImageVariant?: Bot_OpengraphImageVariant | undefined;\n  useLogoAsOpengraphImageFallback: boolean;\n  features: string[];\n  activeMembersCount: number;\n}\n\nexport const Bot_OpengraphImageVariant = {\n  VARIANT_UNKNOWN: \"VARIANT_UNKNOWN\",\n  VARIANT_WHITE: \"VARIANT_WHITE\",\n  VARIANT_BLACK: \"VARIANT_BLACK\",\n  VARIANT_ORANGE: \"VARIANT_ORANGE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bot_OpengraphImageVariant = typeof Bot_OpengraphImageVariant[keyof typeof Bot_OpengraphImageVariant];\n\nexport namespace Bot_OpengraphImageVariant {\n  export type VARIANT_UNKNOWN = typeof Bot_OpengraphImageVariant.VARIANT_UNKNOWN;\n  export type VARIANT_WHITE = typeof Bot_OpengraphImageVariant.VARIANT_WHITE;\n  export type VARIANT_BLACK = typeof Bot_OpengraphImageVariant.VARIANT_BLACK;\n  export type VARIANT_ORANGE = typeof Bot_OpengraphImageVariant.VARIANT_ORANGE;\n  export type UNRECOGNIZED = typeof Bot_OpengraphImageVariant.UNRECOGNIZED;\n}\n\nexport interface NotificationTopic {\n  id: string;\n}\n\nexport interface CfLocation {\n  ipAddress?: string | undefined;\n  city?: string | undefined;\n  country?: string | undefined;\n  continent?: string | undefined;\n  longitude?: number | undefined;\n  latitude?: number | undefined;\n  region?: string | undefined;\n  regionCode?: string | undefined;\n  metroCode?: string | undefined;\n  postalCode?: string | undefined;\n  timezone?: string | undefined;\n}\n\nexport interface AccessPass {\n  id: string;\n  route: string;\n  /** @deprecated */\n  name: string;\n  headline: string;\n  imageUrl: string;\n  title: string;\n  botId: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  shortenedDescription?: string | undefined;\n  visibility: AccessPass_Visibility;\n  discoverableAt?: string | undefined;\n  logo?: FileAttachment | undefined;\n  bannerImage?: FileAttachment | undefined;\n  accessPassType: AccessPass_AccessPassType;\n  activeMembersCount: number;\n}\n\nexport const AccessPass_Visibility = {\n  VISIBILITY_UNKNOWN: \"VISIBILITY_UNKNOWN\",\n  VISIBLE: \"VISIBLE\",\n  HIDDEN: \"HIDDEN\",\n  ARCHIVED: \"ARCHIVED\",\n  QUICK_LINK: \"QUICK_LINK\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPass_Visibility = typeof AccessPass_Visibility[keyof typeof AccessPass_Visibility];\n\nexport namespace AccessPass_Visibility {\n  export type VISIBILITY_UNKNOWN = typeof AccessPass_Visibility.VISIBILITY_UNKNOWN;\n  export type VISIBLE = typeof AccessPass_Visibility.VISIBLE;\n  export type HIDDEN = typeof AccessPass_Visibility.HIDDEN;\n  export type ARCHIVED = typeof AccessPass_Visibility.ARCHIVED;\n  export type QUICK_LINK = typeof AccessPass_Visibility.QUICK_LINK;\n  export type UNRECOGNIZED = typeof AccessPass_Visibility.UNRECOGNIZED;\n}\n\nexport const AccessPass_AccessPassType = {\n  ACCESS_PASS_TYPE_UNKNOWN: \"ACCESS_PASS_TYPE_UNKNOWN\",\n  REGULAR: \"REGULAR\",\n  APP: \"APP\",\n  EXPERIENCE_UPSELL: \"EXPERIENCE_UPSELL\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPass_AccessPassType = typeof AccessPass_AccessPassType[keyof typeof AccessPass_AccessPassType];\n\nexport namespace AccessPass_AccessPassType {\n  export type ACCESS_PASS_TYPE_UNKNOWN = typeof AccessPass_AccessPassType.ACCESS_PASS_TYPE_UNKNOWN;\n  export type REGULAR = typeof AccessPass_AccessPassType.REGULAR;\n  export type APP = typeof AccessPass_AccessPassType.APP;\n  export type EXPERIENCE_UPSELL = typeof AccessPass_AccessPassType.EXPERIENCE_UPSELL;\n  export type UNRECOGNIZED = typeof AccessPass_AccessPassType.UNRECOGNIZED;\n}\n\nexport interface Plan {\n  id: string;\n  baseCurrency: string;\n  renewalPrice: Money | undefined;\n  initialPrice: Money | undefined;\n  initialPriceDue: Money | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  billingPeriod?: number | undefined;\n  trialPeriodDays?: number | undefined;\n  expirationDays?: number | undefined;\n  unlimitedStock: boolean;\n  paymentLinkDescription?: string | undefined;\n  releaseMethod: Plan_ReleaseMethod;\n  stock?: number | undefined;\n  visibility: Plan_Visibility;\n  planType: Plan_PlanType;\n}\n\nexport const Plan_Visibility = {\n  VISIBILITY_UNKNOWN: \"VISIBILITY_UNKNOWN\",\n  VISIBLE: \"VISIBLE\",\n  HIDDEN: \"HIDDEN\",\n  ARCHIVED: \"ARCHIVED\",\n  QUICK_LINK: \"QUICK_LINK\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_Visibility = typeof Plan_Visibility[keyof typeof Plan_Visibility];\n\nexport namespace Plan_Visibility {\n  export type VISIBILITY_UNKNOWN = typeof Plan_Visibility.VISIBILITY_UNKNOWN;\n  export type VISIBLE = typeof Plan_Visibility.VISIBLE;\n  export type HIDDEN = typeof Plan_Visibility.HIDDEN;\n  export type ARCHIVED = typeof Plan_Visibility.ARCHIVED;\n  export type QUICK_LINK = typeof Plan_Visibility.QUICK_LINK;\n  export type UNRECOGNIZED = typeof Plan_Visibility.UNRECOGNIZED;\n}\n\nexport const Plan_ReleaseMethod = {\n  RELEASE_METHOD_UNKNOWN: \"RELEASE_METHOD_UNKNOWN\",\n  BUY_NOW: \"BUY_NOW\",\n  WAITLIST: \"WAITLIST\",\n  RAFFLE: \"RAFFLE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_ReleaseMethod = typeof Plan_ReleaseMethod[keyof typeof Plan_ReleaseMethod];\n\nexport namespace Plan_ReleaseMethod {\n  export type RELEASE_METHOD_UNKNOWN = typeof Plan_ReleaseMethod.RELEASE_METHOD_UNKNOWN;\n  export type BUY_NOW = typeof Plan_ReleaseMethod.BUY_NOW;\n  export type WAITLIST = typeof Plan_ReleaseMethod.WAITLIST;\n  export type RAFFLE = typeof Plan_ReleaseMethod.RAFFLE;\n  export type UNRECOGNIZED = typeof Plan_ReleaseMethod.UNRECOGNIZED;\n}\n\nexport const Plan_PlanType = {\n  PLAN_TYPE_UNKNOWN: \"PLAN_TYPE_UNKNOWN\",\n  RENEWAL: \"RENEWAL\",\n  ONE_TIME: \"ONE_TIME\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Plan_PlanType = typeof Plan_PlanType[keyof typeof Plan_PlanType];\n\nexport namespace Plan_PlanType {\n  export type PLAN_TYPE_UNKNOWN = typeof Plan_PlanType.PLAN_TYPE_UNKNOWN;\n  export type RENEWAL = typeof Plan_PlanType.RENEWAL;\n  export type ONE_TIME = typeof Plan_PlanType.ONE_TIME;\n  export type UNRECOGNIZED = typeof Plan_PlanType.UNRECOGNIZED;\n}\n\nexport interface Entry {\n  id: string;\n  status: Entry_EntryStatus;\n  userId: string;\n  botId: string;\n  planId: string;\n  accessPassId: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n}\n\nexport const Entry_EntryStatus = {\n  ENTRY_STATUS_UNKNOWN: \"ENTRY_STATUS_UNKNOWN\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  DENIED: \"DENIED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Entry_EntryStatus = typeof Entry_EntryStatus[keyof typeof Entry_EntryStatus];\n\nexport namespace Entry_EntryStatus {\n  export type ENTRY_STATUS_UNKNOWN = typeof Entry_EntryStatus.ENTRY_STATUS_UNKNOWN;\n  export type PENDING = typeof Entry_EntryStatus.PENDING;\n  export type APPROVED = typeof Entry_EntryStatus.APPROVED;\n  export type DENIED = typeof Entry_EntryStatus.DENIED;\n  export type UNRECOGNIZED = typeof Entry_EntryStatus.UNRECOGNIZED;\n}\n\nexport interface AccessPassMember {\n  id: string;\n  accessPassId: string;\n  userId: string;\n  botId: string;\n  accessLevel: AccessType;\n  createdAt: string | undefined;\n  updatedAt:\n    | string\n    | undefined;\n  /** @deprecated */\n  orderOld?: number | undefined;\n  order?: number | undefined;\n}\n\nexport interface Member {\n  id: string;\n  userId: string;\n  botId: string;\n  accessLevel: AccessType;\n  order?: number | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport interface AccessPassExperience {\n  id: string;\n  accessPassId: string;\n  experienceId: string;\n  botId: string;\n  /** @deprecated */\n  isDeleted: boolean;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  upsellType?: AccessPassExperience_UpsellType | undefined;\n  upsellPlan?: Plan | undefined;\n  order: number;\n  sectionId?: string | undefined;\n}\n\nexport const AccessPassExperience_UpsellType = {\n  UPSELL_TYPE_UNKNOWN: \"UPSELL_TYPE_UNKNOWN\",\n  BEFORE_CHECKOUT: \"BEFORE_CHECKOUT\",\n  AFTER_CHECKOUT: \"AFTER_CHECKOUT\",\n  ONLY_IN_WHOP: \"ONLY_IN_WHOP\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type AccessPassExperience_UpsellType =\n  typeof AccessPassExperience_UpsellType[keyof typeof AccessPassExperience_UpsellType];\n\nexport namespace AccessPassExperience_UpsellType {\n  export type UPSELL_TYPE_UNKNOWN = typeof AccessPassExperience_UpsellType.UPSELL_TYPE_UNKNOWN;\n  export type BEFORE_CHECKOUT = typeof AccessPassExperience_UpsellType.BEFORE_CHECKOUT;\n  export type AFTER_CHECKOUT = typeof AccessPassExperience_UpsellType.AFTER_CHECKOUT;\n  export type ONLY_IN_WHOP = typeof AccessPassExperience_UpsellType.ONLY_IN_WHOP;\n  export type UNRECOGNIZED = typeof AccessPassExperience_UpsellType.UNRECOGNIZED;\n}\n\nexport interface AccessPassExperienceSection {\n  id: string;\n  accessPassId: string;\n  botId: string;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  order?: number | undefined;\n}\n\nexport interface BotExperienceSection {\n  id: string;\n  botId: string;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  discardedAt?: string | undefined;\n  order?: number | undefined;\n}\n\nexport interface Purchase {\n  amount: number;\n  currencyCode: string;\n  userName: string;\n  product: AccessPass | undefined;\n  createdAt: number;\n  id: string;\n  releaseMethod: Purchase_ReleaseMethod;\n  formattedAmount: string;\n}\n\nexport const Purchase_ReleaseMethod = {\n  UNKNOWN: \"UNKNOWN\",\n  BUY_NOW: \"BUY_NOW\",\n  WAITLIST: \"WAITLIST\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Purchase_ReleaseMethod = typeof Purchase_ReleaseMethod[keyof typeof Purchase_ReleaseMethod];\n\nexport namespace Purchase_ReleaseMethod {\n  export type UNKNOWN = typeof Purchase_ReleaseMethod.UNKNOWN;\n  export type BUY_NOW = typeof Purchase_ReleaseMethod.BUY_NOW;\n  export type WAITLIST = typeof Purchase_ReleaseMethod.WAITLIST;\n  export type UNRECOGNIZED = typeof Purchase_ReleaseMethod.UNRECOGNIZED;\n}\n\nexport interface MarketplaceStats {\n  totalGmvUsd: number;\n  usersCount: number;\n}\n\nexport interface ConnectedId {\n  type: ConnectedId_Type;\n  id: string;\n  deviceId: string;\n}\n\nexport const ConnectedId_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  ANONYMOUS: \"ANONYMOUS\",\n  USER: \"USER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ConnectedId_Type = typeof ConnectedId_Type[keyof typeof ConnectedId_Type];\n\nexport namespace ConnectedId_Type {\n  export type UNKNOWN = typeof ConnectedId_Type.UNKNOWN;\n  export type ANONYMOUS = typeof ConnectedId_Type.ANONYMOUS;\n  export type USER = typeof ConnectedId_Type.USER;\n  export type UNRECOGNIZED = typeof ConnectedId_Type.UNRECOGNIZED;\n}\n\nexport interface Channel {\n  type: Channel_Type;\n  id: string;\n}\n\nexport const Channel_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  /** EXPERIENCE - / A channel to which all users of an experience are subscribed, only when vieweing that experience in the UI. The ID is the experience.tag (exp_XXXXX) */\n  EXPERIENCE: \"EXPERIENCE\",\n  /** NOTIFICATIONS - / Not used right now. */\n  NOTIFICATIONS: \"NOTIFICATIONS\",\n  /** DMS - / A channel to which all users in a dms_feed are subscribed. Id is the dms_feed.external_id (feed_XXXXX) */\n  DMS: \"DMS\",\n  /** USER - / A channel to which a single user is subscribed. (Id is the user's id) */\n  USER: \"USER\",\n  /** EVERYONE - / A single channel to which all connections are subscribed. (Id is empty) */\n  EVERYONE: \"EVERYONE\",\n  /** AUTHENTICATED - / A single channel to which all authenticated users are subscribed. (Id is empty) */\n  AUTHENTICATED: \"AUTHENTICATED\",\n  /** ANONYMOUS - / A channel that is created for every anonymous connection. The id is 128bits of random data. */\n  ANONYMOUS: \"ANONYMOUS\",\n  /** PUBLIC - / A channel type that can be connected to by anyone without authentication. Allows anything after the `public_` prefix. */\n  PUBLIC: \"PUBLIC\",\n  /** ACCESS_PASS - / A channel to which all users of an access pass are subscribed. The ID is the access_pass.tag (pass_XXXX or prod_XXXX) */\n  ACCESS_PASS: \"ACCESS_PASS\",\n  /** APP - / A channel that is used by an app to broadcast data to all of its websocket connections. It may look like: app_XXX or app_XXX_exp_XXX or app_XXX_custom_suffix */\n  APP: \"APP\",\n  /** BOT - / A channel to which all members with valid access to a bot are subscribed. The ID is the bot.id (biz_XXX) */\n  BOT: \"BOT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Channel_Type = typeof Channel_Type[keyof typeof Channel_Type];\n\nexport namespace Channel_Type {\n  export type UNKNOWN = typeof Channel_Type.UNKNOWN;\n  export type EXPERIENCE = typeof Channel_Type.EXPERIENCE;\n  export type NOTIFICATIONS = typeof Channel_Type.NOTIFICATIONS;\n  export type DMS = typeof Channel_Type.DMS;\n  export type USER = typeof Channel_Type.USER;\n  export type EVERYONE = typeof Channel_Type.EVERYONE;\n  export type AUTHENTICATED = typeof Channel_Type.AUTHENTICATED;\n  export type ANONYMOUS = typeof Channel_Type.ANONYMOUS;\n  export type PUBLIC = typeof Channel_Type.PUBLIC;\n  export type ACCESS_PASS = typeof Channel_Type.ACCESS_PASS;\n  export type APP = typeof Channel_Type.APP;\n  export type BOT = typeof Channel_Type.BOT;\n  export type UNRECOGNIZED = typeof Channel_Type.UNRECOGNIZED;\n}\n\nexport interface ChannelSubscriptionState {\n  channel: Channel | undefined;\n  isSubscribed: boolean;\n  wasAlreadySubscribed: boolean;\n  disconnectionReason?: ChannelSubscriptionState_DisconnectionReason | undefined;\n}\n\nexport const ChannelSubscriptionState_DisconnectionReason = {\n  UNKNOWN: \"UNKNOWN\",\n  NO_ACCESS: \"NO_ACCESS\",\n  REQUESTED_DISCONNECT: \"REQUESTED_DISCONNECT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ChannelSubscriptionState_DisconnectionReason =\n  typeof ChannelSubscriptionState_DisconnectionReason[keyof typeof ChannelSubscriptionState_DisconnectionReason];\n\nexport namespace ChannelSubscriptionState_DisconnectionReason {\n  export type UNKNOWN = typeof ChannelSubscriptionState_DisconnectionReason.UNKNOWN;\n  export type NO_ACCESS = typeof ChannelSubscriptionState_DisconnectionReason.NO_ACCESS;\n  export type REQUESTED_DISCONNECT = typeof ChannelSubscriptionState_DisconnectionReason.REQUESTED_DISCONNECT;\n  export type UNRECOGNIZED = typeof ChannelSubscriptionState_DisconnectionReason.UNRECOGNIZED;\n}\n\nexport interface Reconnect {\n}\n\nexport interface ReloadClient {\n  versionId: string;\n  force: boolean;\n}\n\nexport interface BroadcastRequest {\n  channel: Channel | undefined;\n  typingIndicator?: TypingIndicator | undefined;\n  markAsRead?: MarkAsRead | undefined;\n  position?: Position | undefined;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n  type: Position_Type;\n  url: string;\n  message: string;\n}\n\nexport const Position_Type = {\n  UNKNOWN: \"UNKNOWN\",\n  MOUSE: \"MOUSE\",\n  PLAYER: \"PLAYER\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Position_Type = typeof Position_Type[keyof typeof Position_Type];\n\nexport namespace Position_Type {\n  export type UNKNOWN = typeof Position_Type.UNKNOWN;\n  export type MOUSE = typeof Position_Type.MOUSE;\n  export type PLAYER = typeof Position_Type.PLAYER;\n  export type UNRECOGNIZED = typeof Position_Type.UNRECOGNIZED;\n}\n\nexport interface TypingIndicator {\n  expireAfter: string | undefined;\n}\n\nexport interface MarkAsRead {\n  experienceId?: string | undefined;\n  isGlobal: boolean;\n  timestamp: string | undefined;\n}\n\nexport interface BroadcastResponse {\n  channel: Channel | undefined;\n  fromUserId: string;\n  serverForwardedAt: string | undefined;\n  typingIndicator?: TypingIndicator | undefined;\n  markAsRead?: MarkAsRead | undefined;\n  position?: Position | undefined;\n}\n\nexport interface DiscoveryAccessPassLiveData {\n  accessPassId: string;\n  last24HoursGmv?: Money | undefined;\n  last24HoursAffiliateEarnings?: Money | undefined;\n  last24HoursNewUsers?: number | undefined;\n  last24HoursAverageTimePerUser?: string | undefined;\n  globalWhopRanking?: number | undefined;\n  totalPublishedReviewsCount?: number | undefined;\n  lastReview?: AccessPassReview | undefined;\n  last7DaysPublishedReviewsCount?: number | undefined;\n  activeUsersCount?: number | undefined;\n  last30DaysNewUsers?: number | undefined;\n  accessPassActivityItem?: AccessPassActivityItem | undefined;\n}\n\nexport interface AccessPassActivityItem {\n  id: string;\n  createdAt: string | undefined;\n  eventType: string;\n  user?: User | undefined;\n}\n\nexport interface AccessPassReview {\n  id: string;\n  createdAt: string | undefined;\n  publishedAt: string | undefined;\n}\n\nexport interface FeedContentItem {\n  id: string;\n  eventType: string;\n  metadata: { [key: string]: any } | undefined;\n  restPath: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  appId: string;\n  botId: string;\n  experienceId: string;\n  externalId: string;\n  parentExternalId: string;\n  userId: string;\n  attachments: FileAttachment[];\n  gifs: FeedContentItem_GiphyGif[];\n}\n\nexport interface FeedContentItem_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface UserReferralMarketRates {\n  previousRates?: UserReferralMarketRate | undefined;\n  currentRates?: UserReferralMarketRate | undefined;\n}\n\nexport interface UserReferralMarketRate {\n  percentOfPlatformSpend?: number | undefined;\n  percentOfSellerPayment?: number | undefined;\n  percentOfContentRewardsCampaignMaker?: number | undefined;\n  percentOfContentRewardsEarner?: number | undefined;\n}\n\nexport interface GoFetchExperienceList {\n  accessPassId: string;\n}\n\nexport interface GoFetchUserExperiences {\n  experienceId: string;\n}\n\nexport interface BusinessActivityEvent {\n  eventType: BusinessActivityEvent_EventType;\n  user: User | undefined;\n  accessPass: AccessPass | undefined;\n  description: string;\n  createdAt: string | undefined;\n  member: Member | undefined;\n  metadata: { [key: string]: any } | undefined;\n}\n\nexport const BusinessActivityEvent_EventType = {\n  UNKNOWN: \"UNKNOWN\",\n  MEMBER_JOINED: \"MEMBER_JOINED\",\n  NEW_PAYMENT: \"NEW_PAYMENT\",\n  NEW_DISPUTE: \"NEW_DISPUTE\",\n  MEMBER_CANCELED: \"MEMBER_CANCELED\",\n  MEMBER_CHURNED: \"MEMBER_CHURNED\",\n  NEW_MARKETPLACE_SALE: \"NEW_MARKETPLACE_SALE\",\n  NEW_RESOLUTION_CENTER_CASE: \"NEW_RESOLUTION_CENTER_CASE\",\n  NEW_REVIEW: \"NEW_REVIEW\",\n  TEAM_MEMBER_JOINED: \"TEAM_MEMBER_JOINED\",\n  BANNED_USER: \"BANNED_USER\",\n  FAILED_PAYMENT: \"FAILED_PAYMENT\",\n  PAYOUT_REQUESTED: \"PAYOUT_REQUESTED\",\n  PAYOUT_COMPLETED: \"PAYOUT_COMPLETED\",\n  PAYOUT_FAILED: \"PAYOUT_FAILED\",\n  COMPETITION_ALERT: \"COMPETITION_ALERT\",\n  NEW_WAITLIST_ENTRY: \"NEW_WAITLIST_ENTRY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type BusinessActivityEvent_EventType =\n  typeof BusinessActivityEvent_EventType[keyof typeof BusinessActivityEvent_EventType];\n\nexport namespace BusinessActivityEvent_EventType {\n  export type UNKNOWN = typeof BusinessActivityEvent_EventType.UNKNOWN;\n  export type MEMBER_JOINED = typeof BusinessActivityEvent_EventType.MEMBER_JOINED;\n  export type NEW_PAYMENT = typeof BusinessActivityEvent_EventType.NEW_PAYMENT;\n  export type NEW_DISPUTE = typeof BusinessActivityEvent_EventType.NEW_DISPUTE;\n  export type MEMBER_CANCELED = typeof BusinessActivityEvent_EventType.MEMBER_CANCELED;\n  export type MEMBER_CHURNED = typeof BusinessActivityEvent_EventType.MEMBER_CHURNED;\n  export type NEW_MARKETPLACE_SALE = typeof BusinessActivityEvent_EventType.NEW_MARKETPLACE_SALE;\n  export type NEW_RESOLUTION_CENTER_CASE = typeof BusinessActivityEvent_EventType.NEW_RESOLUTION_CENTER_CASE;\n  export type NEW_REVIEW = typeof BusinessActivityEvent_EventType.NEW_REVIEW;\n  export type TEAM_MEMBER_JOINED = typeof BusinessActivityEvent_EventType.TEAM_MEMBER_JOINED;\n  export type BANNED_USER = typeof BusinessActivityEvent_EventType.BANNED_USER;\n  export type FAILED_PAYMENT = typeof BusinessActivityEvent_EventType.FAILED_PAYMENT;\n  export type PAYOUT_REQUESTED = typeof BusinessActivityEvent_EventType.PAYOUT_REQUESTED;\n  export type PAYOUT_COMPLETED = typeof BusinessActivityEvent_EventType.PAYOUT_COMPLETED;\n  export type PAYOUT_FAILED = typeof BusinessActivityEvent_EventType.PAYOUT_FAILED;\n  export type COMPETITION_ALERT = typeof BusinessActivityEvent_EventType.COMPETITION_ALERT;\n  export type NEW_WAITLIST_ENTRY = typeof BusinessActivityEvent_EventType.NEW_WAITLIST_ENTRY;\n  export type UNRECOGNIZED = typeof BusinessActivityEvent_EventType.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/feed.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"./attachment\";\nimport type { Money } from \"./money\";\nimport type { User, User_PlatformRole, UserType } from \"./users\";\n\nexport interface FeedEntity {\n  dmsPost?: FeedDmsPost | undefined;\n  dmsFeed?: FeedDmsFeed | undefined;\n  dmsFeedMember?: FeedDmsFeedMember | undefined;\n  reaction?: FeedReaction | undefined;\n  user?: FeedUser | undefined;\n  chatFeed?: FeedChatFeed | undefined;\n  mutedUser?: FeedMutedUser | undefined;\n  forumFeed?: FeedForumFeed | undefined;\n  forumPost?: FeedForumPost | undefined;\n  postReactionCountUpdate?: FeedPostReactionCountUpdate | undefined;\n  livestreamFeed?: FeedLivestreamFeed | undefined;\n  dmsUnreadBadgeUpdate?: FeedDmsUnreadBadgeUpdate | undefined;\n}\n\nexport interface SendFeedEntityToUserRequest {\n  userId: string;\n  feedEntity: FeedEntity | undefined;\n  userIds: string[];\n}\n\nexport interface SendFeedEntityToUserResponse {\n  sent: boolean;\n}\n\nexport interface FeedSyncError {\n  message: string;\n}\n\nexport interface FeedDmsPost {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  sortKey: string;\n  /** Custom Fields */\n  feedId: string;\n  feedType: string;\n  userId: string;\n  parentId: string;\n  isEdited: boolean;\n  title: string;\n  content: string;\n  richContent: string;\n  childrenCount: number;\n  /** @deprecated */\n  reactionCounts:\n    | FeedDmsPost_ReactionCounts\n    | undefined;\n  /**\n   * use files instead\n   *\n   * @deprecated\n   */\n  attachments: FeedDmsPost_PostAttachment[];\n  gifs: FeedDmsPost_GiphyGif[];\n  replyingToPostId: string;\n  links: FeedDmsPost_LinkEmbed[];\n  isPinned: boolean;\n  everyoneMentioned: boolean;\n  mentionedUserIds: string[];\n  viewCount: number;\n  postReactionCounts: PostReactionCount[];\n  isPosterAdmin: boolean;\n  messageType: FeedDmsPost_MessageType;\n  embed?: PostEmbed | undefined;\n  user: User | undefined;\n  files: FileAttachment[];\n  experienceId?: string | undefined;\n  poll?: Poll | undefined;\n  markdownContent: string;\n  replyingToPost?: FeedDmsPost | undefined;\n}\n\nexport const FeedDmsPost_MessageType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  REGULAR: \"REGULAR\",\n  SYSTEM: \"SYSTEM\",\n  AUTOMATED: \"AUTOMATED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsPost_MessageType = typeof FeedDmsPost_MessageType[keyof typeof FeedDmsPost_MessageType];\n\nexport namespace FeedDmsPost_MessageType {\n  export type UNKNOWN_TYPE = typeof FeedDmsPost_MessageType.UNKNOWN_TYPE;\n  export type REGULAR = typeof FeedDmsPost_MessageType.REGULAR;\n  export type SYSTEM = typeof FeedDmsPost_MessageType.SYSTEM;\n  export type AUTOMATED = typeof FeedDmsPost_MessageType.AUTOMATED;\n  export type UNRECOGNIZED = typeof FeedDmsPost_MessageType.UNRECOGNIZED;\n}\n\nexport interface FeedDmsPost_ImageAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  blurDataUrl: string;\n  aspectRatio: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_DocumentAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_VideoAttachment {\n  type: string;\n  fileUrl: string;\n  fileCategory: string;\n  fileName: string;\n  /** @deprecated */\n  fileSize: number;\n  blurDataUrl: string;\n  aspectRatio: number;\n  thumbnailUrl: string;\n  height: number;\n  width: number;\n  byteSize: number;\n}\n\nexport interface FeedDmsPost_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface FeedDmsPost_PostAttachment {\n  image?: FeedDmsPost_ImageAttachment | undefined;\n  document?: FeedDmsPost_DocumentAttachment | undefined;\n  video?: FeedDmsPost_VideoAttachment | undefined;\n}\n\nexport interface FeedDmsPost_ReactionCount {\n  score: number;\n  count: number;\n}\n\nexport interface FeedDmsPost_ReactionCounts {\n  counts: { [key: string]: FeedDmsPost_ReactionCount };\n}\n\nexport interface FeedDmsPost_ReactionCounts_CountsEntry {\n  key: string;\n  value: FeedDmsPost_ReactionCount | undefined;\n}\n\nexport interface FeedDmsPost_LinkEmbed {\n  url: string;\n  title: string;\n  description: string;\n  image: string;\n  favicon: string;\n  processing: boolean;\n}\n\nexport interface FeedDmsFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  customName: string;\n  botId?: string | undefined;\n  customerUserId?: string | undefined;\n  botLogo?: FileAttachment | undefined;\n  resolvedAt?: string | undefined;\n}\n\nexport interface FeedChatFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  experienceId: string;\n  banUrls: boolean;\n  whoCanReact: FeedChatFeed_MemberPermissionType;\n  whoCanPost: FeedChatFeed_MemberPermissionType;\n  requiredProductIdsToWrite: string[];\n  banMedia: boolean;\n  userPostsCooldownSeconds: number;\n  banUnverifiedUsers: boolean;\n}\n\nexport const FeedChatFeed_MemberPermissionType = {\n  UNKNOWN: \"UNKNOWN\",\n  NONE: \"NONE\",\n  EVERYONE: \"EVERYONE\",\n  MEMBERS: \"MEMBERS\",\n  ADMINS: \"ADMINS\",\n  PRODUCT_OWNERS: \"PRODUCT_OWNERS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedChatFeed_MemberPermissionType =\n  typeof FeedChatFeed_MemberPermissionType[keyof typeof FeedChatFeed_MemberPermissionType];\n\nexport namespace FeedChatFeed_MemberPermissionType {\n  export type UNKNOWN = typeof FeedChatFeed_MemberPermissionType.UNKNOWN;\n  export type NONE = typeof FeedChatFeed_MemberPermissionType.NONE;\n  export type EVERYONE = typeof FeedChatFeed_MemberPermissionType.EVERYONE;\n  export type MEMBERS = typeof FeedChatFeed_MemberPermissionType.MEMBERS;\n  export type ADMINS = typeof FeedChatFeed_MemberPermissionType.ADMINS;\n  export type PRODUCT_OWNERS = typeof FeedChatFeed_MemberPermissionType.PRODUCT_OWNERS;\n  export type UNRECOGNIZED = typeof FeedChatFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport interface FeedLivestreamFeed {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /**\n   * Custom Fields\n   *\n   * @deprecated\n   */\n  experienceId: string;\n  banUrls: boolean;\n  banMedia: boolean;\n  banUnverifiedUsers: boolean;\n  bannedWords: string[];\n  userPostsCooldownSeconds: number;\n  whoCanReact: FeedLivestreamFeed_MemberPermissionType;\n  whoCanPost: FeedLivestreamFeed_MemberPermissionType;\n  recordingUrl?: string | undefined;\n  thumbnailUrl?: string | undefined;\n  experienceIds: string[];\n  reactionsEnabled: boolean;\n  /** Livekit fields */\n  title: string;\n  description: string;\n  emptyTimeout: number;\n  maxParticipants: number;\n  scheduledAt: number;\n  startedAt: number;\n  endedAt: number;\n  metadata: { [key: string]: string };\n  hostId: string;\n  recording?: FileAttachment | undefined;\n  recordingStatus?: FeedLivestreamFeed_RecordingStatus | undefined;\n}\n\nexport const FeedLivestreamFeed_RecordingStatus = {\n  UNKNOWN_RECORDING_STATUS: \"UNKNOWN_RECORDING_STATUS\",\n  RECORDING: \"RECORDING\",\n  PROCESSING: \"PROCESSING\",\n  COMPLETED: \"COMPLETED\",\n  FAILED: \"FAILED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedLivestreamFeed_RecordingStatus =\n  typeof FeedLivestreamFeed_RecordingStatus[keyof typeof FeedLivestreamFeed_RecordingStatus];\n\nexport namespace FeedLivestreamFeed_RecordingStatus {\n  export type UNKNOWN_RECORDING_STATUS = typeof FeedLivestreamFeed_RecordingStatus.UNKNOWN_RECORDING_STATUS;\n  export type RECORDING = typeof FeedLivestreamFeed_RecordingStatus.RECORDING;\n  export type PROCESSING = typeof FeedLivestreamFeed_RecordingStatus.PROCESSING;\n  export type COMPLETED = typeof FeedLivestreamFeed_RecordingStatus.COMPLETED;\n  export type FAILED = typeof FeedLivestreamFeed_RecordingStatus.FAILED;\n  export type UNRECOGNIZED = typeof FeedLivestreamFeed_RecordingStatus.UNRECOGNIZED;\n}\n\nexport const FeedLivestreamFeed_MemberPermissionType = {\n  UNKNOWN: \"UNKNOWN\",\n  NONE: \"NONE\",\n  EVERYONE: \"EVERYONE\",\n  ADMINS: \"ADMINS\",\n  PRODUCT_OWNERS: \"PRODUCT_OWNERS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedLivestreamFeed_MemberPermissionType =\n  typeof FeedLivestreamFeed_MemberPermissionType[keyof typeof FeedLivestreamFeed_MemberPermissionType];\n\nexport namespace FeedLivestreamFeed_MemberPermissionType {\n  export type UNKNOWN = typeof FeedLivestreamFeed_MemberPermissionType.UNKNOWN;\n  export type NONE = typeof FeedLivestreamFeed_MemberPermissionType.NONE;\n  export type EVERYONE = typeof FeedLivestreamFeed_MemberPermissionType.EVERYONE;\n  export type ADMINS = typeof FeedLivestreamFeed_MemberPermissionType.ADMINS;\n  export type PRODUCT_OWNERS = typeof FeedLivestreamFeed_MemberPermissionType.PRODUCT_OWNERS;\n  export type UNRECOGNIZED = typeof FeedLivestreamFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport interface FeedLivestreamFeed_MetadataEntry {\n  key: string;\n  value: string;\n}\n\nexport interface FeedMutedUser {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  userId: string;\n  feedId: string;\n  feedType: string;\n  mutedUntil: number;\n}\n\nexport interface FeedDmsFeedMember {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Feed Member Fields */\n  feedId: string;\n  userId: string;\n  companyId: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  status: FeedDmsFeedMember_DmsFeedMemberStatus;\n  lastViewedAt: number;\n  lastTypedAt: number;\n  notificationPreference: FeedDmsFeedMember_NotificationPreference;\n  pinnedPosition?: number | undefined;\n}\n\nexport const FeedDmsFeedMember_DmsFeedMemberStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  REQUESTED: \"REQUESTED\",\n  ACCEPTED: \"ACCEPTED\",\n  REJECTED: \"REJECTED\",\n  CLOSED: \"CLOSED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsFeedMember_DmsFeedMemberStatus =\n  typeof FeedDmsFeedMember_DmsFeedMemberStatus[keyof typeof FeedDmsFeedMember_DmsFeedMemberStatus];\n\nexport namespace FeedDmsFeedMember_DmsFeedMemberStatus {\n  export type UNKNOWN_STATUS = typeof FeedDmsFeedMember_DmsFeedMemberStatus.UNKNOWN_STATUS;\n  export type REQUESTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.REQUESTED;\n  export type ACCEPTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.ACCEPTED;\n  export type REJECTED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.REJECTED;\n  export type CLOSED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.CLOSED;\n  export type ARCHIVED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.ARCHIVED;\n  export type UNRECOGNIZED = typeof FeedDmsFeedMember_DmsFeedMemberStatus.UNRECOGNIZED;\n}\n\nexport const FeedDmsFeedMember_NotificationPreference = {\n  UNKNOWN_PREFERENCE: \"UNKNOWN_PREFERENCE\",\n  ALL: \"ALL\",\n  MENTIONS: \"MENTIONS\",\n  NONE: \"NONE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedDmsFeedMember_NotificationPreference =\n  typeof FeedDmsFeedMember_NotificationPreference[keyof typeof FeedDmsFeedMember_NotificationPreference];\n\nexport namespace FeedDmsFeedMember_NotificationPreference {\n  export type UNKNOWN_PREFERENCE = typeof FeedDmsFeedMember_NotificationPreference.UNKNOWN_PREFERENCE;\n  export type ALL = typeof FeedDmsFeedMember_NotificationPreference.ALL;\n  export type MENTIONS = typeof FeedDmsFeedMember_NotificationPreference.MENTIONS;\n  export type NONE = typeof FeedDmsFeedMember_NotificationPreference.NONE;\n  export type UNRECOGNIZED = typeof FeedDmsFeedMember_NotificationPreference.UNRECOGNIZED;\n}\n\nexport interface FeedReaction {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  postId: string;\n  postType: string;\n  userId: string;\n  feedId: string;\n  feedType: string;\n  reactionType: FeedReaction_ReactionType;\n  value: string;\n  score: number;\n}\n\nexport const FeedReaction_ReactionType = {\n  UNKNOWN: \"UNKNOWN\",\n  LIKE: \"LIKE\",\n  EMOJI: \"EMOJI\",\n  VIEW: \"VIEW\",\n  VOTE: \"VOTE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedReaction_ReactionType = typeof FeedReaction_ReactionType[keyof typeof FeedReaction_ReactionType];\n\nexport namespace FeedReaction_ReactionType {\n  export type UNKNOWN = typeof FeedReaction_ReactionType.UNKNOWN;\n  export type LIKE = typeof FeedReaction_ReactionType.LIKE;\n  export type EMOJI = typeof FeedReaction_ReactionType.EMOJI;\n  export type VIEW = typeof FeedReaction_ReactionType.VIEW;\n  export type VOTE = typeof FeedReaction_ReactionType.VOTE;\n  export type UNRECOGNIZED = typeof FeedReaction_ReactionType.UNRECOGNIZED;\n}\n\nexport interface FeedUser {\n  /** Entity Base */\n  entityType: string;\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  Deleted: boolean;\n  syncError: FeedSyncError | undefined;\n  isSynced: boolean;\n  /** Custom Fields */\n  name: string;\n  profilePic: string;\n  username: string;\n  profilePic32: string;\n  profilePic64: string;\n  profilePic128: string;\n  userType: UserType;\n  roles: User_PlatformRole[];\n  isPlatformPolice: boolean;\n}\n\nexport interface FeedForumFeed {\n  /** Entity Base */\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  isDeleted: boolean;\n  /** Feed Fields */\n  rootPostCount: number;\n  postCount: number;\n  collectionIdentifier: string;\n  feedType: string;\n  sortKey: string;\n  /** Custom Fields */\n  bannerImage: FileAttachment | undefined;\n  whoCanPost: FeedForumFeed_MemberPermissionType;\n  whoCanComment: FeedForumFeed_MemberPermissionType;\n  layoutType: FeedForumFeed_LayoutType;\n  discordWebhookUrl: string;\n  telegramChannelId: string;\n  emailNotificationPreference: FeedForumFeed_EmailNotificationPreferenceType;\n}\n\nexport const FeedForumFeed_MemberPermissionType = {\n  UNKNOWN_PERMISSION: \"UNKNOWN_PERMISSION\",\n  EVERYONE: \"EVERYONE\",\n  ADMINS: \"ADMINS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_MemberPermissionType =\n  typeof FeedForumFeed_MemberPermissionType[keyof typeof FeedForumFeed_MemberPermissionType];\n\nexport namespace FeedForumFeed_MemberPermissionType {\n  export type UNKNOWN_PERMISSION = typeof FeedForumFeed_MemberPermissionType.UNKNOWN_PERMISSION;\n  export type EVERYONE = typeof FeedForumFeed_MemberPermissionType.EVERYONE;\n  export type ADMINS = typeof FeedForumFeed_MemberPermissionType.ADMINS;\n  export type UNRECOGNIZED = typeof FeedForumFeed_MemberPermissionType.UNRECOGNIZED;\n}\n\nexport const FeedForumFeed_LayoutType = {\n  UNKNOWN_LAYOUT: \"UNKNOWN_LAYOUT\",\n  FEED: \"FEED\",\n  BLOG: \"BLOG\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_LayoutType = typeof FeedForumFeed_LayoutType[keyof typeof FeedForumFeed_LayoutType];\n\nexport namespace FeedForumFeed_LayoutType {\n  export type UNKNOWN_LAYOUT = typeof FeedForumFeed_LayoutType.UNKNOWN_LAYOUT;\n  export type FEED = typeof FeedForumFeed_LayoutType.FEED;\n  export type BLOG = typeof FeedForumFeed_LayoutType.BLOG;\n  export type UNRECOGNIZED = typeof FeedForumFeed_LayoutType.UNRECOGNIZED;\n}\n\nexport const FeedForumFeed_EmailNotificationPreferenceType = {\n  UNKNOWN_PREFERENCE: \"UNKNOWN_PREFERENCE\",\n  ALL_ADMIN_POSTS: \"ALL_ADMIN_POSTS\",\n  ONLY_WEEKLY_SUMMARY: \"ONLY_WEEKLY_SUMMARY\",\n  NONE: \"NONE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumFeed_EmailNotificationPreferenceType =\n  typeof FeedForumFeed_EmailNotificationPreferenceType[keyof typeof FeedForumFeed_EmailNotificationPreferenceType];\n\nexport namespace FeedForumFeed_EmailNotificationPreferenceType {\n  export type UNKNOWN_PREFERENCE = typeof FeedForumFeed_EmailNotificationPreferenceType.UNKNOWN_PREFERENCE;\n  export type ALL_ADMIN_POSTS = typeof FeedForumFeed_EmailNotificationPreferenceType.ALL_ADMIN_POSTS;\n  export type ONLY_WEEKLY_SUMMARY = typeof FeedForumFeed_EmailNotificationPreferenceType.ONLY_WEEKLY_SUMMARY;\n  export type NONE = typeof FeedForumFeed_EmailNotificationPreferenceType.NONE;\n  export type UNRECOGNIZED = typeof FeedForumFeed_EmailNotificationPreferenceType.UNRECOGNIZED;\n}\n\nexport interface MuxAsset {\n  assetId?: string | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  duration?: string | undefined;\n  finishedUploadingAt?: string | undefined;\n  id: string;\n  playbackId?: string | undefined;\n  resourceId?: string | undefined;\n  resourceType?: string | undefined;\n  signedPlaybackId?: string | undefined;\n  status: MuxAsset_MuxAssetStatus;\n  signedVideoPlaybackToken?: string | undefined;\n  signedStoryboardPlaybackToken?: string | undefined;\n  signedThumbnailPlaybackToken?: string | undefined;\n}\n\nexport const MuxAsset_MuxAssetStatus = {\n  UNKNOWN: \"UNKNOWN\",\n  UPLOADING: \"UPLOADING\",\n  CREATED: \"CREATED\",\n  READY: \"READY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type MuxAsset_MuxAssetStatus = typeof MuxAsset_MuxAssetStatus[keyof typeof MuxAsset_MuxAssetStatus];\n\nexport namespace MuxAsset_MuxAssetStatus {\n  export type UNKNOWN = typeof MuxAsset_MuxAssetStatus.UNKNOWN;\n  export type UPLOADING = typeof MuxAsset_MuxAssetStatus.UPLOADING;\n  export type CREATED = typeof MuxAsset_MuxAssetStatus.CREATED;\n  export type READY = typeof MuxAsset_MuxAssetStatus.READY;\n  export type UNRECOGNIZED = typeof MuxAsset_MuxAssetStatus.UNRECOGNIZED;\n}\n\nexport interface Poll {\n  options: Poll_PollOption[];\n}\n\nexport interface Poll_PollOption {\n  id: string;\n  text: string;\n}\n\nexport interface PostReactionCount {\n  reactionType: PostReactionCount_ReactionType;\n  value: string;\n  totalScore: number;\n  userCount: number;\n}\n\nexport const PostReactionCount_ReactionType = {\n  UNKNOWN: \"UNKNOWN\",\n  LIKE: \"LIKE\",\n  EMOJI: \"EMOJI\",\n  VIEW: \"VIEW\",\n  VOTE: \"VOTE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type PostReactionCount_ReactionType =\n  typeof PostReactionCount_ReactionType[keyof typeof PostReactionCount_ReactionType];\n\nexport namespace PostReactionCount_ReactionType {\n  export type UNKNOWN = typeof PostReactionCount_ReactionType.UNKNOWN;\n  export type LIKE = typeof PostReactionCount_ReactionType.LIKE;\n  export type EMOJI = typeof PostReactionCount_ReactionType.EMOJI;\n  export type VIEW = typeof PostReactionCount_ReactionType.VIEW;\n  export type VOTE = typeof PostReactionCount_ReactionType.VOTE;\n  export type UNRECOGNIZED = typeof PostReactionCount_ReactionType.UNRECOGNIZED;\n}\n\nexport interface FeedPostReactionCountUpdate {\n  postId: string;\n  postType: string;\n  feedId: string;\n  feedType: string;\n  /**\n   * Contains a bitmask of the fields that were updated.\n   * Only apply the fields that were updated.\n   * Eg if this contains the number 3 (0b00000011), then the view count and post reaction counts were updated.\n   * If this contains the number 1 (0b00000001), then only the view count was updated.\n   * If this contains the number 2 (0b00000010), then only the post reaction counts were updated.\n   * This is needed because \"optional repeated\" fields are not supported in the protobuf spec.\n   */\n  updatedFieldsBitmask: number;\n  /** Position zero in the bitmask (0b00000001) is the view count */\n  viewCount?:\n    | number\n    | undefined;\n  /** Position one in the bitmask (0b00000010) is the post reaction counts */\n  postReactionCounts: PostReactionCount[];\n  /**\n   * Position two in the bitmask (0b00000100) is the single post reaction count\n   * This may be sent by the backend to indicate that a single post reaction count was updated. The frontend should keep all other post reaction counts the same.\n   * Only the score and user_count fields may be updated by the backend, the rest indicate which reaction was updated\n   */\n  singleReactionCountUpdate?:\n    | PostReactionCount\n    | undefined;\n  /** Position three in the bitmask (0b00001000) is the comment count */\n  commentCount?: number | undefined;\n}\n\nexport interface FeedForumPost {\n  /** Entity Base */\n  entityId: string;\n  createdAt: number;\n  updatedAt: number;\n  isDeleted: boolean;\n  sortKey: string;\n  /** Custom Fields */\n  feedId: string;\n  userId: string;\n  parentId?: string | undefined;\n  isEdited: boolean;\n  title?: string | undefined;\n  content: string;\n  richContent: string;\n  childrenCount: number;\n  /**\n   * Deprecated in favor of post_reaction_counts\n   *\n   * @deprecated\n   */\n  reactionCounts: FeedForumPost_ReactionCounts | undefined;\n  attachments: FileAttachment[];\n  gifs: FeedForumPost_GiphyGif[];\n  links: FeedForumPost_LinkEmbed[];\n  isPinned: boolean;\n  mentionedUserIds: string[];\n  lineItem?: FeedForumPost_LineItem | undefined;\n  muxAssets: MuxAsset[];\n  poll?: Poll | undefined;\n  isPosterAdmin: boolean;\n  postReactionCounts: PostReactionCount[];\n  forumPostType: FeedForumPost_ForumPostType;\n  embed?: PostEmbed | undefined;\n  user: User | undefined;\n  commentCount: number;\n  viewCount: number;\n  experienceId?: string | undefined;\n  markdownContent: string;\n}\n\nexport const FeedForumPost_ForumPostType = {\n  UNKNOWN_TYPE: \"UNKNOWN_TYPE\",\n  REGULAR: \"REGULAR\",\n  AUTOMATED: \"AUTOMATED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type FeedForumPost_ForumPostType = typeof FeedForumPost_ForumPostType[keyof typeof FeedForumPost_ForumPostType];\n\nexport namespace FeedForumPost_ForumPostType {\n  export type UNKNOWN_TYPE = typeof FeedForumPost_ForumPostType.UNKNOWN_TYPE;\n  export type REGULAR = typeof FeedForumPost_ForumPostType.REGULAR;\n  export type AUTOMATED = typeof FeedForumPost_ForumPostType.AUTOMATED;\n  export type UNRECOGNIZED = typeof FeedForumPost_ForumPostType.UNRECOGNIZED;\n}\n\nexport interface FeedForumPost_GiphyGif {\n  title: string;\n  url: string;\n  originalUrl: string;\n  previewUrl: string;\n  width: number;\n  height: number;\n  slug: string;\n}\n\nexport interface FeedForumPost_ReactionCount {\n  score: number;\n  count: number;\n}\n\nexport interface FeedForumPost_ReactionCounts {\n  counts: { [key: string]: FeedForumPost_ReactionCount };\n}\n\nexport interface FeedForumPost_ReactionCounts_CountsEntry {\n  key: string;\n  value: FeedForumPost_ReactionCount | undefined;\n}\n\nexport interface FeedForumPost_LinkEmbed {\n  url: string;\n  title: string;\n  description: string;\n  image: string;\n  favicon: string;\n  processing: boolean;\n}\n\nexport interface FeedForumPost_LineItem {\n  id: string;\n  title: string;\n  amount: Money | undefined;\n  redirectUrl: string;\n}\n\nexport interface PostEmbed {\n  richEmbeds?: RichEmbedContainer | undefined;\n}\n\nexport interface RichEmbedContainer {\n  embeds: RichEmbed[];\n}\n\n/** close enough to mirror a discord style rich embed. https://discord.com/developers/docs/resources/message#embed-object */\nexport interface RichEmbed {\n  color?: number | undefined;\n  title?: string | undefined;\n  url?: string | undefined;\n  description?: string | undefined;\n  timestamp?: string | undefined;\n  thumbnail?: FileAttachment | undefined;\n  image?: FileAttachment | undefined;\n  footer?: RichEmbed_Footer | undefined;\n  fields: RichEmbed_Field[];\n}\n\nexport interface RichEmbed_Field {\n  name: string;\n  value: string;\n  inline: boolean;\n}\n\nexport interface RichEmbed_Footer {\n  text: string;\n  icon?: FileAttachment | undefined;\n}\n\nexport interface FeedDmsUnreadBadgeUpdate {\n  count: number;\n  feedId: string;\n  lastViewedAt: string | undefined;\n}\n\nexport interface SupportTicketBadgeUpdate {\n  openCount: number;\n  botId: string;\n}\n\nexport interface FeedService {\n  /** @deprecated */\n  SendFeedEntityToUser(request: SendFeedEntityToUserRequest): Promise<SendFeedEntityToUserResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/notifications.proto\n\n/* eslint-disable */\nimport type { Experience } from \"../experience/experience\";\nimport type { Bot, NotificationTopic } from \"./common\";\nimport type { User } from \"./users\";\n\nexport interface Notification {\n  id: string;\n  subject: string;\n  content: string;\n  primaryImage: string;\n  secondaryImage: string;\n  restPath: string;\n  createdAt: string | undefined;\n  bot?: Bot | undefined;\n  experience?: Experience | undefined;\n  notificationTopic: NotificationTopic | undefined;\n  link?: string | undefined;\n  iframeLink?: string | undefined;\n  senderUser?: User | undefined;\n}\n\nexport interface GoFetchNotifications {\n  entityId: string;\n  entityType: GoFetchNotifications_NotifyingEntityType;\n  /** If true, the client should refetch the badge for this entity. */\n  mayIncrementBadgeCount: boolean;\n  /** A unique identifier that can be used to fetch the associated notification from the backend. */\n  notificationId: string;\n}\n\nexport const GoFetchNotifications_NotifyingEntityType = {\n  UNKNOWN: \"UNKNOWN\",\n  GENERIC: \"GENERIC\",\n  EXPERIENCE: \"EXPERIENCE\",\n  COMPANY: \"COMPANY\",\n  COMPANY_TEAM: \"COMPANY_TEAM\",\n  ACCESS_PASS: \"ACCESS_PASS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type GoFetchNotifications_NotifyingEntityType =\n  typeof GoFetchNotifications_NotifyingEntityType[keyof typeof GoFetchNotifications_NotifyingEntityType];\n\nexport namespace GoFetchNotifications_NotifyingEntityType {\n  export type UNKNOWN = typeof GoFetchNotifications_NotifyingEntityType.UNKNOWN;\n  export type GENERIC = typeof GoFetchNotifications_NotifyingEntityType.GENERIC;\n  export type EXPERIENCE = typeof GoFetchNotifications_NotifyingEntityType.EXPERIENCE;\n  export type COMPANY = typeof GoFetchNotifications_NotifyingEntityType.COMPANY;\n  export type COMPANY_TEAM = typeof GoFetchNotifications_NotifyingEntityType.COMPANY_TEAM;\n  export type ACCESS_PASS = typeof GoFetchNotifications_NotifyingEntityType.ACCESS_PASS;\n  export type UNRECOGNIZED = typeof GoFetchNotifications_NotifyingEntityType.UNRECOGNIZED;\n}\n\nexport interface SendNotificationToUserRequest {\n  userId: string;\n  notification: Notification | undefined;\n  userIds: string[];\n}\n\nexport interface SendNotificationToUserResponse {\n  sent: boolean;\n}\n\nexport interface NotificationService {\n  SendNotificationToUser(request: SendNotificationToUserRequest): Promise<SendNotificationToUserResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/product_surface.proto\n\n/* eslint-disable */\nimport type { AccessType, CfLocation } from \"./common\";\n\nexport interface ProductSurface {\n  surfaceType: ProductSurface_SurfaceType;\n  botId?: string | undefined;\n  accessPassId?: string | undefined;\n  appId?: string | undefined;\n  experienceId?: string | undefined;\n  accessType?: AccessType | undefined;\n  planId?: string | undefined;\n  profileUserId?: string | undefined;\n  viewContext?: ProductSurface_ViewContext | undefined;\n  discoverSection?: ProductSurface_DiscoverSection | undefined;\n  universalPostId?: string | undefined;\n  feedTab?: ProductSurface_FeedTab | undefined;\n}\n\nexport const ProductSurface_ViewContext = {\n  VIEW_CTX_UNKNOWN: \"VIEW_CTX_UNKNOWN\",\n  /** VIEW_CTX_WHOP - / The user is viewing from inside a whop view. */\n  VIEW_CTX_WHOP: \"VIEW_CTX_WHOP\",\n  /** VIEW_CTX_HOME_FEED - / The user is viewing from the home feed */\n  VIEW_CTX_HOME_FEED: \"VIEW_CTX_HOME_FEED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_ViewContext = typeof ProductSurface_ViewContext[keyof typeof ProductSurface_ViewContext];\n\nexport namespace ProductSurface_ViewContext {\n  export type VIEW_CTX_UNKNOWN = typeof ProductSurface_ViewContext.VIEW_CTX_UNKNOWN;\n  export type VIEW_CTX_WHOP = typeof ProductSurface_ViewContext.VIEW_CTX_WHOP;\n  export type VIEW_CTX_HOME_FEED = typeof ProductSurface_ViewContext.VIEW_CTX_HOME_FEED;\n  export type UNRECOGNIZED = typeof ProductSurface_ViewContext.UNRECOGNIZED;\n}\n\nexport const ProductSurface_DiscoverSection = {\n  DISCOVER_UNKNOWN: \"DISCOVER_UNKNOWN\",\n  DISCOVER_LEADERBOARDS: \"DISCOVER_LEADERBOARDS\",\n  DISCOVER_FOR_YOU: \"DISCOVER_FOR_YOU\",\n  DISCOVER_EXPLORE: \"DISCOVER_EXPLORE\",\n  DISCOVER_SEARCH: \"DISCOVER_SEARCH\",\n  DISCOVER_CATEGORIES: \"DISCOVER_CATEGORIES\",\n  DISCOVER_COLLECTIONS: \"DISCOVER_COLLECTIONS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_DiscoverSection =\n  typeof ProductSurface_DiscoverSection[keyof typeof ProductSurface_DiscoverSection];\n\nexport namespace ProductSurface_DiscoverSection {\n  export type DISCOVER_UNKNOWN = typeof ProductSurface_DiscoverSection.DISCOVER_UNKNOWN;\n  export type DISCOVER_LEADERBOARDS = typeof ProductSurface_DiscoverSection.DISCOVER_LEADERBOARDS;\n  export type DISCOVER_FOR_YOU = typeof ProductSurface_DiscoverSection.DISCOVER_FOR_YOU;\n  export type DISCOVER_EXPLORE = typeof ProductSurface_DiscoverSection.DISCOVER_EXPLORE;\n  export type DISCOVER_SEARCH = typeof ProductSurface_DiscoverSection.DISCOVER_SEARCH;\n  export type DISCOVER_CATEGORIES = typeof ProductSurface_DiscoverSection.DISCOVER_CATEGORIES;\n  export type DISCOVER_COLLECTIONS = typeof ProductSurface_DiscoverSection.DISCOVER_COLLECTIONS;\n  export type UNRECOGNIZED = typeof ProductSurface_DiscoverSection.UNRECOGNIZED;\n}\n\nexport const ProductSurface_FeedTab = {\n  FEED_TAB_UNKNOWN: \"FEED_TAB_UNKNOWN\",\n  FEED_TAB_HOME: \"FEED_TAB_HOME\",\n  FEED_TAB_EARN: \"FEED_TAB_EARN\",\n  FEED_TAB_CHAT: \"FEED_TAB_CHAT\",\n  FEED_TAB_LEARN: \"FEED_TAB_LEARN\",\n  FEED_TAB_CALENDAR: \"FEED_TAB_CALENDAR\",\n  FEED_TAB_PLAY: \"FEED_TAB_PLAY\",\n  FEED_TAB_INTEGRATIONS: \"FEED_TAB_INTEGRATIONS\",\n  FEED_TAB_TOOLS: \"FEED_TAB_TOOLS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_FeedTab = typeof ProductSurface_FeedTab[keyof typeof ProductSurface_FeedTab];\n\nexport namespace ProductSurface_FeedTab {\n  export type FEED_TAB_UNKNOWN = typeof ProductSurface_FeedTab.FEED_TAB_UNKNOWN;\n  export type FEED_TAB_HOME = typeof ProductSurface_FeedTab.FEED_TAB_HOME;\n  export type FEED_TAB_EARN = typeof ProductSurface_FeedTab.FEED_TAB_EARN;\n  export type FEED_TAB_CHAT = typeof ProductSurface_FeedTab.FEED_TAB_CHAT;\n  export type FEED_TAB_LEARN = typeof ProductSurface_FeedTab.FEED_TAB_LEARN;\n  export type FEED_TAB_CALENDAR = typeof ProductSurface_FeedTab.FEED_TAB_CALENDAR;\n  export type FEED_TAB_PLAY = typeof ProductSurface_FeedTab.FEED_TAB_PLAY;\n  export type FEED_TAB_INTEGRATIONS = typeof ProductSurface_FeedTab.FEED_TAB_INTEGRATIONS;\n  export type FEED_TAB_TOOLS = typeof ProductSurface_FeedTab.FEED_TAB_TOOLS;\n  export type UNRECOGNIZED = typeof ProductSurface_FeedTab.UNRECOGNIZED;\n}\n\nexport const ProductSurface_SurfaceType = {\n  UNKNOWN: \"UNKNOWN\",\n  EXPERIENCE: \"EXPERIENCE\",\n  WHOP: \"WHOP\",\n  CREATOR_DASHBOARD: \"CREATOR_DASHBOARD\",\n  AFFILIATE_DASHBOARD: \"AFFILIATE_DASHBOARD\",\n  DISCOVER: \"DISCOVER\",\n  HOME_FEED: \"HOME_FEED\",\n  MESSAGES: \"MESSAGES\",\n  PROFILE: \"PROFILE\",\n  NOTIFICATIONS: \"NOTIFICATIONS\",\n  USER_SETTINGS: \"USER_SETTINGS\",\n  CHECKOUT: \"CHECKOUT\",\n  AUTH: \"AUTH\",\n  OTHER: \"OTHER\",\n  USER_ONBOARDING: \"USER_ONBOARDING\",\n  LEADERBOARD: \"LEADERBOARD\",\n  SUPPORT_CHATS: \"SUPPORT_CHATS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ProductSurface_SurfaceType = typeof ProductSurface_SurfaceType[keyof typeof ProductSurface_SurfaceType];\n\nexport namespace ProductSurface_SurfaceType {\n  export type UNKNOWN = typeof ProductSurface_SurfaceType.UNKNOWN;\n  export type EXPERIENCE = typeof ProductSurface_SurfaceType.EXPERIENCE;\n  export type WHOP = typeof ProductSurface_SurfaceType.WHOP;\n  export type CREATOR_DASHBOARD = typeof ProductSurface_SurfaceType.CREATOR_DASHBOARD;\n  export type AFFILIATE_DASHBOARD = typeof ProductSurface_SurfaceType.AFFILIATE_DASHBOARD;\n  export type DISCOVER = typeof ProductSurface_SurfaceType.DISCOVER;\n  export type HOME_FEED = typeof ProductSurface_SurfaceType.HOME_FEED;\n  export type MESSAGES = typeof ProductSurface_SurfaceType.MESSAGES;\n  export type PROFILE = typeof ProductSurface_SurfaceType.PROFILE;\n  export type NOTIFICATIONS = typeof ProductSurface_SurfaceType.NOTIFICATIONS;\n  export type USER_SETTINGS = typeof ProductSurface_SurfaceType.USER_SETTINGS;\n  export type CHECKOUT = typeof ProductSurface_SurfaceType.CHECKOUT;\n  export type AUTH = typeof ProductSurface_SurfaceType.AUTH;\n  export type OTHER = typeof ProductSurface_SurfaceType.OTHER;\n  export type USER_ONBOARDING = typeof ProductSurface_SurfaceType.USER_ONBOARDING;\n  export type LEADERBOARD = typeof ProductSurface_SurfaceType.LEADERBOARD;\n  export type SUPPORT_CHATS = typeof ProductSurface_SurfaceType.SUPPORT_CHATS;\n  export type UNRECOGNIZED = typeof ProductSurface_SurfaceType.UNRECOGNIZED;\n}\n\nexport interface ProductSurfaceUpdate {\n  productSurface: ProductSurface | undefined;\n  isAppForegrounded: boolean;\n  /** The current url or screen that the user is on - used for debugging \"other\" screen views. */\n  currentUrl?: string | undefined;\n}\n\nexport interface ActiveUserBucket {\n  userBucketType: ActiveUserBucket_UserBucketType;\n  id?: string | undefined;\n}\n\nexport const ActiveUserBucket_UserBucketType = {\n  UNKNOWN: \"UNKNOWN\",\n  EXPERIENCE: \"EXPERIENCE\",\n  WHOP: \"WHOP\",\n  STORE_PAGE: \"STORE_PAGE\",\n  MESSAGES: \"MESSAGES\",\n  HOME_FEED: \"HOME_FEED\",\n  DISCOVER: \"DISCOVER\",\n  BOT: \"BOT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ActiveUserBucket_UserBucketType =\n  typeof ActiveUserBucket_UserBucketType[keyof typeof ActiveUserBucket_UserBucketType];\n\nexport namespace ActiveUserBucket_UserBucketType {\n  export type UNKNOWN = typeof ActiveUserBucket_UserBucketType.UNKNOWN;\n  export type EXPERIENCE = typeof ActiveUserBucket_UserBucketType.EXPERIENCE;\n  export type WHOP = typeof ActiveUserBucket_UserBucketType.WHOP;\n  export type STORE_PAGE = typeof ActiveUserBucket_UserBucketType.STORE_PAGE;\n  export type MESSAGES = typeof ActiveUserBucket_UserBucketType.MESSAGES;\n  export type HOME_FEED = typeof ActiveUserBucket_UserBucketType.HOME_FEED;\n  export type DISCOVER = typeof ActiveUserBucket_UserBucketType.DISCOVER;\n  export type BOT = typeof ActiveUserBucket_UserBucketType.BOT;\n  export type UNRECOGNIZED = typeof ActiveUserBucket_UserBucketType.UNRECOGNIZED;\n}\n\nexport interface ActiveUsersInBucket {\n  activeUserBucket:\n    | ActiveUserBucket\n    | undefined;\n  /** / The number of users in the bucket. Always set to the total number of users in the bucket. */\n  userCount: number;\n  /** / The list of user ids that joined the bucket. Sent only on realtime pushes */\n  joinedUsers: ActiveUsersInBucket_UserData[];\n  /** / The list of user ids that left the bucket. Sent only on realtime pushes */\n  leftUsers: ActiveUsersInBucket_UserData[];\n  /** / The list of user ids in the bucket. Only populated if requested by the backend. */\n  users: ActiveUsersInBucket_UserData[];\n  /** / The offset used when making the request */\n  offset?:\n    | number\n    | undefined;\n  /** / The limit used when making the request */\n  limit?: number | undefined;\n}\n\nexport interface ActiveUsersInBucket_UserData {\n  userId: string;\n  cfLocation?: CfLocation | undefined;\n}\n\nexport interface GetUserLastSeenAtBatchRequest {\n  userIds: string[];\n}\n\nexport interface GetUserLastSeenAtBatchResponse {\n  usersLastSeenAt: { [key: string]: GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse };\n}\n\nexport interface GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse {\n  lastSeenAt: string | undefined;\n}\n\nexport interface GetUserLastSeenAtBatchResponse_UsersLastSeenAtEntry {\n  key: string;\n  value: GetUserLastSeenAtBatchResponse_UserLastSeenAtResponse | undefined;\n}\n\nexport interface GetActiveUsersInBucketBatchRequest {\n  requests: GetActiveUsersInBucketBatchRequest_Request[];\n}\n\nexport interface GetActiveUsersInBucketBatchRequest_Request {\n  activeUserBucket:\n    | ActiveUserBucket\n    | undefined;\n  /** / Whether to include the user ids in the response. */\n  includeUserIds: boolean;\n  /** / The maximum number of user ids to return. MAX=5000. Ordering = lexicographic by user_id */\n  limit: number;\n  /** / The offset used when making the request. */\n  offset: number;\n}\n\nexport interface GetActiveUsersInBucketBatchResponse {\n  activeUsersInBuckets: ActiveUsersInBucket[];\n}\n\nexport interface GetUserProductSurfacesBatchRequest {\n  userIds: string[];\n}\n\nexport interface GetUserProductSurfacesBatchResponse {\n  /**\n   * / This returns a single product surface per user for simplicity.\n   * / If they are currently active on multiple devices, this may change rapidly.\n   * / If they are active on multiple devices, but only a single device is foregrounded,\n   * / that device's product surface will be prioritized.\n   */\n  userProductSurfaces: { [key: string]: GetUserProductSurfacesBatchResponse_ProductSurfaceState };\n}\n\nexport interface GetUserProductSurfacesBatchResponse_ProductSurfaceState {\n  productSurface: ProductSurface | undefined;\n  isAppForegrounded: boolean;\n  lastUpdatedAt: string | undefined;\n  firstSeenAt: string | undefined;\n}\n\nexport interface GetUserProductSurfacesBatchResponse_UserProductSurfacesEntry {\n  key: string;\n  value: GetUserProductSurfacesBatchResponse_ProductSurfaceState | undefined;\n}\n\nexport interface GetTopExperiencesByActiveUsersRequest {\n  limit?: number | undefined;\n  appFilter?: GetTopExperiencesByActiveUsersRequest_AppFilter | undefined;\n}\n\nexport const GetTopExperiencesByActiveUsersRequest_AppFilter = {\n  ALL: \"ALL\",\n  LIVESTREAMS: \"LIVESTREAMS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type GetTopExperiencesByActiveUsersRequest_AppFilter =\n  typeof GetTopExperiencesByActiveUsersRequest_AppFilter[keyof typeof GetTopExperiencesByActiveUsersRequest_AppFilter];\n\nexport namespace GetTopExperiencesByActiveUsersRequest_AppFilter {\n  export type ALL = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.ALL;\n  export type LIVESTREAMS = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.LIVESTREAMS;\n  export type UNRECOGNIZED = typeof GetTopExperiencesByActiveUsersRequest_AppFilter.UNRECOGNIZED;\n}\n\nexport interface GetTopExperiencesByActiveUsersResponse {\n  experienceItems: GetTopExperiencesByActiveUsersResponse_ExperienceItem[];\n}\n\nexport interface GetTopExperiencesByActiveUsersResponse_ExperienceItem {\n  experienceId: string;\n  activeUserCount: number;\n}\n\nexport interface UserPresenceService {\n  GetUserLastSeenAtBatch(request: GetUserLastSeenAtBatchRequest): Promise<GetUserLastSeenAtBatchResponse>;\n  /** / Fetch a list of active users in a bucket, and their count. */\n  GetActiveUsersInBucketBatch(\n    request: GetActiveUsersInBucketBatchRequest,\n  ): Promise<GetActiveUsersInBucketBatchResponse>;\n  /** / Fetch where and when a user was last active. */\n  GetUserProductSurfacesBatch(\n    request: GetUserProductSurfacesBatchRequest,\n  ): Promise<GetUserProductSurfacesBatchResponse>;\n  /** Fetch the experience ids with the most amount of active users. */\n  GetTopExperiencesByActiveUsers(\n    request: GetTopExperiencesByActiveUsersRequest,\n  ): Promise<GetTopExperiencesByActiveUsersResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: common/websockets.proto\n\n/* eslint-disable */\nimport type { ContentRewardsMessage } from \"../content_rewards_app/content_rewards_app\";\nimport type { ExecuteClientCommand, ExecuteClientCommandResponse } from \"../diagnostics/client_commands\";\nimport type { Experience, UserExperience } from \"../experience/experience\";\nimport type { PreviewContent } from \"../experience/preview_content\";\nimport type { ClientToServerMessage, ServerToClientMessage } from \"../games/messages\";\nimport type { FileAttachment } from \"./attachment\";\nimport type {\n  AccessPass,\n  AccessPassExperience,\n  AccessPassExperienceSection,\n  AccessPassMember,\n  App,\n  AppBuild,\n  Bot,\n  BotExperienceSection,\n  BroadcastRequest,\n  BroadcastResponse,\n  BusinessActivityEvent,\n  Channel,\n  ChannelSubscriptionState,\n  ConnectedId,\n  DiscoveryAccessPassLiveData,\n  Entry,\n  GoFetchExperienceList,\n  GoFetchUserExperiences,\n  MarketplaceStats,\n  Member,\n  Platform,\n  Purchase,\n  Reconnect,\n  ReloadClient,\n  UserReferralMarketRates,\n} from \"./common\";\nimport type { FeedEntity, SupportTicketBadgeUpdate } from \"./feed\";\nimport type { GoFetchNotifications, Notification } from \"./notifications\";\nimport type { ActiveUsersInBucket, ProductSurfaceUpdate } from \"./product_surface\";\nimport type { User, UserPresence, UserStat } from \"./users\";\n\nexport const ResourceType = {\n  RESOURCE_UNKNOWN: \"RESOURCE_UNKNOWN\",\n  RESOURCE_BOT: \"RESOURCE_BOT\",\n  RESOURCE_ACCESS_PASS: \"RESOURCE_ACCESS_PASS\",\n  RESOURCE_EXPERIENCE: \"RESOURCE_EXPERIENCE\",\n  RESOURCE_USER: \"RESOURCE_USER\",\n  RESOURCE_EXPERIENCE_PREVIEW_CONTENT: \"RESOURCE_EXPERIENCE_PREVIEW_CONTENT\",\n  RESOURCE_APP: \"RESOURCE_APP\",\n  RESOURCE_FORUM_FEED: \"RESOURCE_FORUM_FEED\",\n  RESOURCE_UNIVERSAL_POST: \"RESOURCE_UNIVERSAL_POST\",\n  RESOURCE_CHAT_FEED: \"RESOURCE_CHAT_FEED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ResourceType = typeof ResourceType[keyof typeof ResourceType];\n\nexport namespace ResourceType {\n  export type RESOURCE_UNKNOWN = typeof ResourceType.RESOURCE_UNKNOWN;\n  export type RESOURCE_BOT = typeof ResourceType.RESOURCE_BOT;\n  export type RESOURCE_ACCESS_PASS = typeof ResourceType.RESOURCE_ACCESS_PASS;\n  export type RESOURCE_EXPERIENCE = typeof ResourceType.RESOURCE_EXPERIENCE;\n  export type RESOURCE_USER = typeof ResourceType.RESOURCE_USER;\n  export type RESOURCE_EXPERIENCE_PREVIEW_CONTENT = typeof ResourceType.RESOURCE_EXPERIENCE_PREVIEW_CONTENT;\n  export type RESOURCE_APP = typeof ResourceType.RESOURCE_APP;\n  export type RESOURCE_FORUM_FEED = typeof ResourceType.RESOURCE_FORUM_FEED;\n  export type RESOURCE_UNIVERSAL_POST = typeof ResourceType.RESOURCE_UNIVERSAL_POST;\n  export type RESOURCE_CHAT_FEED = typeof ResourceType.RESOURCE_CHAT_FEED;\n  export type UNRECOGNIZED = typeof ResourceType.UNRECOGNIZED;\n}\n\nexport interface WebsocketMessageServerToClient {\n  newNotification?: Notification | undefined;\n  reconnect?: Reconnect | undefined;\n  reloadClient?: ReloadClient | undefined;\n  feedEntity?: FeedEntity | undefined;\n  heartbeatResponse?: HeartbeatResponse | undefined;\n  goFetchNotifications?: GoFetchNotifications | undefined;\n  marketplaceStats?: MarketplaceStats | undefined;\n  purchase?: Purchase | undefined;\n  broadcastResponse?: BroadcastResponse | undefined;\n  channelSubscriptionState?: ChannelSubscriptionState | undefined;\n  discoveryAccessPassLiveData?: DiscoveryAccessPassLiveData | undefined;\n  activeUsersInBucket?: ActiveUsersInBucket | undefined;\n  gameMessage?: ServerToClientMessage | undefined;\n  contentRewardsMessage?: ContentRewardsMessage | undefined;\n  experience?: Experience | undefined;\n  accessPassMember?: AccessPassMember | undefined;\n  accessPassExperience?: AccessPassExperience | undefined;\n  accessPass?: AccessPass | undefined;\n  bot?: Bot | undefined;\n  experiencePreviewContent?: PreviewContent | undefined;\n  user?: User | undefined;\n  app?: App | undefined;\n  fileAttachment?: FileAttachment | undefined;\n  userStat?: UserStat | undefined;\n  userExperience?: UserExperience | undefined;\n  entry?: Entry | undefined;\n  userReferralMarketRates?: UserReferralMarketRates | undefined;\n  appMessage?: AppMessage | undefined;\n  goFetchExperienceList?: GoFetchExperienceList | undefined;\n  appBuild?: AppBuild | undefined;\n  accessPassExperienceSection?: AccessPassExperienceSection | undefined;\n  goFetchUserExperiences?: GoFetchUserExperiences | undefined;\n  member?: Member | undefined;\n  botExperienceSection?: BotExperienceSection | undefined;\n  userPresence?: UserPresence | undefined;\n  businessActivityEvent?: BusinessActivityEvent | undefined;\n  executeClientCommand?: ExecuteClientCommand | undefined;\n  supportTicketBadgeUpdate?:\n    | SupportTicketBadgeUpdate\n    | undefined;\n  /** [TIMING] When was the message initially created. Eg: timestamp from the rails application. */\n  createdAt:\n    | string\n    | undefined;\n  /** [TIMING] When was the message received by the websocket server. (in the GRPC handler) */\n  processedAt:\n    | string\n    | undefined;\n  /** [TIMING] When was the message sent to the client by the websocket connection handler. */\n  deliveredAt: string | undefined;\n}\n\nexport interface WebsocketMessageClientToServer {\n  heartbeat?: Heartbeat | undefined;\n  subscribeToChannel?: SubscribeToChannel | undefined;\n  unsubscribeFromChannel?: UnsubscribeFromChannel | undefined;\n  broadcastRequest?: BroadcastRequest | undefined;\n  productSurfaceUpdate?: ProductSurfaceUpdate | undefined;\n  gameCommand?: ClientToServerMessage | undefined;\n  subscribeToChannelBatch?: SubscribeToChannelBatch | undefined;\n  requestItemsBatchRequest?: RequestItemsBatchRequest | undefined;\n  broadcastAppMessage?: BroadcastAppMessage | undefined;\n  executeClientCommandResponse?: ExecuteClientCommandResponse | undefined;\n}\n\nexport interface Heartbeat {\n  userish: ConnectedId | undefined;\n  channels: Channel[];\n  platform: Platform;\n  /** Allow the client to send a semantic version number (useful on ios / android) */\n  clientSemver: string;\n  /** On web, the client can send the age of the client code (aka how long ago they loaded the page) */\n  clientAge: string | undefined;\n  productSurfaceUpdate?: ProductSurfaceUpdate | undefined;\n}\n\nexport interface HeartbeatResponse {\n  /** Allows clients to find out how delayed they are WRT to true server time. Can detect old devices that do not have synced clocks. */\n  serverTime: string | undefined;\n}\n\nexport interface SubscribeToChannel {\n  userish: ConnectedId | undefined;\n  channel: Channel | undefined;\n  authToken?: string | undefined;\n}\n\nexport interface SubscribeToChannelBatch {\n  channels: SubscribeToChannel[];\n}\n\nexport interface UnsubscribeFromChannel {\n  userish: ConnectedId | undefined;\n  channel: Channel | undefined;\n}\n\n/**\n * This is a message that is sent by a 3rd party developer\n * that includes an arbitrary body. Used for app developer things.\n */\nexport interface AppMessage {\n  /** If this packet was sent from another user's browser, this is the user id it came from. */\n  fromUserId?:\n    | string\n    | undefined;\n  /** this is true if the event is sent with your server side secret api key. */\n  isTrusted: boolean;\n  /** an arbitrary payload of data. */\n  json: string;\n}\n\n/** To send a message from an user as an app developer, use this message. */\nexport interface BroadcastAppMessage {\n  /** String encoded JSON object that you want to send from the client. */\n  json: string;\n  /** Target channel */\n  channel: Channel | undefined;\n}\n\nexport interface SendToTargetRequest {\n  target: string;\n  /** @deprecated */\n  message:\n    | WebsocketMessageServerToClient\n    | undefined;\n  /** Pass the message as a WebsocketMessageServerToClient proto serialized to bytes. */\n  messageBytes: Uint8Array;\n}\n\nexport interface SendToTargetResponse {\n  wasTargetConnected: boolean;\n}\n\nexport interface SendToTargetsRequest {\n  targets: string[];\n  /** @deprecated */\n  message:\n    | WebsocketMessageServerToClient\n    | undefined;\n  /** Pass the message as a WebsocketMessageServerToClient proto serialized to bytes. */\n  messageBytes: Uint8Array;\n}\n\nexport interface SendToTargetsResponse {\n  wasTargetConnectedMap: { [key: string]: boolean };\n}\n\nexport interface SendToTargetsResponse_WasTargetConnectedMapEntry {\n  key: string;\n  value: boolean;\n}\n\nexport interface BatchSendToTargetRequest {\n  requests: SendToTargetRequest[];\n}\n\nexport interface BatchSendToTargetResponse {\n}\n\nexport interface TerminateTargetsRequest {\n  targets: string[];\n}\n\nexport interface TerminateTargetsResponse {\n}\n\n/**\n * A command enum that the websocket server receives via GRPC\n * and internally fans out to each horizontal shard\n */\nexport interface WebsocketServerCommandRequest {\n  clearCache?: ClearCacheRequest | undefined;\n}\n\nexport interface WebsocketServerCommandResponse {\n  success: boolean;\n  receivedCount: number;\n}\n\n/** This is returned from rails when the websocket server wishes to fetch cachable items via http */\nexport interface BatchGetItemsResponse {\n  items: BatchGetItemsResponse_Item[];\n}\n\nexport interface BatchGetItemsResponse_Item {\n  id: string;\n  websocketMessageBytes: Uint8Array;\n}\n\n/** Sent from a client to instruct the websocket server to send it the data for a certain set of items again. */\nexport interface RequestItemsBatchRequest {\n  items: RequestItemsBatchRequest_Item[];\n}\n\nexport interface RequestItemsBatchRequest_Item {\n  id: string;\n  type: ResourceType;\n}\n\nexport interface ClearCacheRequest {\n  ids: string[];\n  clearAll?: boolean | undefined;\n  cacheType?: ResourceType | undefined;\n}\n\nexport interface WebsocketService {\n  SendToTarget(request: SendToTargetRequest): Promise<SendToTargetResponse>;\n  SendToTargets(request: SendToTargetsRequest): Promise<SendToTargetsResponse>;\n  BatchSendToTarget(request: BatchSendToTargetRequest): Promise<BatchSendToTargetResponse>;\n  TerminateTargets(request: TerminateTargetsRequest): Promise<TerminateTargetsResponse>;\n  WebsocketServerCommand(request: WebsocketServerCommandRequest): Promise<WebsocketServerCommandResponse>;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * as protobuf from \"./index.google.protobuf\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./google/protobuf/timestamp\";\nexport * from \"./google/protobuf/duration\";\nexport * from \"./google/protobuf/struct\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: google/protobuf/struct.proto\n\n/* eslint-disable */\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n */\nexport const NullValue = {\n  /** NULL_VALUE - Null value. */\n  NULL_VALUE: \"NULL_VALUE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type NullValue = typeof NullValue[keyof typeof NullValue];\n\nexport namespace NullValue {\n  export type NULL_VALUE = typeof NullValue.NULL_VALUE;\n  export type UNRECOGNIZED = typeof NullValue.UNRECOGNIZED;\n}\n\n/**\n * `Struct` represents a structured data value, consisting of fields\n * which map to dynamically typed values. In some languages, `Struct`\n * might be supported by a native representation. For example, in\n * scripting languages like JS a struct is represented as an\n * object. The details of that representation are described together\n * with the proto support for the language.\n *\n * The JSON representation for `Struct` is JSON object.\n */\nexport interface Struct {\n  /** Unordered map of dynamically typed values. */\n  fields: { [key: string]: any | undefined };\n}\n\nexport interface Struct_FieldsEntry {\n  key: string;\n  value: any | undefined;\n}\n\n/**\n * `Value` represents a dynamically typed value which can be either\n * null, a number, a string, a boolean, a recursive struct value, or a\n * list of values. A producer of value is expected to set one of these\n * variants. Absence of any variant indicates an error.\n *\n * The JSON representation for `Value` is JSON value.\n */\nexport interface Value {\n  /** Represents a null value. */\n  nullValue?:\n    | NullValue\n    | undefined;\n  /** Represents a double value. */\n  numberValue?:\n    | number\n    | undefined;\n  /** Represents a string value. */\n  stringValue?:\n    | string\n    | undefined;\n  /** Represents a boolean value. */\n  boolValue?:\n    | boolean\n    | undefined;\n  /** Represents a structured value. */\n  structValue?:\n    | { [key: string]: any }\n    | undefined;\n  /** Represents a repeated `Value`. */\n  listValue?: Array<any> | undefined;\n}\n\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n */\nexport interface ListValue {\n  /** Repeated field of dynamically typed values. */\n  values: any[];\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./bounties_app/bounties_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: bounties_app/bounties_app.proto\n\n/* eslint-disable */\nimport type { Money } from \"../common/money\";\nimport type { User } from \"../common/users\";\n\nexport interface Bounty {\n  id: string;\n  baseUnitAmount: number;\n  budget: Money | undefined;\n  rewardPerUnit: Money | undefined;\n  totalPaid: Money | undefined;\n  bountySubmissionsCount: number;\n  description: string;\n  richDescription: string;\n  title: string;\n  user: User | undefined;\n  status: Bounty_BountyStatus;\n  allowInstagram: boolean;\n  allowTiktok: boolean;\n  allowYoutube: boolean;\n  allowX: boolean;\n  allowPayoutMultiples: boolean;\n  allowMultipleSubmissions: boolean;\n  rewardUnit: Bounty_BountyRewardUnit;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Bounty_BountyStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  PUBLISHED: \"PUBLISHED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bounty_BountyStatus = typeof Bounty_BountyStatus[keyof typeof Bounty_BountyStatus];\n\nexport namespace Bounty_BountyStatus {\n  export type UNKNOWN_STATUS = typeof Bounty_BountyStatus.UNKNOWN_STATUS;\n  export type PUBLISHED = typeof Bounty_BountyStatus.PUBLISHED;\n  export type ARCHIVED = typeof Bounty_BountyStatus.ARCHIVED;\n  export type UNRECOGNIZED = typeof Bounty_BountyStatus.UNRECOGNIZED;\n}\n\nexport const Bounty_BountyRewardUnit = {\n  UNKNOWN_REWARD_UNIT: \"UNKNOWN_REWARD_UNIT\",\n  PER_SUBMISSION: \"PER_SUBMISSION\",\n  PER_VIEW: \"PER_VIEW\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Bounty_BountyRewardUnit = typeof Bounty_BountyRewardUnit[keyof typeof Bounty_BountyRewardUnit];\n\nexport namespace Bounty_BountyRewardUnit {\n  export type UNKNOWN_REWARD_UNIT = typeof Bounty_BountyRewardUnit.UNKNOWN_REWARD_UNIT;\n  export type PER_SUBMISSION = typeof Bounty_BountyRewardUnit.PER_SUBMISSION;\n  export type PER_VIEW = typeof Bounty_BountyRewardUnit.PER_VIEW;\n  export type UNRECOGNIZED = typeof Bounty_BountyRewardUnit.UNRECOGNIZED;\n}\n\nexport interface BountySubmission {\n  id: string;\n  bountyId: string;\n  user: User | undefined;\n  content?: string | undefined;\n  denialReason?: string | undefined;\n  status: BountySubmission_BountySubmissionStatus;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const BountySubmission_BountySubmissionStatus = {\n  UNKNOWN_STATUS: \"UNKNOWN_STATUS\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  DENIED: \"DENIED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type BountySubmission_BountySubmissionStatus =\n  typeof BountySubmission_BountySubmissionStatus[keyof typeof BountySubmission_BountySubmissionStatus];\n\nexport namespace BountySubmission_BountySubmissionStatus {\n  export type UNKNOWN_STATUS = typeof BountySubmission_BountySubmissionStatus.UNKNOWN_STATUS;\n  export type PENDING = typeof BountySubmission_BountySubmissionStatus.PENDING;\n  export type APPROVED = typeof BountySubmission_BountySubmissionStatus.APPROVED;\n  export type DENIED = typeof BountySubmission_BountySubmissionStatus.DENIED;\n  export type UNRECOGNIZED = typeof BountySubmission_BountySubmissionStatus.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./courses_app/courses_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./games/game\";\nexport * as quizzes from \"./index.games.quizzes\";\nexport * from \"./games/messages\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./games/quizzes/quizzes\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: games/quizzes/quizzes.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"../../common/attachment\";\nimport type { Channel } from \"../../common/common\";\nimport type { Game } from \"../game\";\n\nexport const QuizStatus = {\n  UNKNOWN: \"UNKNOWN\",\n  WAITING_FOR_PLAYERS: \"WAITING_FOR_PLAYERS\",\n  SHOW_QUESTION: \"SHOW_QUESTION\",\n  ANSWER_QUESTION: \"ANSWER_QUESTION\",\n  QUESTION_RESULT: \"QUESTION_RESULT\",\n  QUESTION_LEADERBOARD: \"QUESTION_LEADERBOARD\",\n  GAME_RESULT: \"GAME_RESULT\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type QuizStatus = typeof QuizStatus[keyof typeof QuizStatus];\n\nexport namespace QuizStatus {\n  export type UNKNOWN = typeof QuizStatus.UNKNOWN;\n  export type WAITING_FOR_PLAYERS = typeof QuizStatus.WAITING_FOR_PLAYERS;\n  export type SHOW_QUESTION = typeof QuizStatus.SHOW_QUESTION;\n  export type ANSWER_QUESTION = typeof QuizStatus.ANSWER_QUESTION;\n  export type QUESTION_RESULT = typeof QuizStatus.QUESTION_RESULT;\n  export type QUESTION_LEADERBOARD = typeof QuizStatus.QUESTION_LEADERBOARD;\n  export type GAME_RESULT = typeof QuizStatus.GAME_RESULT;\n  export type UNRECOGNIZED = typeof QuizStatus.UNRECOGNIZED;\n}\n\nexport interface GameState {\n  game: Game | undefined;\n  status: QuizStatus;\n  quiz: Quiz | undefined;\n  currentQuestion?: Question | undefined;\n  currentQuestionIndex: number;\n}\n\nexport interface ClientCommand {\n  /** / Sent by a user to create a new game. */\n  createGame?:\n    | CreateGameCommand\n    | undefined;\n  /** / A command sent by the host that allowes them to move to the next phase of the game, or end the game or go back to the lobby. */\n  hostCommand?:\n    | HostCommand\n    | undefined;\n  /** / Sent by the host to add questions to the game, while playing. */\n  addQuestions?:\n    | AddQuestionsCommand\n    | undefined;\n  /** Player Commands */\n  answerQuestion?: AnswerQuestionCommand | undefined;\n}\n\nexport interface CreateGameCommand {\n  /** / The websocket channel that the game is being played on. */\n  channel:\n    | Channel\n    | undefined;\n  /** / The quiz that is being played. Contains alls the questions */\n  quiz: Quiz | undefined;\n}\n\nexport interface HostCommand {\n  gameId: string;\n  command: HostCommand_StatusCommand;\n}\n\nexport const HostCommand_StatusCommand = {\n  UNKNOWN: \"UNKNOWN\",\n  /** NEXT - / Move to the next phase of the game. */\n  NEXT: \"NEXT\",\n  /** END_GAME - / End the game immediately, skip results screen and destroy the session. */\n  END_GAME: \"END_GAME\",\n  /** GO_BACK_TO_LOBBY - / Go back to the lobby, allowing more players to join while the current game is running. Does not reset the leaderboard. */\n  GO_BACK_TO_LOBBY: \"GO_BACK_TO_LOBBY\",\n  /** SKIP_TO_END_RESULTS - / Skip the questions and go straight to the end state of the game. Shows the leaderboard. */\n  SKIP_TO_END_RESULTS: \"SKIP_TO_END_RESULTS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type HostCommand_StatusCommand = typeof HostCommand_StatusCommand[keyof typeof HostCommand_StatusCommand];\n\nexport namespace HostCommand_StatusCommand {\n  export type UNKNOWN = typeof HostCommand_StatusCommand.UNKNOWN;\n  export type NEXT = typeof HostCommand_StatusCommand.NEXT;\n  export type END_GAME = typeof HostCommand_StatusCommand.END_GAME;\n  export type GO_BACK_TO_LOBBY = typeof HostCommand_StatusCommand.GO_BACK_TO_LOBBY;\n  export type SKIP_TO_END_RESULTS = typeof HostCommand_StatusCommand.SKIP_TO_END_RESULTS;\n  export type UNRECOGNIZED = typeof HostCommand_StatusCommand.UNRECOGNIZED;\n}\n\n/** / Sent by a player to answer a question. */\nexport interface AnswerQuestionCommand {\n  gameId: string;\n  answer: IndividualAnswer | undefined;\n}\n\n/** / Allows the host to add questions to a running game. */\nexport interface AddQuestionsCommand {\n  gameId: string;\n  questions: Question[];\n}\n\n/** / This is sent to create the game and configure the game settings. */\nexport interface Quiz {\n  id: string;\n  title: string;\n  description?:\n    | string\n    | undefined;\n  /** / The full list of questions and answers for the quiz. May be empty if this model is returned for playing users. */\n  questions: Question[];\n  totalQuestionCount?:\n    | number\n    | undefined;\n  /** / The amount of time players have to answer each question. */\n  answerDuration:\n    | string\n    | undefined;\n  /** / The amount of time to show the question to the players before they can answer */\n  questionShowDuration:\n    | string\n    | undefined;\n  /** / Whether the answer duration is applied to the question. If false, there will be an infinite amount of time to answer the question. */\n  isAnswerDurationApplied: boolean;\n}\n\nexport interface Question {\n  id: string;\n  text: string;\n  attachments: FileAttachment[];\n  /** / Whether the question has a correct answer. Set to false for polls / votes / open ended questions. */\n  hasCorrectAnswer: boolean;\n  /** / Whether the answer has been revealed to the players. */\n  isAnswerRevealed: boolean;\n  /** / Reveal the aggregate results for the question. */\n  aggregateResult?:\n    | QuestionAggregateResult\n    | undefined;\n  /** / The answer submitted by the current user. */\n  currentUserAnswer?:\n    | IndividualAnswer\n    | undefined;\n  /** NumberQuestion number = 11; */\n  multipleChoice?: MultipleChoiceQuestion | undefined;\n}\n\nexport interface MultipleChoiceQuestion {\n  answers: MultipleChoiceAnswer[];\n}\n\n/** / A single answer for a multiple choice question. */\nexport interface MultipleChoiceAnswer {\n  id: string;\n  text: string;\n  attachments: FileAttachment[];\n  isCorrect?: boolean | undefined;\n}\n\n/** / The aggregate results for a question. Show on the host screen */\nexport interface QuestionAggregateResult {\n  questionId: string;\n  totalAnswers: number;\n  multipleChoice?: MultipleChoiceAggregateResult | undefined;\n}\n\n/** / The aggregate results for a multiple choice question. Counts the number of times each answer was selected. */\nexport interface MultipleChoiceAggregateResult {\n  answerCounts: { [key: string]: number };\n}\n\nexport interface MultipleChoiceAggregateResult_AnswerCountsEntry {\n  key: string;\n  value: number;\n}\n\n/** / A unique answer submitted by a player. */\nexport interface IndividualAnswer {\n  questionId: string;\n  /** int64 number_answer = 3; // Add this back in if we want to support number questions. */\n  multipleChoiceAnswerId?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./content_rewards_app/content_rewards_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: content_rewards_app/content_rewards_app.proto\n\n/* eslint-disable */\nimport type { FileAttachment } from \"../common/attachment\";\nimport type { Money } from \"../common/money\";\nimport type { User } from \"../common/users\";\n\nexport const ContentPlatform = {\n  UNKNOWN_PLATFORM: \"UNKNOWN_PLATFORM\",\n  INSTAGRAM: \"INSTAGRAM\",\n  TIKTOK: \"TIKTOK\",\n  X: \"X\",\n  YOUTUBE: \"YOUTUBE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentPlatform = typeof ContentPlatform[keyof typeof ContentPlatform];\n\nexport namespace ContentPlatform {\n  export type UNKNOWN_PLATFORM = typeof ContentPlatform.UNKNOWN_PLATFORM;\n  export type INSTAGRAM = typeof ContentPlatform.INSTAGRAM;\n  export type TIKTOK = typeof ContentPlatform.TIKTOK;\n  export type X = typeof ContentPlatform.X;\n  export type YOUTUBE = typeof ContentPlatform.YOUTUBE;\n  export type UNRECOGNIZED = typeof ContentPlatform.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsCampaign {\n  id: string;\n  allowInstagram: boolean;\n  allowTiktok: boolean;\n  allowX: boolean;\n  allowYoutube: boolean;\n  totalBudget: Money | undefined;\n  category: ContentRewardsCampaign_Category;\n  contentType: ContentRewardsCampaign_ContentType;\n  expiresAt?: string | undefined;\n  pendingSubmissionsCount: number;\n  requirements: string[];\n  rewardRatePerThousandViews: Money | undefined;\n  status: ContentRewardsCampaign_Status;\n  submissionsCount: number;\n  title: string;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  totalPaid: Money | undefined;\n  fileUploadRequired: boolean;\n  totalViewCount: number;\n  autoApproveSubmissionsInHours?: number | undefined;\n  requiredDescriptionText: string[];\n  requiredCreatorBioLink?: string | undefined;\n  requiredTiktokAudio?: string | undefined;\n  requiredInstagramAudio?: string | undefined;\n  fixedRewardPerSubmission?: Money | undefined;\n  totalPendingPayouts: Money | undefined;\n}\n\nexport const ContentRewardsCampaign_Status = {\n  UNKNOWN: \"UNKNOWN\",\n  ACTIVE: \"ACTIVE\",\n  PENDING: \"PENDING\",\n  EXPIRED: \"EXPIRED\",\n  ARCHIVED: \"ARCHIVED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_Status =\n  typeof ContentRewardsCampaign_Status[keyof typeof ContentRewardsCampaign_Status];\n\nexport namespace ContentRewardsCampaign_Status {\n  export type UNKNOWN = typeof ContentRewardsCampaign_Status.UNKNOWN;\n  export type ACTIVE = typeof ContentRewardsCampaign_Status.ACTIVE;\n  export type PENDING = typeof ContentRewardsCampaign_Status.PENDING;\n  export type EXPIRED = typeof ContentRewardsCampaign_Status.EXPIRED;\n  export type ARCHIVED = typeof ContentRewardsCampaign_Status.ARCHIVED;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_Status.UNRECOGNIZED;\n}\n\nexport const ContentRewardsCampaign_ContentType = {\n  UNKNOWN_CONTENT_TYPE: \"UNKNOWN_CONTENT_TYPE\",\n  UGC: \"UGC\",\n  CLIPPING: \"CLIPPING\",\n  /** @deprecated */\n  FACELESS: \"FACELESS\",\n  OTHER_CONTENT_TYPE: \"OTHER_CONTENT_TYPE\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_ContentType =\n  typeof ContentRewardsCampaign_ContentType[keyof typeof ContentRewardsCampaign_ContentType];\n\nexport namespace ContentRewardsCampaign_ContentType {\n  export type UNKNOWN_CONTENT_TYPE = typeof ContentRewardsCampaign_ContentType.UNKNOWN_CONTENT_TYPE;\n  export type UGC = typeof ContentRewardsCampaign_ContentType.UGC;\n  export type CLIPPING = typeof ContentRewardsCampaign_ContentType.CLIPPING;\n  export type FACELESS = typeof ContentRewardsCampaign_ContentType.FACELESS;\n  export type OTHER_CONTENT_TYPE = typeof ContentRewardsCampaign_ContentType.OTHER_CONTENT_TYPE;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_ContentType.UNRECOGNIZED;\n}\n\nexport const ContentRewardsCampaign_Category = {\n  UNKNOWN_CATEGORY: \"UNKNOWN_CATEGORY\",\n  /** @deprecated */\n  CREATOR: \"CREATOR\",\n  /** @deprecated */\n  BRAND: \"BRAND\",\n  /** @deprecated */\n  INFLUENCER: \"INFLUENCER\",\n  /** @deprecated */\n  STREAMER: \"STREAMER\",\n  /** @deprecated */\n  MUSICIAN: \"MUSICIAN\",\n  OTHER: \"OTHER\",\n  /** @deprecated */\n  ECOMMERCE: \"ECOMMERCE\",\n  LOGO: \"LOGO\",\n  MUSIC: \"MUSIC\",\n  /** @deprecated */\n  PODCAST: \"PODCAST\",\n  /** @deprecated */\n  SOFTWARE: \"SOFTWARE\",\n  /** @deprecated */\n  STREAM: \"STREAM\",\n  ENTERTAINMENT: \"ENTERTAINMENT\",\n  PRODUCTS: \"PRODUCTS\",\n  PERSONAL_BRAND: \"PERSONAL_BRAND\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsCampaign_Category =\n  typeof ContentRewardsCampaign_Category[keyof typeof ContentRewardsCampaign_Category];\n\nexport namespace ContentRewardsCampaign_Category {\n  export type UNKNOWN_CATEGORY = typeof ContentRewardsCampaign_Category.UNKNOWN_CATEGORY;\n  export type CREATOR = typeof ContentRewardsCampaign_Category.CREATOR;\n  export type BRAND = typeof ContentRewardsCampaign_Category.BRAND;\n  export type INFLUENCER = typeof ContentRewardsCampaign_Category.INFLUENCER;\n  export type STREAMER = typeof ContentRewardsCampaign_Category.STREAMER;\n  export type MUSICIAN = typeof ContentRewardsCampaign_Category.MUSICIAN;\n  export type OTHER = typeof ContentRewardsCampaign_Category.OTHER;\n  export type ECOMMERCE = typeof ContentRewardsCampaign_Category.ECOMMERCE;\n  export type LOGO = typeof ContentRewardsCampaign_Category.LOGO;\n  export type MUSIC = typeof ContentRewardsCampaign_Category.MUSIC;\n  export type PODCAST = typeof ContentRewardsCampaign_Category.PODCAST;\n  export type SOFTWARE = typeof ContentRewardsCampaign_Category.SOFTWARE;\n  export type STREAM = typeof ContentRewardsCampaign_Category.STREAM;\n  export type ENTERTAINMENT = typeof ContentRewardsCampaign_Category.ENTERTAINMENT;\n  export type PRODUCTS = typeof ContentRewardsCampaign_Category.PRODUCTS;\n  export type PERSONAL_BRAND = typeof ContentRewardsCampaign_Category.PERSONAL_BRAND;\n  export type UNRECOGNIZED = typeof ContentRewardsCampaign_Category.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsSubmission {\n  id: string;\n  totalPaid: Money | undefined;\n  totalViewCount: number;\n  contentUrl: string;\n  platform: ContentPlatform;\n  status: ContentRewardsSubmission_Status;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  campaignId: string;\n  platformPostId?: string | undefined;\n  userId: string;\n  user: User | undefined;\n  attachments: FileAttachment[];\n  totalLikeCount: number;\n  totalCommentCount: number;\n  totalSaveCount: number;\n  totalShareCount: number;\n  totalRepostCount: number;\n}\n\nexport const ContentRewardsSubmission_Status = {\n  UNKNOWN: \"UNKNOWN\",\n  PENDING: \"PENDING\",\n  APPROVED: \"APPROVED\",\n  REJECTED: \"REJECTED\",\n  FLAGGED: \"FLAGGED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ContentRewardsSubmission_Status =\n  typeof ContentRewardsSubmission_Status[keyof typeof ContentRewardsSubmission_Status];\n\nexport namespace ContentRewardsSubmission_Status {\n  export type UNKNOWN = typeof ContentRewardsSubmission_Status.UNKNOWN;\n  export type PENDING = typeof ContentRewardsSubmission_Status.PENDING;\n  export type APPROVED = typeof ContentRewardsSubmission_Status.APPROVED;\n  export type REJECTED = typeof ContentRewardsSubmission_Status.REJECTED;\n  export type FLAGGED = typeof ContentRewardsSubmission_Status.FLAGGED;\n  export type UNRECOGNIZED = typeof ContentRewardsSubmission_Status.UNRECOGNIZED;\n}\n\nexport interface ContentRewardsMessage {\n  contentRewardsCampaign?: ContentRewardsCampaign | undefined;\n  contentRewardsSubmission?: ContentRewardsSubmission | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./events_app/events_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: events_app/events_app.proto\n\n/* eslint-disable */\nimport type { User } from \"../common/users\";\n\nexport interface Event {\n  id: string;\n  title: string;\n  description?: string | undefined;\n  maxCapacity?: number | undefined;\n  recordingUrl?: string | undefined;\n  thumbnailUrl?: string | undefined;\n  recurringRule?: Event_RecurringRule | undefined;\n  rrule?: string | undefined;\n  seriesEndsAt?: string | undefined;\n  startsAt: string | undefined;\n  endsAt: string | undefined;\n  location?: string | undefined;\n  locationType: Event_LocationType;\n  rsvpsCount: number;\n  rsvpUsers: User[];\n  hostName?: string | undefined;\n  hostUser?: User | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Event_LocationType = {\n  UNKNOWN_LOCATION_TYPE: \"UNKNOWN_LOCATION_TYPE\",\n  OFFLINE: \"OFFLINE\",\n  ONLINE: \"ONLINE\",\n  ZOOM: \"ZOOM\",\n  GOOGLE_MEET: \"GOOGLE_MEET\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Event_LocationType = typeof Event_LocationType[keyof typeof Event_LocationType];\n\nexport namespace Event_LocationType {\n  export type UNKNOWN_LOCATION_TYPE = typeof Event_LocationType.UNKNOWN_LOCATION_TYPE;\n  export type OFFLINE = typeof Event_LocationType.OFFLINE;\n  export type ONLINE = typeof Event_LocationType.ONLINE;\n  export type ZOOM = typeof Event_LocationType.ZOOM;\n  export type GOOGLE_MEET = typeof Event_LocationType.GOOGLE_MEET;\n  export type UNRECOGNIZED = typeof Event_LocationType.UNRECOGNIZED;\n}\n\nexport const Event_RecurringRule = {\n  UNKNOWN_RECURRING_RULE: \"UNKNOWN_RECURRING_RULE\",\n  DAILY: \"DAILY\",\n  WEEKLY: \"WEEKLY\",\n  MONTHLY: \"MONTHLY\",\n  YEARLY: \"YEARLY\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Event_RecurringRule = typeof Event_RecurringRule[keyof typeof Event_RecurringRule];\n\nexport namespace Event_RecurringRule {\n  export type UNKNOWN_RECURRING_RULE = typeof Event_RecurringRule.UNKNOWN_RECURRING_RULE;\n  export type DAILY = typeof Event_RecurringRule.DAILY;\n  export type WEEKLY = typeof Event_RecurringRule.WEEKLY;\n  export type MONTHLY = typeof Event_RecurringRule.MONTHLY;\n  export type YEARLY = typeof Event_RecurringRule.YEARLY;\n  export type UNRECOGNIZED = typeof Event_RecurringRule.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./diagnostics/client_commands\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: diagnostics/client_commands.proto\n\n/* eslint-disable */\n\nexport interface ExecuteClientCommand {\n  id: string;\n  command: string;\n  payload?: string | undefined;\n  validAfter?: string | undefined;\n  validUntil?: string | undefined;\n  clientVersion?: string | undefined;\n  clientPlatform?: string | undefined;\n}\n\nexport interface ExecuteClientCommandResponse {\n  id: string;\n  status: ExecuteClientCommandResponse_Status;\n  command: string;\n  response?: string | undefined;\n  errorMessage?: string | undefined;\n  executedAt?: string | undefined;\n  duration?: string | undefined;\n}\n\nexport const ExecuteClientCommandResponse_Status = {\n  SUCCESS: \"SUCCESS\",\n  ERROR: \"ERROR\",\n  SKIPPED: \"SKIPPED\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type ExecuteClientCommandResponse_Status =\n  typeof ExecuteClientCommandResponse_Status[keyof typeof ExecuteClientCommandResponse_Status];\n\nexport namespace ExecuteClientCommandResponse_Status {\n  export type SUCCESS = typeof ExecuteClientCommandResponse_Status.SUCCESS;\n  export type ERROR = typeof ExecuteClientCommandResponse_Status.ERROR;\n  export type SKIPPED = typeof ExecuteClientCommandResponse_Status.SKIPPED;\n  export type UNRECOGNIZED = typeof ExecuteClientCommandResponse_Status.UNRECOGNIZED;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./content_app/content_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./calendar_bookings_app/calendar_bookings_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./wheel_app/wheel_app\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: wheel_app/wheel_app.proto\n\n/* eslint-disable */\nimport type { User } from \"../common/users\";\n\nexport interface Wheel {\n  id: string;\n  hasCustomPrizes: boolean;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport interface Spin {\n  id: string;\n  wheelId: string;\n  user: User | undefined;\n  prize: Prize | undefined;\n  status: Spin_SpinStatus;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n}\n\nexport const Spin_SpinStatus = {\n  UNKNOWN_SPIN_STATUS: \"UNKNOWN_SPIN_STATUS\",\n  WON: \"WON\",\n  LOST: \"LOST\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type Spin_SpinStatus = typeof Spin_SpinStatus[keyof typeof Spin_SpinStatus];\n\nexport namespace Spin_SpinStatus {\n  export type UNKNOWN_SPIN_STATUS = typeof Spin_SpinStatus.UNKNOWN_SPIN_STATUS;\n  export type WON = typeof Spin_SpinStatus.WON;\n  export type LOST = typeof Spin_SpinStatus.LOST;\n  export type UNRECOGNIZED = typeof Spin_SpinStatus.UNRECOGNIZED;\n}\n\nexport interface Prize {\n  id: string;\n  name: string;\n  imageUrl?: string | undefined;\n  createdAt: string | undefined;\n  updatedAt: string | undefined;\n  testingIgnore?: string | undefined;\n}\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./experience/preview_content\";\nexport * from \"./experience/experience\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n\n/* eslint-disable */\n\nexport * from \"./data_platform/dispute_rates_query\";\n","// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.1\n//   protoc               v4.23.4\n// source: data_platform/dispute_rates_query.proto\n\n/* eslint-disable */\n\nexport const PaymentMethod = {\n  PAYMENT_METHOD_UNSPECIFIED: \"PAYMENT_METHOD_UNSPECIFIED\",\n  PAYMENT_METHOD_ALL_PAYMENT_METHODS: \"PAYMENT_METHOD_ALL_PAYMENT_METHODS\",\n  PAYMENT_METHOD_ALL_CARD_AND_FINANCING: \"PAYMENT_METHOD_ALL_CARD_AND_FINANCING\",\n  PAYMENT_METHOD_ALL_FINANCING: \"PAYMENT_METHOD_ALL_FINANCING\",\n  PAYMENT_METHOD_SPLITIT: \"PAYMENT_METHOD_SPLITIT\",\n  PAYMENT_METHOD_SEZZLE: \"PAYMENT_METHOD_SEZZLE\",\n  PAYMENT_METHOD_AFTERPAY_CLEARPAY: \"PAYMENT_METHOD_AFTERPAY_CLEARPAY\",\n  PAYMENT_METHOD_ZIP: \"PAYMENT_METHOD_ZIP\",\n  PAYMENT_METHOD_KLARNA: \"PAYMENT_METHOD_KLARNA\",\n  PAYMENT_METHOD_AFFIRM: \"PAYMENT_METHOD_AFFIRM\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type PaymentMethod = typeof PaymentMethod[keyof typeof PaymentMethod];\n\nexport namespace PaymentMethod {\n  export type PAYMENT_METHOD_UNSPECIFIED = typeof PaymentMethod.PAYMENT_METHOD_UNSPECIFIED;\n  export type PAYMENT_METHOD_ALL_PAYMENT_METHODS = typeof PaymentMethod.PAYMENT_METHOD_ALL_PAYMENT_METHODS;\n  export type PAYMENT_METHOD_ALL_CARD_AND_FINANCING = typeof PaymentMethod.PAYMENT_METHOD_ALL_CARD_AND_FINANCING;\n  export type PAYMENT_METHOD_ALL_FINANCING = typeof PaymentMethod.PAYMENT_METHOD_ALL_FINANCING;\n  export type PAYMENT_METHOD_SPLITIT = typeof PaymentMethod.PAYMENT_METHOD_SPLITIT;\n  export type PAYMENT_METHOD_SEZZLE = typeof PaymentMethod.PAYMENT_METHOD_SEZZLE;\n  export type PAYMENT_METHOD_AFTERPAY_CLEARPAY = typeof PaymentMethod.PAYMENT_METHOD_AFTERPAY_CLEARPAY;\n  export type PAYMENT_METHOD_ZIP = typeof PaymentMethod.PAYMENT_METHOD_ZIP;\n  export type PAYMENT_METHOD_KLARNA = typeof PaymentMethod.PAYMENT_METHOD_KLARNA;\n  export type PAYMENT_METHOD_AFFIRM = typeof PaymentMethod.PAYMENT_METHOD_AFFIRM;\n  export type UNRECOGNIZED = typeof PaymentMethod.UNRECOGNIZED;\n}\n\nexport const DisputeMetric = {\n  DISPUTE_METRIC_UNSPECIFIED: \"DISPUTE_METRIC_UNSPECIFIED\",\n  DISPUTE_RATE: \"DISPUTE_RATE\",\n  TOTAL_TRANSACTIONS: \"TOTAL_TRANSACTIONS\",\n  DISPUTED_TRANSACTIONS: \"DISPUTED_TRANSACTIONS\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type DisputeMetric = typeof DisputeMetric[keyof typeof DisputeMetric];\n\nexport namespace DisputeMetric {\n  export type DISPUTE_METRIC_UNSPECIFIED = typeof DisputeMetric.DISPUTE_METRIC_UNSPECIFIED;\n  export type DISPUTE_RATE = typeof DisputeMetric.DISPUTE_RATE;\n  export type TOTAL_TRANSACTIONS = typeof DisputeMetric.TOTAL_TRANSACTIONS;\n  export type DISPUTED_TRANSACTIONS = typeof DisputeMetric.DISPUTED_TRANSACTIONS;\n  export type UNRECOGNIZED = typeof DisputeMetric.UNRECOGNIZED;\n}\n\nexport const LogicalOperator = {\n  LOGICAL_OPERATOR_UNSPECIFIED: \"LOGICAL_OPERATOR_UNSPECIFIED\",\n  AND: \"AND\",\n  OR: \"OR\",\n  UNRECOGNIZED: \"UNRECOGNIZED\",\n} as const;\n\nexport type LogicalOperator = typeof LogicalOperator[keyof typeof LogicalOperator];\n\nexport namespace LogicalOperator {\n  export type LOGICAL_OPERATOR_UNSPECIFIED = typeof LogicalOperator.LOGICAL_OPERATOR_UNSPECIFIED;\n  export type AND = typeof LogicalOperator.AND;\n  export type OR = typeof LogicalOperator.OR;\n  export type UNRECOGNIZED = typeof LogicalOperator.UNRECOGNIZED;\n}\n\nexport interface MetricFilter {\n  paymentMethod: PaymentMethod;\n  metric: DisputeMetric;\n  floatRange?: FloatRange | undefined;\n  intRange?: IntRange | undefined;\n}\n\nexport interface QueryBnplDisputeRatesRequest {\n  /** Format: \"biz_abcABC\" */\n  bizIds: string[];\n  metricFilters: MetricFilter[];\n  /** Defaults to AND if unspecified */\n  metricFiltersOperator: LogicalOperator;\n  limit: number;\n  offset: number;\n}\n\nexport interface QueryBnplDisputeRatesResponse {\n  records: BnplDisputeRatesRecord[];\n  totalCount: number;\n}\n\nexport interface BnplDisputeRatesRecord {\n  bizId: string;\n  paymentMethodMetrics: PaymentMethodMetrics[];\n}\n\nexport interface PaymentMethodMetrics {\n  paymentMethod: PaymentMethod;\n  disputeRate: number;\n  totalTransactions: number;\n  disputedTransactions: number;\n}\n\nexport interface FloatRange {\n  min?: number | undefined;\n  max?: number | undefined;\n}\n\nexport interface IntRange {\n  min?: number | undefined;\n  max?: number | undefined;\n}\n","import type { WhopWebhookRequestBody } from \"./webhook-types\";\n\nconst DEFAULT_SIGNATURE_HEADER_NAME = \"x-whop-signature\";\n\nexport type { WhopWebhookRequestBody } from \"./webhook-types\";\n\nexport function makeWebhookValidator({\n\twebhookSecret,\n\tsignatureHeaderName,\n}: {\n\twebhookSecret: string;\n\tsignatureHeaderName?: string | null;\n}) {\n\tconst textEncoder = new TextEncoder();\n\tconst encodedKey = textEncoder.encode(webhookSecret);\n\tconst cryptoKeyPromise = crypto.subtle.importKey(\n\t\t\"raw\",\n\t\tencodedKey,\n\t\t{ name: \"HMAC\", hash: \"SHA-256\" },\n\t\tfalse,\n\t\t[\"sign\"],\n\t);\n\n\treturn async function validateWebhookBody(\n\t\treq: Request,\n\t): Promise<WhopWebhookRequestBody> {\n\t\tconst body = await req.text();\n\t\tconst header = req.headers.get(\n\t\t\tsignatureHeaderName ?? DEFAULT_SIGNATURE_HEADER_NAME,\n\t\t);\n\t\tif (!header) throw Error(\"Missing header containing signature.\");\n\t\tconst [timestampStr, signatureStr] = header.split(\",\");\n\t\tconst [, timestamp] = timestampStr.split(\"=\");\n\t\tconst [version, sentSignature] = signatureStr.split(\"=\");\n\n\t\tconst now = Math.round(Date.now() / 1000);\n\n\t\tif (\n\t\t\tNumber.isNaN(Number.parseInt(timestamp)) ||\n\t\t\tMath.abs(now - Number.parseInt(timestamp)) > 300\n\t\t)\n\t\t\tthrow Error(\"Invalid timestamp\");\n\n\t\tconst stringToHash = `${timestamp}.${body}`;\n\n\t\tconst cryptoKey = await cryptoKeyPromise;\n\n\t\tconst signatureBuffer = await crypto.subtle.sign(\n\t\t\t{ name: \"HMAC\", hash: \"SHA-256\" },\n\t\t\tcryptoKey,\n\t\t\ttextEncoder.encode(stringToHash),\n\t\t);\n\t\tconst signature = buf2hex(signatureBuffer);\n\n\t\tif (version !== \"v1\") throw Error(\"Unsupported version\");\n\t\tif (signature !== sentSignature) throw Error(\"Signature mismatch\");\n\n\t\tconst parsedBody = JSON.parse(body) as unknown;\n\t\tif (!isValidWebhook(parsedBody)) throw Error(\"Invalid webhook payload\");\n\t\treturn parsedBody;\n\t};\n}\n\nfunction buf2hex(buffer: ArrayBuffer) {\n\treturn [...new Uint8Array(buffer)]\n\t\t.map((x) => x.toString(16).padStart(2, \"0\"))\n\t\t.join(\"\");\n}\n\n// Type guard to check if a webhook is valid\nexport function isValidWebhook(\n\twebhook: unknown,\n): webhook is WhopWebhookRequestBody {\n\tif (!webhook || typeof webhook !== \"object\") return false;\n\tif (!(\"api_version\" in webhook) || webhook.api_version !== \"v5\") return false;\n\tif (!(\"action\" in webhook) || typeof webhook.action !== \"string\")\n\t\treturn false;\n\tif (\n\t\t!(\"data\" in webhook) ||\n\t\ttypeof webhook.data !== \"object\" ||\n\t\twebhook.data === null\n\t)\n\t\treturn false;\n\treturn true;\n}\n","class RetryError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\tpublic readonly errors: unknown[],\n\t\tpublic readonly maxRetries: number,\n\t) {\n\t\tsuper(message);\n\t\tthis.name = \"RetryError\";\n\t}\n}\n\n/**\n * Retries an async function.\n * @param fn The function to retry.\n * @param maxRetries The maximum number of retries.\n * @param signal The signal to abort the retry.\n * @param args The arguments to pass to the function.\n * @returns The result of the function.\n */\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\nexport async function retry<Fn extends (...args: any[]) => Promise<any>>(\n\tfn: Fn,\n\tmaxRetries: number,\n\tsignal?: AbortSignal,\n\t...args: Parameters<Fn>\n): Promise<Awaited<ReturnType<Fn>>> {\n\tlet tries = 0;\n\tconst errors: unknown[] = [];\n\twhile (tries < maxRetries) {\n\t\tsignal?.throwIfAborted();\n\t\ttry {\n\t\t\tconst res = await fn(...args);\n\t\t\treturn res;\n\t\t} catch (error) {\n\t\t\terrors.push(error);\n\t\t\ttries++;\n\t\t}\n\t}\n\tfor (const error of errors) {\n\t\tconsole.error(error);\n\t}\n\tthrow new RetryError(\"Failed to retry\", errors, maxRetries);\n}\n","import type {\n\tMultipartUploadTask,\n\tUploadPartFunction,\n} from \"@/attachments/common\";\n\nimport { retry } from \"@/utils/retry\";\n\n/**\n * A global queue of tasks to upload a single or multiple files in parts.\n */\nconst uploadTasks: {\n\ttask: MultipartUploadTask;\n\tresolve: (uploadResult: { etag: string; partNumber: number }) => void;\n\treject: (error: unknown) => void;\n}[] = [];\n\nlet workerCount = 0;\nconst maxWorkers = 10;\n\n/**\n * Drains the upload queue.\n * @returns The etags of the uploaded parts.\n */\nasync function uploadWorker(uploadPart: UploadPartFunction) {\n\tif (workerCount >= maxWorkers) {\n\t\treturn;\n\t}\n\n\tworkerCount++;\n\n\twhile (uploadTasks.length > 0) {\n\t\tconst task = uploadTasks.shift();\n\t\tif (!task) {\n\t\t\tcontinue;\n\t\t}\n\n\t\ttry {\n\t\t\tconst etag = await retry(uploadPart, 10, task.task.signal, task.task);\n\t\t\ttask.resolve({ etag, partNumber: task.task.partNumber });\n\t\t} catch (e) {\n\t\t\ttask.reject(e);\n\t\t}\n\t}\n\n\tworkerCount--;\n}\n\n/**\n * Enqueues a list of tasks to upload a file in parts.\n * @param tasks The tasks to upload.\n * @param priority Whether to upload the tasks in priority.\n * @returns The etags of the uploaded parts.\n */\nexport function uploadParts(\n\ttasks: MultipartUploadTask[],\n\tuploadPart: UploadPartFunction,\n\tpriority = false,\n) {\n\tconst promises = tasks.map((task) => {\n\t\treturn new Promise<{ etag: string; partNumber: number }>(\n\t\t\t(resolve, reject) => {\n\t\t\t\tif (priority) {\n\t\t\t\t\tuploadTasks.unshift({ task, resolve, reject });\n\t\t\t\t} else {\n\t\t\t\t\tuploadTasks.push({ task, resolve, reject });\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t});\n\n\tfor (let i = 0; i < Math.min(tasks.length, maxWorkers); i++) {\n\t\tvoid uploadWorker(uploadPart);\n\t}\n\n\treturn Promise.all(promises);\n}\n","/**\n * Sums an array of numbers.\n * @param args The numbers to sum.\n * @returns The sum of the numbers.\n */\nexport function sum(...args: number[]) {\n\treturn args.reduce((acc, curr) => acc + curr, 0);\n}\n","import type { PreparedAttachment } from \"@/attachments/prepare\";\nimport type {\n\tAttachableRecords,\n\tAttachmentFragment,\n\tMedia,\n\tgetSdk,\n} from \"@/codegen/graphql/client\";\n\nimport { uploadParts } from \"@/attachments/upload-parts\";\nimport { sum } from \"@/utils/sum\";\nimport type { UploadPartFunction } from \"./common\";\nimport type { PartialFileSdkExtensions } from \"./partial-file-sdk-extensions\";\n\n/**\n * Uploads a prepared file, automatically handling multipart uploads.\n * @param preparedFile The prepared file to upload.\n * @param onProgress The callback to call when the progress changes.\n * @param signal The signal to abort the upload.\n * @returns The etags of the uploaded parts.\n */\nasync function handleUpload(\n\t{ data, ...preparedFile }: PreparedAttachment,\n\t{\n\t\tonProgress,\n\t\tsignal,\n\t\tuploadPart,\n\t}: {\n\t\tonProgress?: (progress: number) => void;\n\t\tsignal?: AbortSignal;\n\t\tuploadPart: UploadPartFunction;\n\t},\n) {\n\tif (preparedFile.multipart) {\n\t\tconst loaded = Array(preparedFile.multipartUploadUrls.length).fill(0);\n\n\t\tconst result = await uploadParts(\n\t\t\tpreparedFile.multipartUploadUrls.map((part, index) => ({\n\t\t\t\t...part,\n\t\t\t\tfullData: data,\n\t\t\t\tonProgress: (event) => {\n\t\t\t\t\tloaded[index] = event.loaded;\n\t\t\t\t\tconst total = sum(...loaded);\n\t\t\t\t\tonProgress?.(Math.round((total / data.size) * 100));\n\t\t\t\t},\n\t\t\t\tsignal,\n\t\t\t})),\n\t\t\tuploadPart,\n\t\t);\n\n\t\treturn result;\n\t}\n\n\tawait uploadParts(\n\t\t[\n\t\t\t{\n\t\t\t\turl: preparedFile.uploadUrl,\n\t\t\t\tfullData: data,\n\t\t\t\tpartNumber: 1,\n\t\t\t\theaders: preparedFile.headers,\n\t\t\t\tonProgress: (event) => {\n\t\t\t\t\tonProgress?.(Math.round((event.loaded / data.size) * 100));\n\t\t\t\t},\n\t\t\t\tsignal,\n\t\t\t},\n\t\t],\n\t\tuploadPart,\n\t\ttrue,\n\t);\n\n\treturn [];\n}\n\n/**\n * The file input for the attachment upload.\n */\ntype UploadFileInput =\n\t| {\n\t\t\tfile: File | Blob;\n\t\t\trecord: AttachableRecords;\n\t  }\n\t| PreparedAttachment\n\t| Promise<PreparedAttachment>;\n\nfunction getMediaType(data: File | Blob): Media {\n\tswitch (true) {\n\t\tcase data.type.startsWith(\"image/\"):\n\t\t\treturn \"image\";\n\t\tcase data.type.startsWith(\"video/\"):\n\t\t\treturn \"video\";\n\t\tcase data.type.startsWith(\"audio/\"):\n\t\t\treturn \"audio\";\n\t\tdefault:\n\t\t\treturn \"other\";\n\t}\n}\n\n/**\n * Additional options for the attachment upload.\n */\nexport interface UploadFileOptions {\n\t/**\n\t * This callback is called with the progress of the upload.\n\t */\n\tonProgress?: (progress: number) => void;\n\t/**\n\t * This signal can be used to abort the upload.\n\t */\n\tsignal?: AbortSignal;\n}\n\n/**\n * Response returned by `UploadAttachment`.\n */\nexport interface UploadAttachmentResponse {\n\t/** The direct upload ID - use this to attach the attachment to a resource */\n\tdirectUploadId: string;\n\t/** The record type the attachment was attached to */\n\trecord: AttachableRecords;\n\t/** The attachment */\n\tattachment: AttachmentFragment;\n}\n\nexport function makeUploadAttachmentFunction({\n\tuploadPart,\n}: {\n\tuploadPart: UploadPartFunction;\n}) {\n\t/**\n\t * Uploads a file.\n\t * @param input - The input to upload.\n\t * @param opts - The options to upload the file.\n\t * @returns The attachment.\n\t */\n\treturn async function uploadAttachment(\n\t\tthis: PartialFileSdkExtensions &\n\t\t\tPick<ReturnType<typeof getSdk<RequestInit>>, \"attachments\">,\n\t\tinput: UploadFileInput,\n\t\t{ onProgress, signal }: UploadFileOptions = {},\n\t): Promise<UploadAttachmentResponse> {\n\t\t// prepare the file\n\t\tconst preparedAttachment =\n\t\t\t\"record\" in input && \"file\" in input\n\t\t\t\t? await this.prepareAttachmentForUpload(input.file, input.record)\n\t\t\t\t: await input;\n\n\t\t// upload the file\n\t\tconst result = await handleUpload(preparedAttachment, {\n\t\t\tonProgress,\n\t\t\tsignal,\n\t\t\tuploadPart,\n\t\t});\n\t\t// get the media type\n\t\tconst mediaType = getMediaType(preparedAttachment.data);\n\n\t\t// request media processing\n\t\tif (preparedAttachment.multipart) {\n\t\t\tawait this.attachments.processAttachment({\n\t\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\t\tmediaType,\n\t\t\t\tmultipartUploadId: preparedAttachment.multipartUploadId,\n\t\t\t\tmultipartParts: result,\n\t\t\t});\n\t\t} else {\n\t\t\tawait this.attachments.processAttachment({\n\t\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\t\tmediaType,\n\t\t\t});\n\t\t}\n\n\t\tconst attachment = await this.analyzeAttachment(preparedAttachment.id, {\n\t\t\tsignal,\n\t\t});\n\n\t\tif (!attachment) {\n\t\t\tthrow new Error(\"Failed to analyze Attachment\");\n\t\t}\n\n\t\treturn {\n\t\t\tdirectUploadId: preparedAttachment.id,\n\t\t\trecord: preparedAttachment.record,\n\t\t\tattachment,\n\t\t};\n\t};\n}\n","import type { BaseSdk } from \"./partial-file-sdk-extensions\";\n\n/**\n * Analyzes an attachment.\n * @param this The SDK instance.\n * @param signedId The signed ID of the attachment.\n * @param opts The options for the attachment.\n * @returns The attachment.\n */\nexport async function analyzeAttachment(\n\tthis: Pick<BaseSdk, \"attachments\">,\n\tsignedId: string,\n\topts?: {\n\t\tsignal?: AbortSignal;\n\t},\n) {\n\twhile (!opts?.signal?.aborted) {\n\t\tconst attachment = await this.attachments\n\t\t\t.getAttachment({ id: signedId }, { signal: opts?.signal })\n\t\t\t.catch(() => null);\n\n\t\tif (attachment) {\n\t\t\treturn attachment;\n\t\t}\n\t}\n}\n","export const MULTIPART_UPLOAD_CHUNK_SIZE = 5 * 1024 * 1024; // 5MB\n\n/**\n * A task to upload a part of a file.\n */\nexport interface MultipartUploadTask {\n\turl: string;\n\tfullData: File | Blob;\n\tpartNumber: number;\n\theaders?: Record<string, string>;\n\tonProgress?: (progress: Pick<ProgressEvent, \"loaded\" | \"total\">) => void;\n\tsignal?: AbortSignal;\n}\n\nexport type UploadPartFunction = (task: MultipartUploadTask) => Promise<string>;\n","type AwaitableParams<P extends unknown[]> = P extends [\n\tinfer First,\n\t...infer Rest,\n]\n\t? [First | Promise<First>, ...AwaitableParams<Rest>]\n\t: [];\n\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\ntype ResultType<P extends unknown[], R> = R extends Promise<any>\n\t? R\n\t: P extends [infer First, ...infer Rest]\n\t\t? // biome-ignore lint/suspicious/noExplicitAny: required for type inference\n\t\t\tFirst extends Promise<any>\n\t\t\t? Promise<R>\n\t\t\t: ResultType<Rest, R>\n\t\t: R;\n\n/**\n * A utility function that makes a function's parameters awaitable.\n * @param fn The function to enhance.\n * @returns The function with awaitable parameters.\n */\n// biome-ignore lint/suspicious/noExplicitAny: required for type inference\nexport const withAwaitableParams = <Fn extends (...args: any[]) => unknown>(\n\tfn: Fn,\n) => {\n\ttype Args = AwaitableParams<Parameters<Fn>>;\n\treturn <A extends Args>(...args: A): ResultType<A, ReturnType<Fn>> => {\n\t\t// biome-ignore lint/suspicious/noExplicitAny: required for type inference\n\t\tconst casted = args as Array<any | Promise<any>>;\n\t\tconst hasPromises = casted.some((arg) => arg instanceof Promise);\n\t\tif (hasPromises) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treturn Promise.all(casted)\n\t\t\t\t\t.then((args) => {\n\t\t\t\t\t\treturn fn(...args);\n\t\t\t\t\t})\n\t\t\t\t\t.then(resolve)\n\t\t\t\t\t.catch(reject);\n\t\t\t}) as ResultType<A, ReturnType<Fn>>;\n\t\t}\n\t\treturn fn(...args) as ResultType<A, ReturnType<Fn>>;\n\t};\n};\n","/*\nMIT LICENSE\nCopyright 2011 Jon Leighton\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport { withAwaitableParams } from \"./with-awaitable-params\";\n\nconst encodings =\n\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nfunction b64Raw(arrayBuffer: ArrayBuffer) {\n\tlet base64 = \"\";\n\n\tconst bytes = new Uint8Array(arrayBuffer);\n\tconst byteLength = bytes.byteLength;\n\tconst byteRemainder = byteLength % 3;\n\tconst mainLength = byteLength - byteRemainder;\n\n\tlet a: number;\n\tlet b: number;\n\tlet c: number;\n\tlet d: number;\n\tlet chunk: number;\n\n\t// Main loop deals with bytes in chunks of 3\n\tfor (let i = 0; i < mainLength; i = i + 3) {\n\t\t// Combine the three bytes into a single integer\n\t\tchunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n\n\t\t// Use bitmasks to extract 6-bit segments from the triplet\n\t\ta = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n\t\tb = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n\t\tc = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n\t\td = chunk & 63; // 63       = 2^6 - 1\n\n\t\t// Convert the raw binary segments to the appropriate ASCII encoding\n\t\tbase64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];\n\t}\n\n\t// Deal with the remaining bytes and padding\n\tif (byteRemainder === 1) {\n\t\tchunk = bytes[mainLength];\n\n\t\ta = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n\t\t// Set the 4 least significant bits to zero\n\t\tb = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n\t\tbase64 += `${encodings[a]}${encodings[b]}==`;\n\t} else if (byteRemainder === 2) {\n\t\tchunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];\n\n\t\ta = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n\t\tb = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n\t\t// Set the 2 least significant bits to zero\n\t\tc = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n\t\tbase64 += `${encodings[a]}${encodings[b]}${encodings[c]}=`;\n\t}\n\n\treturn base64;\n}\n\n/**\n * Encodes a buffer to a base64 string.\n * @param arrayBuffer The buffer to encode.\n * @returns The base64 encoded string.\n */\nexport const b64 = withAwaitableParams(b64Raw);\n","import { md5 as jsMd5 } from \"js-md5\";\n\n/**\n * Calculates the MD5 hash of a stream.\n * @param stream The stream to calculate the MD5 hash of.\n * @returns The MD5 hash of the stream.\n */\nexport async function md5(stream: ReadableStream<Uint8Array>) {\n\tconst hasher = jsMd5.create();\n\tawait stream.pipeTo(\n\t\tnew WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\thasher.update(chunk);\n\t\t\t},\n\t\t}),\n\t);\n\n\treturn hasher.arrayBuffer();\n}\n","import type { AttachableRecords, Sdk } from \"@/codegen/graphql/client\";\n\nimport { MULTIPART_UPLOAD_CHUNK_SIZE } from \"@/attachments/common\";\nimport { b64 } from \"@/utils/b64\";\nimport { md5 } from \"@/utils/md5\";\n\n/**\n * Prepares a file for upload.\n * @param data The file to upload.\n * @param record The record to upload the file to.\n * @returns The prepared file.\n */\nexport async function prepareAttachmentForUpload(\n\tthis: Sdk,\n\tdata: File | Blob,\n\trecord: AttachableRecords,\n) {\n\tconst isMultipart = data.size > MULTIPART_UPLOAD_CHUNK_SIZE;\n\tconst mediaDirectUpload = await this.attachments.uploadMedia({\n\t\tbyteSizeV2: data.size.toString(),\n\t\trecord,\n\t\tfilename: data instanceof File ? data.name : crypto.randomUUID(),\n\t\tcontentType: data.type,\n\t\tchecksum: await b64(md5(data.stream())),\n\t\tmultipart: isMultipart,\n\t});\n\n\tif (isMultipart) {\n\t\tif (\n\t\t\t!mediaDirectUpload?.multipartUploadId ||\n\t\t\t!mediaDirectUpload.multipartUploadUrls\n\t\t) {\n\t\t\tthrow new Error(\"Failed to prepare file\");\n\t\t}\n\n\t\treturn {\n\t\t\tdata,\n\t\t\tid: mediaDirectUpload.id,\n\t\t\tmultipartUploadUrls: mediaDirectUpload.multipartUploadUrls,\n\t\t\tmultipartUploadId: mediaDirectUpload.multipartUploadId,\n\t\t\trecord,\n\t\t\tmultipart: true as const,\n\t\t};\n\t}\n\n\tif (!mediaDirectUpload?.id || !mediaDirectUpload.uploadUrl) {\n\t\tthrow new Error(\"Failed to prepare file\");\n\t}\n\n\treturn {\n\t\tdata,\n\t\tid: mediaDirectUpload.id,\n\t\tuploadUrl: mediaDirectUpload.uploadUrl,\n\t\theaders: mediaDirectUpload.headers as Record<string, string>,\n\t\trecord,\n\t\tmultipart: false as const,\n\t};\n}\n\nexport type PreparedAttachment = Awaited<\n\tReturnType<typeof prepareAttachmentForUpload>\n>;\n","import type { getSdk } from \"@/codegen/graphql/client\";\nimport { analyzeAttachment as analyzeAttachmentFn } from \"./analyze\";\nimport { prepareAttachmentForUpload as prepareAttachmentForUploadFn } from \"./prepare\";\n\nexport type BaseSdk = ReturnType<typeof getSdk<RequestInit>>;\n\nexport function partialFileSdkExtensions(baseSdk: BaseSdk) {\n\tconst prepareAttachmentForUpload = prepareAttachmentForUploadFn.bind(baseSdk);\n\tconst analyzeAttachment = analyzeAttachmentFn.bind(baseSdk);\n\treturn {\n\t\tprepareAttachmentForUpload,\n\t\tanalyzeAttachment,\n\t};\n}\n\nexport type PartialFileSdkExtensions = ReturnType<\n\ttypeof partialFileSdkExtensions\n>;\n","import {\n\ttype BaseSdk,\n\tpartialFileSdkExtensions,\n} from \"./partial-file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"./upload\";\n\nexport function fileSdkExtensions(\n\tbaseSdk: BaseSdk,\n\tuploadAttachmentFn: ReturnType<typeof makeUploadAttachmentFunction>,\n) {\n\tconst partial = partialFileSdkExtensions(baseSdk);\n\n\tconst uploadAttachment = uploadAttachmentFn.bind({\n\t\t...baseSdk,\n\t\t...partial,\n\t});\n\n\treturn {\n\t\t...partial,\n\t\tuploadAttachment,\n\t};\n}\n\nexport type FileSdkExtensions = ReturnType<typeof fileSdkExtensions>;\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = {\n\t[K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]?: Maybe<T[SubKey]>;\n};\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]: Maybe<T[SubKey]>;\n};\nexport type MakeEmpty<\n\tT extends { [key: string]: unknown },\n\tK extends keyof T,\n> = { [_ in K]?: never };\nexport type Incremental<T> =\n\t| T\n\t| {\n\t\t\t[P in keyof T]?: P extends \" $fragmentName\" | \"__typename\" ? T[P] : never;\n\t  };\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n\tID: { input: string; output: string };\n\tString: { input: string; output: string };\n\tBoolean: { input: boolean; output: boolean };\n\tInt: { input: number; output: number };\n\tFloat: { input: number; output: number };\n\t/**\n\t * Represents non-fractional signed whole numeric values. Since the value may\n\t * exceed the size of a 32-bit integer, it's encoded as a string.\n\t */\n\tBigInt: { input: string; output: string };\n\t/**\n\t * The `Decimal` scalar type represents signed double-precision fractional\n\t * values. The Decimal appears in a JSON response as a string to preserve\n\t * precision.\n\t */\n\tDecimal: { input: string; output: string };\n\t/** Url to uploaded upload */\n\tFile: { input: string; output: string };\n\t/** Represents untyped JSON */\n\tJSON: { input: { [key: string]: any }; output: { [key: string]: any } };\n\t/** A number - float or integer */\n\tNumber: { input: number; output: number };\n\t/** String removes all html tags */\n\tSanitizedString: { input: string; output: string };\n\t/** A float that can be a string */\n\tStringFloat: { input: string | number; output: string | number };\n\t/** A valid timestamp in seconds, transported as an integer */\n\tTimestamp: { input: number; output: number };\n\t/** URL starting with http/https */\n\tUrlString: { input: string; output: string };\n}\n\n/** The name of the resource type that is being reported. */\nexport type AbuseReportCategoryResourceTypes =\n\t/** Page */\n\t\"Page\";\n\n/** Visibility of an abuse report category */\nexport type AbuseReportCategoryVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\";\n\n/** The status of the abuse report */\nexport type AbuseReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The high level payment processor options. */\nexport type AcceptedPaymentMethods =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\";\n\n/** The access level a given user (or company) has to an access pass or company. */\nexport type AccessLevel = \"admin\" | \"customer\" | \"no_access\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassAffiliateOrder =\n\t| \"cached_referrals_count\"\n\t| \"cached_usd_rewards\"\n\t| \"created_at\";\n\n/** An AccessPassAffiliate status */\nexport type AccessPassAffiliateStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\";\n\n/** The types of categories that can be used for AccessPass attachments. */\nexport type AccessPassAttachmentCategories =\n\t| \"affiliate_assets\"\n\t| \"gallery_images\";\n\n/** The conditions that an access pass can have */\nexport type AccessPassConditions = \"has_plans\";\n\n/** Values to filter access passes on */\nexport interface AccessPassFilters {\n\t/**\n\t * Whether or not this creator achieved the 3k in 30 milestone\n\t * @deprecated No longer available.\n\t */\n\tachievedThreeKInThirty?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/**\n\t * Whether or not to only return discoverable access passes.\n\t * @deprecated We only return discoverable access passes now.\n\t */\n\tdiscoverable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The discovery category to filter by\n\t * @deprecated The discovery AI API is no longer used.\n\t */\n\tdiscoveryCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The max global affiliate percentage */\n\tglobalAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tglobalAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The global affiliate status */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** An array, in order, of the category route tree that is being traversed. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The max global affiliate percentage */\n\tmemberAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tmemberAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicAccessPassesOrder>;\n\t/** The max price */\n\tpriceMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min price */\n\tpriceMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Filter to show only passes owned by students of the specified access pass */\n\tstudentsOfAccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Whether or not the access pass' company uses whop four\n\t * @deprecated No longer applies.\n\t */\n\tusesWhopFour?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The onboarding versions for access passes */\nexport type AccessPassOnboardingVersionTypes = \"mar_2025\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassOrder =\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"usd_gmv\"\n\t| \"usd_gmv_30_days\";\n\n/** Input for creating a product highlight */\nexport interface AccessPassProductHighlightInput {\n\t/**\n\t * Text to display to describe the product highlight (max length 250 for\n\t * qualification or benefits, 170 for who this is for, 140 for pricing features).\n\t */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The type of this highlight. */\n\thighlightType: ProductHighlightTypes;\n\t/** The title of the product highlight, if applicable. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Input for creating a social link for an access pass */\nexport interface AccessPassSocialLinkInput {\n\t/** The URL of the social link */\n\turl: Scalars[\"UrlString\"][\"input\"];\n\t/** The website this link is for */\n\twebsite: SocialLinkWebsites;\n}\n\n/** The different types an access pass can be. */\nexport type AccessPassTypes =\n\t/** Api Only */\n\t| \"api_only\"\n\t/** App */\n\t| \"app\"\n\t/** Experience Upsell */\n\t| \"experience_upsell\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type AccessPassesSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** The types of payouts an affiliate can have */\nexport type AffiliatePayoutTypes = \"flat_fee\" | \"percentage\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatePlansSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter affiliate referral logs on */\nexport interface AffiliateReferralLogFilters {\n\t/** Specific affiliates. */\n\taffiliateIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** A specific affiliate type. */\n\taffiliateType?: InputMaybe<AffiliateTypes>;\n\t/** Specific plans. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Specific users. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type AffiliateReferralLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The scope of an affiliate (company based, global, etc.) */\nexport type AffiliateTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Global */\n\t| \"global\"\n\t/** Marketplace */\n\t| \"marketplace\"\n\t/** Passholder */\n\t| \"passholder\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatesSortableColumns =\n\t| \"cached_total_referrals\"\n\t| \"cached_total_rewards\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** Autogenerated input type of AnalyzeAttachment */\nexport interface AnalyzeAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID returned by the direct upload mutation */\n\tdirectUploadId: Scalars[\"String\"][\"input\"];\n\t/** The type of media to analyze */\n\tmediaType: Media;\n\t/** The parts of the multipart upload */\n\tmultipartParts?: InputMaybe<Array<UploadPartInput>>;\n\t/** The ID returned by the direct upload mutation */\n\tmultipartUploadId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The different types of permissions an api key can have. */\nexport type ApiKeyPermissions =\n\t/** Add free days membership */\n\t| \"add_free_days_membership\"\n\t/** Cancel membership */\n\t| \"cancel_membership\"\n\t/** Create checkout request */\n\t| \"create_checkout_request\"\n\t/** Create checkout session */\n\t| \"create_checkout_session\"\n\t/** Create plan */\n\t| \"create_plan\"\n\t/** Create promo code */\n\t| \"create_promo_code\"\n\t/** Create push notification */\n\t| \"create_push_notification\"\n\t/** Create quick link */\n\t| \"create_quick_link\"\n\t/** Create webhook */\n\t| \"create_webhook\"\n\t/** Delete checkout session */\n\t| \"delete_checkout_session\"\n\t/** Delete experience */\n\t| \"delete_experience\"\n\t/** Delete promo code */\n\t| \"delete_promo_code\"\n\t/** Delete webhook */\n\t| \"delete_webhook\"\n\t/** List access passes */\n\t| \"list_access_passes\"\n\t/** List checkout sessions */\n\t| \"list_checkout_sessions\"\n\t/** List customers */\n\t| \"list_customers\"\n\t/** List experiences */\n\t| \"list_experiences\"\n\t/** List licenses */\n\t| \"list_licenses\"\n\t/** List members */\n\t| \"list_members\"\n\t/** List memberships */\n\t| \"list_memberships\"\n\t/** List payment fees */\n\t| \"list_payment_fees\"\n\t/** List payment methods */\n\t| \"list_payment_methods\"\n\t/** List payments */\n\t| \"list_payments\"\n\t/** List plans */\n\t| \"list_plans\"\n\t/** List products */\n\t| \"list_products\"\n\t/** List promo codes */\n\t| \"list_promo_codes\"\n\t/** List reviews */\n\t| \"list_reviews\"\n\t/** List webhooks */\n\t| \"list_webhooks\"\n\t/** Refund payment */\n\t| \"refund_payment\"\n\t/** Retrieve access pass */\n\t| \"retrieve_access_pass\"\n\t/** Retrieve checkout request */\n\t| \"retrieve_checkout_request\"\n\t/** Retrieve checkout session */\n\t| \"retrieve_checkout_session\"\n\t/** Retrieve company */\n\t| \"retrieve_company\"\n\t/** Retrieve customer */\n\t| \"retrieve_customer\"\n\t/** Retrieve experience */\n\t| \"retrieve_experience\"\n\t/** Retrieve member */\n\t| \"retrieve_member\"\n\t/** Retrieve membership */\n\t| \"retrieve_membership\"\n\t/** Retrieve payment */\n\t| \"retrieve_payment\"\n\t/** Retrieve plan */\n\t| \"retrieve_plan\"\n\t/** Retrieve product */\n\t| \"retrieve_product\"\n\t/** Retrieve promo code */\n\t| \"retrieve_promo_code\"\n\t/** Retrieve review */\n\t| \"retrieve_review\"\n\t/** Retrieve webhook */\n\t| \"retrieve_webhook\"\n\t/** Send notification customers */\n\t| \"send_notification_customers\"\n\t/** Send notification members */\n\t| \"send_notification_members\"\n\t/** Terminate membership */\n\t| \"terminate_membership\"\n\t/** Update access pass */\n\t| \"update_access_pass\"\n\t/** Update experience */\n\t| \"update_experience\"\n\t/** Update membership */\n\t| \"update_membership\"\n\t/** Update plan */\n\t| \"update_plan\"\n\t/** Update product */\n\t| \"update_product\"\n\t/** Update promo code */\n\t| \"update_promo_code\"\n\t/** Update webhook */\n\t| \"update_webhook\"\n\t/** Validate license */\n\t| \"validate_license\";\n\n/** The different API versions */\nexport type ApiVersion = \"v1\" | \"v2\" | \"v5\";\n\n/** The different platforms an app build can target. */\nexport type AppBuildPlatforms = \"android\" | \"ios\" | \"web\";\n\n/** The different statuses an AppBuild can be in. */\nexport type AppBuildStatuses = \"approved\" | \"draft\" | \"pending\" | \"rejected\";\n\n/** Image styles for app. */\nexport type AppImageStyles = \"s16\" | \"s24\" | \"s32\" | \"s40\" | \"s48\" | \"s80\";\n\n/** Input for creating a requested permission */\nexport interface AppRequestedPermissionInput {\n\t/** The action that the app will request off of users when a user installs the app. */\n\taction: Scalars[\"String\"][\"input\"];\n\t/** Whether the action is required for the app to function. */\n\tisRequired: Scalars[\"Boolean\"][\"input\"];\n\t/** The reason for requesting the action. */\n\tjustification: Scalars[\"String\"][\"input\"];\n}\n\n/** The status of an experience interface */\nexport type AppStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\"\n\t/** Unlisted */\n\t| \"unlisted\";\n\n/** These are the scopes an app can request on behalf of a user */\nexport type AppValidScopes =\n\t/** Read User */\n\t\"read_user\";\n\n/** The different types of an app view */\nexport type AppViewTypes =\n\t/** Analytics */\n\t| \"analytics\"\n\t/** Dash */\n\t| \"dash\"\n\t/** Dashboard */\n\t| \"dashboard\"\n\t/** Discover */\n\t| \"discover\"\n\t/** Hub */\n\t| \"hub\";\n\n/** The criteria for an application to the marketplace. */\nexport type ApplicationCriteriaIdentifier =\n\t/** App */\n\t| \"app\"\n\t/** Available Plan */\n\t| \"available_plan\"\n\t/** Benefit */\n\t| \"benefit\"\n\t/** Choose Category */\n\t| \"choose_category\"\n\t/** Description */\n\t| \"description\"\n\t/** Gallery Images */\n\t| \"gallery_images\"\n\t/** Headline */\n\t| \"headline\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Setup Payouts */\n\t| \"setup_payouts\"\n\t/** Title */\n\t| \"title\"\n\t/** Visibility */\n\t| \"visibility\";\n\n/** The types of records that an attachment can be attached to */\nexport type AttachableRecords =\n\t| \"abuse_report\"\n\t| \"access_pass\"\n\t| \"access_pass_collection\"\n\t| \"app\"\n\t| \"assessment_question\"\n\t| \"automated_messages_config\"\n\t| \"bot\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"competition_prize\"\n\t| \"content_reward_campaign\"\n\t| \"content_reward_submission\"\n\t| \"course_lesson\"\n\t| \"dispute\"\n\t| \"dms_post\"\n\t| \"experience\"\n\t| \"forum_post\"\n\t| \"information_request_item\"\n\t| \"resolution_event_upload\"\n\t| \"review\"\n\t| \"review_report\"\n\t| \"user\";\n\n/** Input for an attachment */\nexport interface AttachmentInput {\n\t/**\n\t * This ID should be used the first time you upload an attachment. It is the ID\n\t * of the direct upload that was created when uploading the file to S3 via the\n\t * mediaDirectUpload mutation.\n\t */\n\tdirectUploadId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The ID of an existing attachment object. Use this when updating a resource and\n\t * keeping a subset of the attachments. Don't use this unless you know what you're doing.\n\t */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Which columns can be used to sort. */\nexport type AuditLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The possible 2FA authentication types. */\nexport type AuthenticationMethods = \"authenticator\" | \"sms\";\n\n/** Valid resource types for authorizations */\nexport type AuthorizationResourceTypes =\n\t/** An app */\n\t| \"app\"\n\t/** A company */\n\t| \"company\"\n\t/** An experience */\n\t| \"experience\"\n\t/** A product */\n\t| \"product\";\n\n/** Possible roles an authorized user can have */\nexport type AuthorizedUserRoles =\n\t/** Admin */\n\t| \"admin\"\n\t/** App Manager */\n\t| \"app_manager\"\n\t/** Manager */\n\t| \"manager\"\n\t/** Moderator */\n\t| \"moderator\"\n\t/** Owner */\n\t| \"owner\"\n\t/** Sales Manager */\n\t| \"sales_manager\"\n\t/** Support */\n\t| \"support\";\n\n/** The different categories of automated messages triggers. */\nexport type AutomatedMessagesTriggerCategories = \"access_pass\" | \"app\";\n\n/** Image styles for avatar. */\nexport type AvatarImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** Balance reservation reservation types. */\nexport type BalanceReservationReservationTypes = \"bnpl\" | \"regular\";\n\n/** The reasons for banning a user */\nexport type BanReasons =\n\t| \"botting_content_rewards\"\n\t| \"botting_negative_reviews\"\n\t| \"control_center_blocked_country\"\n\t| \"harassment\"\n\t| \"other\"\n\t| \"spamming\";\n\n/** Autogenerated input type of BanUser */\nexport interface BanUserInput {\n\t/** The ID of the access pass to ban the user from */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom reason for banning the user */\n\tcustomReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the feed to delete messages from */\n\tdeleteMessagesInFeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The reason for banning the user */\n\treason?: InputMaybe<BanReasons>;\n\t/** The ID of the user to ban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The reason why a specific payment was billed */\nexport type BillingReasons =\n\t/** Manual */\n\t| \"manual\"\n\t/** One Time */\n\t| \"one_time\"\n\t/** Subscription */\n\t| \"subscription\"\n\t/** Subscription Create */\n\t| \"subscription_create\"\n\t/** Subscription Cycle */\n\t| \"subscription_cycle\"\n\t/** Subscription Update */\n\t| \"subscription_update\";\n\n/** The BNPL (Buy Now Pay Later) providers for a company */\nexport type BnplProvider =\n\t| \"afterpay_clearpay\"\n\t| \"klarna\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"zip\";\n\n/** Values to filter bounties on */\nexport interface BountyFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Ability to filter bounties by access passes in specific marketplace categories. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether to only include bounties that are not whop bounties. */\n\tnonWhopOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicBountiesOrder>;\n}\n\n/** The type of update an event is. */\nexport type BusinessActivityEventTypes =\n\t/** Member Canceled */\n\t| \"member_canceled\"\n\t/** Member Churned */\n\t| \"member_churned\"\n\t/** Member Joined */\n\t| \"member_joined\"\n\t/** New Dispute */\n\t| \"new_dispute\"\n\t/** New Marketplace Sale */\n\t| \"new_marketplace_sale\"\n\t/** New Payment */\n\t| \"new_payment\"\n\t/** New Waitlist Entry */\n\t| \"new_waitlist_entry\";\n\n/** Image styles for business_affiliate. */\nexport type BusinessAffiliateImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** The different business types a company can be. */\nexport type BusinessTypes =\n\t/** Agency */\n\t| \"agency\"\n\t/** Brick And Mortar */\n\t| \"brick_and_mortar\"\n\t/** Coaching */\n\t| \"coaching\"\n\t/** Coaching And Courses */\n\t| \"coaching_and_courses\"\n\t/** Community */\n\t| \"community\"\n\t/** Course */\n\t| \"course\"\n\t/** Education Program */\n\t| \"education_program\"\n\t/** Events */\n\t| \"events\"\n\t/** Newsletter */\n\t| \"newsletter\"\n\t/** Other */\n\t| \"other\"\n\t/** Paid Group */\n\t| \"paid_group\"\n\t/** Physical Products */\n\t| \"physical_products\"\n\t/** Saas */\n\t| \"saas\"\n\t/** Software */\n\t| \"software\";\n\n/** The modes for the buyer fee. */\nexport type BuyerFeeMode = \"use_account_fee\" | \"use_experiment_fee\";\n\n/** The different reasons a user can choose for why they are canceling their membership. */\nexport type CancelOptions =\n\t| \"bad_experience\"\n\t| \"missing_features\"\n\t| \"other\"\n\t| \"switching\"\n\t| \"technical_issues\"\n\t| \"testing\"\n\t| \"too_expensive\";\n\n/** The over-arching state of the resolution. */\nexport type CaseStates = \"closed\" | \"open\";\n\n/** Autogenerated input type of ChangeCardMyMembership */\nexport interface ChangeCardMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n\t/** The URL you want to take the user to when they return */\n\tredirectUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\n/** The different card funding methods a charge can have. */\nexport type ChargeCardFunding =\n\t/** Credit */\n\t| \"credit\"\n\t/** Debit */\n\t| \"debit\"\n\t/** Prepaid */\n\t| \"prepaid\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The different risk levels a charge can have. */\nexport type ChargeOutcomeRiskLevels =\n\t/** Elevated */\n\t| \"elevated\"\n\t/** Highest */\n\t| \"highest\"\n\t/** Normal */\n\t| \"normal\"\n\t/** Not Assessed */\n\t| \"not_assessed\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** Autogenerated input type of ChargeUser */\nexport interface ChargeUserInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount to charge the user */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency to charge in */\n\tcurrency: Currencies;\n\t/** The description of the charge. Maximum 200 characters. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Additional metadata for the charge */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to charge */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The possible statuses for a charge user response */\nexport type ChargeUserResponseStatus =\n\t/** The charge requires additional action from the user. */\n\t| \"needs_action\"\n\t/** The charge was successful */\n\t| \"success\";\n\n/** Chart interval (period). */\nexport type ChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** Input for a chat feed */\nexport interface ChatFeedInput {\n\t/** Whether or not media is banned in this chat */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this chat */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this chat */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The unique identifier for the feed */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this chat */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n\t/** Who can react on this chat */\n\twhoCanReact?: InputMaybe<WhoCanReactTypes>;\n}\n\n/** The type of checkout session being made */\nexport type CheckoutSessionTypes = \"in_app_purchase\" | \"purchase\";\n\n/** The state of the Coinbase Commerce connection. */\nexport type CoinbaseCommerceStatuses =\n\t/** The Coinbase commerce connection is broken and needs to be fixed with a new API key. */\n\t| \"broken\"\n\t/** The Coinbase Commerce account is missing a settlement address. This needs to be set from the coinbase dashboard. */\n\t| \"missing_settlement_address\"\n\t/** The Coinbase commerce connection is setup and ready to be used. */\n\t| \"setup\"\n\t/** The webhook connection has not been tested / verified. */\n\t| \"webhook_not_verified\";\n\n/** The ways a relation of Companies can be ordered */\nexport type CompaniesOrder = \"created_at\" | \"id\" | \"total_memberships_earnings\";\n\n/** The types of categories that can be used for company attachments. */\nexport type CompanyAttachmentCategories = \"gallery_images\";\n\n/** Image styles for company. */\nexport type CompanyImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** Attributes collected during company onboarding */\nexport interface CompanyOnboardingPlanOptions {\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** The method by which the plan is released to the public. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The visibility of the plan. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** DEPRECATED: The different types a company can be. */\nexport type CompanyTypes =\n\t| \"app\"\n\t| \"bot\"\n\t| \"community\"\n\t| \"nft\"\n\t| \"other\"\n\t| \"proxy\"\n\t| \"server\";\n\n/** The different types a competition can be */\nexport type CompetitionMetricTypes =\n\t/** Earnings Inside Access Pass */\n\t| \"earnings_inside_access_pass\"\n\t/** Global Earnings */\n\t| \"global_earnings\";\n\n/** The different types a competition prize can be */\nexport type CompetitionPrizeTypes =\n\t/** Cash */\n\t| \"cash\"\n\t/** Custom */\n\t| \"custom\";\n\n/** Statuses for connected accounts */\nexport type ConnectedAccountStatuses =\n\t| \"connected\"\n\t| \"needs_completion\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Different types of how a company's marketplace card should display its pricing / access. */\nexport type ConnectedAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The ordering options for content rewards */\nexport type ContentRewardsCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"expires_at\"\n\t| \"pending_submissions_count\"\n\t| \"submissions_count\"\n\t| \"total_budget\";\n\n/** The different statuses content reward campaigns can be assigned to */\nexport type ContentRewardsCampaignStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Pending */\n\t| \"pending\";\n\n/** Values to filter content rewards on */\nexport interface ContentRewardsCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The ID to filter campaigns for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different categories content reward campaigns can be assigned to */\nexport type ContentRewardsCategory =\n\t/** Brand */\n\t| \"brand\"\n\t/** Creator */\n\t| \"creator\"\n\t/** E Commerce */\n\t| \"e_commerce\"\n\t/** Entertainment */\n\t| \"entertainment\"\n\t/** Influencer */\n\t| \"influencer\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Music */\n\t| \"music\"\n\t/** Musician */\n\t| \"musician\"\n\t/** Other */\n\t| \"other\"\n\t/** Personal Brand */\n\t| \"personal_brand\"\n\t/** Podcast */\n\t| \"podcast\"\n\t/** Products */\n\t| \"products\"\n\t/** Software */\n\t| \"software\"\n\t/** Stream */\n\t| \"stream\"\n\t/** Streamer */\n\t| \"streamer\";\n\n/** The different types of content accepted by a content reward campaign */\nexport type ContentRewardsContentType =\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Faceless */\n\t| \"faceless\"\n\t/** Other */\n\t| \"other\"\n\t/** Ugc */\n\t| \"ugc\";\n\n/** The different platforms that content rewards submissions can be for */\nexport type ContentRewardsPlatform =\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Tiktok */\n\t| \"tiktok\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** The ordering options for public content rewards campaigns */\nexport type ContentRewardsPublicCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"budget_left\"\n\t| \"created_at\"\n\t| \"expires_at\";\n\n/** Values to filter public content rewards on */\nexport interface ContentRewardsPublicCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsPublicCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different results of submission analysis */\nexport type ContentRewardsSubmissionAnalysisResults =\n\t/** Fail */\n\t| \"fail\"\n\t/** Pass */\n\t| \"pass\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The reasons a content rewards submission can be flagged for. */\nexport type ContentRewardsSubmissionFlagReasons =\n\t/** Engagement Ratio */\n\t| \"engagement_ratio\"\n\t/** Ml Analysis */\n\t| \"ml_analysis\"\n\t/** Reported Botter */\n\t| \"reported_botter\"\n\t/** Text Analysis */\n\t| \"text_analysis\"\n\t/** Video Analysis */\n\t| \"video_analysis\"\n\t/** View Acceleration */\n\t| \"view_acceleration\"\n\t/** View Spike */\n\t| \"view_spike\";\n\n/** The different statuses content reward submissions can be assigned to */\nexport type ContentRewardsSubmissionStatus =\n\t/** Approved */\n\t| \"approved\"\n\t/** Flagged */\n\t| \"flagged\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsSubmissionViewsChartConfigInput {\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface ContentRewardsSubmissionsFilters {\n\t/**\n\t * The type of attachment required on the submission\n\t * @deprecated No longer available\n\t */\n\tattachmentType?: InputMaybe<FileAttachmentTypes>;\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter submissions by date created after */\n\tcreatedAtAfter?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter submissions by date created before */\n\tcreatedAtBefore?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** Whether to exclude banned users from the results */\n\texcludeBannedUsers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the submission was flagged by AI */\n\tflaggedByAi?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<ContentRewardsSubmissionsOrder>;\n\t/** Whether the submission has reached the minimum payout */\n\treachedMinimumPayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n\t/** Filter submissions by partial username match */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The result of the video analysis */\n\tvideoAnalysisResult?: InputMaybe<ContentRewardsSubmissionAnalysisResults>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type ContentRewardsSubmissionsOrder =\n\t| \"created_at\"\n\t| \"total_paid\"\n\t| \"total_view_count\";\n\n/** Which columns can be used to sort. */\nexport type ContentRewardsSubmissionsSortableColumns =\n\t| \"cached_total_paid\"\n\t| \"cached_total_view_count\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"status\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsViewsChartConfigInput {\n\t/** The ID of the campaign to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience to filter by */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The available types for an assessment question */\nexport type CoursesAssessmentQuestionTypes =\n\t/** Multiple choice */\n\t| \"multiple_choice\"\n\t/** Multiple select */\n\t| \"multiple_select\"\n\t/** Short answer */\n\t| \"short_answer\"\n\t/** True false */\n\t| \"true_false\";\n\n/** Autogenerated input type of CreateAccessPass */\nexport interface CreateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the access pass for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A written description of the access pass. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An array of experience IDs that this pass has */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The URLs of the images to upload to the access pass. */\n\timageUrls?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The ID of the marketplace category to assign to the access pass. */\n\tmarketplaceCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The details to assign an autogenerated plan. */\n\tplanOptions?: InputMaybe<CompanyOnboardingPlanOptions>;\n\t/** The product highlights for the access pass. */\n\tproductHighlights?: InputMaybe<Array<AccessPassProductHighlightInput>>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The social links for the access pass. */\n\tsocialLinks?: InputMaybe<Array<AccessPassSocialLinkInput>>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** Whether or not customers can upgrade to different plans on this access pass. */\n\tupgradeable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of CreateAffiliate */\nexport interface CreateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that the affiliate will be created for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The fee that the affiliate will receive for each referral (either a percentage or a flat fee). */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** Whether the affiliate will only receive one payout. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the fee is a percentage or a flat fee. */\n\tpayoutType: PayoutTypes;\n\t/** The ID of the plan that the affiliate can refer. */\n\tplanId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The username of the user who will become an affiliate */\n\tusername: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAgentUser */\nexport interface CreateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateAppBuild */\nexport interface CreateAppBuildInput {\n\t/** The ID of the app to create a build for. By default the current app from the api key is used. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Attachment input for the app build file. This should be an upload in .zip\n\t * format. The zip should contain at least one main_js_bundle.hbc file and\n\t * optionally an assets folder next to it.\n\t */\n\tattachment: AttachmentInput;\n\t/**\n\t * Checksum of the app build file. This is generated by the client and used to\n\t * verify the integrity of the file that is submitted when un-packaged later on a device.\n\t */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The platform of the app build (ios, android, web) */\n\tplatform: AppBuildPlatforms;\n\t/**\n\t * Supported app view types for the app build. A build can specify multiple view\n\t * types, but should only specify ones that its code supports.\n\t */\n\tsupportedAppViewTypes?: InputMaybe<Array<AppViewTypes>>;\n}\n\n/** Autogenerated input type of CreateApp */\nexport interface CreateAppInput {\n\t/** The base URL of the app to be created */\n\tbaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the app for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the app to be created */\n\tname: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAssessmentQuestion */\nexport interface CreateAssessmentQuestionInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The correct answer to the assessment question */\n\tcorrectAnswer: Scalars[\"String\"][\"input\"];\n\t/** The ID of the lesson to create the assessment question in */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n\t/** The text of the question being asked */\n\tquestionText: Scalars[\"String\"][\"input\"];\n\t/** The type of the assessment question */\n\tquestionType: CoursesAssessmentQuestionTypes;\n}\n\n/** Autogenerated input type of CreateChapter */\nexport interface CreateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to create the chapter in */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateChat */\nexport interface CreateChatInput {\n\t/** The ID of the access pass (whop) to attach the chat experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new chat experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the chat experience to be created. After this timestamp, the experience disappears. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the chat experience to be created, shown to users in the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the chat experience. This allows you to\n\t * require paid access for the chat within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to send messages inside the chat. Select 'admin' if you\n\t * only want the team members to message, or select 'everyone' if any member of\n\t * the whop can send messages.\n\t */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateCheckoutSession */\nexport interface CreateCheckoutSessionInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The metadata to use for the checkout session */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The ID of the plan to use for the checkout session */\n\tplanId: Scalars[\"ID\"][\"input\"];\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateCompanyMutedUser */\nexport interface CreateCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The time the user is muted until, in milliseconds. If not provided, the user will be muted indefinitely */\n\tmutedUntil?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user to mute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateCourse */\nexport interface CreateCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The cover image URL of the course */\n\tcoverImage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the experience to create the course in */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The tagline of the course */\n\ttagline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the course */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateForum */\nexport interface CreateForumInput {\n\t/** The ID of the access pass (whop) to attach the experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new forum experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the experience to be created. After this timestamp, the experience is deleted. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the forum experience to be created, shown to the user on the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the forum experience. This allows you to\n\t * require paid access for the forum within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to create posts inside the forum. Select 'admin' if you\n\t * only want the team members to post, or select 'everyone' if any member of the\n\t * whop can post. Default value is 'admins'.\n\t */\n\twhoCanPost?: InputMaybe<ForumWhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateForumPost */\nexport interface CreateForumPostInput {\n\t/** The attachments for this post, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the post. This is the main body of the post. Hidden if paywalled. */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the forum experience to send the message in. This will look like exp_xxxx. */\n\tforumExperienceId: Scalars[\"String\"][\"input\"];\n\t/**\n\t * This is used to determine if the post should be sent as a 'mention'\n\t * notification to all of the users who are in the experience. This means that\n\t * anyone with 'mentions' enabled will receive a notification about this post.\n\t */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the parent post, if applicable (Used when making a comment) */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallAmount?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The currency to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallCurrency?: InputMaybe<Currencies>;\n\t/** Whether the post should be pinned */\n\tpinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The poll for this post. A poll lets you collect responses to a multiple choice question. */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The title of the post. Visible if paywalled. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateInvoice */\nexport interface CreateInvoiceInput {\n\t/** Whether or not to charge the customer a buyer fee. */\n\tchargeBuyerFee?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The method of collection for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tcollectionMethod: InvoiceCollectionMethods;\n\t/** The company ID to create this invoice for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The name of the customer to create this invoice for. This is required if you\n\t * want to create an invoice for a customer who does not have a member of your company yet.\n\t */\n\tcustomerName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The date the invoice is due, if applicable. */\n\tdueDate: Scalars[\"Timestamp\"][\"input\"];\n\t/**\n\t * The email address to create this invoice for. This is required if you want to\n\t * create an invoice for a user who does not have a member of your company yet.\n\t */\n\temailAddress?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The member ID to create this invoice for. Include this if you want to create\n\t * an invoice for an existing member. If you do not have a member ID, you must\n\t * provide an email_address and customer_name.\n\t */\n\tmemberId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The payment token ID to use for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tpaymentTokenId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The properties of the plan to create for this invoice. */\n\tplan: InvoicePlanInput;\n\t/**\n\t * The properties of the access pass to create for this invoice. Include this if\n\t * you want to create an invoice for a new product.\n\t */\n\tproduct?: InputMaybe<InvoiceAccessPassInput>;\n\t/** The access pass ID to create this invoice for. Include this if you want to create an invoice for an existing product. */\n\tproductId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateLesson */\nexport interface CreateLessonInput {\n\t/** The ID of the chapter to create the lesson in */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The type of the lesson */\n\tlessonType: LessonTypes;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreatePromoCode */\nexport interface CreatePromoCodeInput {\n\t/** The access pass to lock the promo code to, if any. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount off (% or flat amount) for the promo. */\n\tamountOff: Scalars[\"StringFloat\"][\"input\"];\n\t/** The monetary currency of the promo code. */\n\tbaseCurrency: Currencies;\n\t/** Restricts promo use to only users who have churned from the company before. */\n\tchurnedUsersOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The specific code used to apply the promo at checkout. */\n\tcode: Scalars[\"String\"][\"input\"];\n\t/** The id of the company to create the promo code for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether this promo code is for existing memberships only (cancelations) */\n\texistingMembershipsOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The date/time of when the promo expires. */\n\texpirationDatetime?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Restricts promo use to only users who have never purchased from the company before. */\n\tnewUsersOnly: Scalars[\"Boolean\"][\"input\"];\n\t/** The number of billing cycles the promo is applied for. */\n\tnumberOfIntervals: Scalars[\"Int\"][\"input\"];\n\t/** Restricts promo use to only be applied once per customer. */\n\tonePerCustomer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The type (% or flat amount) of the promo. */\n\tpromoType: PromoTypes;\n\t/** The quantity limit on the number of uses. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not the promo code should have unlimited stock. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateWebhook */\nexport interface CreateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The resource to create the webhook for. By default this will use current company */\n\tresourceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to send the webhook to. */\n\turl: Scalars[\"UrlString\"][\"input\"];\n}\n\n/** Cancelation discounts for creator dashboard */\nexport type CreatorDashboardCancelationDiscounts =\n\t| \"canceled\"\n\t| \"used_discount_and_canceled\"\n\t| \"used_discount_and_did_not_cancel\";\n\n/** The configuration for a chart. */\nexport interface CreatorDashboardChartConfigInput {\n\t/** The access pass ids (tags) to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<CreatorDashboardChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Chart interval (period). */\nexport type CreatorDashboardChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** The different types of activity for a credit transaction */\nexport type CreditTransactionActivityTypes =\n\t| \"deductions\"\n\t| \"deposits\"\n\t| \"withdrawals\";\n\n/** Values to filter the credits on. */\nexport interface CreditTransactionFilters {\n\t/** Filter by activity type */\n\tactivityType?: InputMaybe<CreditTransactionActivityTypes>;\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Filter by status */\n\tstatuses?: InputMaybe<Array<CreditTransactionStatuses>>;\n}\n\n/** The statuses a credit transaction can have */\nexport type CreditTransactionStatuses =\n\t/** Finalized */\n\t| \"finalized\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The reasons for a credit transaction transfer */\nexport type CreditTransactionTransferReasons =\n\t| \"bounty_payout\"\n\t| \"content_reward_fixed_payout\"\n\t| \"content_reward_payout\"\n\t| \"content_reward_return\"\n\t| \"creator_to_creator\"\n\t| \"creator_to_user\"\n\t| \"pool_top_up\"\n\t| \"team_member_payout\"\n\t| \"user_to_creator\"\n\t| \"user_to_user\"\n\t| \"wadmin_transferred_funds\";\n\n/** The statuses a credit transaction transfer can have */\nexport type CreditTransactionTransferStatuses = \"completed\";\n\n/** The type a credit transaction transfer can have */\nexport type CreditTransactionTransferTypes =\n\t/** Admin */\n\t| \"admin\"\n\t/** User */\n\t| \"user\";\n\n/** Which columns can be used to sort. */\nexport type CreditTransactionTransfersSortableColumns = \"amount\" | \"created_at\";\n\n/** The eligible networks for a CryptoWallet */\nexport type CryptoWalletNetworks =\n\t/** Bitcoin */\n\t| \"bitcoin\"\n\t/** Ethereum */\n\t| \"ethereum\"\n\t/** Solana */\n\t| \"solana\";\n\n/** The available currencies on the platform */\nexport type Currencies =\n\t| \"aed\"\n\t| \"all\"\n\t| \"amd\"\n\t| \"ape\"\n\t| \"ars\"\n\t| \"aud\"\n\t| \"bam\"\n\t| \"bgn\"\n\t| \"bhd\"\n\t| \"bob\"\n\t| \"brl\"\n\t| \"bsd\"\n\t| \"btc\"\n\t| \"cad\"\n\t| \"chf\"\n\t| \"clp\"\n\t| \"cop\"\n\t| \"crc\"\n\t| \"czk\"\n\t| \"dkk\"\n\t| \"dop\"\n\t| \"dzd\"\n\t| \"egp\"\n\t| \"etb\"\n\t| \"eth\"\n\t| \"eur\"\n\t| \"gbp\"\n\t| \"ghs\"\n\t| \"gmd\"\n\t| \"gtq\"\n\t| \"gyd\"\n\t| \"hkd\"\n\t| \"huf\"\n\t| \"idr\"\n\t| \"ils\"\n\t| \"inr\"\n\t| \"jmd\"\n\t| \"jod\"\n\t| \"jpy\"\n\t| \"kes\"\n\t| \"khr\"\n\t| \"krw\"\n\t| \"kwd\"\n\t| \"lkr\"\n\t| \"mad\"\n\t| \"mdl\"\n\t| \"mga\"\n\t| \"mkd\"\n\t| \"mnt\"\n\t| \"mop\"\n\t| \"mur\"\n\t| \"mxn\"\n\t| \"myr\"\n\t| \"nad\"\n\t| \"ngn\"\n\t| \"nok\"\n\t| \"nzd\"\n\t| \"omr\"\n\t| \"pen\"\n\t| \"php\"\n\t| \"pkr\"\n\t| \"pln\"\n\t| \"pyg\"\n\t| \"qar\"\n\t| \"ron\"\n\t| \"rsd\"\n\t| \"rub\"\n\t| \"rwf\"\n\t| \"sar\"\n\t| \"sek\"\n\t| \"sgd\"\n\t| \"thb\"\n\t| \"tnd\"\n\t| \"try\"\n\t| \"ttd\"\n\t| \"twd\"\n\t| \"tzs\"\n\t| \"usd\"\n\t| \"uyu\"\n\t| \"uzs\"\n\t| \"vnd\"\n\t| \"xcd\"\n\t| \"xof\"\n\t| \"zar\";\n\n/** The different types of custom CTAs that can be selected. */\nexport type CustomCtas =\n\t/** Apply Now */\n\t| \"apply_now\"\n\t/** Call Now */\n\t| \"call_now\"\n\t/** Complete Order */\n\t| \"complete_order\"\n\t/** Contact Us */\n\t| \"contact_us\"\n\t/** Donate Now */\n\t| \"donate_now\"\n\t/** Get Access */\n\t| \"get_access\"\n\t/** Get Offer */\n\t| \"get_offer\"\n\t/** Join */\n\t| \"join\"\n\t/** Order Now */\n\t| \"order_now\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Shop Now */\n\t| \"shop_now\"\n\t/** Sign Up */\n\t| \"sign_up\"\n\t/** Subscribe */\n\t| \"subscribe\";\n\nexport interface CustomFieldInput {\n\t/** The type of the custom field. */\n\tfieldType: CustomFieldTypes;\n\t/** The ID of the custom field (if being updated) */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the custom field. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/** The order of the field. */\n\torder?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The placeholder value of the field. */\n\tplaceholder?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the field is required. */\n\trequired?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The type of the custom field. */\nexport type CustomFieldTypes =\n\t/** Text */\n\t\"text\";\n\n/** Autogenerated input type of DeleteAccessPass */\nexport interface DeleteAccessPassInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID (tag) of the access pass to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteAssessmentQuestionImage */\nexport interface DeleteAssessmentQuestionImageInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteChapter */\nexport interface DeleteChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteCompanyMutedUser */\nexport interface DeleteCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unmute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLessonAttachment */\nexport interface DeleteLessonAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLesson */\nexport interface DeleteLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeletePromoCode */\nexport interface DeletePromoCodeInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID of the promo code to archive. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteWebhook */\nexport interface DeleteWebhookInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the webhook to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The type of device a user can use to access Whop */\nexport type Device = \"android\" | \"desktop_web\" | \"ios\" | \"mobile_web\";\n\n/** The status of the direct message. */\nexport type DirectMessageStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** Autogenerated input type of DirectUpload */\nexport interface DirectUploadInput {\n\t/** The size of the file in bytes */\n\tbyteSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tbyteSizeV2?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\t/** The checksum of the file */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content type of the file */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The filename of the file */\n\tfilename: Scalars[\"String\"][\"input\"];\n\t/** The metadata of the file */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not to use multipart upload. The file must be larger than 5MB */\n\tmultipart?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of record to attach the file to */\n\trecord: AttachableRecords;\n}\n\n/** The direction of the sort. */\nexport type Direction = \"asc\" | \"desc\";\n\n/** Image styles for discord_account. */\nexport type DiscordAccountImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** The available discover statuses to choose from. */\nexport type DiscoverStatuses =\n\t/** Live Discover */\n\t| \"live_discover\"\n\t/** Not Available */\n\t| \"not_available\";\n\n/** The dispute risk levels of a ledger account, derived from the ledger account stat */\nexport type DisputeRiskLevels =\n\t/** At Risk */\n\t| \"at_risk\"\n\t/** High */\n\t| \"high\"\n\t/** Low */\n\t| \"low\"\n\t/** Medium */\n\t| \"medium\"\n\t/** Removal */\n\t| \"removal\";\n\n/** The possible statuses of a dispute */\nexport type DisputeStatuses =\n\t/** Closed */\n\t| \"closed\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Needs Response */\n\t| \"needs_response\"\n\t/** Other */\n\t| \"other\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Warning Closed */\n\t| \"warning_closed\"\n\t/** Warning Needs Response */\n\t| \"warning_needs_response\"\n\t/** Warning Under Review */\n\t| \"warning_under_review\"\n\t/** Won */\n\t| \"won\";\n\n/** Which columns can be used to sort. */\nexport type DisputesSortableColumns =\n\t| \"amount\"\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"needs_response_by\";\n\n/** Sort options for DM channels */\nexport type DmsChannelsSortTypes =\n\t| \"created_at\"\n\t| \"custom_name\"\n\t| \"last_post_sent_at\"\n\t| \"query\";\n\n/** The input to create a DMs feed */\nexport interface DmsFeedInput {\n\t/** The collection ID for the feed */\n\tcollectionIdentifier?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The custom name for the feed */\n\tcustomName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The unique identifier for the entity */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Input for a DMs feed member */\nexport interface DmsFeedMemberInput {\n\t/** The ID of the DM channel */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Timestamp when the member last viewed the channel (in milliseconds since Unix epoch) */\n\tlastViewedAt?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The notification preference for this member (all, mentions, none) */\n\tnotificationPreference?: InputMaybe<DmsFeedMemberNotificationPreferences>;\n\t/** The status of the member (active, inactive, banned) */\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The notification preferences for a DMs feed member */\nexport type DmsFeedMemberNotificationPreferences =\n\t/** All */\n\t| \"all\"\n\t/** Mentions */\n\t| \"mentions\"\n\t/** None */\n\t| \"none\";\n\n/** The statuses of a DMs feed member */\nexport type DmsFeedMemberStatuses =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of DMs feeds */\nexport type DmsFeedTypes = \"direct_message\" | \"group_chat\";\n\n/** The input to create a post in a feed */\nexport interface DmsPostInput {\n\t/** The attachments for this message */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** The content of the post */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the DM channel this post belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this post belongs to */\n\tfeedType: FeedTypes;\n\t/**\n\t * The file attachments for this message\n\t * @deprecated Use attachments instead\n\t */\n\tfileAttachments?: InputMaybe<Array<FileAttachmentInput>>;\n\t/** The GIFs attached to this message */\n\tgifs?: InputMaybe<Array<GifInput>>;\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether everyone was mentioned in the post */\n\tisEveryoneMentioned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the post is pinned */\n\tisPinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The link embeds for this message */\n\tlinkEmbeds?: InputMaybe<Array<LinkEmbedInput>>;\n\t/** The IDs of the users mentioned in the post */\n\tmentionedUserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The ID of the parent post, if applicable */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The poll for this message */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The ID of the message this is replying to, if applicable */\n\treplyingToPostId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The rich content of the post */\n\trichContent?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n}\n\n/** The types of post */\nexport type DmsPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** The types of earnings on the platform */\nexport type EarningsReportPeriods =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The types of earnings on the platform */\nexport type EarningsTypes =\n\t/** Affiliate Payment */\n\t| \"affiliate_payment\"\n\t/** Bounty Payout */\n\t| \"bounty_payout\"\n\t/** Company Referral */\n\t| \"company_referral\"\n\t/** Content Reward Fixed Payout */\n\t| \"content_reward_fixed_payout\"\n\t/** Content Reward Payout */\n\t| \"content_reward_payout\"\n\t/** Creator To Creator */\n\t| \"creator_to_creator\"\n\t/** Creator To User */\n\t| \"creator_to_user\"\n\t/** Membership Referral */\n\t| \"membership_referral\"\n\t/** Payment Payout */\n\t| \"payment_payout\"\n\t/** Team Member Payout */\n\t| \"team_member_payout\"\n\t/** User To Creator */\n\t| \"user_to_creator\"\n\t/** User To User */\n\t| \"user_to_user\";\n\n/** The type of entity to fetch */\nexport type EntityTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Dms Feed Member */\n\t| \"dms_feed_member\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Forum Post */\n\t| \"forum_post\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Muted User */\n\t| \"muted_user\"\n\t/** Reaction */\n\t| \"reaction\";\n\n/** Filters for the entries table. */\nexport interface EntriesFiltersInput {\n\t/** The access pass IDs to filter the entries by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the entries by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The plan IDs to filter the entries by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the entries by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the entries by */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** Which columns can be used to sort. */\nexport type EntriesSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter entries on */\nexport interface EntryFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What the results should be ordered by. */\n\torder?: InputMaybe<EntryOrder>;\n\t/** A specific status */\n\tstatus?: InputMaybe<EntryStatus>;\n\t/** A list of statuses */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** The order to sort the entries by */\nexport type EntryOrder =\n\t| \"created_at\"\n\t| \"member_discord\"\n\t| \"member_username\"\n\t| \"selected\";\n\n/** The status of an entry to a waitlist or raffle. */\nexport type EntryStatus = \"any\" | \"approved\" | \"denied\" | \"pending\";\n\n/** An entry can either be a watlist or raffle */\nexport type EntryTypes = \"raffle\" | \"waitlist\";\n\n/** The different access levels for experiences (PUBLIC IS NEVER USED ANYMORE). */\nexport type ExperienceAccessLevels = \"private\" | \"public\";\n\n/** The type of content that this experience card contains */\nexport type ExperienceActivityCardTypes =\n\t| \"availability\"\n\t| \"booking\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"calendar_bookings_availability\"\n\t| \"calendar_bookings_booking\"\n\t| \"campaign\"\n\t| \"content\"\n\t| \"content_rewards_campaign\"\n\t| \"content_rewards_submission\"\n\t| \"course\"\n\t| \"dms_post\"\n\t| \"event\"\n\t| \"events_event\"\n\t| \"events_rsvp\"\n\t| \"feed_dms_post\"\n\t| \"feed_forum_post\"\n\t| \"feed_livestream_feed\"\n\t| \"forum_post\"\n\t| \"livestream_feed\"\n\t| \"rsvp\"\n\t| \"spin\"\n\t| \"submission\"\n\t| \"wheel\"\n\t| \"wheel_spin\"\n\t| \"wheel_wheel\";\n\n/** Values to filter plans on */\nexport interface ExperienceFilters {\n\t/**\n\t * The access level to filter on.\n\t * @deprecated You can't filter by access level anymore\n\t */\n\taccessLevel?: InputMaybe<ExperienceAccessLevels>;\n\t/** The ID of the access pass to filter on. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience interface to filter on. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of experience.. */\n\texperienceType?: InputMaybe<ExperienceTypes>;\n\t/** Either includes or excludes experiences on a given access pass. */\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The query to search for. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The types of links that can be generated. */\nexport type ExperienceLinkModes = \"iframe_link\" | \"link\";\n\n/** The different types of experiences that can be created. */\nexport type ExperienceTypes =\n\t/** Has Interface */\n\t\"has_interface\";\n\n/** The type of feed to fetch from */\nexport type FeedTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Universal Post */\n\t| \"universal_post\"\n\t/** User */\n\t| \"user\";\n\n/** Input for a file attachment */\nexport interface FileAttachmentInput {\n\t/** The aspect ratio of the image, if applicable */\n\taspectRatio?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The type of the attachment (e.g., image, video) */\n\tattachmentType: FileAttachmentTypes;\n\t/** The blurred data URL for image preview */\n\tblurUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The attachment's content type (e.g., image/jpg, video/mp4) */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the file */\n\tfileName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tfileSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The URL to access the file */\n\tfileUrl: Scalars[\"String\"][\"input\"];\n\t/** The height of the image */\n\theight?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the file attachment */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to access the thumbnail */\n\tthumbnailUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The width of the image */\n\twidth?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different moderation results for a file attachment. */\nexport type FileAttachmentModerationResultsTypes =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** The types of supported file attachments */\nexport type FileAttachmentTypes =\n\t/** Audio */\n\t| \"audio\"\n\t/** File */\n\t| \"file\"\n\t/** Image */\n\t| \"image\"\n\t/** Unknown */\n\t| \"unknown\"\n\t/** Video */\n\t| \"video\";\n\n/** The duration of a FlashSale */\nexport type FlashSaleDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\";\n\n/** The status of a FlashSale */\nexport type FlashSaleStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Draft */\n\t| \"draft\";\n\n/** Email notification preference option for a forum feed */\nexport type ForumEmailNotificationPreferences =\n\t| \"all_admin_posts\"\n\t| \"none\"\n\t| \"only_weekly_summary\";\n\n/** The layout display option of a forum feed */\nexport type ForumLayoutTypes = \"blog\" | \"feed\";\n\n/** The types of post */\nexport type ForumPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** Who can comment on a forum feed */\nexport type ForumWhoCanCommentTypes = \"admins\" | \"everyone\";\n\n/** Who can post on a forum feed */\nexport type ForumWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** The friendly status of a receipt */\nexport type FriendlyReceiptStatus =\n\t| \"auto_refunded\"\n\t| \"canceled\"\n\t| \"dispute_warning\"\n\t| \"drafted\"\n\t| \"failed\"\n\t| \"incomplete\"\n\t| \"open_dispute\"\n\t| \"open_resolution\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"pending\"\n\t| \"price_too_low\"\n\t| \"refunded\"\n\t| \"succeeded\"\n\t| \"uncollectible\"\n\t| \"unresolved\";\n\n/** A gateway for a payment token. */\nexport type GatewayTypes =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\";\n\n/** Input for a GIF attachment */\nexport interface GifInput {\n\t/** The height of the GIF in pixels */\n\theight: Scalars[\"Int\"][\"input\"];\n\t/** The original URL of the GIF */\n\toriginalUrl: Scalars[\"String\"][\"input\"];\n\t/** The URL for a preview image of the GIF */\n\tpreviewUrl: Scalars[\"String\"][\"input\"];\n\t/** The provider of the GIF */\n\tprovider: GifProviders;\n\t/** The unique identifier of the GIF */\n\tslug: Scalars[\"ID\"][\"input\"];\n\t/** The title of the GIF */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The URL of the full GIF */\n\turl: Scalars[\"String\"][\"input\"];\n\t/** The width of the GIF in pixels */\n\twidth: Scalars[\"Int\"][\"input\"];\n}\n\n/** The types of supported GIFs providers */\nexport type GifProviders =\n\t/** Giphy */\n\t\"giphy\";\n\n/** The different statuses of the global affiliate program for an access pass. */\nexport type GlobalAffiliateStatuses = \"disabled\" | \"enabled\";\n\n/** The scope of the results to return. */\nexport type HubMembershipStatus = \"active\" | \"inactive\";\n\n/** Predefined attachment variants */\nexport type ImageAttachmentVariants =\n\t| \"legacy\"\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s720x1280\"\n\t| \"s720x1280fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1080x1920\"\n\t| \"s1080x1920fit\"\n\t| \"s1080x1920fit_h264_vq7\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\"\n\t| \"s1920x1080fit_h264_vq7\"\n\t| \"x2\"\n\t| \"x5\";\n\n/** Allowed image file types for uploading to the platform */\nexport type ImageExtensions = \"GIF\" | \"JPEG\" | \"JPG\" | \"PNG\" | \"SVG\" | \"WEBP\";\n\n/** Image styles for image. */\nexport type ImageImageStyles =\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The different industry types a company can be in. */\nexport type IndustryTypes =\n\t/** Accessories */\n\t| \"accessories\"\n\t/** Agencies */\n\t| \"agencies\"\n\t/** Ai */\n\t| \"ai\"\n\t/** Ai Agency */\n\t| \"ai_agency\"\n\t/** Amazon Fba */\n\t| \"amazon_fba\"\n\t/** Auto Repair Shop */\n\t| \"auto_repair_shop\"\n\t/** Beauty And Personal Care */\n\t| \"beauty_and_personal_care\"\n\t/** Bootcamps */\n\t| \"bootcamps\"\n\t/** Business */\n\t| \"business\"\n\t/** Careers */\n\t| \"careers\"\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Clipping Agency */\n\t| \"clipping_agency\"\n\t/** Clothing */\n\t| \"clothing\"\n\t/** Coaching Agency */\n\t| \"coaching_agency\"\n\t/** Coffee Shop */\n\t| \"coffee_shop\"\n\t/** Concerts */\n\t| \"concerts\"\n\t/** Convention */\n\t| \"convention\"\n\t/** Customer Support Agency */\n\t| \"customer_support_agency\"\n\t/** Dating */\n\t| \"dating\"\n\t/** Design Agency */\n\t| \"design_agency\"\n\t/** Development Agency */\n\t| \"development_agency\"\n\t/** Ecommerce */\n\t| \"ecommerce\"\n\t/** Electronics And Gadgets */\n\t| \"electronics_and_gadgets\"\n\t/** Fitness */\n\t| \"fitness\"\n\t/** Fitness Gear */\n\t| \"fitness_gear\"\n\t/** Food And Beverages */\n\t| \"food_and_beverages\"\n\t/** Gym */\n\t| \"gym\"\n\t/** Health And Wellness */\n\t| \"health_and_wellness\"\n\t/** Home Goods */\n\t| \"home_goods\"\n\t/** Home Services */\n\t| \"home_services\"\n\t/** Hotel Lodging */\n\t| \"hotel_lodging\"\n\t/** Kindle Book Publishing */\n\t| \"kindle_book_publishing\"\n\t/** Marketing Agency */\n\t| \"marketing_agency\"\n\t/** Masterminds */\n\t| \"masterminds\"\n\t/** Medical Dentist Office */\n\t| \"medical_dentist_office\"\n\t/** Meetups */\n\t| \"meetups\"\n\t/** Other */\n\t| \"other\"\n\t/** Parties */\n\t| \"parties\"\n\t/** Personal Development */\n\t| \"personal_development\"\n\t/** Personal Finance */\n\t| \"personal_finance\"\n\t/** Public Speaking */\n\t| \"public_speaking\"\n\t/** Real Estate */\n\t| \"real_estate\"\n\t/** Recruiting Agency */\n\t| \"recruiting_agency\"\n\t/** Reselling */\n\t| \"reselling\"\n\t/** Restaurant */\n\t| \"restaurant\"\n\t/** Retail Store */\n\t| \"retail_store\"\n\t/** Sales */\n\t| \"sales\"\n\t/** Sales Agency */\n\t| \"sales_agency\"\n\t/** Salon Spa */\n\t| \"salon_spa\"\n\t/** Social Media */\n\t| \"social_media\"\n\t/** Software */\n\t| \"software\"\n\t/** Spirituality */\n\t| \"spirituality\"\n\t/** Sports Betting */\n\t| \"sports_betting\"\n\t/** Supplements */\n\t| \"supplements\"\n\t/** Trading */\n\t| \"trading\"\n\t/** Travel */\n\t| \"travel\"\n\t/** Vas */\n\t| \"vas\"\n\t/** Video Games */\n\t| \"video_games\"\n\t/** Webinars */\n\t| \"webinars\";\n\n/** The collection type for an information request item */\nexport type InformationRequestItemCollectionType = \"multi\" | \"none\" | \"single\";\n\n/** The format of the text for an information request item */\nexport type InformationRequestItemTextFormat =\n\t| \"email\"\n\t| \"phone\"\n\t| \"plain\"\n\t| \"url\";\n\n/** The statuses an information request can have */\nexport type InformationRequestStatus =\n\t| \"awaiting_review\"\n\t| \"canceled\"\n\t| \"completed\"\n\t| \"requires_collection\";\n\n/** The different error codes for instant payouts */\nexport type InstantPayoutErrorCodes =\n\t/** Account Daily Limit Reached */\n\t| \"account_daily_limit_reached\"\n\t/** Amount Too High */\n\t| \"amount_too_high\"\n\t/** Feature Disabled */\n\t| \"feature_disabled\"\n\t/** Only Us Accounts */\n\t| \"only_us_accounts\"\n\t/** Only Usd */\n\t| \"only_usd\"\n\t/** Platform Daily Limit Reached */\n\t| \"platform_daily_limit_reached\"\n\t/** Restricted Account */\n\t| \"restricted_account\"\n\t/** Unsupported External Account */\n\t| \"unsupported_external_account\";\n\n/** The properties of the access pass to create for this invoice. */\nexport interface InvoiceAccessPassInput {\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** The method of collection for an invoice. */\nexport type InvoiceCollectionMethods =\n\t/** Charge a specific payment method for a customer. */\n\t| \"charge_automatically\"\n\t/** Send an invoice to the customer via email. */\n\t| \"send_invoice\";\n\n/** The properties of the plan to create for this invoice. */\nexport interface InvoicePlanInput {\n\t/** Whether or not ACH payments are accepted */\n\tachPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not card payments are accepted */\n\tcardPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether coinbase commerce payments are/aren't accepted. */\n\tcoinbaseCommerceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The description of the plan. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** A personal description or notes section for the business. */\n\tinternalNotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to offer a discount to cancel a subscription. */\n\tofferCancelDiscount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether paypal payments are/aren't accepted. */\n\tpaypalAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** Marks whether platform balance payments are/aren't accepted. */\n\tplatformBalanceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The URL to redirect the customer to after purchase. */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This is the release method the business uses to sell this plan. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** Configurable settings on how this plan is released. */\n\treleaseMethodSettings?: InputMaybe<ReleaseMethodSettingsInput>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The number of payments required before pausing the subscription. */\n\tsplitPayRequiredPayments?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Marks whether payments using splitit, a payment processor, are/aren't accepted for the plan. */\n\tsplititAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of units available for purchase. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The number of free trial days added before a renewal plan. */\n\ttrialPeriodDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Limits/doesn't limit the number of units available for purchase. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Shows or hides the plan from public/business view. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** The different statuses an invoice can be in */\nexport type InvoiceStatuses =\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Void */\n\t| \"void\";\n\n/** Filters for the invoices table. */\nexport interface InvoicesFiltersInput {\n\t/** The access pass IDs to filter the invoices by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The collection methods to filter the invoices by */\n\tcollectionMethods?: InputMaybe<Array<InvoiceCollectionMethods>>;\n\t/** The statuses to filter the invoices by */\n\tstatuses?: InputMaybe<Array<InvoiceStatuses>>;\n}\n\n/** Which columns can be used to sort. */\nexport type InvoicesSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** A type of order that the ItemOrdering represents. */\nexport type ItemOrderingOrderTypes =\n\t/** Experience */\n\t| \"experience\"\n\t/** Hub Creator */\n\t| \"hub_creator\"\n\t/** Hub Customer */\n\t| \"hub_customer\";\n\n/** The available languages for a course */\nexport type Languages =\n\t/** Bg */\n\t| \"bg\"\n\t/** Ca */\n\t| \"ca\"\n\t/** Cs */\n\t| \"cs\"\n\t/** Da */\n\t| \"da\"\n\t/** De */\n\t| \"de\"\n\t/** El */\n\t| \"el\"\n\t/** En */\n\t| \"en\"\n\t/** Es */\n\t| \"es\"\n\t/** Fi */\n\t| \"fi\"\n\t/** Fr */\n\t| \"fr\"\n\t/** Hr */\n\t| \"hr\"\n\t/** It */\n\t| \"it\"\n\t/** Nl */\n\t| \"nl\"\n\t/** No */\n\t| \"no\"\n\t/** Pl */\n\t| \"pl\"\n\t/** Pt */\n\t| \"pt\"\n\t/** Ro */\n\t| \"ro\"\n\t/** Ru */\n\t| \"ru\"\n\t/** Sk */\n\t| \"sk\"\n\t/** Sv */\n\t| \"sv\"\n\t/** Tr */\n\t| \"tr\"\n\t/** Uk */\n\t| \"uk\";\n\n/** The different types of leaderboards that can be fetched */\nexport type LeaderboardTypes =\n\t| \"affiliate_earnings\"\n\t| \"average_time_spent\"\n\t| \"money_earned_last_7_days\"\n\t| \"money_earned_last_24_hours\"\n\t| \"money_earned_last_30_days\"\n\t| \"new_users\"\n\t| \"top_rated\"\n\t| \"total_time_spent\"\n\t| \"usd_gmv\"\n\t| \"whop_partners_earnings_last_30_days\"\n\t| \"whop_partners_gtv_last_30_days\";\n\n/** Which columns can be used to sort. */\nexport type LeadsSortableColumns = \"created_at\" | \"id\";\n\n/** The different statuses a LedgerAccountAudit can be */\nexport type LedgerAccountAuditStatuses =\n\t/** Requested More Information */\n\t| \"requested_more_information\"\n\t/** Reserves Imposed */\n\t| \"reserves_imposed\";\n\n/** The standing of a ledger account, based on their dispute risk scores */\nexport type LedgerAccountStandings = \"at_risk\" | \"good\";\n\n/** The types of ledgers that can be created. */\nexport type LedgerTypes =\n\t/** Pool */\n\t| \"pool\"\n\t/** Primary */\n\t| \"primary\";\n\n/** The different withdrawal frequencies a LedgerAccount can have */\nexport type LedgerWithdrawalFrequencies =\n\t/** Daily */\n\t| \"daily\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Monthly */\n\t| \"monthly\"\n\t/** Weekly */\n\t| \"weekly\";\n\n/** The different statuses a LedgerAccount's withdrawal_status can be */\nexport type LedgerWithdrawalStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The available types for a lesson */\nexport type LessonTypes =\n\t/** Knowledge check */\n\t| \"knowledge_check\"\n\t/** Multi */\n\t| \"multi\"\n\t/** Pdf */\n\t| \"pdf\"\n\t/** Quiz */\n\t| \"quiz\"\n\t/** Text */\n\t| \"text\"\n\t/** Video */\n\t| \"video\";\n\n/** The available visibilities for a lesson. Determines how / whether a lesson is visible to users. */\nexport type LessonVisibilities =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The order to sort liked discover access passes by. */\nexport type LikedDiscoverAccessPassesOrder =\n\t/** Sort by promo code presence first, then rated at date */\n\t| \"promo_code_and_rated_at\"\n\t/** Sort by when the access pass was rated */\n\t| \"rated_at\";\n\n/** Input for a link embed */\nexport interface LinkEmbedInput {\n\t/** The URL of the linked content */\n\turl: Scalars[\"String\"][\"input\"];\n}\n\n/** Possible livestream destinations a user can restream to */\nexport type LivestreamDestination =\n\t/** Facebook */\n\t| \"facebook\"\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Kick */\n\t| \"kick\"\n\t/** Rumble */\n\t| \"rumble\"\n\t/** Steam */\n\t| \"steam\"\n\t/** Telegram */\n\t| \"telegram\"\n\t/** Twitch */\n\t| \"twitch\"\n\t/** Vimeo */\n\t| \"vimeo\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** Input for a livestream feed */\nexport interface LivestreamFeedInput {\n\t/** Whether or not media is banned in this livestream */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this livestream */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this livestream */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The description of this livestream */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The empty timeout of this livestream */\n\temptyTimeout?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The unique identifier for the feed */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of participants that can join the livestream (0 is unlimited) */\n\tmaxParticipants?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The metadata of this livestream */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not live reactions are enabled in this livestream */\n\treactionsEnabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The destinations to restream to */\n\trestreamDestinations?: InputMaybe<Array<LivestreamDestination>>;\n\t/** The scheduled time of this livestream */\n\tscheduledAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The title of this livestream */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this livestream */\n\twhoCanPost?: InputMaybe<LivestreamWhoCanPostTypes>;\n\t/** Who can react on this livestream */\n\twhoCanReact?: InputMaybe<LivestreamWhoCanReactTypes>;\n}\n\n/** The status of a livestream recording */\nexport type LivestreamRecordingStatus =\n\t/** Completed */\n\t| \"completed\"\n\t/** Failed */\n\t| \"failed\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Recording */\n\t| \"recording\";\n\n/** Who can post on a livestream feed */\nexport type LivestreamWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a livestream feed */\nexport type LivestreamWhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter made for you affiliates on */\nexport interface MadeForYouPlanFilters {\n\t/** Search by plan name, product name, or company name */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The sub-items that should be displayed for the stripe account. */\nexport type ManagementItems =\n\t| \"billing_details\"\n\t| \"country\"\n\t| \"merchant_of_record\"\n\t| \"payout_frequency\";\n\n/** Autogenerated input type of MarkLessonAsCompleted */\nexport interface MarkLessonAsCompletedInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to mark as completed */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The columns that can be used to order. */\nexport type MarketplaceCategoryOrder =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"live_access_pass_count\"\n\t| \"live_page_count\"\n\t| \"manual_position\"\n\t| \"name\"\n\t| \"random\";\n\n/** The marketplace types that are available for categories. */\nexport type MarketplaceCategoryTypes =\n\t/** App */\n\t| \"app\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The available marketplace statuses to choose from. */\nexport type MarketplaceStatuses =\n\t| \"live_marketplace\"\n\t| \"not_available\"\n\t| \"pending_review\";\n\nexport type Media = \"audio\" | \"image\" | \"other\" | \"video\";\n\n/** The different most recent actions a member can have. */\nexport type MemberMostRecentActions =\n\t/** Canceling */\n\t| \"canceling\"\n\t/** Churned */\n\t| \"churned\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expiring */\n\t| \"expiring\"\n\t/** Finished Split Pay */\n\t| \"finished_split_pay\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\"\n\t/** Paid Once */\n\t| \"paid_once\"\n\t/** Paid Subscriber */\n\t| \"paid_subscriber\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused */\n\t| \"paused\"\n\t/** Pending Entry */\n\t| \"pending_entry\"\n\t/** Renewing */\n\t| \"renewing\"\n\t/** Trialing */\n\t| \"trialing\";\n\n/** The different statuses a Member can have. */\nexport type MemberStatuses =\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\";\n\n/** The type of subtext to display for a member */\nexport type MemberSubtextTypes =\n\t/** Canceled On */\n\t| \"canceled_on\"\n\t/** Canceling On */\n\t| \"canceling_on\"\n\t/** Ending On */\n\t| \"ending_on\"\n\t/** Finished Split Pay At */\n\t| \"finished_split_pay_at\"\n\t/** Next Payment Attempt */\n\t| \"next_payment_attempt\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused At */\n\t| \"paused_at\"\n\t/** Renewing On */\n\t| \"renewing_on\"\n\t/** Trial Canceling On */\n\t| \"trial_canceling_on\"\n\t/** Trial Ends At */\n\t| \"trial_ends_at\"\n\t/** Unresolved At */\n\t| \"unresolved_at\";\n\n/** Filters for the members table. */\nexport interface MembersFiltersInput {\n\t/** The access pass IDs to filter the members by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the members by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The membership status to filter the members by */\n\tmembershipStatus?: InputMaybe<MembershipStatus>;\n\t/** The most recent actions to filter the members by */\n\tmostRecentActions?: InputMaybe<Array<MemberMostRecentActions>>;\n\t/** The plan IDs to filter the members by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the members by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/**\n\t * The name, username, or email to filter the members by. The email filter will\n\t * only apply if the current actor has the `member:email:read` permission.\n\t */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The start date to filter the members by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the members by */\n\tstatuses?: InputMaybe<Array<MemberStatuses>>;\n\t/** The tracking link IDs to filter the members by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembersSortableColumns =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"joined_at\"\n\t| \"most_recent_action\"\n\t| \"usd_total_spent\";\n\n/** The actions that can be performed on a membership */\nexport type MembershipActions =\n\t| \"add_discord_roles\"\n\t| \"add_free_days\"\n\t| \"cancel_membership\"\n\t| \"fulfill_trading_view_indicators\"\n\t| \"pause_subscription_payments\"\n\t| \"reset_license\"\n\t| \"retry_payment\"\n\t| \"shuffle_license\"\n\t| \"terminate_membership\"\n\t| \"unlink_discord\"\n\t| \"unpause_subscription_payments\";\n\n/** The state of a membership, based on a company's accepted sub statuses. */\nexport type MembershipHeaderStatus = \"active\" | \"churned\";\n\n/** Image styles for membership. */\nexport type MembershipImageStyles = \"s40\";\n\n/** The payment processor used for a membership */\nexport type MembershipPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** Whether or not to send push notifications to the user of a membership */\nexport type MembershipPushNotification =\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Enabled */\n\t| \"enabled\";\n\n/** The status of a membership */\nexport type MembershipStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Trialing */\n\t| \"trialing\"\n\t/** Unresolved */\n\t| \"unresolved\";\n\n/** Filters for the memberships table. */\nexport interface MembershipsFiltersInput {\n\t/** The access pass IDs to filter the memberships by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The access pass types to filter the memberships by */\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes>>;\n\t/** The cancelation reasons to filter the memberships by */\n\tcancelationReasons?: InputMaybe<Array<CancelOptions>>;\n\t/** The end date to filter the memberships by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Whether the memberships have a cancelation reason */\n\thasCancelationReason?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The header filter to filter the memberships by */\n\theaderFilter?: InputMaybe<MembershipHeaderStatus>;\n\t/** The membership status to filter the memberships by */\n\tmembershipStatus?: InputMaybe<HubMembershipStatus>;\n\t/** The plan IDs to filter the memberships by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the memberships by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the memberships by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the memberships by */\n\tstatuses?: InputMaybe<Array<MembershipStatus>>;\n\t/** The tracking link IDs to filter the memberships by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembershipsSortableColumns =\n\t| \"canceled_at\"\n\t| \"created_at\"\n\t| \"date_joined\"\n\t| \"id\"\n\t| \"status\"\n\t| \"total_spend\";\n\n/** The different moderation results for an attachment */\nexport type ModerationResults =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** Autogenerated input type of MoveCourse */\nexport interface MoveCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to move */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The experience to move the course into */\n\tdestinationExperienceId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Input for a feed muted member */\nexport interface MutedUserInput {\n\t/** The ID of the feed */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The feed type */\n\tfeedType?: FeedTypes;\n\t/** The unique identifier for the muted user */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The time the user is muted till */\n\tmutedUntil?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Mux asset statuses */\nexport type MuxAssetStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Ready */\n\t| \"ready\"\n\t/** Uploading */\n\t| \"uploading\";\n\n/** The different types of Stripe Accounts. */\nexport type NormalizedAccountTypes =\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\"\n\t| \"whop_credit\";\n\n/** The channel for a notification preference */\nexport type NotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFilters {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFiltersV3 {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** The status of the notification topic. If it's active, they will send. */\nexport type NotificationTopicStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The type for the notification topic. */\nexport type NotificationTopicTypes =\n\t/** Company */\n\t| \"company\"\n\t/** Company Team */\n\t| \"company_team\"\n\t/** User */\n\t| \"user\";\n\n/** The visibility of the notification topic. If it's hidden, it won't show on the UI. */\nexport type NotificationTopicVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Values to filter notifications on */\nexport interface NotificationsV4Filters {\n\t/**\n\t * The client's last fetched at timestamp. If passed will only return\n\t * notifications created after this timestamp. NOT YET IMPLEMENTED\n\t */\n\tclientLastFetchedAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The company ID that you want to filter by. Will return notifications sent to this team. */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience ID that you want to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience IDs that you want to filter by. Overrides experience_id. */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether the notifications are mentions or not */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether to only return unread notifications */\n\tunreadOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Values to paginate notifications on */\nexport interface NotificationsV4Pagination {\n\t/** Filter all notifications made after this */\n\tafter?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter all notifications made before this */\n\tbefore?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The number of notifications to return. Default is 50 */\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different providers that can be used for onboarding a ledger account. */\nexport type OnboardingProviders = \"generic\" | \"stripe\";\n\n/** The different onboarding types for a company. */\nexport type OnboardingTypes =\n\t/** Payments */\n\t| \"payments\"\n\t/** Products */\n\t| \"products\";\n\n/** The different variants of OpenGraph images for a company. */\nexport type OpengraphImageVariants =\n\t/** Black */\n\t| \"black\"\n\t/** Orange */\n\t| \"orange\"\n\t/** White */\n\t| \"white\";\n\n/** The account_types for a payment account object */\nexport type PaymentAccountAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The different action banners that can be shown for a payment account */\nexport type PaymentAccountActionBanners = \"requires_additional_information\";\n\n/** The providers for a payment account object */\nexport type PaymentAccountProviders =\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different statuses for a payment account object */\nexport type PaymentAccountStatuses =\n\t/** Broken */\n\t| \"broken\"\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled By Whop */\n\t| \"disabled_by_whop\"\n\t/** Missing Settlement Address */\n\t| \"missing_settlement_address\"\n\t/** Needs Completion */\n\t| \"needs_completion\"\n\t/** Needs Reauthorization */\n\t| \"needs_reauthorization\"\n\t/** Oauth Integration Not Found */\n\t| \"oauth_integration_not_found\"\n\t/** Payments Not Receivable */\n\t| \"payments_not_receivable\"\n\t/** Primary Email Not Confirmed */\n\t| \"primary_email_not_confirmed\"\n\t/** Reconnect Api Keys */\n\t| \"reconnect_api_keys\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Requirements Not Met */\n\t| \"requirements_not_met\"\n\t/** Setup */\n\t| \"setup\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Webhook Not Verified */\n\t| \"webhook_not_verified\";\n\n/** The high level payment processor options. */\nexport type PaymentMethods =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The high level payment processor options. */\nexport type PaymentProcessor =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\"\n\t| \"venmo\";\n\n/** The different payment providers. */\nexport type PaymentProviders =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different providers of payment transactions. */\nexport type PaymentTransactionProviders =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Splitit */\n\t| \"splitit\";\n\n/** The different statuses a payment transaction can be in. */\nexport type PaymentTransactionStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Succeeded */\n\t| \"succeeded\"\n\t/** Won */\n\t| \"won\";\n\n/** The different types of payment transactions. */\nexport type PaymentTransactionTypes =\n\t/** Authorization */\n\t| \"authorization\"\n\t/** Authorize */\n\t| \"authorize\"\n\t/** Cancel */\n\t| \"cancel\"\n\t/** Capture */\n\t| \"capture\"\n\t/** Chargeback */\n\t| \"chargeback\"\n\t/** Fraud Screening */\n\t| \"fraud_screening\"\n\t/** Installment */\n\t| \"installment\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Refund */\n\t| \"refund\"\n\t/** Three D Secure */\n\t| \"three_d_secure\"\n\t/** Verify */\n\t| \"verify\";\n\n/** The different approval statuses an account can have. */\nexport type PaymentsApprovalStatuses =\n\t/** Approved */\n\t| \"approved\"\n\t/** Monitoring */\n\t| \"monitoring\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The different providers a payout account can be. */\nexport type PayoutAccountProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses payout account can be. */\nexport type PayoutAccountStatuses =\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Needs Completion */\n\t| \"needs_completion\";\n\n/** The different delivery_types for a payout or payout destination. */\nexport type PayoutDeliveryTypes =\n\t/** Bank Deposit */\n\t| \"bank_deposit\"\n\t/** Bill */\n\t| \"bill\"\n\t/** Cash Pickup */\n\t| \"cash_pickup\"\n\t/** Cryptocurrency */\n\t| \"cryptocurrency\"\n\t/** Home Delivery */\n\t| \"home_delivery\"\n\t/** Masspay Card */\n\t| \"masspay_card\"\n\t/** Mobile Wallet */\n\t| \"mobile_wallet\"\n\t/** Paper Check */\n\t| \"paper_check\";\n\n/** The different platform statuses a payout destination can be in. */\nexport type PayoutDestinationPlatformStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different providers a payout destination can be. */\nexport type PayoutDestinationProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout destination can be in. */\nexport type PayoutDestinationStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Disabled */\n\t| \"disabled\";\n\n/** The different destination types for a payout destination. */\nexport type PayoutDestinationTypes =\n\t/** Instant */\n\t| \"instant\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The different error codes a payout can be in. */\nexport type PayoutErrorCodes =\n\t/** Account Closed */\n\t| \"account_closed\"\n\t/** Account Does Not Exist */\n\t| \"account_does_not_exist\"\n\t/** Account Information Invalid */\n\t| \"account_information_invalid\"\n\t/** Amount Out Of Bounds */\n\t| \"amount_out_of_bounds\"\n\t/** Attributes Not Validated */\n\t| \"attributes_not_validated\"\n\t/** B2b Payments Prohibited */\n\t| \"b2b_payments_prohibited\"\n\t/** Bank Statement Required */\n\t| \"bank_statement_required\"\n\t/** Compliance Review */\n\t| \"compliance_review\"\n\t/** Deposit Failed */\n\t| \"deposit_failed\"\n\t/** Deposit Rejected */\n\t| \"deposit_rejected\"\n\t/** Destination Unavailable */\n\t| \"destination_unavailable\"\n\t/** Exceeded Account Limit */\n\t| \"exceeded_account_limit\"\n\t/** Expired Quote */\n\t| \"expired_quote\"\n\t/** Generic Payout Error */\n\t| \"generic_payout_error\"\n\t/** Identification Number Invalid */\n\t| \"identification_number_invalid\"\n\t/** Invalid Account Number */\n\t| \"invalid_account_number\"\n\t/** Invalid Bank Code */\n\t| \"invalid_bank_code\"\n\t/** Invalid Beneficiary */\n\t| \"invalid_beneficiary\"\n\t/** Invalid Branch Number */\n\t| \"invalid_branch_number\"\n\t/** Invalid Phone Number */\n\t| \"invalid_phone_number\"\n\t/** Invalid Routing Number */\n\t| \"invalid_routing_number\"\n\t/** Invalid Swift Code */\n\t| \"invalid_swift_code\"\n\t/** Misc Error */\n\t| \"misc_error\"\n\t/** Missing City And Country */\n\t| \"missing_city_and_country\"\n\t/** Missing Phone Number */\n\t| \"missing_phone_number\"\n\t/** Missing Remittance Info */\n\t| \"missing_remittance_info\"\n\t/** Receiving Account Locked */\n\t| \"receiving_account_locked\"\n\t/** Rejected By Compliance */\n\t| \"rejected_by_compliance\"\n\t/** Source Token Insufficient Funds */\n\t| \"source_token_insufficient_funds\"\n\t/** Ssn Invalid */\n\t| \"ssn_invalid\"\n\t/** Wallet Screenshot Required */\n\t| \"wallet_screenshot_required\";\n\n/** The interval at which a Connected Account is paid out */\nexport type PayoutIntervals = \"daily\" | \"manual\" | \"monthly\" | \"weekly\";\n\n/** The payout methods that can be configured for a company. */\nexport type PayoutMethods = \"coinbase_commerce\" | \"paypal\" | \"stripe\";\n\n/** The different statuses as payout object can be. */\nexport type PayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Hold */\n\t| \"hold\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Ready For Pickup */\n\t| \"ready_for_pickup\"\n\t/** Scheduled */\n\t| \"scheduled\";\n\n/** The different types of attributes that can be saved for a PayoutTokenAttribute. */\nexport type PayoutTokenAttributeDataTypes =\n\t/** Address1 */\n\t| \"Address1\"\n\t/** Bank Account Branch Number */\n\t| \"BankAccountBranchNumber\"\n\t/** Bank Account Name */\n\t| \"BankAccountName\"\n\t/** Bank Account Number */\n\t| \"BankAccountNumber\"\n\t/** Bank Account Type */\n\t| \"BankAccountType\"\n\t/** Bank City */\n\t| \"BankCity\"\n\t/** Bank Name */\n\t| \"BankName\"\n\t/** Bank Routing Number */\n\t| \"BankRoutingNumber\"\n\t/** Bank State */\n\t| \"BankState\"\n\t/** Bill Reference Number */\n\t| \"BillReferenceNumber\"\n\t/** Birth Country */\n\t| \"BirthCountry\"\n\t/** Card Expiration */\n\t| \"CardExpiration\"\n\t/** Card Number */\n\t| \"CardNumber\"\n\t/** Card Zip */\n\t| \"CardZip\"\n\t/** City */\n\t| \"City\"\n\t/** Country */\n\t| \"Country\"\n\t/** Date Of Birth */\n\t| \"DateOfBirth\"\n\t/** Employment Address */\n\t| \"EmploymentAddress\"\n\t/** Employment Name */\n\t| \"EmploymentName\"\n\t/** Employment Occupation */\n\t| \"EmploymentOccupation\"\n\t/** Employment Phone */\n\t| \"EmploymentPhone\"\n\t/** Employment Supervisor */\n\t| \"EmploymentSupervisor\"\n\t/** Gender */\n\t| \"Gender\"\n\t/** Guardian Consent */\n\t| \"GuardianConsent\"\n\t/** Guardian Full Name */\n\t| \"GuardianFullName\"\n\t/** Guardian Gov Id Number */\n\t| \"GuardianGovIDNumber\"\n\t/** Guardian Gov Id Type */\n\t| \"GuardianGovIDType\"\n\t/** Id Selfie Collection */\n\t| \"IDSelfieCollection\"\n\t/** I Frame Payment Collection */\n\t| \"IFramePaymentCollection\"\n\t/** Identification Expiration */\n\t| \"IdentificationExpiration\"\n\t/** Identification Number */\n\t| \"IdentificationNumber\"\n\t/** Identification Type */\n\t| \"IdentificationType\"\n\t/** Maiden Name */\n\t| \"MaidenName\"\n\t/** Phone Number */\n\t| \"PhoneNumber\"\n\t/** Postal Code */\n\t| \"PostalCode\"\n\t/** Relationship */\n\t| \"Relationship\"\n\t/** Remittance Reason */\n\t| \"RemittanceReason\"\n\t/** Swift */\n\t| \"SWIFT\"\n\t/** Second Last Name */\n\t| \"SecondLastName\"\n\t/** Social Security */\n\t| \"SocialSecurity\"\n\t/** Source Of Funds */\n\t| \"SourceOfFunds\";\n\n/** The different types of inputs for a payout token attribute. This is the type of form that will be submitted in the data. */\nexport type PayoutTokenAttributeInputTypes =\n\t/** Date */\n\t| \"date\"\n\t/** Options */\n\t| \"options\"\n\t/** Text */\n\t| \"text\";\n\n/** The type of information being submitted in the value field. */\nexport type PayoutTokenAttributeValueTypes = \"raw\" | \"vault_token\";\n\n/** The different providers a payout token can be. */\nexport type PayoutTokenProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout token can have. */\nexport type PayoutTokenStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Broken */\n\t| \"broken\"\n\t/** Created */\n\t| \"created\";\n\n/** Whether a payout is one-time or recurring */\nexport type PayoutTypes =\n\t/** Flat Fee */\n\t| \"flat_fee\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Statuses for paypal accounts */\nexport type PaypalAccountStatuses =\n\t| \"broken\"\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"oauth_integration_not_found\"\n\t| \"payments_not_receivable\"\n\t| \"primary_email_not_confirmed\";\n\n/** The status of an entry for a perk. */\nexport type PerkStatus = \"completed\" | \"pending\";\n\n/** The type of direct link to generate */\nexport type PlanDirectLink = \"checkout\" | \"product_page\";\n\n/** Values to filter plans on */\nexport interface PlanFilters {\n\t/** A specific access pass to filter the scope by. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** If true, it returns plans that have affiliates */\n\taffiliates?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PlanOrder>;\n\t/** If true, it returns plans that have member/passholder affiliates set to true */\n\tpassholderAffiliate?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If true, it returns raffles that have ended. */\n\traffleEnded?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The release method to filter the scope by. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The visibility to filter the scope by. */\n\tvisibility?: InputMaybe<VisibilityFilter>;\n}\n\n/** The order to sort the results by. */\nexport type PlanOrder =\n\t| \"active_memberships_count\"\n\t| \"affiliates\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"internal_notes\";\n\n/** The type of plan that can be attached to an access pass */\nexport type PlanTypes =\n\t/** One Time */\n\t| \"one_time\"\n\t/** Renewal */\n\t| \"renewal\";\n\n/** The ways a relation of Plans can be ordered */\nexport type PlansOrder =\n\t| \"active_members_count\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"id\"\n\t| \"internal_notes\";\n\n/** Which columns can be used to sort. */\nexport type PlansSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"cached_initial_price_due\"\n\t| \"cached_usd_income\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"stock\";\n\n/** Input type for creating a poll in a feed post */\nexport interface PollInput {\n\t/** The options for the poll. Must have sequential IDs starting from 1 */\n\toptions: Array<PollOptionInput>;\n}\n\n/** Input type for a single poll option */\nexport interface PollOptionInput {\n\t/** Sequential ID for the poll option (starting from '1') */\n\tid: Scalars[\"String\"][\"input\"];\n\t/** The text of the poll option */\n\ttext: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of feed to fetch from */\nexport type PostTypes =\n\t/** Dms */\n\t| \"dms\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Post */\n\t| \"forum_post\";\n\n/** Autogenerated input type of ProcessEntities */\nexport interface ProcessEntitiesInput {\n\t/** The ID of the app */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** The chat feed posts to process */\n\tchatFeeds?: InputMaybe<Array<ChatFeedInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The DMs feed members to process */\n\tdmsFeedMembers?: InputMaybe<Array<DmsFeedMemberInput>>;\n\t/** The DMs feeds to process */\n\tdmsFeeds?: InputMaybe<Array<DmsFeedInput>>;\n\t/** The DMs posts to process */\n\tdmsPosts?: InputMaybe<Array<DmsPostInput>>;\n\t/** The livestream feeds to process */\n\tlivestreamFeeds?: InputMaybe<Array<LivestreamFeedInput>>;\n\t/** The chat feed muted members to process */\n\tmutedUsers?: InputMaybe<Array<MutedUserInput>>;\n\t/** The reactions to process */\n\treactions?: InputMaybe<Array<ReactionInput>>;\n}\n\n/** Types of product highlight */\nexport type ProductHighlightTypes =\n\t| \"benefit\"\n\t| \"pricing_feature\"\n\t| \"qualification\"\n\t| \"who_this_is_for\";\n\n/** Image styles for product. */\nexport type ProductImageStyles =\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The product_type of the ProductTaxCode */\nexport type ProductTaxCodeProductTypes = \"digital\" | \"physical\" | \"services\";\n\n/** Values to filter users on */\nexport interface ProductUserFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<ProductUserOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type ProductUserOrder =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** The different levels of visibility for resources */\nexport type ProfileVisibilities = \"hidden\" | \"visible\";\n\n/** Values to filter promo codes on */\nexport interface PromoCodeFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter whether to return active or expired (archived and inactive). */\n\tnewStatus?: InputMaybe<PromoCodeNewStatus>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PromoCodeOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The state of promo code. */\n\tstatus?: InputMaybe<PromoCodeStatus>;\n}\n\n/** The new statuses to filter the results by. */\nexport type PromoCodeNewStatus = \"active\" | \"expired\";\n\n/** The order to sort the results by. */\nexport type PromoCodeOrder = \"code\" | \"created_at\";\n\n/** Statuses for promo codes */\nexport type PromoCodeStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** Which columns can be used to sort. */\nexport type PromoCodesSortableColumns =\n\t| \"created_at\"\n\t| \"expiration_datetime\"\n\t| \"id\";\n\n/** The duration setting for the promo code */\nexport type PromoDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\"\n\t/** Repeating */\n\t| \"repeating\";\n\n/** The type of promo code used to discount a plan */\nexport type PromoTypes =\n\t/** Flat Amount */\n\t| \"flat_amount\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Autogenerated input type of PromoteAppBuildToProduction */\nexport interface PromoteAppBuildToProductionInput {\n\t/** The ID of the app build to promote. */\n\tappBuildId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type PublicAccessPassesOrder =\n\t| \"average_review_rating\"\n\t| \"average_time_spent_24_hours\"\n\t| \"created_at\"\n\t| \"global_affiliate_percentage\"\n\t| \"highest_bounties\"\n\t| \"id\"\n\t| \"last_24_hours_total_seconds\"\n\t| \"most_affiliate_earnings_24_hours\"\n\t| \"most_money_made_24_hours\"\n\t| \"most_reviews_7_days\"\n\t| \"most_reviews_24_hours\"\n\t| \"newest_arrivals\"\n\t| \"trending\"\n\t| \"trending_3_hours\";\n\n/** The order to sort the results by. */\nexport type PublicBountiesOrder = \"created_at\" | \"total_paid\";\n\n/** Input for a reaction */\nexport interface ReactionInput {\n\t/** The ID of the feed this reaction belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this reaction belongs to */\n\tfeedType: FeedTypes;\n\t/** The unique identifier for the reaction */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the post this reaction belongs to */\n\tpostId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the post (e.g., 'dms_post') */\n\tpostType: PostTypes;\n\t/** The type of reaction (e.g., 'like', 'vote', 'view', 'emoji') */\n\treactionType: ReactionTypes;\n\t/** The score of the reaction */\n\tscore: Scalars[\"Int\"][\"input\"];\n\t/** The value of the reaction (e.g., specific emoji) */\n\tvalue: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of reactions */\nexport type ReactionTypes =\n\t/** Emoji */\n\t| \"emoji\"\n\t/** Like */\n\t| \"like\"\n\t/** View */\n\t| \"view\"\n\t/** Vote */\n\t| \"vote\";\n\n/** The status of the abuse report */\nexport type ReceiptFeeTypes =\n\t/** Other Fee */\n\t| \"other_fee\"\n\t/** Processing Fee */\n\t| \"processing_fee\"\n\t/** Whop Fee */\n\t| \"whop_fee\";\n\n/** The payment processor of a receipt */\nexport type ReceiptPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The status of a receipt */\nexport type ReceiptStatus =\n\t/** Draft */\n\t| \"draft\"\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Uncollectible */\n\t| \"uncollectible\"\n\t/** Unresolved */\n\t| \"unresolved\"\n\t/** Void */\n\t| \"void\";\n\n/** The status of a receipt */\nexport type ReceiptStatusV2 =\n\t| \"failed\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"refunded\"\n\t| \"succeeded\";\n\n/**\n * The type of tax inclusivity applied to the receipt, for determining whether the\n * tax is included in the final price, or paid on top.\n */\nexport type ReceiptTaxBehaviors =\n\t/** Exclusive */\n\t| \"exclusive\"\n\t/** Inclusive */\n\t| \"inclusive\"\n\t/** Unspecified */\n\t| \"unspecified\";\n\n/** Values to filter receipts on */\nexport interface ReceiptV2Filters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The billing reason for the payment */\n\tbillingReasons?: InputMaybe<Array<BillingReasons>>;\n\t/** The currency of the payment. */\n\tcurrencies?: InputMaybe<Array<Currencies>>;\n\t/** Which way to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all memberships created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** How to order the results. */\n\torder?: InputMaybe<ReceiptV2Order>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** A specific plan. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all memberships created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The state of the payment. */\n\tstatuses?: InputMaybe<Array<ReceiptStatusV2>>;\n}\n\n/** The order to sort the results by. */\nexport type ReceiptV2Order = \"created_at\" | \"final_amount\" | \"paid_at\";\n\n/** Which columns can be used to sort. */\nexport type ReceiptsSortableColumns =\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"paid_at\"\n\t| \"presented_final_amount\";\n\n/** The different statuses for a Refund object */\nexport type RefundStatuses =\n\t| \"canceled\"\n\t| \"failed\"\n\t| \"pending\"\n\t| \"requires_action\"\n\t| \"succeeded\";\n\n/** The methods of how a plan can be released (including raffles and waitlists). */\nexport type ReleaseMethod =\n\t/** Buy Now */\n\t| \"buy_now\"\n\t/** Raffle */\n\t| \"raffle\"\n\t/** Waitlist */\n\t| \"waitlist\";\n\nexport interface ReleaseMethodSettingsInput {\n\t/** When the raffle will expire */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The maximum number of entries allowed for the raffle or waitlist */\n\tmaxEntries?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** If this is enabled, the raffle will get entries based off of how many NFTs the user owns */\n\tnftWeightedEntries?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** When the raffle will start */\n\tstartsAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n}\n\n/** The types of reports that can be generated. */\nexport type ReportTypes =\n\t/** Bookmark */\n\t| \"bookmark\"\n\t/** Downvote */\n\t| \"downvote\"\n\t/** Share */\n\t| \"share\"\n\t/** Upvote */\n\t| \"upvote\";\n\n/** The different types of actions for a resolution event */\nexport type ResolutionActions =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Appealed */\n\t| \"appealed\"\n\t/** Created */\n\t| \"created\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Dispute Customer Won */\n\t| \"dispute_customer_won\"\n\t/** Dispute Merchant Won */\n\t| \"dispute_merchant_won\"\n\t/** Dispute Opened */\n\t| \"dispute_opened\"\n\t/** Escalated */\n\t| \"escalated\"\n\t/** Requested More Info */\n\t| \"requested_more_info\"\n\t/** Responded */\n\t| \"responded\"\n\t/** Withdrew */\n\t| \"withdrew\";\n\n/** The types of responses a customer can make to a resolution. */\nexport type ResolutionCustomerResponses = \"appeal\" | \"respond\" | \"withdraw\";\n\n/** Filters for the resolutions */\nexport interface ResolutionFilters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Filter by their case state */\n\tcaseState?: InputMaybe<CaseStates>;\n\t/** The direction to filter */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter by the end date */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The order to filter */\n\torder?: InputMaybe<ResolutionOrder>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** The text to search by */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter by the start date */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter by their status */\n\tstatuses?: InputMaybe<Array<ResolutionStatuses>>;\n}\n\n/** A reason why a specific receipt cannot have a resolution created. */\nexport type ResolutionIneligibilityReason =\n\t| \"already_opened\"\n\t| \"already_refunded\"\n\t| \"free\"\n\t| \"not_paid\"\n\t| \"out_of_date\"\n\t| \"unsupported_payment_processor\";\n\n/** The different types of issues a resolution can be */\nexport type ResolutionIssueTypes =\n\t/** Forgot To Cancel */\n\t| \"forgot_to_cancel\"\n\t/** Item Not Received */\n\t| \"item_not_received\"\n\t/** Product Unacceptable */\n\t| \"product_unacceptable\"\n\t/** Significantly Not As Described */\n\t| \"significantly_not_as_described\"\n\t/** Unauthorized Transaction */\n\t| \"unauthorized_transaction\";\n\n/** The types of responses a merchant can make to a resolution. */\nexport type ResolutionMerchantResponses =\n\t| \"accept\"\n\t| \"appeal\"\n\t| \"deny\"\n\t| \"request_more_info\"\n\t| \"respond\";\n\n/** Possible values to filter user on */\nexport type ResolutionOrder = \"due_date\" | \"id\";\n\n/** The types of responses the platform can make to a resolution. */\nexport type ResolutionPlatformResponses =\n\t| \"merchant_refund\"\n\t| \"merchant_wins\"\n\t| \"platform_refund\"\n\t| \"request_buyer_info\"\n\t| \"request_merchant_info\";\n\n/** The different types of reporters for a resolution event */\nexport type ResolutionReporters =\n\t/** Customer */\n\t| \"customer\"\n\t/** Merchant */\n\t| \"merchant\"\n\t/** Platform */\n\t| \"platform\"\n\t/** System */\n\t| \"system\";\n\n/** The statuses a resolution object can have */\nexport type ResolutionStatuses =\n\t/** Customer Info Needed */\n\t| \"customer_info_needed\"\n\t/** Customer Response Needed */\n\t| \"customer_response_needed\"\n\t/** Customer Withdrew */\n\t| \"customer_withdrew\"\n\t/** Customer Won */\n\t| \"customer_won\"\n\t/** Merchant Info Needed */\n\t| \"merchant_info_needed\"\n\t/** Merchant Response Needed */\n\t| \"merchant_response_needed\"\n\t/** Merchant Won */\n\t| \"merchant_won\"\n\t/** Under Platform Review */\n\t| \"under_platform_review\";\n\n/** Which columns can be used to sort. */\nexport type ResolutionsSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** The different reason codes. */\nexport type RestrictionSetReasonCodes = \"blocked_country\";\n\n/** Autogenerated input type of RetryPaymentMyMembership */\nexport interface RetryPaymentMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to retry the payment for. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The status of a review report */\nexport type ReviewReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The statuses a review can have */\nexport type ReviewStatus =\n\t/** Pending */\n\t| \"pending\"\n\t/** Published */\n\t| \"published\"\n\t/** Removed */\n\t| \"removed\";\n\n/** Which columns can be used to sort. */\nexport type ReviewsSortableColumns = \"created_at\" | \"id\" | \"stars\";\n\n/** The available reward units to choose from. */\nexport type RewardUnits =\n\t/** Per Submission */\n\t| \"per_submission\"\n\t/** Per View */\n\t| \"per_view\";\n\n/** The status of an RFI */\nexport type RfiStatuses =\n\t/** Ignored */\n\t| \"ignored\"\n\t/** Pending Provider */\n\t| \"pending_provider\"\n\t/** Resolved */\n\t| \"resolved\"\n\t/** Waiting For Platform */\n\t| \"waiting_for_platform\"\n\t/** Waiting For User */\n\t| \"waiting_for_user\";\n\n/** The level of security an account has */\nexport type SecurityLevels = \"none\" | \"two_factor\";\n\n/** Autogenerated input type of SendMessage */\nexport interface SendMessageInput {\n\t/** The attachments for this message, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chat experience to send the message in. */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the feed to send to. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of the feed to send to. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** The message to send. */\n\tmessage: Scalars[\"String\"][\"input\"];\n\t/** The user to send the direct message to. */\n\ttoUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of SendNotification */\nexport interface SendNotificationInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company team to send the notification to */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The content of the notification */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the experience to send the notification to */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** An external ID for the notification */\n\texternalId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether the notification is a mention */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The link to open when the notification is clicked. If you just want to append\n\t * a rest path use the restPath parameter. You can link to any url here.\n\t */\n\tlink?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The rest path to append to the generated deep link that opens your app. Use\n\t * [restPath] in your app path in the dashboard to read this parameter.\n\t */\n\trestPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user sending the notification */\n\tsenderUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The subtitle of the notification */\n\tsubtitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the notification */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The IDs of the users to send the notification to. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** The status of a simple notification preference */\nexport type SimpleNotificationPreferenceStatus =\n\t/** Everything */\n\t| \"everything\"\n\t/** Nothing */\n\t| \"nothing\"\n\t/** Only Mentions */\n\t| \"only_mentions\";\n\n/** The different websites you can have social links for */\nexport type SocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The origin of the specific fee */\nexport type SpecificFeeOrigins =\n\t/** Affiliate Fee */\n\t| \"affiliate_fee\"\n\t/** Apple Processing Fee */\n\t| \"apple_processing_fee\"\n\t/** Billing Percentage Fee */\n\t| \"billing_percentage_fee\"\n\t/** Buyer Fee */\n\t| \"buyer_fee\"\n\t/** Cross Border Percentage Fee */\n\t| \"cross_border_percentage_fee\"\n\t/** Crypto Fee */\n\t| \"crypto_fee\"\n\t/** Dispute Alert Fee */\n\t| \"dispute_alert_fee\"\n\t/** Dispute Fee */\n\t| \"dispute_fee\"\n\t/** Fx Percentage Fee */\n\t| \"fx_percentage_fee\"\n\t/** Marketplace Affiliate Fee */\n\t| \"marketplace_affiliate_fee\"\n\t/** Orchestration Percentage Fee */\n\t| \"orchestration_percentage_fee\"\n\t/** Payment Processing Fixed Fee */\n\t| \"payment_processing_fixed_fee\"\n\t/** Payment Processing Percentage Fee */\n\t| \"payment_processing_percentage_fee\"\n\t/** Paypal Fee */\n\t| \"paypal_fee\"\n\t/** Platform Balance Processing Fee */\n\t| \"platform_balance_processing_fee\"\n\t/** Sales Tax Remittance */\n\t| \"sales_tax_remittance\"\n\t/** Sales Tax Remittance Reversal */\n\t| \"sales_tax_remittance_reversal\"\n\t/** Sezzle Processing Fee */\n\t| \"sezzle_processing_fee\"\n\t/** Splitit Processing Fee */\n\t| \"splitit_processing_fee\"\n\t/** Stripe Billing Fee */\n\t| \"stripe_billing_fee\"\n\t/** Stripe Domestic Processing Fee */\n\t| \"stripe_domestic_processing_fee\"\n\t/** Stripe Fixed Processing Fee */\n\t| \"stripe_fixed_processing_fee\"\n\t/** Stripe International Processing Fee */\n\t| \"stripe_international_processing_fee\"\n\t/** Stripe Payout Fee */\n\t| \"stripe_payout_fee\"\n\t/** Stripe Radar Fee */\n\t| \"stripe_radar_fee\"\n\t/** Stripe Sales Tax Fee */\n\t| \"stripe_sales_tax_fee\"\n\t/** Stripe Standard Processing Fee */\n\t| \"stripe_standard_processing_fee\"\n\t/** Three Ds Fixed Fee */\n\t| \"three_ds_fixed_fee\"\n\t/** Whop Processing Fee */\n\t| \"whop_processing_fee\";\n\n/** The configuration for receipts stats query. */\nexport interface StatsConfigInput {\n\t/** The access pass ids to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The bot ids to filter the data by. */\n\tbotIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Whether or not to filter data by direct to consumer or marketplace */\n\tdirectToConsumer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The feed ids to filter the data by. */\n\tfeedIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The plan ids to filter the data by. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Statuses for resources */\nexport type Status = \"active\" | \"archived\" | \"deleted\";\n\n/** The available bounty statuses to choose from. */\nexport type Statuses =\n\t/** Archived */\n\t| \"archived\"\n\t/** Published */\n\t| \"published\";\n\n/** Statuses for stripe accounts */\nexport type StripeAccountStatuses =\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"needs_completion\"\n\t| \"needs_reauthorization\"\n\t| \"reconnect_api_keys\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Types of Stripe accounts */\nexport type StripeAccountTypes =\n\t| \"connect\"\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\";\n\n/** The status that an external payout account can have */\nexport type StripeExternalAccountStatuses =\n\t/** Errored */\n\t| \"errored\"\n\t/** New */\n\t| \"new\"\n\t/** Validated */\n\t| \"validated\"\n\t/** Verification Failed */\n\t| \"verification_failed\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The methods that a StripePayout can have */\nexport type StripePayoutMethods =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The payout types that a StripePayout can have */\nexport type StripePayoutPayoutTypes =\n\t/** Bank Account */\n\t| \"bank_account\"\n\t/** Card */\n\t| \"card\";\n\n/** The status that a StripePayout can have */\nexport type StripePayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The status that a StripePayout's trace can have */\nexport type StripePayoutTraceStatuses =\n\t/** Pending */\n\t| \"pending\"\n\t/** Supported */\n\t| \"supported\"\n\t/** Unsupported */\n\t| \"unsupported\";\n\n/** Whether or not the tax is included in a plan's price (or if it hasn't been set up) */\nexport type TaxTypes =\n\t/** Tax is exclusive in the price of the plan. If its $20 before tax, its $25 after tax. The user is paying tax */\n\t| \"exclusive\"\n\t/** Tax is inclusive in the price of the plan. If its $20, its $20. The company already factored in tax and is paying tax */\n\t| \"inclusive\"\n\t/** The company hasn't set up tax yet */\n\t| \"unspecified\";\n\n/** Autogenerated input type of TerminateMyMembership */\nexport interface TerminateMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The internal ID of the membership to terminate. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of TestWebhookV2 */\nexport interface TestWebhookV2Input {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The event to test the webhook for. */\n\tevent: WebhookEvent;\n\t/** The ID of the webhook to test. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of ToggleCancelMyMembership */\nexport interface ToggleCancelMyMembershipInput {\n\t/** A multiple choice selection for why the user canceled. */\n\tcancelOption?: InputMaybe<CancelOptions>;\n\t/** The custom input from the user for canceling the membership. */\n\tcancelationReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The destination of the custom link */\nexport type TrackingLinkDestination =\n\t/** Access Pass Page */\n\t| \"access_pass_page\"\n\t/** Bot Page */\n\t| \"bot_page\"\n\t/** Checkout Page */\n\t| \"checkout_page\";\n\n/** Which columns can be used to sort. */\nexport type TrackingLinksSortableColumns =\n\t| \"clicks\"\n\t| \"conversion_rate\"\n\t| \"converted_users\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"revenue_generated\";\n\n/** The different types for a tracking pixel */\nexport type TrackingPixelTypes =\n\t/** Hubspot Pixel */\n\t| \"hubspot_pixel_id\"\n\t/** X Checkout Initiated Event */\n\t| \"x_checkout_initiated_event\"\n\t/** X Payment Method Event */\n\t| \"x_payment_method_event\"\n\t/** X Purchase Event */\n\t| \"x_purchase_event\";\n\n/** Autogenerated input type of TransferFunds */\nexport interface TransferFundsInput {\n\t/** The amount to withdraw */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency that is being withdrawn. */\n\tcurrency: Currencies;\n\t/** The ID of the destination (either a User tag, Bot tag, or LedgerAccount tag) */\n\tdestinationId: Scalars[\"ID\"][\"input\"];\n\t/** The feed identifier to notify of the transfer. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The feed type to notify of the transfer. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** A unique key to ensure idempotence. Use a UUID or similar. */\n\tidempotenceKey: Scalars[\"String\"][\"input\"];\n\t/** The ledger account id to transfer from. */\n\tledgerAccountId: Scalars[\"ID\"][\"input\"];\n\t/** Notes for the transfer. Maximum of 50 characters. */\n\tnotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The reason for the transfer. */\n\treason?: InputMaybe<CreditTransactionTransferReasons>;\n\t/** The fee that the client thinks it is being charged for the transfer. Used to verify the fee. */\n\ttransferFee?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n}\n\n/** Autogenerated input type of TransferLinkMyMembership */\nexport interface TransferLinkMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** This is the ID of the membership you want to create a transfer link for. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UnassignProductionAppBuild */\nexport interface UnassignProductionAppBuildInput {\n\t/** The ID of the app to unassign the production build from. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** What platform should be unassigned */\n\tplatform: AppBuildPlatforms;\n}\n\n/** Autogenerated input type of UnbanUser */\nexport interface UnbanUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The types of universal post feeds that you can retrieve */\nexport type UniversalPostFeedTypes =\n\t| \"access_pass\"\n\t| \"discover\"\n\t| \"home\"\n\t| \"recent_content_reward_submissions\"\n\t| \"user_profile\";\n\n/** Autogenerated input type of UpdateAccessPass */\nexport interface UpdateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID (tag) of the access pass */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show the offers on the access pass. */\n\tshowOffers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of UpdateAffiliate */\nexport interface UpdateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount the affiliate will earn (either amount or percent 1-100) */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The ID (tag) of the affiliate. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether or not the affiliate will only get one payout or it will be recurring. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of payout. */\n\tpayoutType?: InputMaybe<PayoutTypes>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanId: Scalars[\"String\"][\"input\"];\n\t/** Sets the affiliate as active/inactive. */\n\tstatus?: InputMaybe<Status>;\n}\n\n/** Autogenerated input type of UpdateAgentUser */\nexport interface UpdateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The ID of the user to update. */\n\tuserId: Scalars[\"ID\"][\"input\"];\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateApp */\nexport interface UpdateAppInput {\n\t/** The description of the app for the app store in-depth app view. */\n\tappStoreDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The base developer url of the app */\n\tbaseDevUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base preview url of the app */\n\tbasePreviewUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base production url of the app */\n\tbaseUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the dashboard view of the app */\n\tdashboardPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The default agent user ID for the app */\n\tdefaultAgentUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The description of the app */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the discover view of the app */\n\tdiscoverPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the hub view of the app */\n\texperiencePath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If the apps experience's should force showing the pre-checkout iframe, and not rely on app connections. */\n\tforceCheckoutIframe?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The hub call to action text of the app */\n\thubCta?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The icon for the app */\n\ticon?: InputMaybe<AttachmentInput>;\n\t/** The ID of the app */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/**\n\t * The image for the app\n\t * @deprecated Use icon instead\n\t */\n\timage?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The name of the app */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The product page text of the app */\n\tproductPage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The scopes that the app will request off of users when a user installs the app. */\n\trequiredScopes?: InputMaybe<Array<AppValidScopes>>;\n\t/**\n\t * If the status is live, the app is visible on Whop discovery. In order to be\n\t * live, you need to set the name, icon, and description. Being unlisted or\n\t * hidden means it's not visible on Whop but you can still install the app via\n\t * direct link. To remove the app from whop discovery, you should set the status to unlisted.\n\t */\n\tstatus?: InputMaybe<AppStatuses>;\n}\n\n/** Autogenerated input type of UpdateAppPermissionRequirements */\nexport interface UpdateAppPermissionRequirementsInput {\n\t/** The ID of the app the permission requirements are being updated for */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The permissions that the app will request off of users when a user installs the app. */\n\trequestedPermissions: Array<AppRequestedPermissionInput>;\n}\n\n/** Autogenerated input type of UpdateChapter */\nexport interface UpdateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateChapterOrder */\nexport interface UpdateChapterOrderInput {\n\t/** The ID of the chapter to place this chapter below */\n\tbelowChapterId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to reorder */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateLesson */\nexport interface UpdateLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the lesson to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The type of the lesson */\n\tlessonType?: InputMaybe<LessonTypes>;\n\t/** The ID of the Mux asset to attach to this lesson */\n\tmuxAssetId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Determines how / whether this lesson is visible to users. */\n\tvisibility?: InputMaybe<LessonVisibilities>;\n}\n\n/** Autogenerated input type of UpdateLessonOrder */\nexport interface UpdateLessonOrderInput {\n\t/** The ID of the lesson to place this lesson below */\n\tbelowLessonId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to move the lesson to */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to reorder */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateMembership */\nexport interface UpdateMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of trial days to add to the membership to extend it. */\n\tfreeDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID (tag) of the membership. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The action being applied to the specific membership. */\n\tmembershipAction: MembershipActions;\n}\n\n/** Autogenerated input type of UpdateWebhook */\nexport interface UpdateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The ID of the Webhook to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The URL to send the webhook to. */\n\turl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\nexport interface UploadPartInput {\n\t/** The ETag of the part */\n\tetag: Scalars[\"String\"][\"input\"];\n\t/** The part number of the part */\n\tpartNumber: Scalars[\"Int\"][\"input\"];\n}\n\nexport interface UpsellPlanInput {\n\t/** The base currency of the upsell. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The price of the upsell. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The method of release for the upsell. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n}\n\n/** The different types of upsells an experience can have. */\nexport type UpsellTypes =\n\t/** After Checkout */\n\t| \"after_checkout\"\n\t/** Before Checkout */\n\t| \"before_checkout\"\n\t/** Only In Whop */\n\t| \"only_in_whop\";\n\n/** Filters for the user affiliate referral logs search */\nexport interface UserAffiliateReferralLogFilters {\n\t/** Which direction the order should be in. */\n\tdirection?: InputMaybe<Direction>;\n\t/** How you want to order the results. */\n\torder?: InputMaybe<UserAffiliateReferralLogOrder>;\n\t/** What to search by: whop username, access pass name, or bot title */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the logs by */\nexport type UserAffiliateReferralLogOrder = \"id\";\n\n/** The configuration for a chart. */\nexport interface UserChartConfigInput {\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface UserContentRewardsSubmissionsFilters {\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<UserContentRewardsSubmissionsOrder>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type UserContentRewardsSubmissionsOrder =\n\t| \"amount_paid_out\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"total_view_count\";\n\n/** The channel of the user notification preference */\nexport type UserNotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** The steps a user can follow to complete onboarding */\nexport type UserOnboardingStepsTypes =\n\t| \"add_birthday\"\n\t| \"add_email\"\n\t| \"add_name\"\n\t| \"add_phone\"\n\t| \"add_profile_picture\"\n\t| \"add_username\"\n\t| \"download_mobile_app\"\n\t| \"join_a_whop\"\n\t| \"select_interests\"\n\t| \"verify_email\"\n\t| \"verify_phone\";\n\n/** Values to filter user receipts on */\nexport interface UserReceiptFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<UserReceiptOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter receipts by 'free', 'paid', or 'all'. */\n\ttype?: InputMaybe<UserReceiptPaidTypeFilter>;\n}\n\n/** The order to sort the results by. */\nexport type UserReceiptOrder = \"paid_at\";\n\n/** The filter to apply to the results. */\nexport type UserReceiptPaidTypeFilter = \"all\" | \"free\" | \"paid\";\n\n/** The different websites you can have social links for */\nexport type UserSocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The type of a user */\nexport type UserTypes =\n\t/** Agent */\n\t| \"agent\"\n\t/** Human */\n\t| \"human\"\n\t/** System */\n\t| \"system\";\n\n/** The order to sort the results by. */\nexport type ValidMembershipsOrder = \"expires_at\" | \"id\" | \"ordering_status\";\n\n/** A vaulting method for a payment token. */\nexport type VaultMethods =\n\t/** Paypal Wallet */\n\t| \"paypal_wallet\"\n\t/** Venmo Wallet */\n\t| \"venmo_wallet\";\n\n/** The different providers a vault token can be. */\nexport type VaultTokenProviders =\n\t/** Basis Theory */\n\t\"basis_theory\";\n\n/** An error code for a verification attempt. */\nexport type VerificationErrorCodes =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Consent Declined */\n\t| \"consent_declined\"\n\t/** Country Not Supported */\n\t| \"country_not_supported\"\n\t/** Device Not Supported */\n\t| \"device_not_supported\"\n\t/** Document Expired */\n\t| \"document_expired\"\n\t/** Document Type Not Supported */\n\t| \"document_type_not_supported\"\n\t/** Document Unverified Other */\n\t| \"document_unverified_other\"\n\t/** Email Unverified Other */\n\t| \"email_unverified_other\"\n\t/** Email Verification Declined */\n\t| \"email_verification_declined\"\n\t/** Id Number Insufficient Document Data */\n\t| \"id_number_insufficient_document_data\"\n\t/** Id Number Mismatch */\n\t| \"id_number_mismatch\"\n\t/** Id Number Unverified Other */\n\t| \"id_number_unverified_other\"\n\t/** Phone Unverified Other */\n\t| \"phone_unverified_other\"\n\t/** Phone Verification Declined */\n\t| \"phone_verification_declined\"\n\t/** Selfie Document Missing Photo */\n\t| \"selfie_document_missing_photo\"\n\t/** Selfie Face Mismatch */\n\t| \"selfie_face_mismatch\"\n\t/** Selfie Manipulated */\n\t| \"selfie_manipulated\"\n\t/** Selfie Unverified Other */\n\t| \"selfie_unverified_other\"\n\t/** Under Supported Age */\n\t| \"under_supported_age\";\n\n/** The different providers a payout account can be. */\nexport type VerificationProviders =\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Veriff */\n\t| \"veriff\";\n\n/** A status for a verification. */\nexport type VerificationStatuses =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Approved */\n\t| \"approved\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Requires Input */\n\t| \"requires_input\"\n\t/** Resubmission Requested */\n\t| \"resubmission_requested\"\n\t/** Review */\n\t| \"review\"\n\t/** Started */\n\t| \"started\"\n\t/** Submitted */\n\t| \"submitted\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The status of a bots Whop Verified. */\nexport type VerifiedStatuses = \"accepted\" | \"applied\" | \"rejected\";\n\n/** The types of version events that are possible. */\nexport type VersionEventTypes = \"create\" | \"destroy\" | \"update\";\n\n/** Filters for the version search */\nexport interface VersionFilters {\n\t/** The direction to filter the audit logs */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all Audit Logs created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The event type to filter by. */\n\teventType?: InputMaybe<Array<VersionEventTypes>>;\n\t/** The object type to filter by. */\n\tobjectType?: InputMaybe<Array<VersionObjects>>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<VersionOrder>;\n\t/** The text that is being searched. Searches the version's identifier, which is usually a name or ID related to the object. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all Audit Logs created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user who triggered this audit log */\n\tuserId?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n}\n\n/** The types of objects that have versions available for them. */\nexport type VersionObjects =\n\t| \"access_pass\"\n\t| \"affiliate\"\n\t| \"authorized_user\"\n\t| \"bot\"\n\t| \"discord_server\"\n\t| \"experience\"\n\t| \"plan\"\n\t| \"promo_code\"\n\t| \"stripe_account\";\n\n/** The order to sort the memberships by */\nexport type VersionOrder = \"event\" | \"id\";\n\n/** Visibility of a resource */\nexport type Visibility =\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different levels of visibility for resources */\nexport type VisibilityFilter =\n\t| \"all\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t| \"not_archived\"\n\t| \"not_quick_link\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Autogenerated input type of VoidInvoice */\nexport interface VoidInvoiceInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the invoice to void */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The different event types available */\nexport type WebhookEvent =\n\t| \"app_membership_cancel_at_period_end_changed\"\n\t| \"app_membership_went_invalid\"\n\t| \"app_membership_went_valid\"\n\t| \"app_payment_failed\"\n\t| \"app_payment_pending\"\n\t| \"app_payment_succeeded\"\n\t| \"dispute_alert_created\"\n\t| \"dispute_created\"\n\t| \"dispute_updated\"\n\t| \"invoice_created\"\n\t| \"invoice_paid\"\n\t| \"invoice_past_due\"\n\t| \"invoice_voided\"\n\t| \"membership_cancel_at_period_end_changed\"\n\t| \"membership_experience_claimed\"\n\t| \"membership_metadata_updated\"\n\t| \"membership_went_invalid\"\n\t| \"membership_went_valid\"\n\t| \"payment_affiliate_reward_created\"\n\t| \"payment_failed\"\n\t| \"payment_pending\"\n\t| \"payment_succeeded\"\n\t| \"refund_created\"\n\t| \"refund_updated\"\n\t| \"resolution_created\"\n\t| \"resolution_decided\"\n\t| \"resolution_updated\";\n\n/** The anchor for when the Connected Account will be paid out */\nexport type WeeklyAnchors =\n\t| \"friday\"\n\t| \"monday\"\n\t| \"saturday\"\n\t| \"sunday\"\n\t| \"thursday\"\n\t| \"tuesday\"\n\t| \"wednesday\";\n\n/** Who can post on a chat feed */\nexport type WhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a chat feed */\nexport type WhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter users on */\nexport interface WhopSidebarFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarOrderEnum =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** Values to filter users on */\nexport interface WhopSidebarWithEarningsFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarWithEarningsOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarWithEarningsOrderEnum =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The different fee types for a withdrawal. */\nexport type WithdrawalFeeTypes = \"exclusive\" | \"inclusive\";\n\n/** Values to filter the withdrawals on. */\nexport interface WithdrawalFilters {\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The withdrawal status/state */\n\tstatuses?: InputMaybe<Array<WithdrawalStatus>>;\n}\n\n/** The method used for withdrawing. */\nexport type WithdrawalMethods =\n\t/** Ach */\n\t| \"ach\"\n\t/** Btc */\n\t| \"btc\"\n\t/** Cash App */\n\t| \"cash_app\"\n\t/** Check */\n\t| \"check\"\n\t/** Echeck */\n\t| \"echeck\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Venmo */\n\t| \"venmo\"\n\t/** Wire Transfer */\n\t| \"wire_transfer\"\n\t/** Zelle */\n\t| \"zelle\";\n\n/** The statuses a review can have */\nexport type WithdrawalProviders =\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Tipalti */\n\t| \"tipalti\";\n\n/** The different speeds of withdrawals */\nexport type WithdrawalSpeeds =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The status of a withdrawal request */\nexport type WithdrawalStatus =\n\t/** Awaiting Payment */\n\t| \"awaiting_payment\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of withdrawals */\nexport type WithdrawalTypes =\n\t/** Clawback */\n\t| \"clawback\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type WithdrawalsSortableColumns = \"amount\" | \"created_at\" | \"id\";\n\nexport type AccessPassFragmentFragment = {\n\t__typename?: \"PublicAccessPass\";\n\tid: string;\n\ttitle: string;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\troute: string;\n\tactiveUsersCount: number;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BaseAccessPassFragment = {\n\t__typename?: \"AccessPass\";\n\tid: string;\n\tcreatedAt: number;\n\troute: string;\n\ttitle: string;\n\theadline?: string | null;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\tactiveUsersCount: number;\n\treviewsAverage: number;\n\tcreatorPitch?: string | null;\n\tupdatedAtMs: string;\n\tshowOffers: boolean;\n\tredirectPurchaseUrl?: string | null;\n\tcustomCta: CustomCtas;\n\tcustomCtaUrl?: string | null;\n\tglobalAffiliatePercentage?: number | null;\n\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\tmemberAffiliatePercentage?: number | null;\n\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\tshowMemberCount: boolean;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAffiliateFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n};\n\nexport type AffiliateWithUserFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n\tuserAccount: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BaseAppBuildFragment = {\n\t__typename?: \"AppBuild\";\n\tid: string;\n\tcreatedAt: number;\n\tfileUrl: string;\n\tchecksum: string;\n\tplatform: AppBuildPlatforms;\n\treviewMessage?: string | null;\n\tsupportedAppViewTypes: Array<AppViewTypes>;\n\tstatus: AppBuildStatuses;\n};\n\nexport type BaseAppFragment = {\n\t__typename?: \"App\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tstatus: AppStatuses;\n\tusingDefaultIcon: boolean;\n\tbaseUrl?: string | null;\n\tbaseDevUrl?: string | null;\n\texperiencePath?: string | null;\n\tdiscoverPath?: string | null;\n\tdashboardPath?: string | null;\n\ticon?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAppApiKeyFragment = {\n\t__typename?: \"PrivateApiKey\";\n\tid: string;\n\ttoken: string;\n\tcreatedAt: number;\n};\n\nexport type BaseAppAgentUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n};\n\nexport type BaseAppStatsFragment = {\n\t__typename?: \"PublicAppStats\";\n\tdau: number;\n\tmau: number;\n\ttimeSpentLast24HoursInSeconds: number;\n\twau: number;\n};\n\ntype Attachment_AudioAttachment_Fragment = {\n\t__typename: \"AudioAttachment\";\n\tduration?: number | null;\n\twaveformUrl?: string | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_ImageAttachment_Fragment = {\n\t__typename: \"ImageAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tblurhash?: string | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_OtherAttachment_Fragment = {\n\t__typename: \"OtherAttachment\";\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_VideoAttachment_Fragment = {\n\t__typename: \"VideoAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tduration?: number | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\nexport type AttachmentFragment =\n\t| Attachment_AudioAttachment_Fragment\n\t| Attachment_ImageAttachment_Fragment\n\t| Attachment_OtherAttachment_Fragment\n\t| Attachment_VideoAttachment_Fragment;\n\nexport type BaseAuthorizedUserFragment = {\n\t__typename?: \"AuthorizedUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tuserId: string;\n\temail?: string | null;\n\trole: AuthorizedUserRoles;\n};\n\nexport type BaseInvoiceFragment = {\n\t__typename?: \"Invoice\";\n\tid: string;\n\tcreatedAt: number;\n\tstatus: InvoiceStatuses;\n\tnumber: string;\n\tdueDate?: number | null;\n\temailAddress?: string | null;\n\tfetchInvoiceToken: string;\n\tcurrentPlan: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\tformattedPrice: string;\n\t\tbaseCurrency: Currencies;\n\t};\n\tmember?: {\n\t\t__typename?: \"Member\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername?: string | null;\n\t} | null;\n};\n\nexport type BaseLedgerAccountFragment = {\n\t__typename?: \"LedgerAccount\";\n\tid: string;\n\ttransferFee?: number | null;\n\tbalanceCaches: {\n\t\t__typename?: \"BalanceCacheConnection\";\n\t\tnodes?: Array<{\n\t\t\t__typename?: \"BalanceCache\";\n\t\t\tbalance: number;\n\t\t\tpendingBalance: number;\n\t\t\tcurrency: Currencies;\n\t\t} | null> | null;\n\t};\n};\n\nexport type BasePublicPlanFragment = {\n\t__typename?: \"PublicPlan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock?: number | null;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n};\n\nexport type BasePlanFragment = {\n\t__typename?: \"Plan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock: number;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n\ttitle: string;\n\tdescription?: string | null;\n\tname?: string | null;\n\tformattedPrice: string;\n\tformattedBillingPeriod?: string | null;\n};\n\nexport type BaseReceiptFragment = {\n\t__typename?: \"Receipt\";\n\tid: string;\n\tsettledUsdAmount?: number | null;\n\tbillingReason?: string | null;\n\tlast4?: string | null;\n\tcurrency?: Currencies | null;\n\tstatus?: ReceiptStatus | null;\n\tcreatedAt: number;\n\ttotal?: number | null;\n\tbrand?: string | null;\n\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\tpaymentMethodType?: string | null;\n\tdisputeAlertedAt?: number | null;\n\tfinalAmount: number;\n\tpresentedFinalAmount?: number | null;\n\tpresentedSettledUsdAmount?: number | null;\n\trefundedAmount?: number | null;\n\tfriendlyStatus: FriendlyReceiptStatus;\n\tfailureMessage?: string | null;\n\trefundable: boolean;\n\tretryable: boolean;\n\tpaidAt?: number | null;\n\tamountAfterFees: number;\n\tchargeSkippedPriceTooLow: boolean;\n\tlastPaymentAttempt?: number | null;\n\tautoRefunded: boolean;\n\ttotalUsdAmount?: number | null;\n\tmostRecentRiskScore?: number | null;\n\taddress?: {\n\t\t__typename?: \"Address\";\n\t\tname?: string | null;\n\t\tline1?: string | null;\n\t\tline2?: string | null;\n\t\tcity?: string | null;\n\t\tstate?: string | null;\n\t\tpostalCode?: string | null;\n\t\tcountry?: string | null;\n\t} | null;\n\tmember?: {\n\t\t__typename?: \"CompanyMember\";\n\t\theader: string;\n\t\tuser?: {\n\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\tid: string;\n\t\t\tusername: string;\n\t\t\tname?: string | null;\n\t\t\temail?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tcountryName?: string | null;\n\t\t} | null;\n\t\timageSrcset: {\n\t\t\t__typename?: \"ImgSrcset\";\n\t\t\toriginal: string;\n\t\t\tdouble: string;\n\t\t\tisVideo: boolean;\n\t\t};\n\t} | null;\n\tplan?: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\ttitle: string;\n\t\tformattedPrice: string;\n\t\tinitialPrice: number;\n\t\trenewalPrice: number;\n\t\tpaymentLinkDescription?: string | null;\n\t} | null;\n\tmembership?: {\n\t\t__typename?: \"Membership\";\n\t\tid: string;\n\t\tstatus: MembershipStatus;\n\t} | null;\n\tpromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tamountOff: number;\n\t\tbaseCurrency: Currencies;\n\t\tpromoType: PromoTypes;\n\t\tnumberOfIntervals?: number | null;\n\t} | null;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BaseUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\temail?: string | null;\n\tname?: string | null;\n\tusername: string;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasePublicProfileUserFragment = {\n\t__typename?: \"PublicProfileUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tphoneVerified: boolean;\n\tcity?: string | null;\n\tcountry?: string | null;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasicCourseFragment = {\n\t__typename?: \"Course\";\n\tcertificateAfterCompletionEnabled?: boolean | null;\n\tcoverImage?: string | null;\n\tdescription?: string | null;\n\tid: string;\n\tlanguage: Languages;\n\trequireCompletingLessonsInOrder: boolean;\n\ttagline?: string | null;\n\ttitle?: string | null;\n\tvideoProtectionEnabled: boolean;\n\tchapters: Array<{\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t}>;\n};\n\nexport type BasicCourseChapterFragment = {\n\t__typename?: \"Chapter\";\n\tid: string;\n\ttitle: string;\n\torder: number;\n\tlessons: Array<{\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tcontent?: string | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t}>;\n};\n\nexport type BasicCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tcontent?: string | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n};\n\nexport type CompanyFragmentFragment = {\n\t__typename?: \"PublicCompany\";\n\tid: string;\n\ttitle: string;\n\troute: string;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type ExperienceFragmentFragment = {\n\t__typename?: \"CustomPrivate\";\n\tid: string;\n\tname?: string | null;\n\tdescription?: string | null;\n\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type PublicExperienceFragmentFragment = {\n\t__typename?: \"PublicExperience\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ForumPostFragmentFragment = {\n\t__typename?: \"ForumPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tmentionedUserIds: Array<string>;\n\tparentId?: string | null;\n\tviewCount?: number | null;\n\tisPinned: boolean;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type FullCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tcontent?: string | null;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n\tassessmentQuestions: Array<{\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t}>;\n\tattachments: {\n\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\tnodes?: Array<\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null\n\t\t> | null;\n\t};\n\tmainPdf?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type CourseMuxAssetFragment = {\n\t__typename?: \"MuxAsset\";\n\tid: string;\n\tmuxAssetId?: string | null;\n\tplaybackId?: string | null;\n\tsignedPlaybackId?: string | null;\n\tsignedThumbnailPlaybackToken?: string | null;\n\tsignedVideoPlaybackToken?: string | null;\n\tsignedStoryboardPlaybackToken?: string | null;\n\tdurationSeconds?: number | null;\n\tstatus: MuxAssetStatuses;\n\tfinishedUploadingAt?: number | null;\n};\n\nexport type CourseAssessmentQuestionFragment = {\n\t__typename?: \"AssessmentQuestion\";\n\tid: string;\n\tcorrectAnswer: string;\n\torder: number;\n\tquestionText: string;\n\tquestionType: CoursesAssessmentQuestionTypes;\n\timage?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n\toptions: Array<{\n\t\t__typename?: \"AssessmentQuestionOption\";\n\t\tid: string;\n\t\tisCorrect: boolean;\n\t\toptionText: string;\n\t\torder: number;\n\t}>;\n};\n\nexport type BaseCompanyMemberFragment = {\n\t__typename?: \"CompanyMember\";\n\tid: string;\n\tcreatedAt: number;\n\tupdatedAtMs: string;\n\tjoinedAt: number;\n\tstatus: MemberStatuses;\n\tphone?: string | null;\n\taccessLevel: AccessLevel;\n\ttotalSpent: number;\n\tusdTotalSpent: string;\n\tmrr: string;\n\tuser?: {\n\t\t__typename?: \"CompanyMemberUser\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername: string;\n\t} | null;\n\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n};\n\nexport type MessageFragment = {\n\t__typename?: \"DmsPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tisPinned: boolean;\n\tisEveryoneMentioned: boolean;\n\tmentionedUserIds: Array<string>;\n\tmessageType: DmsPostTypes;\n\treplyingToPostId?: string | null;\n\tviewCount?: number | null;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BasePromoCodeFragment = {\n\t__typename?: \"PromoCode\";\n\tid: string;\n\tcode?: string | null;\n\tpromoType: PromoTypes;\n\tduration?: PromoDurations | null;\n\tcreatedAt: number;\n\texpirationDatetime?: number | null;\n\tbaseCurrency: Currencies;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals?: number | null;\n\tstatus: PromoCodeStatus;\n\tstock: number;\n\tunlimitedStock: boolean;\n\tuses: number;\n\tonePerCustomer: boolean;\n\tchurnedUsersOnly: boolean;\n\tnewUsersOnly: boolean;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BasePublicPromoCodeFragment = {\n\t__typename?: \"PublicPromoCode\";\n\tid: string;\n\tcode: string;\n\tcreatedAt: number;\n\tpromoType: PromoTypes;\n\tbaseCurrency: Currencies;\n\tduration: PromoDurations;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals: number;\n\tisPopupPromo: boolean;\n};\n\nexport type BaseWebhookFragment = {\n\t__typename?: \"Webhook\";\n\tid: string;\n\turl: string;\n\tapiVersion: ApiVersion;\n\tcreatedAt: number;\n\tenabled: boolean;\n\tevents: Array<WebhookEvent>;\n\tresourceId: string;\n\twebhookSecret: string;\n};\n\nexport type GetAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\taccessPass: {\n\t\t__typename?: \"PublicAccessPass\";\n\t\theadline?: string | null;\n\t\treviewsAverage: number;\n\t\tid: string;\n\t\ttitle: string;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\troute: string;\n\t\tactiveUsersCount: number;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\townerUser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tgalleryImages: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type GetAttachmentQueryVariables = Exact<{\n\tid: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAttachmentQuery = {\n\t__typename?: \"PublicQuery\";\n\tattachment:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  };\n};\n\nexport type ProcessAttachmentMutationVariables = Exact<{\n\tinput: AnalyzeAttachmentInput;\n}>;\n\nexport type ProcessAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaAnalyzeAttachment?: boolean | null;\n};\n\nexport type UploadMediaMutationVariables = Exact<{\n\tinput: DirectUploadInput;\n}>;\n\nexport type UploadMediaMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaDirectUpload?: {\n\t\t__typename?: \"DirectUpload\";\n\t\tid: string;\n\t\theaders: { [key: string]: any };\n\t\tuploadUrl?: string | null;\n\t\tmultipartUploadId?: string | null;\n\t\tmultipartUploadUrls?: Array<{\n\t\t\t__typename?: \"MultipartUrl\";\n\t\t\tpartNumber: number;\n\t\t\turl: string;\n\t\t}> | null;\n\t} | null;\n};\n\nexport type GetCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tindustryType?: IndustryTypes | null;\n\t\tbusinessType?: BusinessTypes | null;\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type CreateAssessmentQuestionMutationVariables = Exact<{\n\tinput: CreateAssessmentQuestionInput;\n}>;\n\nexport type CreateAssessmentQuestionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAssessmentQuestion?: {\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateChapterMutationVariables = Exact<{\n\tinput: CreateChapterInput;\n}>;\n\nexport type CreateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateCourseMutationVariables = Exact<{\n\tinput: CreateCourseInput;\n}>;\n\nexport type CreateCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateLessonMutationVariables = Exact<{\n\tinput: CreateLessonInput;\n}>;\n\nexport type CreateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAssessmentQuestionImageMutationVariables = Exact<{\n\tinput: DeleteAssessmentQuestionImageInput;\n}>;\n\nexport type DeleteAssessmentQuestionImageMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAssessmentQuestionImage?: boolean | null;\n};\n\nexport type DeleteChapterMutationVariables = Exact<{\n\tinput: DeleteChapterInput;\n}>;\n\nexport type DeleteChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteChapter?: boolean | null;\n};\n\nexport type DeleteLessonAttachmentMutationVariables = Exact<{\n\tinput: DeleteLessonAttachmentInput;\n}>;\n\nexport type DeleteLessonAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLessonAttachment?: boolean | null;\n};\n\nexport type DeleteLessonMutationVariables = Exact<{\n\tinput: DeleteLessonInput;\n}>;\n\nexport type DeleteLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLesson?: boolean | null;\n};\n\nexport type GetCourseQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCourseQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type GetLessonQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetLessonQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tlesson?: {\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tcontent?: string | null;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t\tassessmentQuestions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\t\tid: string;\n\t\t\t\tcorrectAnswer: string;\n\t\t\t\torder: number;\n\t\t\t\tquestionText: string;\n\t\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\t\timage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t\toptions: Array<{\n\t\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tisCorrect: boolean;\n\t\t\t\t\toptionText: string;\n\t\t\t\t\torder: number;\n\t\t\t\t}>;\n\t\t\t}>;\n\t\t\tattachments: {\n\t\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\t\tnodes?: Array<\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null\n\t\t\t\t> | null;\n\t\t\t};\n\t\t\tmainPdf?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetUserLessonInteractionsQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserLessonInteractionsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonInteraction?: {\n\t\t\t\t\t__typename?: \"LessonInteraction\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcompleted: boolean;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListCoursesForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tid: string;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\texperience: {\n\t\t\t\t\t__typename?: \"PublicExperience\";\n\t\t\t\t\tid: string;\n\t\t\t\t\taccessPasses: Array<{\n\t\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListCoursesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tlanguage: Languages;\n\t\t\t\trequireCompletingLessonsInOrder: boolean;\n\t\t\t\ttagline?: string | null;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tvideoProtectionEnabled: boolean;\n\t\t\t\tchapters: Array<{\n\t\t\t\t\t__typename?: \"Chapter\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\torder: number;\n\t\t\t\t\tlessons: Array<{\n\t\t\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tlessonType: LessonTypes;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t\torder: number;\n\t\t\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\t\tmuxAsset?: {\n\t\t\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t\t\t} | null;\n\t\t\t\t\t}>;\n\t\t\t\t}>;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MarkLessonAsCompletedMutationVariables = Exact<{\n\tinput: MarkLessonAsCompletedInput;\n}>;\n\nexport type MarkLessonAsCompletedMutation = {\n\t__typename?: \"PublicMutation\";\n\tmarkLessonAsCompleted?: boolean | null;\n};\n\nexport type MoveCourseMutationVariables = Exact<{\n\tinput: MoveCourseInput;\n}>;\n\nexport type MoveCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tmoveCourse?: boolean | null;\n};\n\nexport type UpdateChapterOrderMutationVariables = Exact<{\n\tinput: UpdateChapterOrderInput;\n}>;\n\nexport type UpdateChapterOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapterOrder?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateChapterMutationVariables = Exact<{\n\tinput: UpdateChapterInput;\n}>;\n\nexport type UpdateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateLessonOrderMutationVariables = Exact<{\n\tinput: UpdateLessonOrderInput;\n}>;\n\nexport type UpdateLessonOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLessonOrder?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type UpdateLessonMutationVariables = Exact<{\n\tinput: UpdateLessonInput;\n}>;\n\nexport type UpdateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tupsellType?: UpsellTypes | null;\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tupsellPlan?: {\n\t\t\t__typename?: \"PublicPlan\";\n\t\t\tid: string;\n\t\t\tbaseCurrency: Currencies;\n\t\t\trawRenewalPrice: number;\n\t\t\trawInitialPrice: number;\n\t\t\tinitialPriceDue: number;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAt: number;\n\t\t\tbillingPeriod?: number | null;\n\t\t\ttrialPeriodDays?: number | null;\n\t\t\texpirationDays?: number | null;\n\t\t\tunlimitedStock: boolean;\n\t\t\tpaymentLinkDescription?: string | null;\n\t\t\treleaseMethod: ReleaseMethod;\n\t\t\tstock?: number | null;\n\t\t\tvisibility: Visibility;\n\t\t\tplanType: PlanTypes;\n\t\t} | null;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tapp: {\n\t\t\t__typename?: \"PublicApp\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\ticon?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type ListUsersForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tsearchQuery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListUsersForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tusers?: {\n\t\t\t__typename?: \"PublicProfileUserConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tusername: string;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t};\n\t\t} | null;\n\t};\n};\n\nexport type ListForumPostsFromForumQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListForumPostsFromForumQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| { __typename?: \"DmsPost\" }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ForumPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tparentId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type ListMessagesFromChatQueryVariables = Exact<{\n\tchatExperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type ListMessagesFromChatQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"DmsPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tisEveryoneMentioned: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tmessageType: DmsPostTypes;\n\t\t\t\t\treplyingToPostId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| { __typename?: \"ForumPost\" }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type GetCurrentUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tbio?: string | null;\n\t\t\tphoneVerified: boolean;\n\t\t\tbannerImage?: string | null;\n\t\t\tcreatedAt: number;\n\t\t\tdateOfBirthDay?: number | null;\n\t\t\tdateOfBirthMonth?: number | null;\n\t\t\tdateOfBirthYear?: number | null;\n\t\t\tid: string;\n\t\t\temail?: string | null;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type GetUserLedgerAccountQueryVariables = Exact<{\n\t[key: string]: never;\n}>;\n\nexport type GetUserLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type GetUserQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tbio?: string | null;\n\t\tphoneVerified: boolean;\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tbanner?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tuserStat?: {\n\t\t\t__typename?: \"UserStat\";\n\t\t\tmoneyEarned24Hours?: number | null;\n\t\t\tmoneyEarned30Days?: number | null;\n\t\t\tmoneyEarned7Days?: number | null;\n\t\t\tmoneyEarnedLifetime?: number | null;\n\t\t} | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type Requester<C = {}> = <R, V>(\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvars?: V,\n\toptions?: C,\n) => Promise<R>;\n\nexport type WithError<T> = T extends object ? T & { _error?: Error } : T;\nexport function carryErrors<Full, Extracted>(\n\tres: Full,\n\tdata: Extracted,\n): WithError<Extracted> {\n\tif (\n\t\ttypeof res === \"object\" &&\n\t\tres &&\n\t\t\"_error\" in res &&\n\t\tres._error &&\n\t\tres._error instanceof Error &&\n\t\ttypeof data === \"object\" &&\n\t\tdata\n\t) {\n\t\t(data as any)._error = res._error;\n\t}\n\treturn data as WithError<Extracted>;\n}\n\nexport function getSdk<C>(requester: Requester<C>) {\n\treturn {\n\t\taccessPasses: {\n\t\t\tgetAccessPass(\n\t\t\t\tvariables: GetAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAccessPassQuery[\"accessPass\"]>> {\n\t\t\t\treturn requester<GetAccessPassQuery, GetAccessPassQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:fa2b3d0ff6975e2e05c1e649fb853892460355f2a4e9bd33a67ef9bcdf6ed686\",\n\t\t\t\t\t\"getAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.accessPass));\n\t\t\t},\n\t\t},\n\t\tattachments: {\n\t\t\tgetAttachment(\n\t\t\t\tvariables: GetAttachmentQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAttachmentQuery[\"attachment\"]>> {\n\t\t\t\treturn requester<GetAttachmentQuery, GetAttachmentQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:07f48fb0c1292fda5a8dd5f54b5d1b637635a87b6012769819ebcf7795a045ba\",\n\t\t\t\t\t\"getAttachment\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.attachment));\n\t\t\t},\n\t\t\tprocessAttachment(\n\t\t\t\tvariables: ProcessAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ProcessAttachmentMutation[\"mediaAnalyzeAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tProcessAttachmentMutation,\n\t\t\t\t\tProcessAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:396c5803051b3c9bcedd3ce310505a4f57a6b94bc190e7142e897d9aa5036ece\",\n\t\t\t\t\t\"processAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaAnalyzeAttachment));\n\t\t\t},\n\t\t\tuploadMedia(\n\t\t\t\tvariables: UploadMediaMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UploadMediaMutation[\"mediaDirectUpload\"]>> {\n\t\t\t\treturn requester<UploadMediaMutation, UploadMediaMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:a3d06ed16e52126d96aae83cad3400471246f37fc275e4c8f4836c98bf8e9d59\",\n\t\t\t\t\t\"uploadMedia\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaDirectUpload));\n\t\t\t},\n\t\t},\n\t\tcompanies: {\n\t\t\tgetCompany(\n\t\t\t\tvariables: GetCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetCompanyQuery, GetCompanyQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:e640d46816020225ad7ec377936056cabb7e8e07a88ba376e926ba18aca1cc5c\",\n\t\t\t\t\t\"getCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tcourses: {\n\t\t\tcreateAssessmentQuestion(\n\t\t\t\tvariables: CreateAssessmentQuestionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateAssessmentQuestionMutation[\"createAssessmentQuestion\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAssessmentQuestionMutation,\n\t\t\t\t\tCreateAssessmentQuestionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:52902016f3a8cf2b819038945ded34a0caafd80c9a867403ca36451c39f56ac6\",\n\t\t\t\t\t\"createAssessmentQuestion\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAssessmentQuestion));\n\t\t\t},\n\t\t\tcreateChapter(\n\t\t\t\tvariables: CreateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateChapterMutation[\"createChapter\"]>> {\n\t\t\t\treturn requester<CreateChapterMutation, CreateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:8ebe9533278b00eded622eef765baeebf70fccedcd5d60854f8777812da20311\",\n\t\t\t\t\t\"createChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChapter));\n\t\t\t},\n\t\t\tcreateCourse(\n\t\t\t\tvariables: CreateCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateCourseMutation[\"createCourse\"]>> {\n\t\t\t\treturn requester<CreateCourseMutation, CreateCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:41f957dfc0e147131265e62e4b5ae6f743256f6bf7a4e28e042a3469777e9c35\",\n\t\t\t\t\t\"createCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCourse));\n\t\t\t},\n\t\t\tcreateLesson(\n\t\t\t\tvariables: CreateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateLessonMutation[\"createLesson\"]>> {\n\t\t\t\treturn requester<CreateLessonMutation, CreateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:33069f4d2b756d6a9a2a486d0ac6d91272c9acbd9d3774c15e12d7b39f3df6f4\",\n\t\t\t\t\t\"createLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createLesson));\n\t\t\t},\n\t\t\tdeleteAssessmentQuestionImage(\n\t\t\t\tvariables: DeleteAssessmentQuestionImageMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation[\"deleteAssessmentQuestionImage\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation,\n\t\t\t\t\tDeleteAssessmentQuestionImageMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:07563fb79b45fd9fbe7ef7d14923014e5f3407dae067d0393b84bd6724970aaa\",\n\t\t\t\t\t\"deleteAssessmentQuestionImage\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAssessmentQuestionImage));\n\t\t\t},\n\t\t\tdeleteChapter(\n\t\t\t\tvariables: DeleteChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteChapterMutation[\"deleteChapter\"]>> {\n\t\t\t\treturn requester<DeleteChapterMutation, DeleteChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:021c10ea5b5f776e229d4c2cd25578b8aec3c869c898c747d4dcb889ddad32b6\",\n\t\t\t\t\t\"deleteChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteChapter));\n\t\t\t},\n\t\t\tdeleteLessonAttachment(\n\t\t\t\tvariables: DeleteLessonAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<DeleteLessonAttachmentMutation[\"deleteLessonAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteLessonAttachmentMutation,\n\t\t\t\t\tDeleteLessonAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:7af840d8ddbf664a04ec3da2283e9a540f68da24adedbe7a2af9718f1c70f10c\",\n\t\t\t\t\t\"deleteLessonAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLessonAttachment));\n\t\t\t},\n\t\t\tdeleteLesson(\n\t\t\t\tvariables: DeleteLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteLessonMutation[\"deleteLesson\"]>> {\n\t\t\t\treturn requester<DeleteLessonMutation, DeleteLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:6be8fd89af64aec7db125bac7d67bad8530cc8f5b8ee98c879351acd59aa6fac\",\n\t\t\t\t\t\"deleteLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLesson));\n\t\t\t},\n\t\t\tgetCourse(\n\t\t\t\tvariables: GetCourseQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCourseQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetCourseQuery, GetCourseQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:5e81c304ac7c4c19b2d07ea7c2a32b2fd8998774bf90900a81999b9077b383a1\",\n\t\t\t\t\t\"getCourse\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetLesson(\n\t\t\t\tvariables: GetLessonQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetLessonQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetLessonQuery, GetLessonQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:372989bc0ffb7ff3c36d1325f1af4115c06205e95378a2e344d91a857e732630\",\n\t\t\t\t\t\"getLesson\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetUserLessonInteractions(\n\t\t\t\tvariables: GetUserLessonInteractionsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLessonInteractionsQuery[\"course\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLessonInteractionsQuery,\n\t\t\t\t\tGetUserLessonInteractionsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:6b12c8ccabe59b65d8869029d4e4e56ddbeac7256137e5e79012a3e33aa81523\",\n\t\t\t\t\t\"getUserLessonInteractions\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tlistCoursesForCompany(\n\t\t\t\tvariables: ListCoursesForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForCompanyQuery,\n\t\t\t\t\tListCoursesForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:76dd2b0b09b6083392dcce8c1df423cc6e6eb290e58bdd2d830f50ef1a4828b3\",\n\t\t\t\t\t\"listCoursesForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistCoursesForExperience(\n\t\t\t\tvariables: ListCoursesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForExperienceQuery,\n\t\t\t\t\tListCoursesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:a579fee2663d841a23be014b234d89eadb097dac387722dfe9d0e87911a7598e\",\n\t\t\t\t\t\"listCoursesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t\tmarkLessonAsCompleted(\n\t\t\t\tvariables: MarkLessonAsCompletedMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<MarkLessonAsCompletedMutation[\"markLessonAsCompleted\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tMarkLessonAsCompletedMutation,\n\t\t\t\t\tMarkLessonAsCompletedMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:941178d021bd72247401d347d5dd969036579147777e0a754f5102cddc5074c7\",\n\t\t\t\t\t\"markLessonAsCompleted\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.markLessonAsCompleted));\n\t\t\t},\n\t\t\tmoveCourse(\n\t\t\t\tvariables: MoveCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MoveCourseMutation[\"moveCourse\"]>> {\n\t\t\t\treturn requester<MoveCourseMutation, MoveCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:ce7d38029113792bf1ff544db18f000732fed4db3ebc766767a367cef5691c2b\",\n\t\t\t\t\t\"moveCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.moveCourse));\n\t\t\t},\n\t\t\tupdateChapterOrder(\n\t\t\t\tvariables: UpdateChapterOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterOrderMutation[\"updateChapterOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateChapterOrderMutation,\n\t\t\t\t\tUpdateChapterOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c749c5c4907afd39ab2d3f8c44b3e65c8c9928e0cf06f8687deaa40d144a0df6\",\n\t\t\t\t\t\"updateChapterOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapterOrder));\n\t\t\t},\n\t\t\tupdateChapter(\n\t\t\t\tvariables: UpdateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterMutation[\"updateChapter\"]>> {\n\t\t\t\treturn requester<UpdateChapterMutation, UpdateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:9fda8d867b07c1b31622cb73084523577519ca35822d8ce3938fa2b07efaf6e5\",\n\t\t\t\t\t\"updateChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapter));\n\t\t\t},\n\t\t\tupdateLessonOrder(\n\t\t\t\tvariables: UpdateLessonOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonOrderMutation[\"updateLessonOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateLessonOrderMutation,\n\t\t\t\t\tUpdateLessonOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:8ae83382f97b182c08bf5851e3bbed05fd8269856c00b82b5577939c00e39e43\",\n\t\t\t\t\t\"updateLessonOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLessonOrder));\n\t\t\t},\n\t\t\tupdateLesson(\n\t\t\t\tvariables: UpdateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonMutation[\"updateLesson\"]>> {\n\t\t\t\treturn requester<UpdateLessonMutation, UpdateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c872c79e5469f162f4de0f64ed6decc489cc3e05d66781a2f33ae1eef4d762bd\",\n\t\t\t\t\t\"updateLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLesson));\n\t\t\t},\n\t\t},\n\t\texperiences: {\n\t\t\tgetExperience(\n\t\t\t\tvariables: GetExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<GetExperienceQuery, GetExperienceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:61d7778965bc84e700a681ec856251c59070ebc6b0e00b6e5c91568df734db7e\",\n\t\t\t\t\t\"getExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistUsersForExperience(\n\t\t\t\tvariables: ListUsersForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUsersForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListUsersForExperienceQuery,\n\t\t\t\t\tListUsersForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:85c827d8660dc2a97e8b930e213b83493ae132c00988e0f03e02c5dc99559a5a\",\n\t\t\t\t\t\"listUsersForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t},\n\t\tforums: {\n\t\t\tlistForumPostsFromForum(\n\t\t\t\tvariables: ListForumPostsFromForumQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListForumPostsFromForumQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListForumPostsFromForumQuery,\n\t\t\t\t\tListForumPostsFromForumQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:97a7d797f3a5f6f83bf4628cc7c586d529b90e54c0a8e193493a55b4ad05df46\",\n\t\t\t\t\t\"listForumPostsFromForum\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tmessages: {\n\t\t\tlistMessagesFromChat(\n\t\t\t\tvariables?: ListMessagesFromChatQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMessagesFromChatQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListMessagesFromChatQuery,\n\t\t\t\t\tListMessagesFromChatQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:5fdbf50fe489888e5b0a98e9fe6170584bf47ab38f87d1e0b7fce8f523513894\",\n\t\t\t\t\t\"listMessagesFromChat\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tusers: {\n\t\t\tgetCurrentUser(\n\t\t\t\tvariables?: GetCurrentUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCurrentUserQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<GetCurrentUserQuery, GetCurrentUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:9f7cc9ff353a2778e55b674cfd5737a7dcaff19be9ac13d6f79aabd5d8ef69ff\",\n\t\t\t\t\t\"getCurrentUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUserLedgerAccount(\n\t\t\t\tvariables?: GetUserLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLedgerAccountQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLedgerAccountQuery,\n\t\t\t\t\tGetUserLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:d7eeaf0a388395edb82220877e72a7fc91d1f06a6d89f1cfa5e56bb400d2aa49\",\n\t\t\t\t\t\"getUserLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUser(\n\t\t\t\tvariables: GetUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<GetUserQuery, GetUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-client/sha256:c6cd0172ca06b30e54b818c216ccb00023ffa4d6392becd6fb80a5a0312b1b65\",\n\t\t\t\t\t\"getUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport type Sdk = ReturnType<typeof getSdk>;\n","export const DEFAULT_API_ORIGIN = \"https://api.whop.com\";\n\nexport class GQLNetworkError extends Error {\n\tconstructor(e: unknown) {\n\t\tconst message =\n\t\t\te instanceof Error\n\t\t\t\t? e.message\n\t\t\t\t: typeof e === \"string\"\n\t\t\t\t\t? e\n\t\t\t\t\t: \"Unknown network error\";\n\t\tsuper(message);\n\t\tif (e instanceof Error) this.stack = e.stack;\n\t}\n}\n\nexport class GQLRequestError extends Error {\n\tstatusCode: number;\n\n\tconstructor(statusCode: number, message: string) {\n\t\tsuper(message);\n\t\tthis.statusCode = statusCode;\n\t}\n\n\tisUnauthorized() {\n\t\treturn this.statusCode === 401;\n\t}\n\n\tisForbidden() {\n\t\treturn this.statusCode === 403;\n\t}\n\n\tisNotFound() {\n\t\treturn this.statusCode === 404;\n\t}\n\n\tisServerError() {\n\t\treturn this.statusCode >= 500;\n\t}\n}\n\nexport class GQLError extends Error {\n\terrors: { message: string }[];\n\n\tconstructor(errors: { message: string }[]) {\n\t\tsuper(errors[0].message);\n\t\tthis.errors = errors;\n\t}\n}\n\nexport async function graphqlFetch<R, V>(\n\turl: URL | string,\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvariables?: V,\n\theadersInit: HeadersInit = {},\n): Promise<R> {\n\ttry {\n\t\tconst body = {\n\t\t\toperationId,\n\t\t\toperationType,\n\t\t\toperationName,\n\t\t\tvariables,\n\t\t};\n\n\t\tconst headers = new Headers(headersInit);\n\t\theaders.set(\"Content-Type\", \"application/json\");\n\t\theaders.set(\"Accept\", \"application/json\");\n\n\t\tconst urlObject = addOperationNameToUrl(\n\t\t\turl,\n\t\t\toperationName,\n\t\t\toperationId,\n\t\t\toperationType,\n\t\t);\n\n\t\tconst response = await fetch(urlObject, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(body),\n\t\t\theaders,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tconst errorMessage = await response.text();\n\t\t\tthrow new GQLRequestError(response.status, errorMessage);\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\t// Only throw in the SDK if we didn't receive any data.\n\t\tif (data.errors && !data.data) {\n\t\t\tthrow new GQLError(data.errors);\n\t\t}\n\n\t\t// Otherwise, we try and attach the errors to the response object so they are still visible.\n\t\tif (data.errors && typeof data.data === \"object\" && data.data) {\n\t\t\tdata.data._error = new GQLError(data.errors);\n\t\t}\n\n\t\treturn data.data;\n\t} catch (e) {\n\t\tthrow new GQLNetworkError(e);\n\t}\n}\n\nfunction addOperationNameToUrl(\n\turl: URL | string,\n\tname: string,\n\toperationId: string,\n\toperationType: \"query\" | \"mutation\",\n): URL {\n\tconst urlObject = new URL(url);\n\tlet pathname = urlObject.pathname;\n\tif (pathname.endsWith(\"/\")) {\n\t\tpathname = pathname.slice(0, -1);\n\t}\n\tpathname += `/${name}`;\n\turlObject.pathname = pathname;\n\tconst [clientName, opId] = operationId.split(\"/\");\n\turlObject.searchParams.set(\"id\", opId);\n\turlObject.searchParams.set(\"client\", clientName);\n\turlObject.searchParams.set(\"type\", operationType);\n\treturn urlObject;\n}\n","import { TypedEmitter } from \"tiny-typed-emitter\";\nimport type { proto } from \"../index.shared\";\n\nexport type ReceivableWebsocketMessage =\n\tproto.common.WebsocketMessageServerToClient;\nexport type SendableWebsocketMessage =\n\tproto.common.WebsocketMessageClientToServer;\n\nexport type WebsocketStatus = \"connected\" | \"disconnected\" | \"connecting\";\nexport type WebsocketMessageHandler = (\n\tmessage: ReceivableWebsocketMessage,\n) => unknown;\nexport type WebsocketStatusHandler = (status: WebsocketStatus) => unknown;\n\nexport interface WhopWebsocketEvents {\n\tmessage: (message: ReceivableWebsocketMessage) => void;\n\tappMessage: (message: proto.common.AppMessage) => void;\n\tconnectionStatus: (status: WebsocketStatus) => void;\n\tconnect: () => void;\n\tdisconnect: () => void;\n}\n\nexport class WhopWebsocketClientBase extends TypedEmitter<WhopWebsocketEvents> {\n\tprivate websocket: WebSocket | null = null;\n\tprivate failedConnectionAttempts = 0;\n\tprivate status: WebsocketStatus = \"disconnected\";\n\tprivate wantsToBeConnected = false;\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tthrow new Error(\"Not implemented in base class\");\n\t}\n\n\tpublic connect() {\n\t\tif (this.websocket) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tthis.wantsToBeConnected = true;\n\n\t\tthis.setStatus(\"connecting\");\n\t\tconst websocket = this.makeWebsocket();\n\t\tthis.websocket = websocket;\n\n\t\twebsocket.onopen = () => {\n\t\t\tthis.setStatus(\"connected\");\n\t\t};\n\n\t\twebsocket.onmessage = (event: MessageEvent) => {\n\t\t\ttry {\n\t\t\t\tconst message = JSON.parse(event.data) as ReceivableWebsocketMessage;\n\t\t\t\tthis.emit(\"message\", message);\n\t\t\t\tif (message.appMessage) {\n\t\t\t\t\tthis.emit(\"appMessage\", message.appMessage);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t\"[WhopWebsocketClient] Error parsing message\",\n\t\t\t\t\tevent.data,\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\twebsocket.onerror = (event: Event) => {\n\t\t\tconsole.error(\"[WhopWebsocketClient] Websocket error\", event);\n\t\t\tthis.setStatus(\"disconnected\");\n\t\t};\n\n\t\twebsocket.onclose = (event: Event) => {\n\t\t\tthis.setStatus(\"disconnected\");\n\t\t};\n\n\t\treturn () => {\n\t\t\tthis.disconnect();\n\t\t};\n\t}\n\n\tpublic disconnect() {\n\t\tif (this.websocket) {\n\t\t\tthis.websocket.onopen = null;\n\t\t\tthis.websocket.onmessage = null;\n\t\t\tthis.websocket.onerror = null;\n\t\t\tthis.websocket.onclose = null;\n\t\t\tthis.websocket.close();\n\t\t\tthis.websocket = null;\n\t\t}\n\n\t\tthis.wantsToBeConnected = false;\n\t}\n\n\tpublic send(message: SendableWebsocketMessage) {\n\t\tif (!this.websocket) {\n\t\t\tthrow new Error(\"Websocket not connected\");\n\t\t}\n\n\t\tthis.websocket.send(JSON.stringify(message));\n\t}\n\n\tpublic broadcast({\n\t\tmessage,\n\t\ttarget,\n\t}: { message: string; target: WebsocketBroadcastTarget }) {\n\t\tthis.send({\n\t\t\tbroadcastAppMessage: {\n\t\t\t\tchannel: convertBroadcastTargetToProtoChannel(target),\n\t\t\t\tjson: message,\n\t\t\t},\n\t\t});\n\t}\n\n\tprivate setStatus(status: WebsocketStatus) {\n\t\tif (status === this.status) return;\n\n\t\tthis.status = status;\n\n\t\tif (status === \"disconnected\") {\n\t\t\tconst backoff = this.calculateBackoff();\n\t\t\tthis.failedConnectionAttempts++;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.wantsToBeConnected) {\n\t\t\t\t\tthis.connect();\n\t\t\t\t}\n\t\t\t}, backoff);\n\t\t\tthis.emit(\"disconnect\");\n\t\t}\n\n\t\tif (status === \"connected\") {\n\t\t\tthis.failedConnectionAttempts = 0;\n\t\t\tthis.emit(\"connect\");\n\t\t}\n\n\t\tthis.emit(\"connectionStatus\", status);\n\t}\n\n\tprivate calculateBackoff() {\n\t\treturn Math.min(50 * 2 ** this.failedConnectionAttempts, 1000 * 60);\n\t}\n}\n\nexport type WebsocketBroadcastTarget =\n\t| {\n\t\t\texperienceId: string;\n\t  }\n\t| {\n\t\t\tcustomId: string;\n\t  }\n\t| \"everyone\";\n\nfunction convertBroadcastTargetToProtoChannel(\n\ttarget: WebsocketBroadcastTarget,\n): proto.common.Channel {\n\t// [app_id] is replaced with the app ID when the message is received on the server.\n\tif (target === \"everyone\") {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: \"[app_id]\",\n\t\t};\n\t}\n\n\tif (\"experienceId\" in target) {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: `[app_id]_${target.experienceId}`,\n\t\t};\n\t}\n\n\tif (\"customId\" in target) {\n\t\treturn {\n\t\t\ttype: \"APP\",\n\t\t\tid: `[app_id]_c_${target.customId}`,\n\t\t};\n\t}\n\n\tthrow new Error(\"Invalid broadcast target\");\n}\n","import { WhopWebsocketClientBase } from \"./client.common\";\n\nexport interface WebsocketClientOptionsClient {\n\t/// Pass an experience ID to join the channel for this experience(s). Access will be restricted to just users with access to the experience(s).\n\tjoinExperience?: string | string[] | null;\n\n\t/// Pass a custom string ID to join a custom channel with events from your app.\n\tjoinCustom?: string | string[] | null;\n\n\t/// Pass a any string to join a public channel with events from whop.\n\tjoinPublic?: string | string[] | null;\n}\n\nexport class WhopWebsocketClientBrowser extends WhopWebsocketClientBase {\n\tprivate options: WebsocketClientOptionsClient;\n\n\tconstructor(options: WebsocketClientOptionsClient) {\n\t\tsuper();\n\t\tthis.options = options;\n\t}\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tconst path = \"/_whop/ws/v1/websockets/connect\";\n\n\t\tconst searchParams = new URLSearchParams();\n\t\taddChannelIds(searchParams, \"join_experience\", this.options.joinExperience);\n\t\taddChannelIds(searchParams, \"join_custom\", this.options.joinCustom);\n\t\taddChannelIds(searchParams, \"join_public\", this.options.joinPublic);\n\n\t\tconst url = new URL(path, window.location.origin);\n\t\turl.protocol = url.protocol.replace(\"http\", \"ws\");\n\t\turl.search = searchParams.toString();\n\n\t\treturn new WebSocket(url.toString());\n\t}\n}\n\nfunction addChannelIds(\n\tsearchParams: URLSearchParams,\n\tkey: string,\n\tchannels: undefined | string | string[] | null,\n) {\n\tif (!channels) {\n\t\treturn;\n\t}\n\n\tif (typeof channels === \"string\" && channels.length > 0) {\n\t\tsearchParams.set(key, channels);\n\t\treturn;\n\t}\n\n\tfor (const channel of channels) {\n\t\tsearchParams.append(key, channel);\n\t}\n}\n\nexport function makeConnectToWebsocketFunction() {\n\treturn function connectToWebsocket(options: WebsocketClientOptionsClient) {\n\t\treturn new WhopWebsocketClientBrowser(options);\n\t};\n}\n","import { fileSdkExtensions } from \"@/attachments/file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { type Requester, getSdk } from \"@/codegen/graphql/client\";\nimport { graphqlFetch } from \"@/sdk/sdk-common\";\nimport { makeConnectToWebsocketFunction } from \"@/websockets/client.browser\";\n\n/**\n * SDK options for client side use\n */\nexport interface WhopClientSdkOptions {\n\t/** the origin of the API */\n\tapiOrigin?: string;\n\t/** the path of the API */\n\tapiPath?: string;\n}\n\nexport function makeWhopClientSdk({\n\tuploadFile,\n}: { uploadFile: ReturnType<typeof makeUploadAttachmentFunction> }) {\n\treturn function WhopClientSdk(options?: WhopClientSdkOptions) {\n\t\tconst baseSdk = getSdk(\n\t\t\tmakeRequester({\n\t\t\t\tapiPath: \"/_whop/public-graphql\",\n\t\t\t\t...options,\n\t\t\t}),\n\t\t);\n\n\t\tconst fileSdk = fileSdkExtensions(baseSdk, uploadFile);\n\n\t\tconst websocketClient = makeConnectToWebsocketFunction();\n\n\t\tconst sdk = {\n\t\t\t...baseSdk,\n\t\t\tattachments: {\n\t\t\t\t...baseSdk.attachments,\n\t\t\t\t...fileSdk,\n\t\t\t},\n\t\t\twebsockets: {\n\t\t\t\tclient: websocketClient,\n\t\t\t},\n\t\t};\n\n\t\treturn sdk;\n\t};\n}\n\nexport type WhopClientSdk = ReturnType<ReturnType<typeof makeWhopClientSdk>>;\n\nfunction makeRequester(\n\tapiOptions: WhopClientSdkOptions,\n): Requester<RequestInit> {\n\tconst endpoint = getEndpoint(apiOptions);\n\treturn async function fetcher<R, V>(\n\t\toperationId: string,\n\t\toperationName: string,\n\t\toperationType: \"query\" | \"mutation\",\n\t\tvars?: V,\n\t\toptions?: RequestInit,\n\t): Promise<R> {\n\t\tconst headers = new Headers(options?.headers);\n\t\treturn graphqlFetch<R, V>(\n\t\t\tendpoint,\n\t\t\toperationId,\n\t\t\toperationName,\n\t\t\toperationType,\n\t\t\tvars,\n\t\t\theaders,\n\t\t);\n\t};\n}\n\nfunction getEndpoint(apiOptions: WhopClientSdkOptions) {\n\tif (typeof document === \"undefined\" && !apiOptions.apiOrigin) {\n\t\tthrow new Error(\"WhopApi.client() is only available in the browser\");\n\t}\n\n\tconst url = new URL(\n\t\tapiOptions.apiPath ?? \"/public-graphql\",\n\t\tapiOptions.apiOrigin ?? window.location.origin,\n\t);\n\n\treturn url.href;\n}\n","export type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = {\n\t[K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]?: Maybe<T[SubKey]>;\n};\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {\n\t[SubKey in K]: Maybe<T[SubKey]>;\n};\nexport type MakeEmpty<\n\tT extends { [key: string]: unknown },\n\tK extends keyof T,\n> = { [_ in K]?: never };\nexport type Incremental<T> =\n\t| T\n\t| {\n\t\t\t[P in keyof T]?: P extends \" $fragmentName\" | \"__typename\" ? T[P] : never;\n\t  };\n/** All built-in and custom scalars, mapped to their actual values */\nexport interface Scalars {\n\tID: { input: string; output: string };\n\tString: { input: string; output: string };\n\tBoolean: { input: boolean; output: boolean };\n\tInt: { input: number; output: number };\n\tFloat: { input: number; output: number };\n\t/**\n\t * Represents non-fractional signed whole numeric values. Since the value may\n\t * exceed the size of a 32-bit integer, it's encoded as a string.\n\t */\n\tBigInt: { input: string; output: string };\n\t/**\n\t * The `Decimal` scalar type represents signed double-precision fractional\n\t * values. The Decimal appears in a JSON response as a string to preserve\n\t * precision.\n\t */\n\tDecimal: { input: string; output: string };\n\t/** Url to uploaded upload */\n\tFile: { input: string; output: string };\n\t/** Represents untyped JSON */\n\tJSON: { input: { [key: string]: any }; output: { [key: string]: any } };\n\t/** A number - float or integer */\n\tNumber: { input: number; output: number };\n\t/** String removes all html tags */\n\tSanitizedString: { input: string; output: string };\n\t/** A float that can be a string */\n\tStringFloat: { input: string | number; output: string | number };\n\t/** A valid timestamp in seconds, transported as an integer */\n\tTimestamp: { input: number; output: number };\n\t/** URL starting with http/https */\n\tUrlString: { input: string; output: string };\n}\n\n/** The name of the resource type that is being reported. */\nexport type AbuseReportCategoryResourceTypes =\n\t/** Page */\n\t\"Page\";\n\n/** Visibility of an abuse report category */\nexport type AbuseReportCategoryVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\";\n\n/** The status of the abuse report */\nexport type AbuseReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The high level payment processor options. */\nexport type AcceptedPaymentMethods =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\";\n\n/** The access level a given user (or company) has to an access pass or company. */\nexport type AccessLevel = \"admin\" | \"customer\" | \"no_access\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassAffiliateOrder =\n\t| \"cached_referrals_count\"\n\t| \"cached_usd_rewards\"\n\t| \"created_at\";\n\n/** An AccessPassAffiliate status */\nexport type AccessPassAffiliateStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\";\n\n/** The types of categories that can be used for AccessPass attachments. */\nexport type AccessPassAttachmentCategories =\n\t| \"affiliate_assets\"\n\t| \"gallery_images\";\n\n/** The conditions that an access pass can have */\nexport type AccessPassConditions = \"has_plans\";\n\n/** Values to filter access passes on */\nexport interface AccessPassFilters {\n\t/**\n\t * Whether or not this creator achieved the 3k in 30 milestone\n\t * @deprecated No longer available.\n\t */\n\tachievedThreeKInThirty?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/**\n\t * Whether or not to only return discoverable access passes.\n\t * @deprecated We only return discoverable access passes now.\n\t */\n\tdiscoverable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The discovery category to filter by\n\t * @deprecated The discovery AI API is no longer used.\n\t */\n\tdiscoveryCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The max global affiliate percentage */\n\tglobalAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tglobalAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The global affiliate status */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** An array, in order, of the category route tree that is being traversed. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The max global affiliate percentage */\n\tmemberAffiliatePercentageMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min global affiliate percentage */\n\tmemberAffiliatePercentageMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicAccessPassesOrder>;\n\t/** The max price */\n\tpriceMaximum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The min price */\n\tpriceMinimum?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Filter to show only passes owned by students of the specified access pass */\n\tstudentsOfAccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Whether or not the access pass' company uses whop four\n\t * @deprecated No longer applies.\n\t */\n\tusesWhopFour?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The onboarding versions for access passes */\nexport type AccessPassOnboardingVersionTypes = \"mar_2025\";\n\n/** The ways a relation of AccessPasses can be ordered */\nexport type AccessPassOrder =\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"usd_gmv\"\n\t| \"usd_gmv_30_days\";\n\n/** Input for creating a product highlight */\nexport interface AccessPassProductHighlightInput {\n\t/**\n\t * Text to display to describe the product highlight (max length 250 for\n\t * qualification or benefits, 170 for who this is for, 140 for pricing features).\n\t */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The type of this highlight. */\n\thighlightType: ProductHighlightTypes;\n\t/** The title of the product highlight, if applicable. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Input for creating a social link for an access pass */\nexport interface AccessPassSocialLinkInput {\n\t/** The URL of the social link */\n\turl: Scalars[\"UrlString\"][\"input\"];\n\t/** The website this link is for */\n\twebsite: SocialLinkWebsites;\n}\n\n/** The different types an access pass can be. */\nexport type AccessPassTypes =\n\t/** Api Only */\n\t| \"api_only\"\n\t/** App */\n\t| \"app\"\n\t/** Experience Upsell */\n\t| \"experience_upsell\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type AccessPassesSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** The types of payouts an affiliate can have */\nexport type AffiliatePayoutTypes = \"flat_fee\" | \"percentage\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatePlansSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter affiliate referral logs on */\nexport interface AffiliateReferralLogFilters {\n\t/** Specific affiliates. */\n\taffiliateIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** A specific affiliate type. */\n\taffiliateType?: InputMaybe<AffiliateTypes>;\n\t/** Specific plans. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Specific users. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type AffiliateReferralLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The scope of an affiliate (company based, global, etc.) */\nexport type AffiliateTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Global */\n\t| \"global\"\n\t/** Marketplace */\n\t| \"marketplace\"\n\t/** Passholder */\n\t| \"passholder\";\n\n/** Which columns can be used to sort. */\nexport type AffiliatesSortableColumns =\n\t| \"cached_total_referrals\"\n\t| \"cached_total_rewards\"\n\t| \"created_at\"\n\t| \"id\";\n\n/** Autogenerated input type of AnalyzeAttachment */\nexport interface AnalyzeAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID returned by the direct upload mutation */\n\tdirectUploadId: Scalars[\"String\"][\"input\"];\n\t/** The type of media to analyze */\n\tmediaType: Media;\n\t/** The parts of the multipart upload */\n\tmultipartParts?: InputMaybe<Array<UploadPartInput>>;\n\t/** The ID returned by the direct upload mutation */\n\tmultipartUploadId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The different types of permissions an api key can have. */\nexport type ApiKeyPermissions =\n\t/** Add free days membership */\n\t| \"add_free_days_membership\"\n\t/** Cancel membership */\n\t| \"cancel_membership\"\n\t/** Create checkout request */\n\t| \"create_checkout_request\"\n\t/** Create checkout session */\n\t| \"create_checkout_session\"\n\t/** Create plan */\n\t| \"create_plan\"\n\t/** Create promo code */\n\t| \"create_promo_code\"\n\t/** Create push notification */\n\t| \"create_push_notification\"\n\t/** Create quick link */\n\t| \"create_quick_link\"\n\t/** Create webhook */\n\t| \"create_webhook\"\n\t/** Delete checkout session */\n\t| \"delete_checkout_session\"\n\t/** Delete experience */\n\t| \"delete_experience\"\n\t/** Delete promo code */\n\t| \"delete_promo_code\"\n\t/** Delete webhook */\n\t| \"delete_webhook\"\n\t/** List access passes */\n\t| \"list_access_passes\"\n\t/** List checkout sessions */\n\t| \"list_checkout_sessions\"\n\t/** List customers */\n\t| \"list_customers\"\n\t/** List experiences */\n\t| \"list_experiences\"\n\t/** List licenses */\n\t| \"list_licenses\"\n\t/** List members */\n\t| \"list_members\"\n\t/** List memberships */\n\t| \"list_memberships\"\n\t/** List payment fees */\n\t| \"list_payment_fees\"\n\t/** List payment methods */\n\t| \"list_payment_methods\"\n\t/** List payments */\n\t| \"list_payments\"\n\t/** List plans */\n\t| \"list_plans\"\n\t/** List products */\n\t| \"list_products\"\n\t/** List promo codes */\n\t| \"list_promo_codes\"\n\t/** List reviews */\n\t| \"list_reviews\"\n\t/** List webhooks */\n\t| \"list_webhooks\"\n\t/** Refund payment */\n\t| \"refund_payment\"\n\t/** Retrieve access pass */\n\t| \"retrieve_access_pass\"\n\t/** Retrieve checkout request */\n\t| \"retrieve_checkout_request\"\n\t/** Retrieve checkout session */\n\t| \"retrieve_checkout_session\"\n\t/** Retrieve company */\n\t| \"retrieve_company\"\n\t/** Retrieve customer */\n\t| \"retrieve_customer\"\n\t/** Retrieve experience */\n\t| \"retrieve_experience\"\n\t/** Retrieve member */\n\t| \"retrieve_member\"\n\t/** Retrieve membership */\n\t| \"retrieve_membership\"\n\t/** Retrieve payment */\n\t| \"retrieve_payment\"\n\t/** Retrieve plan */\n\t| \"retrieve_plan\"\n\t/** Retrieve product */\n\t| \"retrieve_product\"\n\t/** Retrieve promo code */\n\t| \"retrieve_promo_code\"\n\t/** Retrieve review */\n\t| \"retrieve_review\"\n\t/** Retrieve webhook */\n\t| \"retrieve_webhook\"\n\t/** Send notification customers */\n\t| \"send_notification_customers\"\n\t/** Send notification members */\n\t| \"send_notification_members\"\n\t/** Terminate membership */\n\t| \"terminate_membership\"\n\t/** Update access pass */\n\t| \"update_access_pass\"\n\t/** Update experience */\n\t| \"update_experience\"\n\t/** Update membership */\n\t| \"update_membership\"\n\t/** Update plan */\n\t| \"update_plan\"\n\t/** Update product */\n\t| \"update_product\"\n\t/** Update promo code */\n\t| \"update_promo_code\"\n\t/** Update webhook */\n\t| \"update_webhook\"\n\t/** Validate license */\n\t| \"validate_license\";\n\n/** The different API versions */\nexport type ApiVersion = \"v1\" | \"v2\" | \"v5\";\n\n/** The different platforms an app build can target. */\nexport type AppBuildPlatforms = \"android\" | \"ios\" | \"web\";\n\n/** The different statuses an AppBuild can be in. */\nexport type AppBuildStatuses = \"approved\" | \"draft\" | \"pending\" | \"rejected\";\n\n/** Image styles for app. */\nexport type AppImageStyles = \"s16\" | \"s24\" | \"s32\" | \"s40\" | \"s48\" | \"s80\";\n\n/** Input for creating a requested permission */\nexport interface AppRequestedPermissionInput {\n\t/** The action that the app will request off of users when a user installs the app. */\n\taction: Scalars[\"String\"][\"input\"];\n\t/** Whether the action is required for the app to function. */\n\tisRequired: Scalars[\"Boolean\"][\"input\"];\n\t/** The reason for requesting the action. */\n\tjustification: Scalars[\"String\"][\"input\"];\n}\n\n/** The status of an experience interface */\nexport type AppStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Live */\n\t| \"live\"\n\t/** Unlisted */\n\t| \"unlisted\";\n\n/** These are the scopes an app can request on behalf of a user */\nexport type AppValidScopes =\n\t/** Read User */\n\t\"read_user\";\n\n/** The different types of an app view */\nexport type AppViewTypes =\n\t/** Analytics */\n\t| \"analytics\"\n\t/** Dash */\n\t| \"dash\"\n\t/** Dashboard */\n\t| \"dashboard\"\n\t/** Discover */\n\t| \"discover\"\n\t/** Hub */\n\t| \"hub\";\n\n/** The criteria for an application to the marketplace. */\nexport type ApplicationCriteriaIdentifier =\n\t/** App */\n\t| \"app\"\n\t/** Available Plan */\n\t| \"available_plan\"\n\t/** Benefit */\n\t| \"benefit\"\n\t/** Choose Category */\n\t| \"choose_category\"\n\t/** Description */\n\t| \"description\"\n\t/** Gallery Images */\n\t| \"gallery_images\"\n\t/** Headline */\n\t| \"headline\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Setup Payouts */\n\t| \"setup_payouts\"\n\t/** Title */\n\t| \"title\"\n\t/** Visibility */\n\t| \"visibility\";\n\n/** The types of records that an attachment can be attached to */\nexport type AttachableRecords =\n\t| \"abuse_report\"\n\t| \"access_pass\"\n\t| \"access_pass_collection\"\n\t| \"app\"\n\t| \"assessment_question\"\n\t| \"automated_messages_config\"\n\t| \"bot\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"competition_prize\"\n\t| \"content_reward_campaign\"\n\t| \"content_reward_submission\"\n\t| \"course_lesson\"\n\t| \"dispute\"\n\t| \"dms_post\"\n\t| \"experience\"\n\t| \"forum_post\"\n\t| \"information_request_item\"\n\t| \"resolution_event_upload\"\n\t| \"review\"\n\t| \"review_report\"\n\t| \"user\";\n\n/** Input for an attachment */\nexport interface AttachmentInput {\n\t/**\n\t * This ID should be used the first time you upload an attachment. It is the ID\n\t * of the direct upload that was created when uploading the file to S3 via the\n\t * mediaDirectUpload mutation.\n\t */\n\tdirectUploadId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The ID of an existing attachment object. Use this when updating a resource and\n\t * keeping a subset of the attachments. Don't use this unless you know what you're doing.\n\t */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Which columns can be used to sort. */\nexport type AuditLogsSortableColumns = \"created_at\" | \"id\";\n\n/** The possible 2FA authentication types. */\nexport type AuthenticationMethods = \"authenticator\" | \"sms\";\n\n/** Valid resource types for authorizations */\nexport type AuthorizationResourceTypes =\n\t/** An app */\n\t| \"app\"\n\t/** A company */\n\t| \"company\"\n\t/** An experience */\n\t| \"experience\"\n\t/** A product */\n\t| \"product\";\n\n/** Possible roles an authorized user can have */\nexport type AuthorizedUserRoles =\n\t/** Admin */\n\t| \"admin\"\n\t/** App Manager */\n\t| \"app_manager\"\n\t/** Manager */\n\t| \"manager\"\n\t/** Moderator */\n\t| \"moderator\"\n\t/** Owner */\n\t| \"owner\"\n\t/** Sales Manager */\n\t| \"sales_manager\"\n\t/** Support */\n\t| \"support\";\n\n/** The different categories of automated messages triggers. */\nexport type AutomatedMessagesTriggerCategories = \"access_pass\" | \"app\";\n\n/** Image styles for avatar. */\nexport type AvatarImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** Balance reservation reservation types. */\nexport type BalanceReservationReservationTypes = \"bnpl\" | \"regular\";\n\n/** The reasons for banning a user */\nexport type BanReasons =\n\t| \"botting_content_rewards\"\n\t| \"botting_negative_reviews\"\n\t| \"control_center_blocked_country\"\n\t| \"harassment\"\n\t| \"other\"\n\t| \"spamming\";\n\n/** Autogenerated input type of BanUser */\nexport interface BanUserInput {\n\t/** The ID of the access pass to ban the user from */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom reason for banning the user */\n\tcustomReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the feed to delete messages from */\n\tdeleteMessagesInFeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The reason for banning the user */\n\treason?: InputMaybe<BanReasons>;\n\t/** The ID of the user to ban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The reason why a specific payment was billed */\nexport type BillingReasons =\n\t/** Manual */\n\t| \"manual\"\n\t/** One Time */\n\t| \"one_time\"\n\t/** Subscription */\n\t| \"subscription\"\n\t/** Subscription Create */\n\t| \"subscription_create\"\n\t/** Subscription Cycle */\n\t| \"subscription_cycle\"\n\t/** Subscription Update */\n\t| \"subscription_update\";\n\n/** The BNPL (Buy Now Pay Later) providers for a company */\nexport type BnplProvider =\n\t| \"afterpay_clearpay\"\n\t| \"klarna\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"zip\";\n\n/** Values to filter bounties on */\nexport interface BountyFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Ability to filter bounties by access passes in specific marketplace categories. */\n\tmarketplaceCategoryRoutes?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether to only include bounties that are not whop bounties. */\n\tnonWhopOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PublicBountiesOrder>;\n}\n\n/** The type of update an event is. */\nexport type BusinessActivityEventTypes =\n\t/** Member Canceled */\n\t| \"member_canceled\"\n\t/** Member Churned */\n\t| \"member_churned\"\n\t/** Member Joined */\n\t| \"member_joined\"\n\t/** New Dispute */\n\t| \"new_dispute\"\n\t/** New Marketplace Sale */\n\t| \"new_marketplace_sale\"\n\t/** New Payment */\n\t| \"new_payment\"\n\t/** New Waitlist Entry */\n\t| \"new_waitlist_entry\";\n\n/** Image styles for business_affiliate. */\nexport type BusinessAffiliateImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** The different business types a company can be. */\nexport type BusinessTypes =\n\t/** Agency */\n\t| \"agency\"\n\t/** Brick And Mortar */\n\t| \"brick_and_mortar\"\n\t/** Coaching */\n\t| \"coaching\"\n\t/** Coaching And Courses */\n\t| \"coaching_and_courses\"\n\t/** Community */\n\t| \"community\"\n\t/** Course */\n\t| \"course\"\n\t/** Education Program */\n\t| \"education_program\"\n\t/** Events */\n\t| \"events\"\n\t/** Newsletter */\n\t| \"newsletter\"\n\t/** Other */\n\t| \"other\"\n\t/** Paid Group */\n\t| \"paid_group\"\n\t/** Physical Products */\n\t| \"physical_products\"\n\t/** Saas */\n\t| \"saas\"\n\t/** Software */\n\t| \"software\";\n\n/** The modes for the buyer fee. */\nexport type BuyerFeeMode = \"use_account_fee\" | \"use_experiment_fee\";\n\n/** The different reasons a user can choose for why they are canceling their membership. */\nexport type CancelOptions =\n\t| \"bad_experience\"\n\t| \"missing_features\"\n\t| \"other\"\n\t| \"switching\"\n\t| \"technical_issues\"\n\t| \"testing\"\n\t| \"too_expensive\";\n\n/** The over-arching state of the resolution. */\nexport type CaseStates = \"closed\" | \"open\";\n\n/** Autogenerated input type of ChangeCardMyMembership */\nexport interface ChangeCardMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n\t/** The URL you want to take the user to when they return */\n\tredirectUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\n/** The different card funding methods a charge can have. */\nexport type ChargeCardFunding =\n\t/** Credit */\n\t| \"credit\"\n\t/** Debit */\n\t| \"debit\"\n\t/** Prepaid */\n\t| \"prepaid\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The different risk levels a charge can have. */\nexport type ChargeOutcomeRiskLevels =\n\t/** Elevated */\n\t| \"elevated\"\n\t/** Highest */\n\t| \"highest\"\n\t/** Normal */\n\t| \"normal\"\n\t/** Not Assessed */\n\t| \"not_assessed\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** Autogenerated input type of ChargeUser */\nexport interface ChargeUserInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount to charge the user */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency to charge in */\n\tcurrency: Currencies;\n\t/** The description of the charge. Maximum 200 characters. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Additional metadata for the charge */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to charge */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The possible statuses for a charge user response */\nexport type ChargeUserResponseStatus =\n\t/** The charge requires additional action from the user. */\n\t| \"needs_action\"\n\t/** The charge was successful */\n\t| \"success\";\n\n/** Chart interval (period). */\nexport type ChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** Input for a chat feed */\nexport interface ChatFeedInput {\n\t/** Whether or not media is banned in this chat */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this chat */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this chat */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The unique identifier for the feed */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this chat */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n\t/** Who can react on this chat */\n\twhoCanReact?: InputMaybe<WhoCanReactTypes>;\n}\n\n/** The type of checkout session being made */\nexport type CheckoutSessionTypes = \"in_app_purchase\" | \"purchase\";\n\n/** The state of the Coinbase Commerce connection. */\nexport type CoinbaseCommerceStatuses =\n\t/** The Coinbase commerce connection is broken and needs to be fixed with a new API key. */\n\t| \"broken\"\n\t/** The Coinbase Commerce account is missing a settlement address. This needs to be set from the coinbase dashboard. */\n\t| \"missing_settlement_address\"\n\t/** The Coinbase commerce connection is setup and ready to be used. */\n\t| \"setup\"\n\t/** The webhook connection has not been tested / verified. */\n\t| \"webhook_not_verified\";\n\n/** The ways a relation of Companies can be ordered */\nexport type CompaniesOrder = \"created_at\" | \"id\" | \"total_memberships_earnings\";\n\n/** The types of categories that can be used for company attachments. */\nexport type CompanyAttachmentCategories = \"gallery_images\";\n\n/** Image styles for company. */\nexport type CompanyImageStyles =\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s600x200\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1200x630\"\n\t| \"s1600x400\";\n\n/** Attributes collected during company onboarding */\nexport interface CompanyOnboardingPlanOptions {\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** The method by which the plan is released to the public. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The visibility of the plan. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** DEPRECATED: The different types a company can be. */\nexport type CompanyTypes =\n\t| \"app\"\n\t| \"bot\"\n\t| \"community\"\n\t| \"nft\"\n\t| \"other\"\n\t| \"proxy\"\n\t| \"server\";\n\n/** The different types a competition can be */\nexport type CompetitionMetricTypes =\n\t/** Earnings Inside Access Pass */\n\t| \"earnings_inside_access_pass\"\n\t/** Global Earnings */\n\t| \"global_earnings\";\n\n/** The different types a competition prize can be */\nexport type CompetitionPrizeTypes =\n\t/** Cash */\n\t| \"cash\"\n\t/** Custom */\n\t| \"custom\";\n\n/** Statuses for connected accounts */\nexport type ConnectedAccountStatuses =\n\t| \"connected\"\n\t| \"needs_completion\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Different types of how a company's marketplace card should display its pricing / access. */\nexport type ConnectedAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The ordering options for content rewards */\nexport type ContentRewardsCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"expires_at\"\n\t| \"pending_submissions_count\"\n\t| \"submissions_count\"\n\t| \"total_budget\";\n\n/** The different statuses content reward campaigns can be assigned to */\nexport type ContentRewardsCampaignStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Pending */\n\t| \"pending\";\n\n/** Values to filter content rewards on */\nexport interface ContentRewardsCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The ID to filter campaigns for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different categories content reward campaigns can be assigned to */\nexport type ContentRewardsCategory =\n\t/** Brand */\n\t| \"brand\"\n\t/** Creator */\n\t| \"creator\"\n\t/** E Commerce */\n\t| \"e_commerce\"\n\t/** Entertainment */\n\t| \"entertainment\"\n\t/** Influencer */\n\t| \"influencer\"\n\t/** Logo */\n\t| \"logo\"\n\t/** Music */\n\t| \"music\"\n\t/** Musician */\n\t| \"musician\"\n\t/** Other */\n\t| \"other\"\n\t/** Personal Brand */\n\t| \"personal_brand\"\n\t/** Podcast */\n\t| \"podcast\"\n\t/** Products */\n\t| \"products\"\n\t/** Software */\n\t| \"software\"\n\t/** Stream */\n\t| \"stream\"\n\t/** Streamer */\n\t| \"streamer\";\n\n/** The different types of content accepted by a content reward campaign */\nexport type ContentRewardsContentType =\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Faceless */\n\t| \"faceless\"\n\t/** Other */\n\t| \"other\"\n\t/** Ugc */\n\t| \"ugc\";\n\n/** The different platforms that content rewards submissions can be for */\nexport type ContentRewardsPlatform =\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Tiktok */\n\t| \"tiktok\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** The ordering options for public content rewards campaigns */\nexport type ContentRewardsPublicCampaignOrder =\n\t| \"amount_paid_out\"\n\t| \"budget_left\"\n\t| \"created_at\"\n\t| \"expires_at\";\n\n/** Values to filter public content rewards on */\nexport interface ContentRewardsPublicCampaignsFilters {\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The order of the rewards */\n\torder?: InputMaybe<ContentRewardsPublicCampaignOrder>;\n\t/** The status of the reward */\n\tstatus?: InputMaybe<ContentRewardsCampaignStatus>;\n}\n\n/** The different results of submission analysis */\nexport type ContentRewardsSubmissionAnalysisResults =\n\t/** Fail */\n\t| \"fail\"\n\t/** Pass */\n\t| \"pass\"\n\t/** Unknown */\n\t| \"unknown\";\n\n/** The reasons a content rewards submission can be flagged for. */\nexport type ContentRewardsSubmissionFlagReasons =\n\t/** Engagement Ratio */\n\t| \"engagement_ratio\"\n\t/** Ml Analysis */\n\t| \"ml_analysis\"\n\t/** Reported Botter */\n\t| \"reported_botter\"\n\t/** Text Analysis */\n\t| \"text_analysis\"\n\t/** Video Analysis */\n\t| \"video_analysis\"\n\t/** View Acceleration */\n\t| \"view_acceleration\"\n\t/** View Spike */\n\t| \"view_spike\";\n\n/** The different statuses content reward submissions can be assigned to */\nexport type ContentRewardsSubmissionStatus =\n\t/** Approved */\n\t| \"approved\"\n\t/** Flagged */\n\t| \"flagged\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsSubmissionViewsChartConfigInput {\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface ContentRewardsSubmissionsFilters {\n\t/**\n\t * The type of attachment required on the submission\n\t * @deprecated No longer available\n\t */\n\tattachmentType?: InputMaybe<FileAttachmentTypes>;\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter submissions by date created after */\n\tcreatedAtAfter?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter submissions by date created before */\n\tcreatedAtBefore?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** Whether to exclude banned users from the results */\n\texcludeBannedUsers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the submission was flagged by AI */\n\tflaggedByAi?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<ContentRewardsSubmissionsOrder>;\n\t/** Whether the submission has reached the minimum payout */\n\treachedMinimumPayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n\t/** Filter submissions by partial username match */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The result of the video analysis */\n\tvideoAnalysisResult?: InputMaybe<ContentRewardsSubmissionAnalysisResults>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type ContentRewardsSubmissionsOrder =\n\t| \"created_at\"\n\t| \"total_paid\"\n\t| \"total_view_count\";\n\n/** Which columns can be used to sort. */\nexport type ContentRewardsSubmissionsSortableColumns =\n\t| \"cached_total_paid\"\n\t| \"cached_total_view_count\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"status\";\n\n/** The configuration for a chart. */\nexport interface ContentRewardsViewsChartConfigInput {\n\t/** The ID of the campaign to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience to filter by */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The available types for an assessment question */\nexport type CoursesAssessmentQuestionTypes =\n\t/** Multiple choice */\n\t| \"multiple_choice\"\n\t/** Multiple select */\n\t| \"multiple_select\"\n\t/** Short answer */\n\t| \"short_answer\"\n\t/** True false */\n\t| \"true_false\";\n\n/** Autogenerated input type of CreateAccessPass */\nexport interface CreateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the access pass for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A written description of the access pass. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An array of experience IDs that this pass has */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The URLs of the images to upload to the access pass. */\n\timageUrls?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The ID of the marketplace category to assign to the access pass. */\n\tmarketplaceCategoryId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The details to assign an autogenerated plan. */\n\tplanOptions?: InputMaybe<CompanyOnboardingPlanOptions>;\n\t/** The product highlights for the access pass. */\n\tproductHighlights?: InputMaybe<Array<AccessPassProductHighlightInput>>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The social links for the access pass. */\n\tsocialLinks?: InputMaybe<Array<AccessPassSocialLinkInput>>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** Whether or not customers can upgrade to different plans on this access pass. */\n\tupgradeable?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of CreateAffiliate */\nexport interface CreateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that the affiliate will be created for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The fee that the affiliate will receive for each referral (either a percentage or a flat fee). */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** Whether the affiliate will only receive one payout. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the fee is a percentage or a flat fee. */\n\tpayoutType: PayoutTypes;\n\t/** The ID of the plan that the affiliate can refer. */\n\tplanId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The username of the user who will become an affiliate */\n\tusername: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAgentUser */\nexport interface CreateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateAppBuild */\nexport interface CreateAppBuildInput {\n\t/** The ID of the app to create a build for. By default the current app from the api key is used. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * Attachment input for the app build file. This should be an upload in .zip\n\t * format. The zip should contain at least one main_js_bundle.hbc file and\n\t * optionally an assets folder next to it.\n\t */\n\tattachment: AttachmentInput;\n\t/**\n\t * Checksum of the app build file. This is generated by the client and used to\n\t * verify the integrity of the file that is submitted when un-packaged later on a device.\n\t */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The platform of the app build (ios, android, web) */\n\tplatform: AppBuildPlatforms;\n\t/**\n\t * Supported app view types for the app build. A build can specify multiple view\n\t * types, but should only specify ones that its code supports.\n\t */\n\tsupportedAppViewTypes?: InputMaybe<Array<AppViewTypes>>;\n}\n\n/** Autogenerated input type of CreateApp */\nexport interface CreateAppInput {\n\t/** The base URL of the app to be created */\n\tbaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company to create the app for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the app to be created */\n\tname: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateAssessmentQuestion */\nexport interface CreateAssessmentQuestionInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The correct answer to the assessment question */\n\tcorrectAnswer: Scalars[\"String\"][\"input\"];\n\t/** The ID of the lesson to create the assessment question in */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n\t/** The text of the question being asked */\n\tquestionText: Scalars[\"String\"][\"input\"];\n\t/** The type of the assessment question */\n\tquestionType: CoursesAssessmentQuestionTypes;\n}\n\n/** Autogenerated input type of CreateChapter */\nexport interface CreateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to create the chapter in */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateChat */\nexport interface CreateChatInput {\n\t/** The ID of the access pass (whop) to attach the chat experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new chat experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the chat experience to be created. After this timestamp, the experience disappears. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the chat experience to be created, shown to users in the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the chat experience. This allows you to\n\t * require paid access for the chat within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to send messages inside the chat. Select 'admin' if you\n\t * only want the team members to message, or select 'everyone' if any member of\n\t * the whop can send messages.\n\t */\n\twhoCanPost?: InputMaybe<WhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateCheckoutSession */\nexport interface CreateCheckoutSessionInput {\n\t/** The affiliate code to use for the checkout session */\n\taffiliateCode?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The metadata to use for the checkout session */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** The ID of the plan to use for the checkout session */\n\tplanId: Scalars[\"ID\"][\"input\"];\n\t/** The URL to redirect the user to after the checkout session is created */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateCompanyMutedUser */\nexport interface CreateCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The time the user is muted until, in milliseconds. If not provided, the user will be muted indefinitely */\n\tmutedUntil?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user to mute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateCourse */\nexport interface CreateCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The cover image URL of the course */\n\tcoverImage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the experience to create the course in */\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\t/** The tagline of the course */\n\ttagline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the course */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of CreateForum */\nexport interface CreateForumInput {\n\t/** The ID of the access pass (whop) to attach the experience to. It looks like prod_xxxx. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The ID of an existing experience. If supplied, this new forum experience will\n\t * be attached to the first access pass (whop) of this experience. It looks like exp_xxxx.\n\t */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The expiration date of the experience to be created. After this timestamp, the experience is deleted. */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The name of the forum experience to be created, shown to the user on the UI. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/**\n\t * The upsell plan details to add for the forum experience. This allows you to\n\t * require paid access for the forum within the whop.\n\t */\n\tprice?: InputMaybe<UpsellPlanInput>;\n\t/**\n\t * This is who is allowed to create posts inside the forum. Select 'admin' if you\n\t * only want the team members to post, or select 'everyone' if any member of the\n\t * whop can post. Default value is 'admins'.\n\t */\n\twhoCanPost?: InputMaybe<ForumWhoCanPostTypes>;\n}\n\n/** Autogenerated input type of CreateForumPost */\nexport interface CreateForumPostInput {\n\t/** The attachments for this post, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the post. This is the main body of the post. Hidden if paywalled. */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the forum experience to send the message in. This will look like exp_xxxx. */\n\tforumExperienceId: Scalars[\"String\"][\"input\"];\n\t/**\n\t * This is used to determine if the post should be sent as a 'mention'\n\t * notification to all of the users who are in the experience. This means that\n\t * anyone with 'mentions' enabled will receive a notification about this post.\n\t */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the parent post, if applicable (Used when making a comment) */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallAmount?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The currency to paywall this post by. A paywalled post requires the user to purchase it in order to view its content. */\n\tpaywallCurrency?: InputMaybe<Currencies>;\n\t/** Whether the post should be pinned */\n\tpinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The poll for this post. A poll lets you collect responses to a multiple choice question. */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The title of the post. Visible if paywalled. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateInvoice */\nexport interface CreateInvoiceInput {\n\t/** Whether or not to charge the customer a buyer fee. */\n\tchargeBuyerFee?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The method of collection for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tcollectionMethod: InvoiceCollectionMethods;\n\t/** The company ID to create this invoice for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/**\n\t * The name of the customer to create this invoice for. This is required if you\n\t * want to create an invoice for a customer who does not have a member of your company yet.\n\t */\n\tcustomerName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The date the invoice is due, if applicable. */\n\tdueDate: Scalars[\"Timestamp\"][\"input\"];\n\t/**\n\t * The email address to create this invoice for. This is required if you want to\n\t * create an invoice for a user who does not have a member of your company yet.\n\t */\n\temailAddress?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The member ID to create this invoice for. Include this if you want to create\n\t * an invoice for an existing member. If you do not have a member ID, you must\n\t * provide an email_address and customer_name.\n\t */\n\tmemberId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The payment token ID to use for this invoice. If using charge_automatically, you must provide a payment_token. */\n\tpaymentTokenId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The properties of the plan to create for this invoice. */\n\tplan: InvoicePlanInput;\n\t/**\n\t * The properties of the access pass to create for this invoice. Include this if\n\t * you want to create an invoice for a new product.\n\t */\n\tproduct?: InputMaybe<InvoiceAccessPassInput>;\n\t/** The access pass ID to create this invoice for. Include this if you want to create an invoice for an existing product. */\n\tproductId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateLesson */\nexport interface CreateLessonInput {\n\t/** The ID of the chapter to create the lesson in */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The type of the lesson */\n\tlessonType: LessonTypes;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreatePromoCode */\nexport interface CreatePromoCodeInput {\n\t/** The access pass to lock the promo code to, if any. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The amount off (% or flat amount) for the promo. */\n\tamountOff: Scalars[\"StringFloat\"][\"input\"];\n\t/** The monetary currency of the promo code. */\n\tbaseCurrency: Currencies;\n\t/** Restricts promo use to only users who have churned from the company before. */\n\tchurnedUsersOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The specific code used to apply the promo at checkout. */\n\tcode: Scalars[\"String\"][\"input\"];\n\t/** The id of the company to create the promo code for. */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether this promo code is for existing memberships only (cancelations) */\n\texistingMembershipsOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The date/time of when the promo expires. */\n\texpirationDatetime?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Restricts promo use to only users who have never purchased from the company before. */\n\tnewUsersOnly: Scalars[\"Boolean\"][\"input\"];\n\t/** The number of billing cycles the promo is applied for. */\n\tnumberOfIntervals: Scalars[\"Int\"][\"input\"];\n\t/** Restricts promo use to only be applied once per customer. */\n\tonePerCustomer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The type (% or flat amount) of the promo. */\n\tpromoType: PromoTypes;\n\t/** The quantity limit on the number of uses. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not the promo code should have unlimited stock. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Autogenerated input type of CreateWebhook */\nexport interface CreateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The resource to create the webhook for. By default this will use current company */\n\tresourceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to send the webhook to. */\n\turl: Scalars[\"UrlString\"][\"input\"];\n}\n\n/** Cancelation discounts for creator dashboard */\nexport type CreatorDashboardCancelationDiscounts =\n\t| \"canceled\"\n\t| \"used_discount_and_canceled\"\n\t| \"used_discount_and_did_not_cancel\";\n\n/** The configuration for a chart. */\nexport interface CreatorDashboardChartConfigInput {\n\t/** The access pass ids (tags) to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<CreatorDashboardChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Chart interval (period). */\nexport type CreatorDashboardChartIntervals =\n\t| \"daily\"\n\t| \"hourly\"\n\t| \"monthly\"\n\t| \"weekly\"\n\t| \"yearly\";\n\n/** The different types of activity for a credit transaction */\nexport type CreditTransactionActivityTypes =\n\t| \"deductions\"\n\t| \"deposits\"\n\t| \"withdrawals\";\n\n/** Values to filter the credits on. */\nexport interface CreditTransactionFilters {\n\t/** Filter by activity type */\n\tactivityType?: InputMaybe<CreditTransactionActivityTypes>;\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Filter by status */\n\tstatuses?: InputMaybe<Array<CreditTransactionStatuses>>;\n}\n\n/** The statuses a credit transaction can have */\nexport type CreditTransactionStatuses =\n\t/** Finalized */\n\t| \"finalized\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The reasons for a credit transaction transfer */\nexport type CreditTransactionTransferReasons =\n\t| \"bounty_payout\"\n\t| \"content_reward_fixed_payout\"\n\t| \"content_reward_payout\"\n\t| \"content_reward_return\"\n\t| \"creator_to_creator\"\n\t| \"creator_to_user\"\n\t| \"pool_top_up\"\n\t| \"team_member_payout\"\n\t| \"user_to_creator\"\n\t| \"user_to_user\"\n\t| \"wadmin_transferred_funds\";\n\n/** The statuses a credit transaction transfer can have */\nexport type CreditTransactionTransferStatuses = \"completed\";\n\n/** The type a credit transaction transfer can have */\nexport type CreditTransactionTransferTypes =\n\t/** Admin */\n\t| \"admin\"\n\t/** User */\n\t| \"user\";\n\n/** Which columns can be used to sort. */\nexport type CreditTransactionTransfersSortableColumns = \"amount\" | \"created_at\";\n\n/** The eligible networks for a CryptoWallet */\nexport type CryptoWalletNetworks =\n\t/** Bitcoin */\n\t| \"bitcoin\"\n\t/** Ethereum */\n\t| \"ethereum\"\n\t/** Solana */\n\t| \"solana\";\n\n/** The available currencies on the platform */\nexport type Currencies =\n\t| \"aed\"\n\t| \"all\"\n\t| \"amd\"\n\t| \"ape\"\n\t| \"ars\"\n\t| \"aud\"\n\t| \"bam\"\n\t| \"bgn\"\n\t| \"bhd\"\n\t| \"bob\"\n\t| \"brl\"\n\t| \"bsd\"\n\t| \"btc\"\n\t| \"cad\"\n\t| \"chf\"\n\t| \"clp\"\n\t| \"cop\"\n\t| \"crc\"\n\t| \"czk\"\n\t| \"dkk\"\n\t| \"dop\"\n\t| \"dzd\"\n\t| \"egp\"\n\t| \"etb\"\n\t| \"eth\"\n\t| \"eur\"\n\t| \"gbp\"\n\t| \"ghs\"\n\t| \"gmd\"\n\t| \"gtq\"\n\t| \"gyd\"\n\t| \"hkd\"\n\t| \"huf\"\n\t| \"idr\"\n\t| \"ils\"\n\t| \"inr\"\n\t| \"jmd\"\n\t| \"jod\"\n\t| \"jpy\"\n\t| \"kes\"\n\t| \"khr\"\n\t| \"krw\"\n\t| \"kwd\"\n\t| \"lkr\"\n\t| \"mad\"\n\t| \"mdl\"\n\t| \"mga\"\n\t| \"mkd\"\n\t| \"mnt\"\n\t| \"mop\"\n\t| \"mur\"\n\t| \"mxn\"\n\t| \"myr\"\n\t| \"nad\"\n\t| \"ngn\"\n\t| \"nok\"\n\t| \"nzd\"\n\t| \"omr\"\n\t| \"pen\"\n\t| \"php\"\n\t| \"pkr\"\n\t| \"pln\"\n\t| \"pyg\"\n\t| \"qar\"\n\t| \"ron\"\n\t| \"rsd\"\n\t| \"rub\"\n\t| \"rwf\"\n\t| \"sar\"\n\t| \"sek\"\n\t| \"sgd\"\n\t| \"thb\"\n\t| \"tnd\"\n\t| \"try\"\n\t| \"ttd\"\n\t| \"twd\"\n\t| \"tzs\"\n\t| \"usd\"\n\t| \"uyu\"\n\t| \"uzs\"\n\t| \"vnd\"\n\t| \"xcd\"\n\t| \"xof\"\n\t| \"zar\";\n\n/** The different types of custom CTAs that can be selected. */\nexport type CustomCtas =\n\t/** Apply Now */\n\t| \"apply_now\"\n\t/** Call Now */\n\t| \"call_now\"\n\t/** Complete Order */\n\t| \"complete_order\"\n\t/** Contact Us */\n\t| \"contact_us\"\n\t/** Donate Now */\n\t| \"donate_now\"\n\t/** Get Access */\n\t| \"get_access\"\n\t/** Get Offer */\n\t| \"get_offer\"\n\t/** Join */\n\t| \"join\"\n\t/** Order Now */\n\t| \"order_now\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Shop Now */\n\t| \"shop_now\"\n\t/** Sign Up */\n\t| \"sign_up\"\n\t/** Subscribe */\n\t| \"subscribe\";\n\nexport interface CustomFieldInput {\n\t/** The type of the custom field. */\n\tfieldType: CustomFieldTypes;\n\t/** The ID of the custom field (if being updated) */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The name of the custom field. */\n\tname: Scalars[\"String\"][\"input\"];\n\t/** The order of the field. */\n\torder?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The placeholder value of the field. */\n\tplaceholder?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the field is required. */\n\trequired?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** The type of the custom field. */\nexport type CustomFieldTypes =\n\t/** Text */\n\t\"text\";\n\n/** Autogenerated input type of DeleteAccessPass */\nexport interface DeleteAccessPassInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID (tag) of the access pass to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteAssessmentQuestionImage */\nexport interface DeleteAssessmentQuestionImageInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteChapter */\nexport interface DeleteChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteCompanyMutedUser */\nexport interface DeleteCompanyMutedUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unmute */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLessonAttachment */\nexport interface DeleteLessonAttachmentInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the attachment to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteLesson */\nexport interface DeleteLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to delete */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeletePromoCode */\nexport interface DeletePromoCodeInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The internal ID of the promo code to archive. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of DeleteWebhook */\nexport interface DeleteWebhookInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the webhook to delete. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The type of device a user can use to access Whop */\nexport type Device = \"android\" | \"desktop_web\" | \"ios\" | \"mobile_web\";\n\n/** The status of the direct message. */\nexport type DirectMessageStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** Autogenerated input type of DirectUpload */\nexport interface DirectUploadInput {\n\t/** The size of the file in bytes */\n\tbyteSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tbyteSizeV2?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\t/** The checksum of the file */\n\tchecksum: Scalars[\"String\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content type of the file */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The filename of the file */\n\tfilename: Scalars[\"String\"][\"input\"];\n\t/** The metadata of the file */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not to use multipart upload. The file must be larger than 5MB */\n\tmultipart?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of record to attach the file to */\n\trecord: AttachableRecords;\n}\n\n/** The direction of the sort. */\nexport type Direction = \"asc\" | \"desc\";\n\n/** Image styles for discord_account. */\nexport type DiscordAccountImageStyles =\n\t| \"s16\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s64\"\n\t| \"s80\"\n\t| \"s128\"\n\t| \"s180\";\n\n/** The available discover statuses to choose from. */\nexport type DiscoverStatuses =\n\t/** Live Discover */\n\t| \"live_discover\"\n\t/** Not Available */\n\t| \"not_available\";\n\n/** The dispute risk levels of a ledger account, derived from the ledger account stat */\nexport type DisputeRiskLevels =\n\t/** At Risk */\n\t| \"at_risk\"\n\t/** High */\n\t| \"high\"\n\t/** Low */\n\t| \"low\"\n\t/** Medium */\n\t| \"medium\"\n\t/** Removal */\n\t| \"removal\";\n\n/** The possible statuses of a dispute */\nexport type DisputeStatuses =\n\t/** Closed */\n\t| \"closed\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Needs Response */\n\t| \"needs_response\"\n\t/** Other */\n\t| \"other\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Warning Closed */\n\t| \"warning_closed\"\n\t/** Warning Needs Response */\n\t| \"warning_needs_response\"\n\t/** Warning Under Review */\n\t| \"warning_under_review\"\n\t/** Won */\n\t| \"won\";\n\n/** Which columns can be used to sort. */\nexport type DisputesSortableColumns =\n\t| \"amount\"\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"needs_response_by\";\n\n/** Sort options for DM channels */\nexport type DmsChannelsSortTypes =\n\t| \"created_at\"\n\t| \"custom_name\"\n\t| \"last_post_sent_at\"\n\t| \"query\";\n\n/** The input to create a DMs feed */\nexport interface DmsFeedInput {\n\t/** The collection ID for the feed */\n\tcollectionIdentifier?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The custom name for the feed */\n\tcustomName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The unique identifier for the entity */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Input for a DMs feed member */\nexport interface DmsFeedMemberInput {\n\t/** The ID of the DM channel */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Timestamp when the member last viewed the channel (in milliseconds since Unix epoch) */\n\tlastViewedAt?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The notification preference for this member (all, mentions, none) */\n\tnotificationPreference?: InputMaybe<DmsFeedMemberNotificationPreferences>;\n\t/** The status of the member (active, inactive, banned) */\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The notification preferences for a DMs feed member */\nexport type DmsFeedMemberNotificationPreferences =\n\t/** All */\n\t| \"all\"\n\t/** Mentions */\n\t| \"mentions\"\n\t/** None */\n\t| \"none\";\n\n/** The statuses of a DMs feed member */\nexport type DmsFeedMemberStatuses =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Closed */\n\t| \"closed\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of DMs feeds */\nexport type DmsFeedTypes = \"direct_message\" | \"group_chat\";\n\n/** The input to create a post in a feed */\nexport interface DmsPostInput {\n\t/** The attachments for this message */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** The content of the post */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the DM channel this post belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this post belongs to */\n\tfeedType: FeedTypes;\n\t/**\n\t * The file attachments for this message\n\t * @deprecated Use attachments instead\n\t */\n\tfileAttachments?: InputMaybe<Array<FileAttachmentInput>>;\n\t/** The GIFs attached to this message */\n\tgifs?: InputMaybe<Array<GifInput>>;\n\t/** The unique identifier for the post */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether everyone was mentioned in the post */\n\tisEveryoneMentioned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether the post is pinned */\n\tisPinned?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The link embeds for this message */\n\tlinkEmbeds?: InputMaybe<Array<LinkEmbedInput>>;\n\t/** The IDs of the users mentioned in the post */\n\tmentionedUserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The ID of the parent post, if applicable */\n\tparentId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The poll for this message */\n\tpoll?: InputMaybe<PollInput>;\n\t/** The ID of the message this is replying to, if applicable */\n\treplyingToPostId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The rich content of the post */\n\trichContent?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n}\n\n/** The types of post */\nexport type DmsPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** The types of earnings on the platform */\nexport type EarningsReportPeriods =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The types of earnings on the platform */\nexport type EarningsTypes =\n\t/** Affiliate Payment */\n\t| \"affiliate_payment\"\n\t/** Bounty Payout */\n\t| \"bounty_payout\"\n\t/** Company Referral */\n\t| \"company_referral\"\n\t/** Content Reward Fixed Payout */\n\t| \"content_reward_fixed_payout\"\n\t/** Content Reward Payout */\n\t| \"content_reward_payout\"\n\t/** Creator To Creator */\n\t| \"creator_to_creator\"\n\t/** Creator To User */\n\t| \"creator_to_user\"\n\t/** Membership Referral */\n\t| \"membership_referral\"\n\t/** Payment Payout */\n\t| \"payment_payout\"\n\t/** Team Member Payout */\n\t| \"team_member_payout\"\n\t/** User To Creator */\n\t| \"user_to_creator\"\n\t/** User To User */\n\t| \"user_to_user\";\n\n/** The type of entity to fetch */\nexport type EntityTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Dms Feed Member */\n\t| \"dms_feed_member\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Forum Post */\n\t| \"forum_post\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Muted User */\n\t| \"muted_user\"\n\t/** Reaction */\n\t| \"reaction\";\n\n/** Filters for the entries table. */\nexport interface EntriesFiltersInput {\n\t/** The access pass IDs to filter the entries by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the entries by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The plan IDs to filter the entries by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the entries by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the entries by */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** Which columns can be used to sort. */\nexport type EntriesSortableColumns = \"created_at\" | \"id\";\n\n/** Values to filter entries on */\nexport interface EntryFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What the results should be ordered by. */\n\torder?: InputMaybe<EntryOrder>;\n\t/** A specific status */\n\tstatus?: InputMaybe<EntryStatus>;\n\t/** A list of statuses */\n\tstatuses?: InputMaybe<Array<EntryStatus>>;\n}\n\n/** The order to sort the entries by */\nexport type EntryOrder =\n\t| \"created_at\"\n\t| \"member_discord\"\n\t| \"member_username\"\n\t| \"selected\";\n\n/** The status of an entry to a waitlist or raffle. */\nexport type EntryStatus = \"any\" | \"approved\" | \"denied\" | \"pending\";\n\n/** An entry can either be a watlist or raffle */\nexport type EntryTypes = \"raffle\" | \"waitlist\";\n\n/** The different access levels for experiences (PUBLIC IS NEVER USED ANYMORE). */\nexport type ExperienceAccessLevels = \"private\" | \"public\";\n\n/** The type of content that this experience card contains */\nexport type ExperienceActivityCardTypes =\n\t| \"availability\"\n\t| \"booking\"\n\t| \"bounty\"\n\t| \"bounty_submission\"\n\t| \"calendar_bookings_availability\"\n\t| \"calendar_bookings_booking\"\n\t| \"campaign\"\n\t| \"content\"\n\t| \"content_rewards_campaign\"\n\t| \"content_rewards_submission\"\n\t| \"course\"\n\t| \"dms_post\"\n\t| \"event\"\n\t| \"events_event\"\n\t| \"events_rsvp\"\n\t| \"feed_dms_post\"\n\t| \"feed_forum_post\"\n\t| \"feed_livestream_feed\"\n\t| \"forum_post\"\n\t| \"livestream_feed\"\n\t| \"rsvp\"\n\t| \"spin\"\n\t| \"submission\"\n\t| \"wheel\"\n\t| \"wheel_spin\"\n\t| \"wheel_wheel\";\n\n/** Values to filter plans on */\nexport interface ExperienceFilters {\n\t/**\n\t * The access level to filter on.\n\t * @deprecated You can't filter by access level anymore\n\t */\n\taccessLevel?: InputMaybe<ExperienceAccessLevels>;\n\t/** The ID of the access pass to filter on. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the experience interface to filter on. */\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of experience.. */\n\texperienceType?: InputMaybe<ExperienceTypes>;\n\t/** Either includes or excludes experiences on a given access pass. */\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The query to search for. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The types of links that can be generated. */\nexport type ExperienceLinkModes = \"iframe_link\" | \"link\";\n\n/** The different types of experiences that can be created. */\nexport type ExperienceTypes =\n\t/** Has Interface */\n\t\"has_interface\";\n\n/** The type of feed to fetch from */\nexport type FeedTypes =\n\t/** Chat Feed */\n\t| \"chat_feed\"\n\t/** Dms Feed */\n\t| \"dms_feed\"\n\t/** Forum Feed */\n\t| \"forum_feed\"\n\t/** Livestream Feed */\n\t| \"livestream_feed\"\n\t/** Universal Post */\n\t| \"universal_post\"\n\t/** User */\n\t| \"user\";\n\n/** Input for a file attachment */\nexport interface FileAttachmentInput {\n\t/** The aspect ratio of the image, if applicable */\n\taspectRatio?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The type of the attachment (e.g., image, video) */\n\tattachmentType: FileAttachmentTypes;\n\t/** The blurred data URL for image preview */\n\tblurUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The attachment's content type (e.g., image/jpg, video/mp4) */\n\tcontentType?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the file */\n\tfileName?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The size of the file in bytes */\n\tfileSize?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The URL to access the file */\n\tfileUrl: Scalars[\"String\"][\"input\"];\n\t/** The height of the image */\n\theight?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the file attachment */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to access the thumbnail */\n\tthumbnailUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The width of the image */\n\twidth?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different moderation results for a file attachment. */\nexport type FileAttachmentModerationResultsTypes =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** The types of supported file attachments */\nexport type FileAttachmentTypes =\n\t/** Audio */\n\t| \"audio\"\n\t/** File */\n\t| \"file\"\n\t/** Image */\n\t| \"image\"\n\t/** Unknown */\n\t| \"unknown\"\n\t/** Video */\n\t| \"video\";\n\n/** The duration of a FlashSale */\nexport type FlashSaleDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\";\n\n/** The status of a FlashSale */\nexport type FlashSaleStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Draft */\n\t| \"draft\";\n\n/** Email notification preference option for a forum feed */\nexport type ForumEmailNotificationPreferences =\n\t| \"all_admin_posts\"\n\t| \"none\"\n\t| \"only_weekly_summary\";\n\n/** The layout display option of a forum feed */\nexport type ForumLayoutTypes = \"blog\" | \"feed\";\n\n/** The types of post */\nexport type ForumPostTypes = \"automated\" | \"regular\" | \"system\";\n\n/** Who can comment on a forum feed */\nexport type ForumWhoCanCommentTypes = \"admins\" | \"everyone\";\n\n/** Who can post on a forum feed */\nexport type ForumWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** The friendly status of a receipt */\nexport type FriendlyReceiptStatus =\n\t| \"auto_refunded\"\n\t| \"canceled\"\n\t| \"dispute_warning\"\n\t| \"drafted\"\n\t| \"failed\"\n\t| \"incomplete\"\n\t| \"open_dispute\"\n\t| \"open_resolution\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"pending\"\n\t| \"price_too_low\"\n\t| \"refunded\"\n\t| \"succeeded\"\n\t| \"uncollectible\"\n\t| \"unresolved\";\n\n/** A gateway for a payment token. */\nexport type GatewayTypes =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\";\n\n/** Input for a GIF attachment */\nexport interface GifInput {\n\t/** The height of the GIF in pixels */\n\theight: Scalars[\"Int\"][\"input\"];\n\t/** The original URL of the GIF */\n\toriginalUrl: Scalars[\"String\"][\"input\"];\n\t/** The URL for a preview image of the GIF */\n\tpreviewUrl: Scalars[\"String\"][\"input\"];\n\t/** The provider of the GIF */\n\tprovider: GifProviders;\n\t/** The unique identifier of the GIF */\n\tslug: Scalars[\"ID\"][\"input\"];\n\t/** The title of the GIF */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The URL of the full GIF */\n\turl: Scalars[\"String\"][\"input\"];\n\t/** The width of the GIF in pixels */\n\twidth: Scalars[\"Int\"][\"input\"];\n}\n\n/** The types of supported GIFs providers */\nexport type GifProviders =\n\t/** Giphy */\n\t\"giphy\";\n\n/** The different statuses of the global affiliate program for an access pass. */\nexport type GlobalAffiliateStatuses = \"disabled\" | \"enabled\";\n\n/** The scope of the results to return. */\nexport type HubMembershipStatus = \"active\" | \"inactive\";\n\n/** Predefined attachment variants */\nexport type ImageAttachmentVariants =\n\t| \"legacy\"\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s720x1280\"\n\t| \"s720x1280fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1080x1920\"\n\t| \"s1080x1920fit\"\n\t| \"s1080x1920fit_h264_vq7\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\"\n\t| \"s1920x1080fit_h264_vq7\"\n\t| \"x2\"\n\t| \"x5\";\n\n/** Allowed image file types for uploading to the platform */\nexport type ImageExtensions = \"GIF\" | \"JPEG\" | \"JPG\" | \"PNG\" | \"SVG\" | \"WEBP\";\n\n/** Image styles for image. */\nexport type ImageImageStyles =\n\t| \"original\"\n\t| \"s16\"\n\t| \"s20\"\n\t| \"s24\"\n\t| \"s32\"\n\t| \"s40\"\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x200\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s800x200\"\n\t| \"s900x300\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1200x630\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1600x400\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The different industry types a company can be in. */\nexport type IndustryTypes =\n\t/** Accessories */\n\t| \"accessories\"\n\t/** Agencies */\n\t| \"agencies\"\n\t/** Ai */\n\t| \"ai\"\n\t/** Ai Agency */\n\t| \"ai_agency\"\n\t/** Amazon Fba */\n\t| \"amazon_fba\"\n\t/** Auto Repair Shop */\n\t| \"auto_repair_shop\"\n\t/** Beauty And Personal Care */\n\t| \"beauty_and_personal_care\"\n\t/** Bootcamps */\n\t| \"bootcamps\"\n\t/** Business */\n\t| \"business\"\n\t/** Careers */\n\t| \"careers\"\n\t/** Clipping */\n\t| \"clipping\"\n\t/** Clipping Agency */\n\t| \"clipping_agency\"\n\t/** Clothing */\n\t| \"clothing\"\n\t/** Coaching Agency */\n\t| \"coaching_agency\"\n\t/** Coffee Shop */\n\t| \"coffee_shop\"\n\t/** Concerts */\n\t| \"concerts\"\n\t/** Convention */\n\t| \"convention\"\n\t/** Customer Support Agency */\n\t| \"customer_support_agency\"\n\t/** Dating */\n\t| \"dating\"\n\t/** Design Agency */\n\t| \"design_agency\"\n\t/** Development Agency */\n\t| \"development_agency\"\n\t/** Ecommerce */\n\t| \"ecommerce\"\n\t/** Electronics And Gadgets */\n\t| \"electronics_and_gadgets\"\n\t/** Fitness */\n\t| \"fitness\"\n\t/** Fitness Gear */\n\t| \"fitness_gear\"\n\t/** Food And Beverages */\n\t| \"food_and_beverages\"\n\t/** Gym */\n\t| \"gym\"\n\t/** Health And Wellness */\n\t| \"health_and_wellness\"\n\t/** Home Goods */\n\t| \"home_goods\"\n\t/** Home Services */\n\t| \"home_services\"\n\t/** Hotel Lodging */\n\t| \"hotel_lodging\"\n\t/** Kindle Book Publishing */\n\t| \"kindle_book_publishing\"\n\t/** Marketing Agency */\n\t| \"marketing_agency\"\n\t/** Masterminds */\n\t| \"masterminds\"\n\t/** Medical Dentist Office */\n\t| \"medical_dentist_office\"\n\t/** Meetups */\n\t| \"meetups\"\n\t/** Other */\n\t| \"other\"\n\t/** Parties */\n\t| \"parties\"\n\t/** Personal Development */\n\t| \"personal_development\"\n\t/** Personal Finance */\n\t| \"personal_finance\"\n\t/** Public Speaking */\n\t| \"public_speaking\"\n\t/** Real Estate */\n\t| \"real_estate\"\n\t/** Recruiting Agency */\n\t| \"recruiting_agency\"\n\t/** Reselling */\n\t| \"reselling\"\n\t/** Restaurant */\n\t| \"restaurant\"\n\t/** Retail Store */\n\t| \"retail_store\"\n\t/** Sales */\n\t| \"sales\"\n\t/** Sales Agency */\n\t| \"sales_agency\"\n\t/** Salon Spa */\n\t| \"salon_spa\"\n\t/** Social Media */\n\t| \"social_media\"\n\t/** Software */\n\t| \"software\"\n\t/** Spirituality */\n\t| \"spirituality\"\n\t/** Sports Betting */\n\t| \"sports_betting\"\n\t/** Supplements */\n\t| \"supplements\"\n\t/** Trading */\n\t| \"trading\"\n\t/** Travel */\n\t| \"travel\"\n\t/** Vas */\n\t| \"vas\"\n\t/** Video Games */\n\t| \"video_games\"\n\t/** Webinars */\n\t| \"webinars\";\n\n/** The collection type for an information request item */\nexport type InformationRequestItemCollectionType = \"multi\" | \"none\" | \"single\";\n\n/** The format of the text for an information request item */\nexport type InformationRequestItemTextFormat =\n\t| \"email\"\n\t| \"phone\"\n\t| \"plain\"\n\t| \"url\";\n\n/** The statuses an information request can have */\nexport type InformationRequestStatus =\n\t| \"awaiting_review\"\n\t| \"canceled\"\n\t| \"completed\"\n\t| \"requires_collection\";\n\n/** The different error codes for instant payouts */\nexport type InstantPayoutErrorCodes =\n\t/** Account Daily Limit Reached */\n\t| \"account_daily_limit_reached\"\n\t/** Amount Too High */\n\t| \"amount_too_high\"\n\t/** Feature Disabled */\n\t| \"feature_disabled\"\n\t/** Only Us Accounts */\n\t| \"only_us_accounts\"\n\t/** Only Usd */\n\t| \"only_usd\"\n\t/** Platform Daily Limit Reached */\n\t| \"platform_daily_limit_reached\"\n\t/** Restricted Account */\n\t| \"restricted_account\"\n\t/** Unsupported External Account */\n\t| \"unsupported_external_account\";\n\n/** The properties of the access pass to create for this invoice. */\nexport interface InvoiceAccessPassInput {\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** The method of collection for an invoice. */\nexport type InvoiceCollectionMethods =\n\t/** Charge a specific payment method for a customer. */\n\t| \"charge_automatically\"\n\t/** Send an invoice to the customer via email. */\n\t| \"send_invoice\";\n\n/** The properties of the plan to create for this invoice. */\nexport interface InvoicePlanInput {\n\t/** Whether or not ACH payments are accepted */\n\tachPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The respective currency identifier for the plan. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** The interval at which the plan charges (renewal plans). */\n\tbillingPeriod?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Whether or not card payments are accepted */\n\tcardPayments?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether coinbase commerce payments are/aren't accepted. */\n\tcoinbaseCommerceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The description of the plan. */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** An additional amount charged upon first purchase. */\n\tinitialPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** A personal description or notes section for the business. */\n\tinternalNotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to offer a discount to cancel a subscription. */\n\tofferCancelDiscount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Marks whether paypal payments are/aren't accepted. */\n\tpaypalAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Indicates if the plan is a one time payment or recurring. */\n\tplanType?: InputMaybe<PlanTypes>;\n\t/** Marks whether platform balance payments are/aren't accepted. */\n\tplatformBalanceAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The URL to redirect the customer to after purchase. */\n\tredirectUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This is the release method the business uses to sell this plan. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** Configurable settings on how this plan is released. */\n\treleaseMethodSettings?: InputMaybe<ReleaseMethodSettingsInput>;\n\t/** The amount the customer is charged every billing period. */\n\trenewalPrice?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The number of payments required before pausing the subscription. */\n\tsplitPayRequiredPayments?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Marks whether payments using splitit, a payment processor, are/aren't accepted for the plan. */\n\tsplititAccepted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of units available for purchase. */\n\tstock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The number of free trial days added before a renewal plan. */\n\ttrialPeriodDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Limits/doesn't limit the number of units available for purchase. */\n\tunlimitedStock?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Shows or hides the plan from public/business view. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** The different statuses an invoice can be in */\nexport type InvoiceStatuses =\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Void */\n\t| \"void\";\n\n/** Filters for the invoices table. */\nexport interface InvoicesFiltersInput {\n\t/** The access pass IDs to filter the invoices by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The collection methods to filter the invoices by */\n\tcollectionMethods?: InputMaybe<Array<InvoiceCollectionMethods>>;\n\t/** The statuses to filter the invoices by */\n\tstatuses?: InputMaybe<Array<InvoiceStatuses>>;\n}\n\n/** Which columns can be used to sort. */\nexport type InvoicesSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** A type of order that the ItemOrdering represents. */\nexport type ItemOrderingOrderTypes =\n\t/** Experience */\n\t| \"experience\"\n\t/** Hub Creator */\n\t| \"hub_creator\"\n\t/** Hub Customer */\n\t| \"hub_customer\";\n\n/** The available languages for a course */\nexport type Languages =\n\t/** Bg */\n\t| \"bg\"\n\t/** Ca */\n\t| \"ca\"\n\t/** Cs */\n\t| \"cs\"\n\t/** Da */\n\t| \"da\"\n\t/** De */\n\t| \"de\"\n\t/** El */\n\t| \"el\"\n\t/** En */\n\t| \"en\"\n\t/** Es */\n\t| \"es\"\n\t/** Fi */\n\t| \"fi\"\n\t/** Fr */\n\t| \"fr\"\n\t/** Hr */\n\t| \"hr\"\n\t/** It */\n\t| \"it\"\n\t/** Nl */\n\t| \"nl\"\n\t/** No */\n\t| \"no\"\n\t/** Pl */\n\t| \"pl\"\n\t/** Pt */\n\t| \"pt\"\n\t/** Ro */\n\t| \"ro\"\n\t/** Ru */\n\t| \"ru\"\n\t/** Sk */\n\t| \"sk\"\n\t/** Sv */\n\t| \"sv\"\n\t/** Tr */\n\t| \"tr\"\n\t/** Uk */\n\t| \"uk\";\n\n/** The different types of leaderboards that can be fetched */\nexport type LeaderboardTypes =\n\t| \"affiliate_earnings\"\n\t| \"average_time_spent\"\n\t| \"money_earned_last_7_days\"\n\t| \"money_earned_last_24_hours\"\n\t| \"money_earned_last_30_days\"\n\t| \"new_users\"\n\t| \"top_rated\"\n\t| \"total_time_spent\"\n\t| \"usd_gmv\"\n\t| \"whop_partners_earnings_last_30_days\"\n\t| \"whop_partners_gtv_last_30_days\";\n\n/** Which columns can be used to sort. */\nexport type LeadsSortableColumns = \"created_at\" | \"id\";\n\n/** The different statuses a LedgerAccountAudit can be */\nexport type LedgerAccountAuditStatuses =\n\t/** Requested More Information */\n\t| \"requested_more_information\"\n\t/** Reserves Imposed */\n\t| \"reserves_imposed\";\n\n/** The standing of a ledger account, based on their dispute risk scores */\nexport type LedgerAccountStandings = \"at_risk\" | \"good\";\n\n/** The types of ledgers that can be created. */\nexport type LedgerTypes =\n\t/** Pool */\n\t| \"pool\"\n\t/** Primary */\n\t| \"primary\";\n\n/** The different withdrawal frequencies a LedgerAccount can have */\nexport type LedgerWithdrawalFrequencies =\n\t/** Daily */\n\t| \"daily\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Monthly */\n\t| \"monthly\"\n\t/** Weekly */\n\t| \"weekly\";\n\n/** The different statuses a LedgerAccount's withdrawal_status can be */\nexport type LedgerWithdrawalStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The available types for a lesson */\nexport type LessonTypes =\n\t/** Knowledge check */\n\t| \"knowledge_check\"\n\t/** Multi */\n\t| \"multi\"\n\t/** Pdf */\n\t| \"pdf\"\n\t/** Quiz */\n\t| \"quiz\"\n\t/** Text */\n\t| \"text\"\n\t/** Video */\n\t| \"video\";\n\n/** The available visibilities for a lesson. Determines how / whether a lesson is visible to users. */\nexport type LessonVisibilities =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The order to sort liked discover access passes by. */\nexport type LikedDiscoverAccessPassesOrder =\n\t/** Sort by promo code presence first, then rated at date */\n\t| \"promo_code_and_rated_at\"\n\t/** Sort by when the access pass was rated */\n\t| \"rated_at\";\n\n/** Input for a link embed */\nexport interface LinkEmbedInput {\n\t/** The URL of the linked content */\n\turl: Scalars[\"String\"][\"input\"];\n}\n\n/** Possible livestream destinations a user can restream to */\nexport type LivestreamDestination =\n\t/** Facebook */\n\t| \"facebook\"\n\t/** Instagram */\n\t| \"instagram\"\n\t/** Kick */\n\t| \"kick\"\n\t/** Rumble */\n\t| \"rumble\"\n\t/** Steam */\n\t| \"steam\"\n\t/** Telegram */\n\t| \"telegram\"\n\t/** Twitch */\n\t| \"twitch\"\n\t/** Vimeo */\n\t| \"vimeo\"\n\t/** X */\n\t| \"x\"\n\t/** Youtube */\n\t| \"youtube\";\n\n/** Input for a livestream feed */\nexport interface LivestreamFeedInput {\n\t/** Whether or not media is banned in this livestream */\n\tbanMedia?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not URLs are banned in this livestream */\n\tbanUrls?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** List of banned words in this livestream */\n\tbannedWords?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n\t/** The description of this livestream */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The empty timeout of this livestream */\n\temptyTimeout?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The unique identifier for the feed */\n\tid?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The number of participants that can join the livestream (0 is unlimited) */\n\tmaxParticipants?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The metadata of this livestream */\n\tmetadata?: InputMaybe<Scalars[\"JSON\"][\"input\"]>;\n\t/** Whether or not live reactions are enabled in this livestream */\n\treactionsEnabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The destinations to restream to */\n\trestreamDestinations?: InputMaybe<Array<LivestreamDestination>>;\n\t/** The scheduled time of this livestream */\n\tscheduledAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The title of this livestream */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of seconds a user needs to wait before posting again, if any */\n\tuserPostsCooldownSeconds?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** Who can post on this livestream */\n\twhoCanPost?: InputMaybe<LivestreamWhoCanPostTypes>;\n\t/** Who can react on this livestream */\n\twhoCanReact?: InputMaybe<LivestreamWhoCanReactTypes>;\n}\n\n/** The status of a livestream recording */\nexport type LivestreamRecordingStatus =\n\t/** Completed */\n\t| \"completed\"\n\t/** Failed */\n\t| \"failed\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Recording */\n\t| \"recording\";\n\n/** Who can post on a livestream feed */\nexport type LivestreamWhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a livestream feed */\nexport type LivestreamWhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter made for you affiliates on */\nexport interface MadeForYouPlanFilters {\n\t/** Search by plan name, product name, or company name */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The sub-items that should be displayed for the stripe account. */\nexport type ManagementItems =\n\t| \"billing_details\"\n\t| \"country\"\n\t| \"merchant_of_record\"\n\t| \"payout_frequency\";\n\n/** Autogenerated input type of MarkLessonAsCompleted */\nexport interface MarkLessonAsCompletedInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to mark as completed */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The columns that can be used to order. */\nexport type MarketplaceCategoryOrder =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"live_access_pass_count\"\n\t| \"live_page_count\"\n\t| \"manual_position\"\n\t| \"name\"\n\t| \"random\";\n\n/** The marketplace types that are available for categories. */\nexport type MarketplaceCategoryTypes =\n\t/** App */\n\t| \"app\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The available marketplace statuses to choose from. */\nexport type MarketplaceStatuses =\n\t| \"live_marketplace\"\n\t| \"not_available\"\n\t| \"pending_review\";\n\nexport type Media = \"audio\" | \"image\" | \"other\" | \"video\";\n\n/** The different most recent actions a member can have. */\nexport type MemberMostRecentActions =\n\t/** Canceling */\n\t| \"canceling\"\n\t/** Churned */\n\t| \"churned\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expiring */\n\t| \"expiring\"\n\t/** Finished Split Pay */\n\t| \"finished_split_pay\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\"\n\t/** Paid Once */\n\t| \"paid_once\"\n\t/** Paid Subscriber */\n\t| \"paid_subscriber\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused */\n\t| \"paused\"\n\t/** Pending Entry */\n\t| \"pending_entry\"\n\t/** Renewing */\n\t| \"renewing\"\n\t/** Trialing */\n\t| \"trialing\";\n\n/** The different statuses a Member can have. */\nexport type MemberStatuses =\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Joined */\n\t| \"joined\"\n\t/** Left */\n\t| \"left\";\n\n/** The type of subtext to display for a member */\nexport type MemberSubtextTypes =\n\t/** Canceled On */\n\t| \"canceled_on\"\n\t/** Canceling On */\n\t| \"canceling_on\"\n\t/** Ending On */\n\t| \"ending_on\"\n\t/** Finished Split Pay At */\n\t| \"finished_split_pay_at\"\n\t/** Next Payment Attempt */\n\t| \"next_payment_attempt\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Paused At */\n\t| \"paused_at\"\n\t/** Renewing On */\n\t| \"renewing_on\"\n\t/** Trial Canceling On */\n\t| \"trial_canceling_on\"\n\t/** Trial Ends At */\n\t| \"trial_ends_at\"\n\t/** Unresolved At */\n\t| \"unresolved_at\";\n\n/** Filters for the members table. */\nexport interface MembersFiltersInput {\n\t/** The access pass IDs to filter the members by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The end date to filter the members by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The membership status to filter the members by */\n\tmembershipStatus?: InputMaybe<MembershipStatus>;\n\t/** The most recent actions to filter the members by */\n\tmostRecentActions?: InputMaybe<Array<MemberMostRecentActions>>;\n\t/** The plan IDs to filter the members by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the members by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/**\n\t * The name, username, or email to filter the members by. The email filter will\n\t * only apply if the current actor has the `member:email:read` permission.\n\t */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The start date to filter the members by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the members by */\n\tstatuses?: InputMaybe<Array<MemberStatuses>>;\n\t/** The tracking link IDs to filter the members by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembersSortableColumns =\n\t| \"created_at\"\n\t| \"id\"\n\t| \"joined_at\"\n\t| \"most_recent_action\"\n\t| \"usd_total_spent\";\n\n/** The actions that can be performed on a membership */\nexport type MembershipActions =\n\t| \"add_discord_roles\"\n\t| \"add_free_days\"\n\t| \"cancel_membership\"\n\t| \"fulfill_trading_view_indicators\"\n\t| \"pause_subscription_payments\"\n\t| \"reset_license\"\n\t| \"retry_payment\"\n\t| \"shuffle_license\"\n\t| \"terminate_membership\"\n\t| \"unlink_discord\"\n\t| \"unpause_subscription_payments\";\n\n/** The state of a membership, based on a company's accepted sub statuses. */\nexport type MembershipHeaderStatus = \"active\" | \"churned\";\n\n/** Image styles for membership. */\nexport type MembershipImageStyles = \"s40\";\n\n/** The payment processor used for a membership */\nexport type MembershipPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** Whether or not to send push notifications to the user of a membership */\nexport type MembershipPushNotification =\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Enabled */\n\t| \"enabled\";\n\n/** The status of a membership */\nexport type MembershipStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Drafted */\n\t| \"drafted\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Past Due */\n\t| \"past_due\"\n\t/** Trialing */\n\t| \"trialing\"\n\t/** Unresolved */\n\t| \"unresolved\";\n\n/** Filters for the memberships table. */\nexport interface MembershipsFiltersInput {\n\t/** The access pass IDs to filter the memberships by */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The access pass types to filter the memberships by */\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes>>;\n\t/** The cancelation reasons to filter the memberships by */\n\tcancelationReasons?: InputMaybe<Array<CancelOptions>>;\n\t/** The end date to filter the memberships by */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Whether the memberships have a cancelation reason */\n\thasCancelationReason?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The header filter to filter the memberships by */\n\theaderFilter?: InputMaybe<MembershipHeaderStatus>;\n\t/** The membership status to filter the memberships by */\n\tmembershipStatus?: InputMaybe<HubMembershipStatus>;\n\t/** The plan IDs to filter the memberships by */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The promo code IDs to filter the memberships by */\n\tpromoCodeIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to filter the memberships by */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The statuses to filter the memberships by */\n\tstatuses?: InputMaybe<Array<MembershipStatus>>;\n\t/** The tracking link IDs to filter the memberships by */\n\ttrackingLinkIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** Which columns can be used to sort. */\nexport type MembershipsSortableColumns =\n\t| \"canceled_at\"\n\t| \"created_at\"\n\t| \"date_joined\"\n\t| \"id\"\n\t| \"status\"\n\t| \"total_spend\";\n\n/** The different moderation results for an attachment */\nexport type ModerationResults =\n\t/** Nsfw */\n\t\"nsfw\";\n\n/** Autogenerated input type of MoveCourse */\nexport interface MoveCourseInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the course to move */\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\t/** The experience to move the course into */\n\tdestinationExperienceId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Input for a feed muted member */\nexport interface MutedUserInput {\n\t/** The ID of the feed */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The feed type */\n\tfeedType?: FeedTypes;\n\t/** The unique identifier for the muted user */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The time the user is muted till */\n\tmutedUntil?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The ID of the user */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Mux asset statuses */\nexport type MuxAssetStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Ready */\n\t| \"ready\"\n\t/** Uploading */\n\t| \"uploading\";\n\n/** The different types of Stripe Accounts. */\nexport type NormalizedAccountTypes =\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\"\n\t| \"whop_credit\";\n\n/** The channel for a notification preference */\nexport type NotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFilters {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Values to filter preferences on */\nexport interface NotificationPreferencesFiltersV3 {\n\t/** The channel to retrieve a user's preferences for */\n\tchannel?: InputMaybe<NotificationPreferenceChannel>;\n\t/** The company to retrieve a user's preferences for */\n\tcompanyId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The company team ID to retrieve a user's preferences for */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience to retrieve a user's preferences for */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The topic to retrieve a user's preferences for */\n\ttopicId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** The status of the notification topic. If it's active, they will send. */\nexport type NotificationTopicStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** The type for the notification topic. */\nexport type NotificationTopicTypes =\n\t/** Company */\n\t| \"company\"\n\t/** Company Team */\n\t| \"company_team\"\n\t/** User */\n\t| \"user\";\n\n/** The visibility of the notification topic. If it's hidden, it won't show on the UI. */\nexport type NotificationTopicVisibility =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Values to filter notifications on */\nexport interface NotificationsV4Filters {\n\t/**\n\t * The client's last fetched at timestamp. If passed will only return\n\t * notifications created after this timestamp. NOT YET IMPLEMENTED\n\t */\n\tclientLastFetchedAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The company ID that you want to filter by. Will return notifications sent to this team. */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience ID that you want to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The experience IDs that you want to filter by. Overrides experience_id. */\n\texperienceIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Whether the notifications are mentions or not */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether to only return unread notifications */\n\tunreadOnly?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}\n\n/** Values to paginate notifications on */\nexport interface NotificationsV4Pagination {\n\t/** Filter all notifications made after this */\n\tafter?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** Filter all notifications made before this */\n\tbefore?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The number of notifications to return. Default is 50 */\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** The different providers that can be used for onboarding a ledger account. */\nexport type OnboardingProviders = \"generic\" | \"stripe\";\n\n/** The different onboarding types for a company. */\nexport type OnboardingTypes =\n\t/** Payments */\n\t| \"payments\"\n\t/** Products */\n\t| \"products\";\n\n/** The different variants of OpenGraph images for a company. */\nexport type OpengraphImageVariants =\n\t/** Black */\n\t| \"black\"\n\t/** Orange */\n\t| \"orange\"\n\t/** White */\n\t| \"white\";\n\n/** The account_types for a payment account object */\nexport type PaymentAccountAccountTypes =\n\t/** Custom */\n\t| \"custom\"\n\t/** Express */\n\t| \"express\"\n\t/** Personal */\n\t| \"personal\"\n\t/** Platform Managed */\n\t| \"platform_managed\"\n\t/** Standard */\n\t| \"standard\"\n\t/** Whop Credit */\n\t| \"whop_credit\";\n\n/** The different action banners that can be shown for a payment account */\nexport type PaymentAccountActionBanners = \"requires_additional_information\";\n\n/** The providers for a payment account object */\nexport type PaymentAccountProviders =\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different statuses for a payment account object */\nexport type PaymentAccountStatuses =\n\t/** Broken */\n\t| \"broken\"\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled By Whop */\n\t| \"disabled_by_whop\"\n\t/** Missing Settlement Address */\n\t| \"missing_settlement_address\"\n\t/** Needs Completion */\n\t| \"needs_completion\"\n\t/** Needs Reauthorization */\n\t| \"needs_reauthorization\"\n\t/** Oauth Integration Not Found */\n\t| \"oauth_integration_not_found\"\n\t/** Payments Not Receivable */\n\t| \"payments_not_receivable\"\n\t/** Primary Email Not Confirmed */\n\t| \"primary_email_not_confirmed\"\n\t/** Reconnect Api Keys */\n\t| \"reconnect_api_keys\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Requirements Not Met */\n\t| \"requirements_not_met\"\n\t/** Setup */\n\t| \"setup\"\n\t/** Under Review */\n\t| \"under_review\"\n\t/** Webhook Not Verified */\n\t| \"webhook_not_verified\";\n\n/** The high level payment processor options. */\nexport type PaymentMethods =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The high level payment processor options. */\nexport type PaymentProcessor =\n\t| \"apple\"\n\t| \"coinbase\"\n\t| \"free\"\n\t| \"multi_psp\"\n\t| \"paypal\"\n\t| \"platform_balance\"\n\t| \"sezzle\"\n\t| \"splitit\"\n\t| \"stripe\"\n\t| \"venmo\";\n\n/** The different payment providers. */\nexport type PaymentProviders =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The different providers of payment transactions. */\nexport type PaymentTransactionProviders =\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Splitit */\n\t| \"splitit\";\n\n/** The different statuses a payment transaction can be in. */\nexport type PaymentTransactionStatuses =\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Lost */\n\t| \"lost\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\"\n\t/** Succeeded */\n\t| \"succeeded\"\n\t/** Won */\n\t| \"won\";\n\n/** The different types of payment transactions. */\nexport type PaymentTransactionTypes =\n\t/** Authorization */\n\t| \"authorization\"\n\t/** Authorize */\n\t| \"authorize\"\n\t/** Cancel */\n\t| \"cancel\"\n\t/** Capture */\n\t| \"capture\"\n\t/** Chargeback */\n\t| \"chargeback\"\n\t/** Fraud Screening */\n\t| \"fraud_screening\"\n\t/** Installment */\n\t| \"installment\"\n\t/** Purchase */\n\t| \"purchase\"\n\t/** Refund */\n\t| \"refund\"\n\t/** Three D Secure */\n\t| \"three_d_secure\"\n\t/** Verify */\n\t| \"verify\";\n\n/** The different approval statuses an account can have. */\nexport type PaymentsApprovalStatuses =\n\t/** Approved */\n\t| \"approved\"\n\t/** Monitoring */\n\t| \"monitoring\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The different providers a payout account can be. */\nexport type PayoutAccountProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses payout account can be. */\nexport type PayoutAccountStatuses =\n\t/** Connected */\n\t| \"connected\"\n\t/** Disabled */\n\t| \"disabled\"\n\t/** Needs Completion */\n\t| \"needs_completion\";\n\n/** The different delivery_types for a payout or payout destination. */\nexport type PayoutDeliveryTypes =\n\t/** Bank Deposit */\n\t| \"bank_deposit\"\n\t/** Bill */\n\t| \"bill\"\n\t/** Cash Pickup */\n\t| \"cash_pickup\"\n\t/** Cryptocurrency */\n\t| \"cryptocurrency\"\n\t/** Home Delivery */\n\t| \"home_delivery\"\n\t/** Masspay Card */\n\t| \"masspay_card\"\n\t/** Mobile Wallet */\n\t| \"mobile_wallet\"\n\t/** Paper Check */\n\t| \"paper_check\";\n\n/** The different platform statuses a payout destination can be in. */\nexport type PayoutDestinationPlatformStatuses =\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different providers a payout destination can be. */\nexport type PayoutDestinationProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout destination can be in. */\nexport type PayoutDestinationStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Disabled */\n\t| \"disabled\";\n\n/** The different destination types for a payout destination. */\nexport type PayoutDestinationTypes =\n\t/** Instant */\n\t| \"instant\"\n\t/** Regular */\n\t| \"regular\";\n\n/** The different error codes a payout can be in. */\nexport type PayoutErrorCodes =\n\t/** Account Closed */\n\t| \"account_closed\"\n\t/** Account Does Not Exist */\n\t| \"account_does_not_exist\"\n\t/** Account Information Invalid */\n\t| \"account_information_invalid\"\n\t/** Amount Out Of Bounds */\n\t| \"amount_out_of_bounds\"\n\t/** Attributes Not Validated */\n\t| \"attributes_not_validated\"\n\t/** B2b Payments Prohibited */\n\t| \"b2b_payments_prohibited\"\n\t/** Bank Statement Required */\n\t| \"bank_statement_required\"\n\t/** Compliance Review */\n\t| \"compliance_review\"\n\t/** Deposit Failed */\n\t| \"deposit_failed\"\n\t/** Deposit Rejected */\n\t| \"deposit_rejected\"\n\t/** Destination Unavailable */\n\t| \"destination_unavailable\"\n\t/** Exceeded Account Limit */\n\t| \"exceeded_account_limit\"\n\t/** Expired Quote */\n\t| \"expired_quote\"\n\t/** Generic Payout Error */\n\t| \"generic_payout_error\"\n\t/** Identification Number Invalid */\n\t| \"identification_number_invalid\"\n\t/** Invalid Account Number */\n\t| \"invalid_account_number\"\n\t/** Invalid Bank Code */\n\t| \"invalid_bank_code\"\n\t/** Invalid Beneficiary */\n\t| \"invalid_beneficiary\"\n\t/** Invalid Branch Number */\n\t| \"invalid_branch_number\"\n\t/** Invalid Phone Number */\n\t| \"invalid_phone_number\"\n\t/** Invalid Routing Number */\n\t| \"invalid_routing_number\"\n\t/** Invalid Swift Code */\n\t| \"invalid_swift_code\"\n\t/** Misc Error */\n\t| \"misc_error\"\n\t/** Missing City And Country */\n\t| \"missing_city_and_country\"\n\t/** Missing Phone Number */\n\t| \"missing_phone_number\"\n\t/** Missing Remittance Info */\n\t| \"missing_remittance_info\"\n\t/** Receiving Account Locked */\n\t| \"receiving_account_locked\"\n\t/** Rejected By Compliance */\n\t| \"rejected_by_compliance\"\n\t/** Source Token Insufficient Funds */\n\t| \"source_token_insufficient_funds\"\n\t/** Ssn Invalid */\n\t| \"ssn_invalid\"\n\t/** Wallet Screenshot Required */\n\t| \"wallet_screenshot_required\";\n\n/** The interval at which a Connected Account is paid out */\nexport type PayoutIntervals = \"daily\" | \"manual\" | \"monthly\" | \"weekly\";\n\n/** The payout methods that can be configured for a company. */\nexport type PayoutMethods = \"coinbase_commerce\" | \"paypal\" | \"stripe\";\n\n/** The different statuses as payout object can be. */\nexport type PayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Error */\n\t| \"error\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Hold */\n\t| \"hold\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Ready For Pickup */\n\t| \"ready_for_pickup\"\n\t/** Scheduled */\n\t| \"scheduled\";\n\n/** The different types of attributes that can be saved for a PayoutTokenAttribute. */\nexport type PayoutTokenAttributeDataTypes =\n\t/** Address1 */\n\t| \"Address1\"\n\t/** Bank Account Branch Number */\n\t| \"BankAccountBranchNumber\"\n\t/** Bank Account Name */\n\t| \"BankAccountName\"\n\t/** Bank Account Number */\n\t| \"BankAccountNumber\"\n\t/** Bank Account Type */\n\t| \"BankAccountType\"\n\t/** Bank City */\n\t| \"BankCity\"\n\t/** Bank Name */\n\t| \"BankName\"\n\t/** Bank Routing Number */\n\t| \"BankRoutingNumber\"\n\t/** Bank State */\n\t| \"BankState\"\n\t/** Bill Reference Number */\n\t| \"BillReferenceNumber\"\n\t/** Birth Country */\n\t| \"BirthCountry\"\n\t/** Card Expiration */\n\t| \"CardExpiration\"\n\t/** Card Number */\n\t| \"CardNumber\"\n\t/** Card Zip */\n\t| \"CardZip\"\n\t/** City */\n\t| \"City\"\n\t/** Country */\n\t| \"Country\"\n\t/** Date Of Birth */\n\t| \"DateOfBirth\"\n\t/** Employment Address */\n\t| \"EmploymentAddress\"\n\t/** Employment Name */\n\t| \"EmploymentName\"\n\t/** Employment Occupation */\n\t| \"EmploymentOccupation\"\n\t/** Employment Phone */\n\t| \"EmploymentPhone\"\n\t/** Employment Supervisor */\n\t| \"EmploymentSupervisor\"\n\t/** Gender */\n\t| \"Gender\"\n\t/** Guardian Consent */\n\t| \"GuardianConsent\"\n\t/** Guardian Full Name */\n\t| \"GuardianFullName\"\n\t/** Guardian Gov Id Number */\n\t| \"GuardianGovIDNumber\"\n\t/** Guardian Gov Id Type */\n\t| \"GuardianGovIDType\"\n\t/** Id Selfie Collection */\n\t| \"IDSelfieCollection\"\n\t/** I Frame Payment Collection */\n\t| \"IFramePaymentCollection\"\n\t/** Identification Expiration */\n\t| \"IdentificationExpiration\"\n\t/** Identification Number */\n\t| \"IdentificationNumber\"\n\t/** Identification Type */\n\t| \"IdentificationType\"\n\t/** Maiden Name */\n\t| \"MaidenName\"\n\t/** Phone Number */\n\t| \"PhoneNumber\"\n\t/** Postal Code */\n\t| \"PostalCode\"\n\t/** Relationship */\n\t| \"Relationship\"\n\t/** Remittance Reason */\n\t| \"RemittanceReason\"\n\t/** Swift */\n\t| \"SWIFT\"\n\t/** Second Last Name */\n\t| \"SecondLastName\"\n\t/** Social Security */\n\t| \"SocialSecurity\"\n\t/** Source Of Funds */\n\t| \"SourceOfFunds\";\n\n/** The different types of inputs for a payout token attribute. This is the type of form that will be submitted in the data. */\nexport type PayoutTokenAttributeInputTypes =\n\t/** Date */\n\t| \"date\"\n\t/** Options */\n\t| \"options\"\n\t/** Text */\n\t| \"text\";\n\n/** The type of information being submitted in the value field. */\nexport type PayoutTokenAttributeValueTypes = \"raw\" | \"vault_token\";\n\n/** The different providers a payout token can be. */\nexport type PayoutTokenProviders =\n\t/** Masspay */\n\t\"masspay\";\n\n/** The different statuses a payout token can have. */\nexport type PayoutTokenStatuses =\n\t/** Active */\n\t| \"active\"\n\t/** Broken */\n\t| \"broken\"\n\t/** Created */\n\t| \"created\";\n\n/** Whether a payout is one-time or recurring */\nexport type PayoutTypes =\n\t/** Flat Fee */\n\t| \"flat_fee\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Statuses for paypal accounts */\nexport type PaypalAccountStatuses =\n\t| \"broken\"\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"oauth_integration_not_found\"\n\t| \"payments_not_receivable\"\n\t| \"primary_email_not_confirmed\";\n\n/** The status of an entry for a perk. */\nexport type PerkStatus = \"completed\" | \"pending\";\n\n/** The type of direct link to generate */\nexport type PlanDirectLink = \"checkout\" | \"product_page\";\n\n/** Values to filter plans on */\nexport interface PlanFilters {\n\t/** A specific access pass to filter the scope by. */\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** If true, it returns plans that have affiliates */\n\taffiliates?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PlanOrder>;\n\t/** If true, it returns plans that have member/passholder affiliates set to true */\n\tpassholderAffiliate?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If true, it returns raffles that have ended. */\n\traffleEnded?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The release method to filter the scope by. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n\t/** The visibility to filter the scope by. */\n\tvisibility?: InputMaybe<VisibilityFilter>;\n}\n\n/** The order to sort the results by. */\nexport type PlanOrder =\n\t| \"active_memberships_count\"\n\t| \"affiliates\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"internal_notes\";\n\n/** The type of plan that can be attached to an access pass */\nexport type PlanTypes =\n\t/** One Time */\n\t| \"one_time\"\n\t/** Renewal */\n\t| \"renewal\";\n\n/** The ways a relation of Plans can be ordered */\nexport type PlansOrder =\n\t| \"active_members_count\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"id\"\n\t| \"internal_notes\";\n\n/** Which columns can be used to sort. */\nexport type PlansSortableColumns =\n\t| \"active_members_count\"\n\t| \"active_memberships_count\"\n\t| \"cached_initial_price_due\"\n\t| \"cached_usd_income\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"stock\";\n\n/** Input type for creating a poll in a feed post */\nexport interface PollInput {\n\t/** The options for the poll. Must have sequential IDs starting from 1 */\n\toptions: Array<PollOptionInput>;\n}\n\n/** Input type for a single poll option */\nexport interface PollOptionInput {\n\t/** Sequential ID for the poll option (starting from '1') */\n\tid: Scalars[\"String\"][\"input\"];\n\t/** The text of the poll option */\n\ttext: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of feed to fetch from */\nexport type PostTypes =\n\t/** Dms */\n\t| \"dms\"\n\t/** Dms Post */\n\t| \"dms_post\"\n\t/** Forum Post */\n\t| \"forum_post\";\n\n/** Autogenerated input type of ProcessEntities */\nexport interface ProcessEntitiesInput {\n\t/** The ID of the app */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** The chat feed posts to process */\n\tchatFeeds?: InputMaybe<Array<ChatFeedInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The DMs feed members to process */\n\tdmsFeedMembers?: InputMaybe<Array<DmsFeedMemberInput>>;\n\t/** The DMs feeds to process */\n\tdmsFeeds?: InputMaybe<Array<DmsFeedInput>>;\n\t/** The DMs posts to process */\n\tdmsPosts?: InputMaybe<Array<DmsPostInput>>;\n\t/** The livestream feeds to process */\n\tlivestreamFeeds?: InputMaybe<Array<LivestreamFeedInput>>;\n\t/** The chat feed muted members to process */\n\tmutedUsers?: InputMaybe<Array<MutedUserInput>>;\n\t/** The reactions to process */\n\treactions?: InputMaybe<Array<ReactionInput>>;\n}\n\n/** Types of product highlight */\nexport type ProductHighlightTypes =\n\t| \"benefit\"\n\t| \"pricing_feature\"\n\t| \"qualification\"\n\t| \"who_this_is_for\";\n\n/** Image styles for product. */\nexport type ProductImageStyles =\n\t| \"s48\"\n\t| \"s48fit\"\n\t| \"s64\"\n\t| \"s64fit\"\n\t| \"s80\"\n\t| \"s80fit\"\n\t| \"s128\"\n\t| \"s180\"\n\t| \"s250x125\"\n\t| \"s250x125fit\"\n\t| \"s440x220\"\n\t| \"s440x220fit\"\n\t| \"s500x250\"\n\t| \"s500x250fit\"\n\t| \"s512x288\"\n\t| \"s512x288fit\"\n\t| \"s600x400\"\n\t| \"s600x400fit\"\n\t| \"s1000x500\"\n\t| \"s1000x500fit\"\n\t| \"s1280x720\"\n\t| \"s1280x720fit\"\n\t| \"s1920x1080\"\n\t| \"s1920x1080fit\";\n\n/** The product_type of the ProductTaxCode */\nexport type ProductTaxCodeProductTypes = \"digital\" | \"physical\" | \"services\";\n\n/** Values to filter users on */\nexport interface ProductUserFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<ProductUserOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type ProductUserOrder =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** The different levels of visibility for resources */\nexport type ProfileVisibilities = \"hidden\" | \"visible\";\n\n/** Values to filter promo codes on */\nexport interface PromoCodeFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter whether to return active or expired (archived and inactive). */\n\tnewStatus?: InputMaybe<PromoCodeNewStatus>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<PromoCodeOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The state of promo code. */\n\tstatus?: InputMaybe<PromoCodeStatus>;\n}\n\n/** The new statuses to filter the results by. */\nexport type PromoCodeNewStatus = \"active\" | \"expired\";\n\n/** The order to sort the results by. */\nexport type PromoCodeOrder = \"code\" | \"created_at\";\n\n/** Statuses for promo codes */\nexport type PromoCodeStatus =\n\t/** Active */\n\t| \"active\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Inactive */\n\t| \"inactive\";\n\n/** Which columns can be used to sort. */\nexport type PromoCodesSortableColumns =\n\t| \"created_at\"\n\t| \"expiration_datetime\"\n\t| \"id\";\n\n/** The duration setting for the promo code */\nexport type PromoDurations =\n\t/** Forever */\n\t| \"forever\"\n\t/** Once */\n\t| \"once\"\n\t/** Repeating */\n\t| \"repeating\";\n\n/** The type of promo code used to discount a plan */\nexport type PromoTypes =\n\t/** Flat Amount */\n\t| \"flat_amount\"\n\t/** Percentage */\n\t| \"percentage\";\n\n/** Autogenerated input type of PromoteAppBuildToProduction */\nexport interface PromoteAppBuildToProductionInput {\n\t/** The ID of the app build to promote. */\n\tappBuildId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type PublicAccessPassesOrder =\n\t| \"average_review_rating\"\n\t| \"average_time_spent_24_hours\"\n\t| \"created_at\"\n\t| \"global_affiliate_percentage\"\n\t| \"highest_bounties\"\n\t| \"id\"\n\t| \"last_24_hours_total_seconds\"\n\t| \"most_affiliate_earnings_24_hours\"\n\t| \"most_money_made_24_hours\"\n\t| \"most_reviews_7_days\"\n\t| \"most_reviews_24_hours\"\n\t| \"newest_arrivals\"\n\t| \"trending\"\n\t| \"trending_3_hours\";\n\n/** The order to sort the results by. */\nexport type PublicBountiesOrder = \"created_at\" | \"total_paid\";\n\n/** Input for a reaction */\nexport interface ReactionInput {\n\t/** The ID of the feed this reaction belongs to */\n\tfeedId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the feed this reaction belongs to */\n\tfeedType: FeedTypes;\n\t/** The unique identifier for the reaction */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether the entity has been deleted */\n\tisDeleted?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The ID of the post this reaction belongs to */\n\tpostId: Scalars[\"ID\"][\"input\"];\n\t/** The type of the post (e.g., 'dms_post') */\n\tpostType: PostTypes;\n\t/** The type of reaction (e.g., 'like', 'vote', 'view', 'emoji') */\n\treactionType: ReactionTypes;\n\t/** The score of the reaction */\n\tscore: Scalars[\"Int\"][\"input\"];\n\t/** The value of the reaction (e.g., specific emoji) */\n\tvalue: Scalars[\"String\"][\"input\"];\n}\n\n/** The type of reactions */\nexport type ReactionTypes =\n\t/** Emoji */\n\t| \"emoji\"\n\t/** Like */\n\t| \"like\"\n\t/** View */\n\t| \"view\"\n\t/** Vote */\n\t| \"vote\";\n\n/** The status of the abuse report */\nexport type ReceiptFeeTypes =\n\t/** Other Fee */\n\t| \"other_fee\"\n\t/** Processing Fee */\n\t| \"processing_fee\"\n\t/** Whop Fee */\n\t| \"whop_fee\";\n\n/** The payment processor of a receipt */\nexport type ReceiptPaymentProcessor =\n\t/** Apple */\n\t| \"apple\"\n\t/** Coinbase */\n\t| \"coinbase\"\n\t/** Crypto */\n\t| \"crypto\"\n\t/** Free */\n\t| \"free\"\n\t/** Multi Psp */\n\t| \"multi_psp\"\n\t/** Nft */\n\t| \"nft\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Platform Balance */\n\t| \"platform_balance\"\n\t/** Sezzle */\n\t| \"sezzle\"\n\t/** Splitit */\n\t| \"splitit\"\n\t/** Stripe */\n\t| \"stripe\";\n\n/** The status of a receipt */\nexport type ReceiptStatus =\n\t/** Draft */\n\t| \"draft\"\n\t/** Open */\n\t| \"open\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Uncollectible */\n\t| \"uncollectible\"\n\t/** Unresolved */\n\t| \"unresolved\"\n\t/** Void */\n\t| \"void\";\n\n/** The status of a receipt */\nexport type ReceiptStatusV2 =\n\t| \"failed\"\n\t| \"partially_refunded\"\n\t| \"past_due\"\n\t| \"refunded\"\n\t| \"succeeded\";\n\n/**\n * The type of tax inclusivity applied to the receipt, for determining whether the\n * tax is included in the final price, or paid on top.\n */\nexport type ReceiptTaxBehaviors =\n\t/** Exclusive */\n\t| \"exclusive\"\n\t/** Inclusive */\n\t| \"inclusive\"\n\t/** Unspecified */\n\t| \"unspecified\";\n\n/** Values to filter receipts on */\nexport interface ReceiptV2Filters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The billing reason for the payment */\n\tbillingReasons?: InputMaybe<Array<BillingReasons>>;\n\t/** The currency of the payment. */\n\tcurrencies?: InputMaybe<Array<Currencies>>;\n\t/** Which way to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all memberships created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** How to order the results. */\n\torder?: InputMaybe<ReceiptV2Order>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** A specific plan. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all memberships created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The state of the payment. */\n\tstatuses?: InputMaybe<Array<ReceiptStatusV2>>;\n}\n\n/** The order to sort the results by. */\nexport type ReceiptV2Order = \"created_at\" | \"final_amount\" | \"paid_at\";\n\n/** Which columns can be used to sort. */\nexport type ReceiptsSortableColumns =\n\t| \"created_at\"\n\t| \"final_amount\"\n\t| \"id\"\n\t| \"paid_at\"\n\t| \"presented_final_amount\";\n\n/** The different statuses for a Refund object */\nexport type RefundStatuses =\n\t| \"canceled\"\n\t| \"failed\"\n\t| \"pending\"\n\t| \"requires_action\"\n\t| \"succeeded\";\n\n/** The methods of how a plan can be released (including raffles and waitlists). */\nexport type ReleaseMethod =\n\t/** Buy Now */\n\t| \"buy_now\"\n\t/** Raffle */\n\t| \"raffle\"\n\t/** Waitlist */\n\t| \"waitlist\";\n\nexport interface ReleaseMethodSettingsInput {\n\t/** When the raffle will expire */\n\texpiresAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The maximum number of entries allowed for the raffle or waitlist */\n\tmaxEntries?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** If this is enabled, the raffle will get entries based off of how many NFTs the user owns */\n\tnftWeightedEntries?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** When the raffle will start */\n\tstartsAt?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n}\n\n/** The types of reports that can be generated. */\nexport type ReportTypes =\n\t/** Bookmark */\n\t| \"bookmark\"\n\t/** Downvote */\n\t| \"downvote\"\n\t/** Share */\n\t| \"share\"\n\t/** Upvote */\n\t| \"upvote\";\n\n/** The different types of actions for a resolution event */\nexport type ResolutionActions =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Appealed */\n\t| \"appealed\"\n\t/** Created */\n\t| \"created\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Dispute Customer Won */\n\t| \"dispute_customer_won\"\n\t/** Dispute Merchant Won */\n\t| \"dispute_merchant_won\"\n\t/** Dispute Opened */\n\t| \"dispute_opened\"\n\t/** Escalated */\n\t| \"escalated\"\n\t/** Requested More Info */\n\t| \"requested_more_info\"\n\t/** Responded */\n\t| \"responded\"\n\t/** Withdrew */\n\t| \"withdrew\";\n\n/** The types of responses a customer can make to a resolution. */\nexport type ResolutionCustomerResponses = \"appeal\" | \"respond\" | \"withdraw\";\n\n/** Filters for the resolutions */\nexport interface ResolutionFilters {\n\t/** A specific access pass. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** Filter by their case state */\n\tcaseState?: InputMaybe<CaseStates>;\n\t/** The direction to filter */\n\tdirection?: InputMaybe<Direction>;\n\t/** Filter by the end date */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The order to filter */\n\torder?: InputMaybe<ResolutionOrder>;\n\t/** How the payment was made (method). */\n\tpaymentMethods?: InputMaybe<Array<PaymentMethods>>;\n\t/** The text to search by */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter by the start date */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** Filter by their status */\n\tstatuses?: InputMaybe<Array<ResolutionStatuses>>;\n}\n\n/** A reason why a specific receipt cannot have a resolution created. */\nexport type ResolutionIneligibilityReason =\n\t| \"already_opened\"\n\t| \"already_refunded\"\n\t| \"free\"\n\t| \"not_paid\"\n\t| \"out_of_date\"\n\t| \"unsupported_payment_processor\";\n\n/** The different types of issues a resolution can be */\nexport type ResolutionIssueTypes =\n\t/** Forgot To Cancel */\n\t| \"forgot_to_cancel\"\n\t/** Item Not Received */\n\t| \"item_not_received\"\n\t/** Product Unacceptable */\n\t| \"product_unacceptable\"\n\t/** Significantly Not As Described */\n\t| \"significantly_not_as_described\"\n\t/** Unauthorized Transaction */\n\t| \"unauthorized_transaction\";\n\n/** The types of responses a merchant can make to a resolution. */\nexport type ResolutionMerchantResponses =\n\t| \"accept\"\n\t| \"appeal\"\n\t| \"deny\"\n\t| \"request_more_info\"\n\t| \"respond\";\n\n/** Possible values to filter user on */\nexport type ResolutionOrder = \"due_date\" | \"id\";\n\n/** The types of responses the platform can make to a resolution. */\nexport type ResolutionPlatformResponses =\n\t| \"merchant_refund\"\n\t| \"merchant_wins\"\n\t| \"platform_refund\"\n\t| \"request_buyer_info\"\n\t| \"request_merchant_info\";\n\n/** The different types of reporters for a resolution event */\nexport type ResolutionReporters =\n\t/** Customer */\n\t| \"customer\"\n\t/** Merchant */\n\t| \"merchant\"\n\t/** Platform */\n\t| \"platform\"\n\t/** System */\n\t| \"system\";\n\n/** The statuses a resolution object can have */\nexport type ResolutionStatuses =\n\t/** Customer Info Needed */\n\t| \"customer_info_needed\"\n\t/** Customer Response Needed */\n\t| \"customer_response_needed\"\n\t/** Customer Withdrew */\n\t| \"customer_withdrew\"\n\t/** Customer Won */\n\t| \"customer_won\"\n\t/** Merchant Info Needed */\n\t| \"merchant_info_needed\"\n\t/** Merchant Response Needed */\n\t| \"merchant_response_needed\"\n\t/** Merchant Won */\n\t| \"merchant_won\"\n\t/** Under Platform Review */\n\t| \"under_platform_review\";\n\n/** Which columns can be used to sort. */\nexport type ResolutionsSortableColumns = \"created_at\" | \"due_date\" | \"id\";\n\n/** The different reason codes. */\nexport type RestrictionSetReasonCodes = \"blocked_country\";\n\n/** Autogenerated input type of RetryPaymentMyMembership */\nexport interface RetryPaymentMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to retry the payment for. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The status of a review report */\nexport type ReviewReportStatus =\n\t/** Accepted */\n\t| \"accepted\"\n\t/** Pending */\n\t| \"pending\"\n\t/** Rejected */\n\t| \"rejected\";\n\n/** The statuses a review can have */\nexport type ReviewStatus =\n\t/** Pending */\n\t| \"pending\"\n\t/** Published */\n\t| \"published\"\n\t/** Removed */\n\t| \"removed\";\n\n/** Which columns can be used to sort. */\nexport type ReviewsSortableColumns = \"created_at\" | \"id\" | \"stars\";\n\n/** The available reward units to choose from. */\nexport type RewardUnits =\n\t/** Per Submission */\n\t| \"per_submission\"\n\t/** Per View */\n\t| \"per_view\";\n\n/** The status of an RFI */\nexport type RfiStatuses =\n\t/** Ignored */\n\t| \"ignored\"\n\t/** Pending Provider */\n\t| \"pending_provider\"\n\t/** Resolved */\n\t| \"resolved\"\n\t/** Waiting For Platform */\n\t| \"waiting_for_platform\"\n\t/** Waiting For User */\n\t| \"waiting_for_user\";\n\n/** The level of security an account has */\nexport type SecurityLevels = \"none\" | \"two_factor\";\n\n/** Autogenerated input type of SendMessage */\nexport interface SendMessageInput {\n\t/** The attachments for this message, such as videos or images. */\n\tattachments?: InputMaybe<Array<AttachmentInput>>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chat experience to send the message in. */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the feed to send to. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The type of the feed to send to. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** The message to send. */\n\tmessage: Scalars[\"String\"][\"input\"];\n\t/** The user to send the direct message to. */\n\ttoUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}\n\n/** Autogenerated input type of SendNotification */\nexport interface SendNotificationInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company team to send the notification to */\n\tcompanyTeamId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The content of the notification */\n\tcontent: Scalars[\"String\"][\"input\"];\n\t/** The ID of the experience to send the notification to */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** An external ID for the notification */\n\texternalId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether the notification is a mention */\n\tisMention?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/**\n\t * The link to open when the notification is clicked. If you just want to append\n\t * a rest path use the restPath parameter. You can link to any url here.\n\t */\n\tlink?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The rest path to append to the generated deep link that opens your app. Use\n\t * [restPath] in your app path in the dashboard to read this parameter.\n\t */\n\trestPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user sending the notification */\n\tsenderUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The subtitle of the notification */\n\tsubtitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the notification */\n\ttitle: Scalars[\"String\"][\"input\"];\n\t/** The IDs of the users to send the notification to. */\n\tuserIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n}\n\n/** The status of a simple notification preference */\nexport type SimpleNotificationPreferenceStatus =\n\t/** Everything */\n\t| \"everything\"\n\t/** Nothing */\n\t| \"nothing\"\n\t/** Only Mentions */\n\t| \"only_mentions\";\n\n/** The different websites you can have social links for */\nexport type SocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The origin of the specific fee */\nexport type SpecificFeeOrigins =\n\t/** Affiliate Fee */\n\t| \"affiliate_fee\"\n\t/** Apple Processing Fee */\n\t| \"apple_processing_fee\"\n\t/** Billing Percentage Fee */\n\t| \"billing_percentage_fee\"\n\t/** Buyer Fee */\n\t| \"buyer_fee\"\n\t/** Cross Border Percentage Fee */\n\t| \"cross_border_percentage_fee\"\n\t/** Crypto Fee */\n\t| \"crypto_fee\"\n\t/** Dispute Alert Fee */\n\t| \"dispute_alert_fee\"\n\t/** Dispute Fee */\n\t| \"dispute_fee\"\n\t/** Fx Percentage Fee */\n\t| \"fx_percentage_fee\"\n\t/** Marketplace Affiliate Fee */\n\t| \"marketplace_affiliate_fee\"\n\t/** Orchestration Percentage Fee */\n\t| \"orchestration_percentage_fee\"\n\t/** Payment Processing Fixed Fee */\n\t| \"payment_processing_fixed_fee\"\n\t/** Payment Processing Percentage Fee */\n\t| \"payment_processing_percentage_fee\"\n\t/** Paypal Fee */\n\t| \"paypal_fee\"\n\t/** Platform Balance Processing Fee */\n\t| \"platform_balance_processing_fee\"\n\t/** Sales Tax Remittance */\n\t| \"sales_tax_remittance\"\n\t/** Sales Tax Remittance Reversal */\n\t| \"sales_tax_remittance_reversal\"\n\t/** Sezzle Processing Fee */\n\t| \"sezzle_processing_fee\"\n\t/** Splitit Processing Fee */\n\t| \"splitit_processing_fee\"\n\t/** Stripe Billing Fee */\n\t| \"stripe_billing_fee\"\n\t/** Stripe Domestic Processing Fee */\n\t| \"stripe_domestic_processing_fee\"\n\t/** Stripe Fixed Processing Fee */\n\t| \"stripe_fixed_processing_fee\"\n\t/** Stripe International Processing Fee */\n\t| \"stripe_international_processing_fee\"\n\t/** Stripe Payout Fee */\n\t| \"stripe_payout_fee\"\n\t/** Stripe Radar Fee */\n\t| \"stripe_radar_fee\"\n\t/** Stripe Sales Tax Fee */\n\t| \"stripe_sales_tax_fee\"\n\t/** Stripe Standard Processing Fee */\n\t| \"stripe_standard_processing_fee\"\n\t/** Three Ds Fixed Fee */\n\t| \"three_ds_fixed_fee\"\n\t/** Whop Processing Fee */\n\t| \"whop_processing_fee\";\n\n/** The configuration for receipts stats query. */\nexport interface StatsConfigInput {\n\t/** The access pass ids to filter the data by. */\n\taccessPassIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The bot ids to filter the data by. */\n\tbotIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** Whether or not to filter data by direct to consumer or marketplace */\n\tdirectToConsumer?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The feed ids to filter the data by. */\n\tfeedIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The plan ids to filter the data by. */\n\tplanIds?: InputMaybe<Array<Scalars[\"ID\"][\"input\"]>>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Statuses for resources */\nexport type Status = \"active\" | \"archived\" | \"deleted\";\n\n/** The available bounty statuses to choose from. */\nexport type Statuses =\n\t/** Archived */\n\t| \"archived\"\n\t/** Published */\n\t| \"published\";\n\n/** Statuses for stripe accounts */\nexport type StripeAccountStatuses =\n\t| \"connected\"\n\t| \"disabled_by_whop\"\n\t| \"needs_completion\"\n\t| \"needs_reauthorization\"\n\t| \"reconnect_api_keys\"\n\t| \"rejected\"\n\t| \"requirements_not_met\"\n\t| \"under_review\";\n\n/** Types of Stripe accounts */\nexport type StripeAccountTypes =\n\t| \"connect\"\n\t| \"custom\"\n\t| \"express\"\n\t| \"personal\"\n\t| \"standard\";\n\n/** The status that an external payout account can have */\nexport type StripeExternalAccountStatuses =\n\t/** Errored */\n\t| \"errored\"\n\t/** New */\n\t| \"new\"\n\t/** Validated */\n\t| \"validated\"\n\t/** Verification Failed */\n\t| \"verification_failed\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The methods that a StripePayout can have */\nexport type StripePayoutMethods =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The payout types that a StripePayout can have */\nexport type StripePayoutPayoutTypes =\n\t/** Bank Account */\n\t| \"bank_account\"\n\t/** Card */\n\t| \"card\";\n\n/** The status that a StripePayout can have */\nexport type StripePayoutStatuses =\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Paid */\n\t| \"paid\"\n\t/** Pending */\n\t| \"pending\";\n\n/** The status that a StripePayout's trace can have */\nexport type StripePayoutTraceStatuses =\n\t/** Pending */\n\t| \"pending\"\n\t/** Supported */\n\t| \"supported\"\n\t/** Unsupported */\n\t| \"unsupported\";\n\n/** Whether or not the tax is included in a plan's price (or if it hasn't been set up) */\nexport type TaxTypes =\n\t/** Tax is exclusive in the price of the plan. If its $20 before tax, its $25 after tax. The user is paying tax */\n\t| \"exclusive\"\n\t/** Tax is inclusive in the price of the plan. If its $20, its $20. The company already factored in tax and is paying tax */\n\t| \"inclusive\"\n\t/** The company hasn't set up tax yet */\n\t| \"unspecified\";\n\n/** Autogenerated input type of TerminateMyMembership */\nexport interface TerminateMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The internal ID of the membership to terminate. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of TestWebhookV2 */\nexport interface TestWebhookV2Input {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The event to test the webhook for. */\n\tevent: WebhookEvent;\n\t/** The ID of the webhook to test. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of ToggleCancelMyMembership */\nexport interface ToggleCancelMyMembershipInput {\n\t/** A multiple choice selection for why the user canceled. */\n\tcancelOption?: InputMaybe<CancelOptions>;\n\t/** The custom input from the user for canceling the membership. */\n\tcancelationReason?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the membership to cancel at the end of the period. */\n\tmembershipId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The destination of the custom link */\nexport type TrackingLinkDestination =\n\t/** Access Pass Page */\n\t| \"access_pass_page\"\n\t/** Bot Page */\n\t| \"bot_page\"\n\t/** Checkout Page */\n\t| \"checkout_page\";\n\n/** Which columns can be used to sort. */\nexport type TrackingLinksSortableColumns =\n\t| \"clicks\"\n\t| \"conversion_rate\"\n\t| \"converted_users\"\n\t| \"created_at\"\n\t| \"id\"\n\t| \"revenue_generated\";\n\n/** The different types for a tracking pixel */\nexport type TrackingPixelTypes =\n\t/** Hubspot Pixel */\n\t| \"hubspot_pixel_id\"\n\t/** X Checkout Initiated Event */\n\t| \"x_checkout_initiated_event\"\n\t/** X Payment Method Event */\n\t| \"x_payment_method_event\"\n\t/** X Purchase Event */\n\t| \"x_purchase_event\";\n\n/** Autogenerated input type of TransferFunds */\nexport interface TransferFundsInput {\n\t/** The amount to withdraw */\n\tamount: Scalars[\"Float\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The currency that is being withdrawn. */\n\tcurrency: Currencies;\n\t/** The ID of the destination (either a User tag, Bot tag, or LedgerAccount tag) */\n\tdestinationId: Scalars[\"ID\"][\"input\"];\n\t/** The feed identifier to notify of the transfer. */\n\tfeedId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The feed type to notify of the transfer. */\n\tfeedType?: InputMaybe<FeedTypes>;\n\t/** A unique key to ensure idempotence. Use a UUID or similar. */\n\tidempotenceKey: Scalars[\"String\"][\"input\"];\n\t/** The ledger account id to transfer from. */\n\tledgerAccountId: Scalars[\"ID\"][\"input\"];\n\t/** Notes for the transfer. Maximum of 50 characters. */\n\tnotes?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The reason for the transfer. */\n\treason?: InputMaybe<CreditTransactionTransferReasons>;\n\t/** The fee that the client thinks it is being charged for the transfer. Used to verify the fee. */\n\ttransferFee?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n}\n\n/** Autogenerated input type of TransferLinkMyMembership */\nexport interface TransferLinkMyMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the company that this membership is on behalf of. */\n\tcompanyBuyerId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** This is the ID of the membership you want to create a transfer link for. */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UnassignProductionAppBuild */\nexport interface UnassignProductionAppBuildInput {\n\t/** The ID of the app to unassign the production build from. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** What platform should be unassigned */\n\tplatform: AppBuildPlatforms;\n}\n\n/** Autogenerated input type of UnbanUser */\nexport interface UnbanUserInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the user to unban */\n\tuserId: Scalars[\"ID\"][\"input\"];\n}\n\n/** The types of universal post feeds that you can retrieve */\nexport type UniversalPostFeedTypes =\n\t| \"access_pass\"\n\t| \"discover\"\n\t| \"home\"\n\t| \"recent_content_reward_submissions\"\n\t| \"user_profile\";\n\n/** Autogenerated input type of UpdateAccessPass */\nexport interface UpdateAccessPassInput {\n\t/** A banner image for the access pass in png, jpeg format */\n\tbannerImage?: InputMaybe<AttachmentInput>;\n\t/** The business type of the access pass. */\n\tbusinessType?: InputMaybe<BusinessTypes>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The creator pitch for the access pass. */\n\tcreatorPitch?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The custom call to action for the access pass. */\n\tcustomCta?: InputMaybe<CustomCtas>;\n\t/** The custom call to action URL for the access pass. */\n\tcustomCtaUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/**\n\t * The custom statement descriptor for the access pass i.e. WHOP*SPORTS, must be\n\t * between 5 and 22 characters, contain at least one letter, and not contain any\n\t * of the following characters: <, >, \\, ', \"\n\t */\n\tcustomStatementDescriptor?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The percentage of the revenue that goes to the global affiliate program. */\n\tglobalAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the global affiliate program for this access pass. */\n\tglobalAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The headline of the access pass. */\n\theadline?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID (tag) of the access pass */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The industry type of the access pass. */\n\tindustryType?: InputMaybe<IndustryTypes>;\n\t/** The logo for the access pass in png, jpeg, or gif format */\n\tlogo?: InputMaybe<AttachmentInput>;\n\t/** The percentage of the revenue that goes to the member affiliate program. */\n\tmemberAffiliatePercentage?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The status of the member affiliate program for this access pass. */\n\tmemberAffiliateStatus?: InputMaybe<GlobalAffiliateStatuses>;\n\t/** The ID of the product tax code to apply to this access pass. */\n\tproductTaxCodeId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The URL to redirect the customer to after a purchase. */\n\tredirectPurchaseUrl?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The route of the access pass. */\n\troute?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** A short description of what the access pass offers or does. Must be 150 chars or less. */\n\tshortenedDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not to show the member count on the access pass. */\n\tshowMemberCount?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show the offers on the access pass. */\n\tshowOffers?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** Whether or not to show reviews on the access pass. */\n\tshowReviewsDtc?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The title of the access pass. */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** This access pass will/will not be displayed publicly. */\n\tvisibility?: InputMaybe<Visibility>;\n}\n\n/** Autogenerated input type of UpdateAffiliate */\nexport interface UpdateAffiliateInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The amount the affiliate will earn (either amount or percent 1-100) */\n\tfee?: InputMaybe<Scalars[\"StringFloat\"][\"input\"]>;\n\t/** The ID (tag) of the affiliate. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** Whether or not the affiliate will only get one payout or it will be recurring. */\n\tonlyOnePayout?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The type of payout. */\n\tpayoutType?: InputMaybe<PayoutTypes>;\n\t/** The IDs of the plans that the affiliate can refer. */\n\tplanId: Scalars[\"String\"][\"input\"];\n\t/** Sets the affiliate as active/inactive. */\n\tstatus?: InputMaybe<Status>;\n}\n\n/** Autogenerated input type of UpdateAgentUser */\nexport interface UpdateAgentUserInput {\n\t/** The ID of the app to create the agent user for. */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The name of the agent user. */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** An image for the user for their avatar. */\n\tprofilePhoto?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The ID of the user to update. */\n\tuserId: Scalars[\"ID\"][\"input\"];\n\t/** The username of the agent user. */\n\tusername?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateApp */\nexport interface UpdateAppInput {\n\t/** The description of the app for the app store in-depth app view. */\n\tappStoreDescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The base developer url of the app */\n\tbaseDevUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base preview url of the app */\n\tbasePreviewUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** The base production url of the app */\n\tbaseUrl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the dashboard view of the app */\n\tdashboardPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The default agent user ID for the app */\n\tdefaultAgentUserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The description of the app */\n\tdescription?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the discover view of the app */\n\tdiscoverPath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The path for the hub view of the app */\n\texperiencePath?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** If the apps experience's should force showing the pre-checkout iframe, and not rely on app connections. */\n\tforceCheckoutIframe?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The hub call to action text of the app */\n\thubCta?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The icon for the app */\n\ticon?: InputMaybe<AttachmentInput>;\n\t/** The ID of the app */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/**\n\t * The image for the app\n\t * @deprecated Use icon instead\n\t */\n\timage?: InputMaybe<Scalars[\"File\"][\"input\"]>;\n\t/** The name of the app */\n\tname?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The product page text of the app */\n\tproductPage?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The scopes that the app will request off of users when a user installs the app. */\n\trequiredScopes?: InputMaybe<Array<AppValidScopes>>;\n\t/**\n\t * If the status is live, the app is visible on Whop discovery. In order to be\n\t * live, you need to set the name, icon, and description. Being unlisted or\n\t * hidden means it's not visible on Whop but you can still install the app via\n\t * direct link. To remove the app from whop discovery, you should set the status to unlisted.\n\t */\n\tstatus?: InputMaybe<AppStatuses>;\n}\n\n/** Autogenerated input type of UpdateAppPermissionRequirements */\nexport interface UpdateAppPermissionRequirementsInput {\n\t/** The ID of the app the permission requirements are being updated for */\n\tappId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The permissions that the app will request off of users when a user installs the app. */\n\trequestedPermissions: Array<AppRequestedPermissionInput>;\n}\n\n/** Autogenerated input type of UpdateChapter */\nexport interface UpdateChapterInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the chapter to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The title of the chapter */\n\ttitle: Scalars[\"String\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateChapterOrder */\nexport interface UpdateChapterOrderInput {\n\t/** The ID of the chapter to place this chapter below */\n\tbelowChapterId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to reorder */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** Autogenerated input type of UpdateLesson */\nexport interface UpdateLessonInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The content of the lesson */\n\tcontent?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Days from course start until unlock */\n\tdaysFromCourseStartUntilUnlock?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID of the lesson to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The type of the lesson */\n\tlessonType?: InputMaybe<LessonTypes>;\n\t/** The ID of the Mux asset to attach to this lesson */\n\tmuxAssetId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The title of the lesson */\n\ttitle?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Determines how / whether this lesson is visible to users. */\n\tvisibility?: InputMaybe<LessonVisibilities>;\n}\n\n/** Autogenerated input type of UpdateLessonOrder */\nexport interface UpdateLessonOrderInput {\n\t/** The ID of the lesson to place this lesson below */\n\tbelowLessonId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The ID of the chapter to move the lesson to */\n\tchapterId: Scalars[\"ID\"][\"input\"];\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the lesson to reorder */\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}\n\n/** Autogenerated input type of UpdateMembership */\nexport interface UpdateMembershipInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The number of trial days to add to the membership to extend it. */\n\tfreeDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The ID (tag) of the membership. */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The action being applied to the specific membership. */\n\tmembershipAction: MembershipActions;\n}\n\n/** Autogenerated input type of UpdateWebhook */\nexport interface UpdateWebhookInput {\n\t/** The API version for this webhook */\n\tapiVersion?: InputMaybe<ApiVersion>;\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Whether or not the webhook is enabled. */\n\tenabled?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\t/** The events to send the webhook for. */\n\tevents?: InputMaybe<Array<WebhookEvent>>;\n\t/** The ID of the Webhook to update */\n\tid: Scalars[\"ID\"][\"input\"];\n\t/** The URL to send the webhook to. */\n\turl?: InputMaybe<Scalars[\"UrlString\"][\"input\"]>;\n}\n\nexport interface UploadPartInput {\n\t/** The ETag of the part */\n\tetag: Scalars[\"String\"][\"input\"];\n\t/** The part number of the part */\n\tpartNumber: Scalars[\"Int\"][\"input\"];\n}\n\nexport interface UpsellPlanInput {\n\t/** The base currency of the upsell. */\n\tbaseCurrency?: InputMaybe<Currencies>;\n\t/** An array of custom field objects. */\n\tcustomFields?: InputMaybe<Array<CustomFieldInput>>;\n\t/** The interval at which the plan charges (expiration plans). */\n\texpirationDays?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\t/** The price of the upsell. */\n\tinitialPrice?: InputMaybe<Scalars[\"Float\"][\"input\"]>;\n\t/** The method of release for the upsell. */\n\treleaseMethod?: InputMaybe<ReleaseMethod>;\n}\n\n/** The different types of upsells an experience can have. */\nexport type UpsellTypes =\n\t/** After Checkout */\n\t| \"after_checkout\"\n\t/** Before Checkout */\n\t| \"before_checkout\"\n\t/** Only In Whop */\n\t| \"only_in_whop\";\n\n/** Filters for the user affiliate referral logs search */\nexport interface UserAffiliateReferralLogFilters {\n\t/** Which direction the order should be in. */\n\tdirection?: InputMaybe<Direction>;\n\t/** How you want to order the results. */\n\torder?: InputMaybe<UserAffiliateReferralLogOrder>;\n\t/** What to search by: whop username, access pass name, or bot title */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the logs by */\nexport type UserAffiliateReferralLogOrder = \"id\";\n\n/** The configuration for a chart. */\nexport interface UserChartConfigInput {\n\t/** The currency to use for the chart. */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The start date to take into account. */\n\tfrom: Scalars[\"Timestamp\"][\"input\"];\n\t/** The interval to group the data by. */\n\tinterval?: InputMaybe<ChartIntervals>;\n\t/** The time zone used for start of day calculations. */\n\ttimeZone?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The end date to take into account. */\n\tto: Scalars[\"Timestamp\"][\"input\"];\n\t/** The week mode to group the data by. For details, look at https://clickhouse.com/docs/en/sql-reference/functions/date-time-functions#toweek */\n\tweekMode?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}\n\n/** Values to filter content rewards submissions on */\nexport interface UserContentRewardsSubmissionsFilters {\n\t/** The campaign ID to filter by */\n\tcampaignId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The direction to order by */\n\tdirection?: InputMaybe<Direction>;\n\t/** The experience ID to filter by */\n\texperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\t/** The order to sort the results by */\n\torder?: InputMaybe<UserContentRewardsSubmissionsOrder>;\n\t/** The status of the submissions */\n\tstatus?: InputMaybe<ContentRewardsSubmissionStatus>;\n}\n\n/** The ordering options for content rewards submissions */\nexport type UserContentRewardsSubmissionsOrder =\n\t| \"amount_paid_out\"\n\t| \"created_at\"\n\t| \"expires_at\"\n\t| \"total_view_count\";\n\n/** The channel of the user notification preference */\nexport type UserNotificationPreferenceChannel =\n\t/** In App */\n\t| \"in_app\"\n\t/** Mobile */\n\t| \"mobile\";\n\n/** The steps a user can follow to complete onboarding */\nexport type UserOnboardingStepsTypes =\n\t| \"add_birthday\"\n\t| \"add_email\"\n\t| \"add_name\"\n\t| \"add_phone\"\n\t| \"add_profile_picture\"\n\t| \"add_username\"\n\t| \"download_mobile_app\"\n\t| \"join_a_whop\"\n\t| \"select_interests\"\n\t| \"verify_email\"\n\t| \"verify_phone\";\n\n/** Values to filter user receipts on */\nexport interface UserReceiptFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<UserReceiptOrder>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** Filter receipts by 'free', 'paid', or 'all'. */\n\ttype?: InputMaybe<UserReceiptPaidTypeFilter>;\n}\n\n/** The order to sort the results by. */\nexport type UserReceiptOrder = \"paid_at\";\n\n/** The filter to apply to the results. */\nexport type UserReceiptPaidTypeFilter = \"all\" | \"free\" | \"paid\";\n\n/** The different websites you can have social links for */\nexport type UserSocialLinkWebsites =\n\t| \"facebook\"\n\t| \"instagram\"\n\t| \"linkedin\"\n\t| \"tiktok\"\n\t| \"twitch\"\n\t| \"website\"\n\t| \"x\"\n\t| \"youtube\";\n\n/** The type of a user */\nexport type UserTypes =\n\t/** Agent */\n\t| \"agent\"\n\t/** Human */\n\t| \"human\"\n\t/** System */\n\t| \"system\";\n\n/** The order to sort the results by. */\nexport type ValidMembershipsOrder = \"expires_at\" | \"id\" | \"ordering_status\";\n\n/** A vaulting method for a payment token. */\nexport type VaultMethods =\n\t/** Paypal Wallet */\n\t| \"paypal_wallet\"\n\t/** Venmo Wallet */\n\t| \"venmo_wallet\";\n\n/** The different providers a vault token can be. */\nexport type VaultTokenProviders =\n\t/** Basis Theory */\n\t\"basis_theory\";\n\n/** An error code for a verification attempt. */\nexport type VerificationErrorCodes =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Consent Declined */\n\t| \"consent_declined\"\n\t/** Country Not Supported */\n\t| \"country_not_supported\"\n\t/** Device Not Supported */\n\t| \"device_not_supported\"\n\t/** Document Expired */\n\t| \"document_expired\"\n\t/** Document Type Not Supported */\n\t| \"document_type_not_supported\"\n\t/** Document Unverified Other */\n\t| \"document_unverified_other\"\n\t/** Email Unverified Other */\n\t| \"email_unverified_other\"\n\t/** Email Verification Declined */\n\t| \"email_verification_declined\"\n\t/** Id Number Insufficient Document Data */\n\t| \"id_number_insufficient_document_data\"\n\t/** Id Number Mismatch */\n\t| \"id_number_mismatch\"\n\t/** Id Number Unverified Other */\n\t| \"id_number_unverified_other\"\n\t/** Phone Unverified Other */\n\t| \"phone_unverified_other\"\n\t/** Phone Verification Declined */\n\t| \"phone_verification_declined\"\n\t/** Selfie Document Missing Photo */\n\t| \"selfie_document_missing_photo\"\n\t/** Selfie Face Mismatch */\n\t| \"selfie_face_mismatch\"\n\t/** Selfie Manipulated */\n\t| \"selfie_manipulated\"\n\t/** Selfie Unverified Other */\n\t| \"selfie_unverified_other\"\n\t/** Under Supported Age */\n\t| \"under_supported_age\";\n\n/** The different providers a payout account can be. */\nexport type VerificationProviders =\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Veriff */\n\t| \"veriff\";\n\n/** A status for a verification. */\nexport type VerificationStatuses =\n\t/** Abandoned */\n\t| \"abandoned\"\n\t/** Approved */\n\t| \"approved\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Created */\n\t| \"created\"\n\t/** Declined */\n\t| \"declined\"\n\t/** Expired */\n\t| \"expired\"\n\t/** Processing */\n\t| \"processing\"\n\t/** Requires Input */\n\t| \"requires_input\"\n\t/** Resubmission Requested */\n\t| \"resubmission_requested\"\n\t/** Review */\n\t| \"review\"\n\t/** Started */\n\t| \"started\"\n\t/** Submitted */\n\t| \"submitted\"\n\t/** Verified */\n\t| \"verified\";\n\n/** The status of a bots Whop Verified. */\nexport type VerifiedStatuses = \"accepted\" | \"applied\" | \"rejected\";\n\n/** The types of version events that are possible. */\nexport type VersionEventTypes = \"create\" | \"destroy\" | \"update\";\n\n/** Filters for the version search */\nexport interface VersionFilters {\n\t/** The direction to filter the audit logs */\n\tdirection?: InputMaybe<Direction>;\n\t/** To get all Audit Logs created before this certain time. */\n\tendDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The event type to filter by. */\n\teventType?: InputMaybe<Array<VersionEventTypes>>;\n\t/** The object type to filter by. */\n\tobjectType?: InputMaybe<Array<VersionObjects>>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<VersionOrder>;\n\t/** The text that is being searched. Searches the version's identifier, which is usually a name or ID related to the object. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** To get all Audit Logs created after this certain time. */\n\tstartDate?: InputMaybe<Scalars[\"Timestamp\"][\"input\"]>;\n\t/** The ID of the user who triggered this audit log */\n\tuserId?: InputMaybe<Array<Scalars[\"String\"][\"input\"]>>;\n}\n\n/** The types of objects that have versions available for them. */\nexport type VersionObjects =\n\t| \"access_pass\"\n\t| \"affiliate\"\n\t| \"authorized_user\"\n\t| \"bot\"\n\t| \"discord_server\"\n\t| \"experience\"\n\t| \"plan\"\n\t| \"promo_code\"\n\t| \"stripe_account\";\n\n/** The order to sort the memberships by */\nexport type VersionOrder = \"event\" | \"id\";\n\n/** Visibility of a resource */\nexport type Visibility =\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** The different levels of visibility for resources */\nexport type VisibilityFilter =\n\t| \"all\"\n\t/** Archived */\n\t| \"archived\"\n\t/** Hidden */\n\t| \"hidden\"\n\t| \"not_archived\"\n\t| \"not_quick_link\"\n\t/** Quick Link */\n\t| \"quick_link\"\n\t/** Visible */\n\t| \"visible\";\n\n/** Autogenerated input type of VoidInvoice */\nexport interface VoidInvoiceInput {\n\t/** A unique identifier for the client performing the mutation. */\n\tclientMutationId?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\t/** The ID of the invoice to void */\n\tid: Scalars[\"ID\"][\"input\"];\n}\n\n/** The different event types available */\nexport type WebhookEvent =\n\t| \"app_membership_cancel_at_period_end_changed\"\n\t| \"app_membership_went_invalid\"\n\t| \"app_membership_went_valid\"\n\t| \"app_payment_failed\"\n\t| \"app_payment_pending\"\n\t| \"app_payment_succeeded\"\n\t| \"dispute_alert_created\"\n\t| \"dispute_created\"\n\t| \"dispute_updated\"\n\t| \"invoice_created\"\n\t| \"invoice_paid\"\n\t| \"invoice_past_due\"\n\t| \"invoice_voided\"\n\t| \"membership_cancel_at_period_end_changed\"\n\t| \"membership_experience_claimed\"\n\t| \"membership_metadata_updated\"\n\t| \"membership_went_invalid\"\n\t| \"membership_went_valid\"\n\t| \"payment_affiliate_reward_created\"\n\t| \"payment_failed\"\n\t| \"payment_pending\"\n\t| \"payment_succeeded\"\n\t| \"refund_created\"\n\t| \"refund_updated\"\n\t| \"resolution_created\"\n\t| \"resolution_decided\"\n\t| \"resolution_updated\";\n\n/** The anchor for when the Connected Account will be paid out */\nexport type WeeklyAnchors =\n\t| \"friday\"\n\t| \"monday\"\n\t| \"saturday\"\n\t| \"sunday\"\n\t| \"thursday\"\n\t| \"tuesday\"\n\t| \"wednesday\";\n\n/** Who can post on a chat feed */\nexport type WhoCanPostTypes = \"admins\" | \"everyone\";\n\n/** Who can react on a chat feed */\nexport type WhoCanReactTypes = \"everyone\" | \"no_one\";\n\n/** Values to filter users on */\nexport interface WhopSidebarFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarOrderEnum =\n\t| \"date_joined\"\n\t| \"last_seen_at\"\n\t| \"name\"\n\t| \"paid_out_by_company\"\n\t| \"time_spent_in_whop\";\n\n/** Values to filter users on */\nexport interface WhopSidebarWithEarningsFilters {\n\t/** How to order the results. */\n\tdirection?: InputMaybe<Direction>;\n\t/** What to order the results by. */\n\torder?: InputMaybe<WhopSidebarWithEarningsOrderEnum>;\n\t/** The text that is being searched. */\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}\n\n/** The order to sort the results by. */\nexport type WhopSidebarWithEarningsOrderEnum =\n\t| \"last_7_days\"\n\t| \"last_24_hours\"\n\t| \"last_30_days\"\n\t| \"lifetime\";\n\n/** The different fee types for a withdrawal. */\nexport type WithdrawalFeeTypes = \"exclusive\" | \"inclusive\";\n\n/** Values to filter the withdrawals on. */\nexport interface WithdrawalFilters {\n\t/** Filter by currency */\n\tcurrency?: InputMaybe<Currencies>;\n\t/** The withdrawal status/state */\n\tstatuses?: InputMaybe<Array<WithdrawalStatus>>;\n}\n\n/** The method used for withdrawing. */\nexport type WithdrawalMethods =\n\t/** Ach */\n\t| \"ach\"\n\t/** Btc */\n\t| \"btc\"\n\t/** Cash App */\n\t| \"cash_app\"\n\t/** Check */\n\t| \"check\"\n\t/** Echeck */\n\t| \"echeck\"\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Paypal */\n\t| \"paypal\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Venmo */\n\t| \"venmo\"\n\t/** Wire Transfer */\n\t| \"wire_transfer\"\n\t/** Zelle */\n\t| \"zelle\";\n\n/** The statuses a review can have */\nexport type WithdrawalProviders =\n\t/** Manual */\n\t| \"manual\"\n\t/** Masspay */\n\t| \"masspay\"\n\t/** Stripe */\n\t| \"stripe\"\n\t/** Tipalti */\n\t| \"tipalti\";\n\n/** The different speeds of withdrawals */\nexport type WithdrawalSpeeds =\n\t/** Instant */\n\t| \"instant\"\n\t/** Standard */\n\t| \"standard\";\n\n/** The status of a withdrawal request */\nexport type WithdrawalStatus =\n\t/** Awaiting Payment */\n\t| \"awaiting_payment\"\n\t/** Canceled */\n\t| \"canceled\"\n\t/** Completed */\n\t| \"completed\"\n\t/** Denied */\n\t| \"denied\"\n\t/** Failed */\n\t| \"failed\"\n\t/** In Transit */\n\t| \"in_transit\"\n\t/** Requested */\n\t| \"requested\";\n\n/** The types of withdrawals */\nexport type WithdrawalTypes =\n\t/** Clawback */\n\t| \"clawback\"\n\t/** Regular */\n\t| \"regular\";\n\n/** Which columns can be used to sort. */\nexport type WithdrawalsSortableColumns = \"amount\" | \"created_at\" | \"id\";\n\nexport type AccessPassFragmentFragment = {\n\t__typename?: \"PublicAccessPass\";\n\tid: string;\n\ttitle: string;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\troute: string;\n\tactiveUsersCount: number;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BaseAccessPassFragment = {\n\t__typename?: \"AccessPass\";\n\tid: string;\n\tcreatedAt: number;\n\troute: string;\n\ttitle: string;\n\theadline?: string | null;\n\tshortenedDescription?: string | null;\n\tverified: boolean;\n\tvisibility: Visibility;\n\tactiveUsersCount: number;\n\treviewsAverage: number;\n\tcreatorPitch?: string | null;\n\tupdatedAtMs: string;\n\tshowOffers: boolean;\n\tredirectPurchaseUrl?: string | null;\n\tcustomCta: CustomCtas;\n\tcustomCtaUrl?: string | null;\n\tglobalAffiliatePercentage?: number | null;\n\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\tmemberAffiliatePercentage?: number | null;\n\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\tshowMemberCount: boolean;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAffiliateFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n};\n\nexport type AffiliateWithUserFragment = {\n\t__typename?: \"Affiliate\";\n\tid: string;\n\tstatus?: Status | null;\n\tactiveMembersCount: number;\n\taffiliateType?: AffiliateTypes | null;\n\ttotalPlanCount: number;\n\ttotalReferralEarnings: string;\n\ttotalReferrals: number;\n\ttotalRevenue: string;\n\tuserAccount: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BaseAppBuildFragment = {\n\t__typename?: \"AppBuild\";\n\tid: string;\n\tcreatedAt: number;\n\tfileUrl: string;\n\tchecksum: string;\n\tplatform: AppBuildPlatforms;\n\treviewMessage?: string | null;\n\tsupportedAppViewTypes: Array<AppViewTypes>;\n\tstatus: AppBuildStatuses;\n};\n\nexport type BaseAppFragment = {\n\t__typename?: \"App\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tstatus: AppStatuses;\n\tusingDefaultIcon: boolean;\n\tbaseUrl?: string | null;\n\tbaseDevUrl?: string | null;\n\texperiencePath?: string | null;\n\tdiscoverPath?: string | null;\n\tdashboardPath?: string | null;\n\ticon?:\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type BaseAppApiKeyFragment = {\n\t__typename?: \"PrivateApiKey\";\n\tid: string;\n\ttoken: string;\n\tcreatedAt: number;\n};\n\nexport type BaseAppAgentUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n};\n\nexport type BaseAppStatsFragment = {\n\t__typename?: \"PublicAppStats\";\n\tdau: number;\n\tmau: number;\n\ttimeSpentLast24HoursInSeconds: number;\n\twau: number;\n};\n\ntype Attachment_AudioAttachment_Fragment = {\n\t__typename: \"AudioAttachment\";\n\tduration?: number | null;\n\twaveformUrl?: string | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_ImageAttachment_Fragment = {\n\t__typename: \"ImageAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tblurhash?: string | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_OtherAttachment_Fragment = {\n\t__typename: \"OtherAttachment\";\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\ntype Attachment_VideoAttachment_Fragment = {\n\t__typename: \"VideoAttachment\";\n\theight?: number | null;\n\twidth?: number | null;\n\tduration?: number | null;\n\taspectRatio?: number | null;\n\tid: string;\n\tsignedId?: string | null;\n\tanalyzed: boolean;\n\tbyteSizeV2?: string | null;\n\tfilename?: string | null;\n\tcontentType?: string | null;\n\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\tsource: { __typename?: \"AttachmentSource\"; url: string };\n};\n\nexport type AttachmentFragment =\n\t| Attachment_AudioAttachment_Fragment\n\t| Attachment_ImageAttachment_Fragment\n\t| Attachment_OtherAttachment_Fragment\n\t| Attachment_VideoAttachment_Fragment;\n\nexport type BaseAuthorizedUserFragment = {\n\t__typename?: \"AuthorizedUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tuserId: string;\n\temail?: string | null;\n\trole: AuthorizedUserRoles;\n};\n\nexport type BaseInvoiceFragment = {\n\t__typename?: \"Invoice\";\n\tid: string;\n\tcreatedAt: number;\n\tstatus: InvoiceStatuses;\n\tnumber: string;\n\tdueDate?: number | null;\n\temailAddress?: string | null;\n\tfetchInvoiceToken: string;\n\tcurrentPlan: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\tformattedPrice: string;\n\t\tbaseCurrency: Currencies;\n\t};\n\tmember?: {\n\t\t__typename?: \"Member\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername?: string | null;\n\t} | null;\n};\n\nexport type BaseLedgerAccountFragment = {\n\t__typename?: \"LedgerAccount\";\n\tid: string;\n\ttransferFee?: number | null;\n\tbalanceCaches: {\n\t\t__typename?: \"BalanceCacheConnection\";\n\t\tnodes?: Array<{\n\t\t\t__typename?: \"BalanceCache\";\n\t\t\tbalance: number;\n\t\t\tpendingBalance: number;\n\t\t\tcurrency: Currencies;\n\t\t} | null> | null;\n\t};\n};\n\nexport type BasePublicPlanFragment = {\n\t__typename?: \"PublicPlan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock?: number | null;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n};\n\nexport type BasePlanFragment = {\n\t__typename?: \"Plan\";\n\tid: string;\n\tbaseCurrency: Currencies;\n\trawRenewalPrice: number;\n\trawInitialPrice: number;\n\tinitialPriceDue: number;\n\tcreatedAt: number;\n\tupdatedAt: number;\n\tbillingPeriod?: number | null;\n\ttrialPeriodDays?: number | null;\n\texpirationDays?: number | null;\n\tunlimitedStock: boolean;\n\tpaymentLinkDescription?: string | null;\n\treleaseMethod: ReleaseMethod;\n\tstock: number;\n\tvisibility: Visibility;\n\tplanType: PlanTypes;\n\ttitle: string;\n\tdescription?: string | null;\n\tname?: string | null;\n\tformattedPrice: string;\n\tformattedBillingPeriod?: string | null;\n};\n\nexport type BaseReceiptFragment = {\n\t__typename?: \"Receipt\";\n\tid: string;\n\tsettledUsdAmount?: number | null;\n\tbillingReason?: string | null;\n\tlast4?: string | null;\n\tcurrency?: Currencies | null;\n\tstatus?: ReceiptStatus | null;\n\tcreatedAt: number;\n\ttotal?: number | null;\n\tbrand?: string | null;\n\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\tpaymentMethodType?: string | null;\n\tdisputeAlertedAt?: number | null;\n\tfinalAmount: number;\n\tpresentedFinalAmount?: number | null;\n\tpresentedSettledUsdAmount?: number | null;\n\trefundedAmount?: number | null;\n\tfriendlyStatus: FriendlyReceiptStatus;\n\tfailureMessage?: string | null;\n\trefundable: boolean;\n\tretryable: boolean;\n\tpaidAt?: number | null;\n\tamountAfterFees: number;\n\tchargeSkippedPriceTooLow: boolean;\n\tlastPaymentAttempt?: number | null;\n\tautoRefunded: boolean;\n\ttotalUsdAmount?: number | null;\n\tmostRecentRiskScore?: number | null;\n\taddress?: {\n\t\t__typename?: \"Address\";\n\t\tname?: string | null;\n\t\tline1?: string | null;\n\t\tline2?: string | null;\n\t\tcity?: string | null;\n\t\tstate?: string | null;\n\t\tpostalCode?: string | null;\n\t\tcountry?: string | null;\n\t} | null;\n\tmember?: {\n\t\t__typename?: \"CompanyMember\";\n\t\theader: string;\n\t\tuser?: {\n\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\tid: string;\n\t\t\tusername: string;\n\t\t\tname?: string | null;\n\t\t\temail?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tcountryName?: string | null;\n\t\t} | null;\n\t\timageSrcset: {\n\t\t\t__typename?: \"ImgSrcset\";\n\t\t\toriginal: string;\n\t\t\tdouble: string;\n\t\t\tisVideo: boolean;\n\t\t};\n\t} | null;\n\tplan?: {\n\t\t__typename?: \"Plan\";\n\t\tid: string;\n\t\ttitle: string;\n\t\tformattedPrice: string;\n\t\tinitialPrice: number;\n\t\trenewalPrice: number;\n\t\tpaymentLinkDescription?: string | null;\n\t} | null;\n\tmembership?: {\n\t\t__typename?: \"Membership\";\n\t\tid: string;\n\t\tstatus: MembershipStatus;\n\t} | null;\n\tpromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tamountOff: number;\n\t\tbaseCurrency: Currencies;\n\t\tpromoType: PromoTypes;\n\t\tnumberOfIntervals?: number | null;\n\t} | null;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BaseUserFragment = {\n\t__typename?: \"User\";\n\tid: string;\n\temail?: string | null;\n\tname?: string | null;\n\tusername: string;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasePublicProfileUserFragment = {\n\t__typename?: \"PublicProfileUser\";\n\tid: string;\n\tname?: string | null;\n\tusername: string;\n\tphoneVerified: boolean;\n\tcity?: string | null;\n\tcountry?: string | null;\n\tprofilePicture?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type BasicCourseFragment = {\n\t__typename?: \"Course\";\n\tcertificateAfterCompletionEnabled?: boolean | null;\n\tcoverImage?: string | null;\n\tdescription?: string | null;\n\tid: string;\n\tlanguage: Languages;\n\trequireCompletingLessonsInOrder: boolean;\n\ttagline?: string | null;\n\ttitle?: string | null;\n\tvideoProtectionEnabled: boolean;\n\tchapters: Array<{\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t}>;\n};\n\nexport type BasicCourseChapterFragment = {\n\t__typename?: \"Chapter\";\n\tid: string;\n\ttitle: string;\n\torder: number;\n\tlessons: Array<{\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tcontent?: string | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t}>;\n};\n\nexport type BasicCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tcontent?: string | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n};\n\nexport type CompanyFragmentFragment = {\n\t__typename?: \"PublicCompany\";\n\tid: string;\n\ttitle: string;\n\troute: string;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tbannerImage?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n};\n\nexport type ExperienceFragmentFragment = {\n\t__typename?: \"CustomPrivate\";\n\tid: string;\n\tname?: string | null;\n\tdescription?: string | null;\n\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type PublicExperienceFragmentFragment = {\n\t__typename?: \"PublicExperience\";\n\tid: string;\n\tname: string;\n\tdescription?: string | null;\n\tlogo?:\n\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t| null;\n\tapp: {\n\t\t__typename?: \"PublicApp\";\n\t\tid: string;\n\t\tname: string;\n\t\ticon?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ForumPostFragmentFragment = {\n\t__typename?: \"ForumPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tmentionedUserIds: Array<string>;\n\tparentId?: string | null;\n\tviewCount?: number | null;\n\tisPinned: boolean;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type FullCourseLessonFragment = {\n\t__typename?: \"Lesson\";\n\tid: string;\n\tlessonType: LessonTypes;\n\ttitle: string;\n\torder: number;\n\tvisibility: LessonVisibilities;\n\tcontent?: string | null;\n\tdaysFromCourseStartUntilUnlock?: number | null;\n\tmuxAsset?: {\n\t\t__typename?: \"MuxAsset\";\n\t\tid: string;\n\t\tmuxAssetId?: string | null;\n\t\tplaybackId?: string | null;\n\t\tsignedPlaybackId?: string | null;\n\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\tsignedVideoPlaybackToken?: string | null;\n\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\tdurationSeconds?: number | null;\n\t\tstatus: MuxAssetStatuses;\n\t\tfinishedUploadingAt?: number | null;\n\t} | null;\n\tassessmentQuestions: Array<{\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t}>;\n\tattachments: {\n\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\tnodes?: Array<\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null\n\t\t> | null;\n\t};\n\tmainPdf?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n};\n\nexport type CourseMuxAssetFragment = {\n\t__typename?: \"MuxAsset\";\n\tid: string;\n\tmuxAssetId?: string | null;\n\tplaybackId?: string | null;\n\tsignedPlaybackId?: string | null;\n\tsignedThumbnailPlaybackToken?: string | null;\n\tsignedVideoPlaybackToken?: string | null;\n\tsignedStoryboardPlaybackToken?: string | null;\n\tdurationSeconds?: number | null;\n\tstatus: MuxAssetStatuses;\n\tfinishedUploadingAt?: number | null;\n};\n\nexport type CourseAssessmentQuestionFragment = {\n\t__typename?: \"AssessmentQuestion\";\n\tid: string;\n\tcorrectAnswer: string;\n\torder: number;\n\tquestionText: string;\n\tquestionType: CoursesAssessmentQuestionTypes;\n\timage?:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| null;\n\toptions: Array<{\n\t\t__typename?: \"AssessmentQuestionOption\";\n\t\tid: string;\n\t\tisCorrect: boolean;\n\t\toptionText: string;\n\t\torder: number;\n\t}>;\n};\n\nexport type BaseCompanyMemberFragment = {\n\t__typename?: \"CompanyMember\";\n\tid: string;\n\tcreatedAt: number;\n\tupdatedAtMs: string;\n\tjoinedAt: number;\n\tstatus: MemberStatuses;\n\tphone?: string | null;\n\taccessLevel: AccessLevel;\n\ttotalSpent: number;\n\tusdTotalSpent: string;\n\tmrr: string;\n\tuser?: {\n\t\t__typename?: \"CompanyMemberUser\";\n\t\tid: string;\n\t\temail?: string | null;\n\t\tname?: string | null;\n\t\tusername: string;\n\t} | null;\n\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n};\n\nexport type MessageFragment = {\n\t__typename?: \"DmsPost\";\n\tid: string;\n\tcreatedAt: string;\n\tupdatedAt: string;\n\tcontent?: string | null;\n\trichContent?: string | null;\n\tisDeleted: boolean;\n\tisEdited: boolean;\n\tisPinned: boolean;\n\tisEveryoneMentioned: boolean;\n\tmentionedUserIds: Array<string>;\n\tmessageType: DmsPostTypes;\n\treplyingToPostId?: string | null;\n\tviewCount?: number | null;\n\tattachments: Array<\n\t\t| {\n\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t\t| {\n\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsourceUrl?: string | null;\n\t\t  }\n\t>;\n\tuser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tphoneVerified: boolean;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type BasePromoCodeFragment = {\n\t__typename?: \"PromoCode\";\n\tid: string;\n\tcode?: string | null;\n\tpromoType: PromoTypes;\n\tduration?: PromoDurations | null;\n\tcreatedAt: number;\n\texpirationDatetime?: number | null;\n\tbaseCurrency: Currencies;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals?: number | null;\n\tstatus: PromoCodeStatus;\n\tstock: number;\n\tunlimitedStock: boolean;\n\tuses: number;\n\tonePerCustomer: boolean;\n\tchurnedUsersOnly: boolean;\n\tnewUsersOnly: boolean;\n\taccessPass?: { __typename?: \"AccessPass\"; id: string; title: string } | null;\n};\n\nexport type BasePublicPromoCodeFragment = {\n\t__typename?: \"PublicPromoCode\";\n\tid: string;\n\tcode: string;\n\tcreatedAt: number;\n\tpromoType: PromoTypes;\n\tbaseCurrency: Currencies;\n\tduration: PromoDurations;\n\tamountOff: number;\n\tdiscountOff: string;\n\texistingMembershipsOnly: boolean;\n\tnumberOfIntervals: number;\n\tisPopupPromo: boolean;\n};\n\nexport type BaseWebhookFragment = {\n\t__typename?: \"Webhook\";\n\tid: string;\n\turl: string;\n\tapiVersion: ApiVersion;\n\tcreatedAt: number;\n\tenabled: boolean;\n\tevents: Array<WebhookEvent>;\n\tresourceId: string;\n\twebhookSecret: string;\n};\n\nexport type CreateAccessPassMutationVariables = Exact<{\n\tinput: CreateAccessPassInput;\n}>;\n\nexport type CreateAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAccessPass?: {\n\t\t__typename?: \"AccessPass\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\troute: string;\n\t\ttitle: string;\n\t\theadline?: string | null;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\tactiveUsersCount: number;\n\t\treviewsAverage: number;\n\t\tcreatorPitch?: string | null;\n\t\tupdatedAtMs: string;\n\t\tshowOffers: boolean;\n\t\tredirectPurchaseUrl?: string | null;\n\t\tcustomCta: CustomCtas;\n\t\tcustomCtaUrl?: string | null;\n\t\tglobalAffiliatePercentage?: number | null;\n\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\tmemberAffiliatePercentage?: number | null;\n\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\tshowMemberCount: boolean;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAccessPassMutationVariables = Exact<{\n\tinput: DeleteAccessPassInput;\n}>;\n\nexport type DeleteAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAccessPass?: boolean | null;\n};\n\nexport type GetAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\taccessPass: {\n\t\t__typename?: \"PublicAccessPass\";\n\t\theadline?: string | null;\n\t\treviewsAverage: number;\n\t\tid: string;\n\t\ttitle: string;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\troute: string;\n\t\tactiveUsersCount: number;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\townerUser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tgalleryImages: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type UpdateAccessPassMutationVariables = Exact<{\n\tinput: UpdateAccessPassInput;\n}>;\n\nexport type UpdateAccessPassMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAccessPass?: {\n\t\t__typename?: \"AccessPass\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\troute: string;\n\t\ttitle: string;\n\t\theadline?: string | null;\n\t\tshortenedDescription?: string | null;\n\t\tverified: boolean;\n\t\tvisibility: Visibility;\n\t\tactiveUsersCount: number;\n\t\treviewsAverage: number;\n\t\tcreatorPitch?: string | null;\n\t\tupdatedAtMs: string;\n\t\tshowOffers: boolean;\n\t\tredirectPurchaseUrl?: string | null;\n\t\tcustomCta: CustomCtas;\n\t\tcustomCtaUrl?: string | null;\n\t\tglobalAffiliatePercentage?: number | null;\n\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\tmemberAffiliatePercentage?: number | null;\n\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\tshowMemberCount: boolean;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type CheckIfUserHasAccessToAccessPassQueryVariables = Exact<{\n\taccessPassId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToAccessPassQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToAccessPass: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CheckIfUserHasAccessToCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToCompany: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CheckIfUserHasAccessToExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tuserId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type CheckIfUserHasAccessToExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\thasAccessToExperience: {\n\t\t__typename?: \"HasAccessResult\";\n\t\thasAccess: boolean;\n\t\taccessLevel: AccessLevel;\n\t};\n};\n\nexport type CreateAffiliateMutationVariables = Exact<{\n\tinput: CreateAffiliateInput;\n}>;\n\nexport type CreateAffiliateMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAffiliate?: {\n\t\t__typename?: \"Affiliate\";\n\t\tid: string;\n\t\tstatus?: Status | null;\n\t\tactiveMembersCount: number;\n\t\taffiliateType?: AffiliateTypes | null;\n\t\ttotalPlanCount: number;\n\t\ttotalReferralEarnings: string;\n\t\ttotalReferrals: number;\n\t\ttotalRevenue: string;\n\t\tuserAccount: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type GetAffiliateQueryVariables = Exact<{\n\taffiliateId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAffiliateQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taffiliate: {\n\t\t\t__typename?: \"Affiliate\";\n\t\t\tid: string;\n\t\t\tstatus?: Status | null;\n\t\t\tactiveMembersCount: number;\n\t\t\taffiliateType?: AffiliateTypes | null;\n\t\t\ttotalPlanCount: number;\n\t\t\ttotalReferralEarnings: string;\n\t\t\ttotalReferrals: number;\n\t\t\ttotalRevenue: string;\n\t\t\tuserAccount: {\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t\tphoneVerified: boolean;\n\t\t\t\tcity?: string | null;\n\t\t\t\tcountry?: string | null;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListAffiliatesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<AffiliatesSortableColumns>;\n}>;\n\nexport type ListAffiliatesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taffiliates: {\n\t\t\t__typename?: \"AffiliateConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Affiliate\";\n\t\t\t\tid: string;\n\t\t\t\tstatus?: Status | null;\n\t\t\t\tactiveMembersCount: number;\n\t\t\t\taffiliateType?: AffiliateTypes | null;\n\t\t\t\ttotalPlanCount: number;\n\t\t\t\ttotalReferralEarnings: string;\n\t\t\t\ttotalReferrals: number;\n\t\t\t\ttotalRevenue: string;\n\t\t\t\tuserAccount: {\n\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\tcity?: string | null;\n\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type UpdateAffiliateMutationVariables = Exact<{\n\tinput: UpdateAffiliateInput;\n}>;\n\nexport type UpdateAffiliateMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAffiliate?: {\n\t\t__typename?: \"Affiliate\";\n\t\tid: string;\n\t\tstatus?: Status | null;\n\t\tactiveMembersCount: number;\n\t\taffiliateType?: AffiliateTypes | null;\n\t\ttotalPlanCount: number;\n\t\ttotalReferralEarnings: string;\n\t\ttotalReferrals: number;\n\t\ttotalRevenue: string;\n\t\tuserAccount: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type CreateAppBuildMutationVariables = Exact<{\n\tinput: CreateAppBuildInput;\n}>;\n\nexport type CreateAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAppBuild?: {\n\t\t__typename?: \"AppBuild\";\n\t\tid: string;\n\t\tcreatedAt: number;\n\t\tfileUrl: string;\n\t\tchecksum: string;\n\t\tplatform: AppBuildPlatforms;\n\t\treviewMessage?: string | null;\n\t\tsupportedAppViewTypes: Array<AppViewTypes>;\n\t\tstatus: AppBuildStatuses;\n\t} | null;\n};\n\nexport type CreateAppMutationVariables = Exact<{\n\tinput: CreateAppInput;\n}>;\n\nexport type CreateAppMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateApp?: {\n\t\t__typename?: \"App\";\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tstatus: AppStatuses;\n\t\tusingDefaultIcon: boolean;\n\t\tbaseUrl?: string | null;\n\t\tbaseDevUrl?: string | null;\n\t\texperiencePath?: string | null;\n\t\tdiscoverPath?: string | null;\n\t\tdashboardPath?: string | null;\n\t\tapiKeys: {\n\t\t\t__typename?: \"PrivateApiKeyConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PrivateApiKey\";\n\t\t\t\tid: string;\n\t\t\t\ttoken: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t} | null> | null;\n\t\t};\n\t\tagentUsers: {\n\t\t\t__typename?: \"UserConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"User\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t} | null> | null;\n\t\t};\n\t\tcompany: { __typename?: \"PublicCompany\"; id: string };\n\t\taccessPass: { __typename?: \"AccessPass\"; id: string };\n\t\ticon?:\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetAppQueryVariables = Exact<{\n\tappId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAppQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tapp: {\n\t\t\t__typename?: \"App\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\tdescription?: string | null;\n\t\t\tstatus: AppStatuses;\n\t\t\tusingDefaultIcon: boolean;\n\t\t\tbaseUrl?: string | null;\n\t\t\tbaseDevUrl?: string | null;\n\t\t\texperiencePath?: string | null;\n\t\t\tdiscoverPath?: string | null;\n\t\t\tdashboardPath?: string | null;\n\t\t\tstats?: {\n\t\t\t\t__typename?: \"PublicAppStats\";\n\t\t\t\tdau: number;\n\t\t\t\tmau: number;\n\t\t\t\ttimeSpentLast24HoursInSeconds: number;\n\t\t\t\twau: number;\n\t\t\t} | null;\n\t\t\tapiKeys: {\n\t\t\t\t__typename?: \"PrivateApiKeyConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"PrivateApiKey\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttoken: string;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t\tagentUsers: {\n\t\t\t\t__typename?: \"UserConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"User\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t\taccessPass: {\n\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\tid: string;\n\t\t\t\tmarketplaceStatus: MarketplaceStatuses;\n\t\t\t\tactiveMembershipsCount: number;\n\t\t\t\tmarketplaceCategory?: {\n\t\t\t\t\t__typename?: \"MarketplaceCategory\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t} | null;\n\t\t\t};\n\t\t\ticon?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type ListAppsQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListAppsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tapps: {\n\t\t\t__typename?: \"AppConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"App\";\n\t\t\t\tid: string;\n\t\t\t\tname: string;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tstatus: AppStatuses;\n\t\t\t\tusingDefaultIcon: boolean;\n\t\t\t\tbaseUrl?: string | null;\n\t\t\t\tbaseDevUrl?: string | null;\n\t\t\t\texperiencePath?: string | null;\n\t\t\t\tdiscoverPath?: string | null;\n\t\t\t\tdashboardPath?: string | null;\n\t\t\t\tstats?: {\n\t\t\t\t\t__typename?: \"PublicAppStats\";\n\t\t\t\t\tdau: number;\n\t\t\t\t\tmau: number;\n\t\t\t\t\ttimeSpentLast24HoursInSeconds: number;\n\t\t\t\t\twau: number;\n\t\t\t\t} | null;\n\t\t\t\taccessPass: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmarketplaceStatus: MarketplaceStatuses;\n\t\t\t\t};\n\t\t\t\ticon?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type PromoteAppBuildMutationVariables = Exact<{\n\tinput: PromoteAppBuildToProductionInput;\n}>;\n\nexport type PromoteAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tpromoteAppBuildToProduction?: boolean | null;\n};\n\nexport type UnassignAppBuildMutationVariables = Exact<{\n\tinput: UnassignProductionAppBuildInput;\n}>;\n\nexport type UnassignAppBuildMutation = {\n\t__typename?: \"PublicMutation\";\n\tunassignProductionAppBuild?: boolean | null;\n};\n\nexport type UpdateAppPermissionsMutationVariables = Exact<{\n\tinput: UpdateAppPermissionRequirementsInput;\n}>;\n\nexport type UpdateAppPermissionsMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateAppPermissionRequirements?: boolean | null;\n};\n\nexport type UpdateAppMutationVariables = Exact<{\n\tinput: UpdateAppInput;\n}>;\n\nexport type UpdateAppMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateApp?: boolean | null;\n};\n\nexport type GetAttachmentQueryVariables = Exact<{\n\tid: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetAttachmentQuery = {\n\t__typename?: \"PublicQuery\";\n\tattachment:\n\t\t| {\n\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\tduration?: number | null;\n\t\t\t\twaveformUrl?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tblurhash?: string | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  }\n\t\t| {\n\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\theight?: number | null;\n\t\t\t\twidth?: number | null;\n\t\t\t\tduration?: number | null;\n\t\t\t\taspectRatio?: number | null;\n\t\t\t\tid: string;\n\t\t\t\tsignedId?: string | null;\n\t\t\t\tanalyzed: boolean;\n\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\tfilename?: string | null;\n\t\t\t\tcontentType?: string | null;\n\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t  };\n};\n\nexport type ProcessAttachmentMutationVariables = Exact<{\n\tinput: AnalyzeAttachmentInput;\n}>;\n\nexport type ProcessAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaAnalyzeAttachment?: boolean | null;\n};\n\nexport type UploadMediaMutationVariables = Exact<{\n\tinput: DirectUploadInput;\n}>;\n\nexport type UploadMediaMutation = {\n\t__typename?: \"PublicMutation\";\n\tmediaDirectUpload?: {\n\t\t__typename?: \"DirectUpload\";\n\t\tid: string;\n\t\theaders: { [key: string]: any };\n\t\tuploadUrl?: string | null;\n\t\tmultipartUploadId?: string | null;\n\t\tmultipartUploadUrls?: Array<{\n\t\t\t__typename?: \"MultipartUrl\";\n\t\t\tpartNumber: number;\n\t\t\turl: string;\n\t\t}> | null;\n\t} | null;\n};\n\nexport type GetCompanyLedgerAccountQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tledgerAccount: {\n\t\t\t__typename?: \"LedgerAccount\";\n\t\t\tid: string;\n\t\t\ttransferFee?: number | null;\n\t\t\tbalanceCaches: {\n\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\tnodes?: Array<{\n\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\tbalance: number;\n\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t} | null> | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type GetCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany: {\n\t\t__typename?: \"PublicCompany\";\n\t\tindustryType?: IndustryTypes | null;\n\t\tbusinessType?: BusinessTypes | null;\n\t\tid: string;\n\t\ttitle: string;\n\t\troute: string;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tbannerImage?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type GetMemberQueryVariables = Exact<{\n\tcompanyMemberId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetMemberQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmember: {\n\t\t\t__typename?: \"CompanyMember\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAtMs: string;\n\t\t\tjoinedAt: number;\n\t\t\tstatus: MemberStatuses;\n\t\t\tphone?: string | null;\n\t\t\taccessLevel: AccessLevel;\n\t\t\ttotalSpent: number;\n\t\t\tusdTotalSpent: string;\n\t\t\tmrr: string;\n\t\t\tuser?: {\n\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername: string;\n\t\t\t} | null;\n\t\t\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n\t\t};\n\t} | null;\n};\n\nexport type ListAccessPassesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tvisibility?: InputMaybe<VisibilityFilter>;\n\torder?: InputMaybe<AccessPassOrder>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tconditions?: InputMaybe<Array<AccessPassConditions> | AccessPassConditions>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\taccessPassTypes?: InputMaybe<Array<AccessPassTypes> | AccessPassTypes>;\n}>;\n\nexport type ListAccessPassesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\taccessPasses: {\n\t\t\t__typename?: \"AccessPassConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\troute: string;\n\t\t\t\ttitle: string;\n\t\t\t\theadline?: string | null;\n\t\t\t\tshortenedDescription?: string | null;\n\t\t\t\tverified: boolean;\n\t\t\t\tvisibility: Visibility;\n\t\t\t\tactiveUsersCount: number;\n\t\t\t\treviewsAverage: number;\n\t\t\t\tcreatorPitch?: string | null;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tshowOffers: boolean;\n\t\t\t\tredirectPurchaseUrl?: string | null;\n\t\t\t\tcustomCta: CustomCtas;\n\t\t\t\tcustomCtaUrl?: string | null;\n\t\t\t\tglobalAffiliatePercentage?: number | null;\n\t\t\t\tglobalAffiliateStatus: GlobalAffiliateStatuses;\n\t\t\t\tmemberAffiliatePercentage?: number | null;\n\t\t\t\tmemberAffiliateStatus: GlobalAffiliateStatuses;\n\t\t\t\tshowMemberCount: boolean;\n\t\t\t\tlogo?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t\tbannerImage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListAuthorizedUsersQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListAuthorizedUsersQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tauthorizedUsers: Array<{\n\t\t\t__typename?: \"AuthorizedUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tuserId: string;\n\t\t\temail?: string | null;\n\t\t\trole: AuthorizedUserRoles;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListMembersQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<MembersSortableColumns>;\n\tfilters?: InputMaybe<MembersFiltersInput>;\n}>;\n\nexport type ListMembersQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmembers: {\n\t\t\t__typename?: \"CompanyMemberConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"CompanyMember\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tjoinedAt: number;\n\t\t\t\tstatus: MemberStatuses;\n\t\t\t\tphone?: string | null;\n\t\t\t\taccessLevel: AccessLevel;\n\t\t\t\ttotalSpent: number;\n\t\t\t\tusdTotalSpent: string;\n\t\t\t\tmrr: string;\n\t\t\t\tuser?: {\n\t\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t} | null;\n\t\t\t\timageSrcset: { __typename?: \"ImgSrcset\"; original: string };\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListMembershipsQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<MembershipsSortableColumns>;\n\tfilters?: InputMaybe<MembershipsFiltersInput>;\n}>;\n\nexport type ListMembershipsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tmemberships: {\n\t\t\t__typename?: \"MembershipConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Membership\";\n\t\t\t\tid: string;\n\t\t\t\tstatus: MembershipStatus;\n\t\t\t\tcreatedAt: number;\n\t\t\t\texpiresAt?: number | null;\n\t\t\t\tcanceledAt?: number | null;\n\t\t\t\ttotalSpend: number;\n\t\t\t\tcancelationReason?: string | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername?: string | null;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t} | null;\n\t\t\t\tplan: { __typename?: \"Plan\"; id: string };\n\t\t\t\taccessPass: { __typename?: \"AccessPass\"; id: string; title: string };\n\t\t\t\tpromoCode?: { __typename?: \"PromoCode\"; code?: string | null } | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListPlansQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfilter?: InputMaybe<PlanFilters>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListPlansQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tplans: {\n\t\t\t__typename?: \"PlanConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\trawRenewalPrice: number;\n\t\t\t\trawInitialPrice: number;\n\t\t\t\tinitialPriceDue: number;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tupdatedAt: number;\n\t\t\t\tbillingPeriod?: number | null;\n\t\t\t\ttrialPeriodDays?: number | null;\n\t\t\t\texpirationDays?: number | null;\n\t\t\t\tunlimitedStock: boolean;\n\t\t\t\tpaymentLinkDescription?: string | null;\n\t\t\t\treleaseMethod: ReleaseMethod;\n\t\t\t\tstock: number;\n\t\t\t\tvisibility: Visibility;\n\t\t\t\tplanType: PlanTypes;\n\t\t\t\ttitle: string;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tformattedBillingPeriod?: string | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\troute: string;\n\t\t\t\t\tlogo?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListWaitlistEntriesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\torder?: InputMaybe<EntriesSortableColumns>;\n\tfilters?: InputMaybe<EntriesFiltersInput>;\n}>;\n\nexport type ListWaitlistEntriesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tentries: {\n\t\t\t__typename?: \"EntryConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Entry\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tstatus: EntryStatus;\n\t\t\t\tcreatedAt?: number | null;\n\t\t\t\tupdatedAtMs: string;\n\t\t\t\tuser: {\n\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername: string;\n\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t\tplan?: { __typename?: \"Plan\"; id: string; title: string } | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t\tcustomFieldResponses?: Array<{\n\t\t\t\t\t__typename?: \"CustomFieldResponse\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tquestion: string;\n\t\t\t\t\tanswer: string;\n\t\t\t\t}> | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type CreateAssessmentQuestionMutationVariables = Exact<{\n\tinput: CreateAssessmentQuestionInput;\n}>;\n\nexport type CreateAssessmentQuestionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateAssessmentQuestion?: {\n\t\t__typename?: \"AssessmentQuestion\";\n\t\tid: string;\n\t\tcorrectAnswer: string;\n\t\torder: number;\n\t\tquestionText: string;\n\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\timage?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t\toptions: Array<{\n\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\tid: string;\n\t\t\tisCorrect: boolean;\n\t\t\toptionText: string;\n\t\t\torder: number;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateChapterMutationVariables = Exact<{\n\tinput: CreateChapterInput;\n}>;\n\nexport type CreateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateCourseMutationVariables = Exact<{\n\tinput: CreateCourseInput;\n}>;\n\nexport type CreateCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type CreateLessonMutationVariables = Exact<{\n\tinput: CreateLessonInput;\n}>;\n\nexport type CreateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type DeleteAssessmentQuestionImageMutationVariables = Exact<{\n\tinput: DeleteAssessmentQuestionImageInput;\n}>;\n\nexport type DeleteAssessmentQuestionImageMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteAssessmentQuestionImage?: boolean | null;\n};\n\nexport type DeleteChapterMutationVariables = Exact<{\n\tinput: DeleteChapterInput;\n}>;\n\nexport type DeleteChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteChapter?: boolean | null;\n};\n\nexport type DeleteLessonAttachmentMutationVariables = Exact<{\n\tinput: DeleteLessonAttachmentInput;\n}>;\n\nexport type DeleteLessonAttachmentMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLessonAttachment?: boolean | null;\n};\n\nexport type DeleteLessonMutationVariables = Exact<{\n\tinput: DeleteLessonInput;\n}>;\n\nexport type DeleteLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteLesson?: boolean | null;\n};\n\nexport type GetCourseQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetCourseQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\tcoverImage?: string | null;\n\t\tdescription?: string | null;\n\t\tid: string;\n\t\tlanguage: Languages;\n\t\trequireCompletingLessonsInOrder: boolean;\n\t\ttagline?: string | null;\n\t\ttitle?: string | null;\n\t\tvideoProtectionEnabled: boolean;\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonType: LessonTypes;\n\t\t\t\ttitle: string;\n\t\t\t\torder: number;\n\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\tcontent?: string | null;\n\t\t\t\tmuxAsset?: {\n\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type GetLessonQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n\tlessonId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetLessonQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tlesson?: {\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tcontent?: string | null;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t\tassessmentQuestions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\t\tid: string;\n\t\t\t\tcorrectAnswer: string;\n\t\t\t\torder: number;\n\t\t\t\tquestionText: string;\n\t\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\t\timage?:\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null;\n\t\t\t\toptions: Array<{\n\t\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tisCorrect: boolean;\n\t\t\t\t\toptionText: string;\n\t\t\t\t\torder: number;\n\t\t\t\t}>;\n\t\t\t}>;\n\t\t\tattachments: {\n\t\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\t\tnodes?: Array<\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t  }\n\t\t\t\t\t| null\n\t\t\t\t> | null;\n\t\t\t};\n\t\t\tmainPdf?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetUserLessonInteractionsQueryVariables = Exact<{\n\tcourseId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserLessonInteractionsQuery = {\n\t__typename?: \"PublicQuery\";\n\tcourse?: {\n\t\t__typename?: \"Course\";\n\t\tchapters: Array<{\n\t\t\t__typename?: \"Chapter\";\n\t\t\tid: string;\n\t\t\tlessons: Array<{\n\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\tid: string;\n\t\t\t\tlessonInteraction?: {\n\t\t\t\t\t__typename?: \"LessonInteraction\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcompleted: boolean;\n\t\t\t\t\tcreatedAt: number;\n\t\t\t\t} | null;\n\t\t\t}>;\n\t\t}>;\n\t} | null;\n};\n\nexport type ListCoursesForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tid: string;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\texperience: {\n\t\t\t\t\t__typename?: \"PublicExperience\";\n\t\t\t\t\tid: string;\n\t\t\t\t\taccessPasses: Array<{\n\t\t\t\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t}>;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListCoursesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListCoursesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tcourses: {\n\t\t\t__typename?: \"CourseConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Course\";\n\t\t\t\tcertificateAfterCompletionEnabled?: boolean | null;\n\t\t\t\tcoverImage?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tid: string;\n\t\t\t\tlanguage: Languages;\n\t\t\t\trequireCompletingLessonsInOrder: boolean;\n\t\t\t\ttagline?: string | null;\n\t\t\t\ttitle?: string | null;\n\t\t\t\tvideoProtectionEnabled: boolean;\n\t\t\t\tchapters: Array<{\n\t\t\t\t\t__typename?: \"Chapter\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\torder: number;\n\t\t\t\t\tlessons: Array<{\n\t\t\t\t\t\t__typename?: \"Lesson\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tlessonType: LessonTypes;\n\t\t\t\t\t\ttitle: string;\n\t\t\t\t\t\torder: number;\n\t\t\t\t\t\tvisibility: LessonVisibilities;\n\t\t\t\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\t\tmuxAsset?: {\n\t\t\t\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\t\t\t\tplaybackId?: string | null;\n\t\t\t\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t\t\t\t} | null;\n\t\t\t\t\t}>;\n\t\t\t\t}>;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MarkLessonAsCompletedMutationVariables = Exact<{\n\tinput: MarkLessonAsCompletedInput;\n}>;\n\nexport type MarkLessonAsCompletedMutation = {\n\t__typename?: \"PublicMutation\";\n\tmarkLessonAsCompleted?: boolean | null;\n};\n\nexport type MoveCourseMutationVariables = Exact<{\n\tinput: MoveCourseInput;\n}>;\n\nexport type MoveCourseMutation = {\n\t__typename?: \"PublicMutation\";\n\tmoveCourse?: boolean | null;\n};\n\nexport type UpdateChapterOrderMutationVariables = Exact<{\n\tinput: UpdateChapterOrderInput;\n}>;\n\nexport type UpdateChapterOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapterOrder?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateChapterMutationVariables = Exact<{\n\tinput: UpdateChapterInput;\n}>;\n\nexport type UpdateChapterMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateChapter?: {\n\t\t__typename?: \"Chapter\";\n\t\tid: string;\n\t\ttitle: string;\n\t\torder: number;\n\t\tlessons: Array<{\n\t\t\t__typename?: \"Lesson\";\n\t\t\tid: string;\n\t\t\tlessonType: LessonTypes;\n\t\t\ttitle: string;\n\t\t\torder: number;\n\t\t\tvisibility: LessonVisibilities;\n\t\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\t\tcontent?: string | null;\n\t\t\tmuxAsset?: {\n\t\t\t\t__typename?: \"MuxAsset\";\n\t\t\t\tid: string;\n\t\t\t\tmuxAssetId?: string | null;\n\t\t\t\tplaybackId?: string | null;\n\t\t\t\tsignedPlaybackId?: string | null;\n\t\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\t\tdurationSeconds?: number | null;\n\t\t\t\tstatus: MuxAssetStatuses;\n\t\t\t\tfinishedUploadingAt?: number | null;\n\t\t\t} | null;\n\t\t}>;\n\t} | null;\n};\n\nexport type UpdateLessonOrderMutationVariables = Exact<{\n\tinput: UpdateLessonOrderInput;\n}>;\n\nexport type UpdateLessonOrderMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLessonOrder?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type UpdateLessonMutationVariables = Exact<{\n\tinput: UpdateLessonInput;\n}>;\n\nexport type UpdateLessonMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateLesson?: {\n\t\t__typename?: \"Lesson\";\n\t\tid: string;\n\t\tlessonType: LessonTypes;\n\t\ttitle: string;\n\t\torder: number;\n\t\tvisibility: LessonVisibilities;\n\t\tcontent?: string | null;\n\t\tdaysFromCourseStartUntilUnlock?: number | null;\n\t\tmuxAsset?: {\n\t\t\t__typename?: \"MuxAsset\";\n\t\t\tid: string;\n\t\t\tmuxAssetId?: string | null;\n\t\t\tplaybackId?: string | null;\n\t\t\tsignedPlaybackId?: string | null;\n\t\t\tsignedThumbnailPlaybackToken?: string | null;\n\t\t\tsignedVideoPlaybackToken?: string | null;\n\t\t\tsignedStoryboardPlaybackToken?: string | null;\n\t\t\tdurationSeconds?: number | null;\n\t\t\tstatus: MuxAssetStatuses;\n\t\t\tfinishedUploadingAt?: number | null;\n\t\t} | null;\n\t\tassessmentQuestions: Array<{\n\t\t\t__typename?: \"AssessmentQuestion\";\n\t\t\tid: string;\n\t\t\tcorrectAnswer: string;\n\t\t\torder: number;\n\t\t\tquestionText: string;\n\t\t\tquestionType: CoursesAssessmentQuestionTypes;\n\t\t\timage?:\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null;\n\t\t\toptions: Array<{\n\t\t\t\t__typename?: \"AssessmentQuestionOption\";\n\t\t\t\tid: string;\n\t\t\t\tisCorrect: boolean;\n\t\t\t\toptionText: string;\n\t\t\t\torder: number;\n\t\t\t}>;\n\t\t}>;\n\t\tattachments: {\n\t\t\t__typename?: \"AttachmentInterfaceConnection\";\n\t\t\tnodes?: Array<\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| {\n\t\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\t\theight?: number | null;\n\t\t\t\t\t\twidth?: number | null;\n\t\t\t\t\t\tduration?: number | null;\n\t\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t  }\n\t\t\t\t| null\n\t\t\t> | null;\n\t\t};\n\t\tmainPdf?:\n\t\t\t| {\n\t\t\t\t\t__typename: \"AudioAttachment\";\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\twaveformUrl?: string | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"ImageAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tblurhash?: string | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename: \"VideoAttachment\";\n\t\t\t\t\theight?: number | null;\n\t\t\t\t\twidth?: number | null;\n\t\t\t\t\tduration?: number | null;\n\t\t\t\t\taspectRatio?: number | null;\n\t\t\t\t\tid: string;\n\t\t\t\t\tsignedId?: string | null;\n\t\t\t\t\tanalyzed: boolean;\n\t\t\t\t\tbyteSizeV2?: string | null;\n\t\t\t\t\tfilename?: string | null;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tpreview: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t\t\tsource: { __typename?: \"AttachmentSource\"; url: string };\n\t\t\t  }\n\t\t\t| null;\n\t} | null;\n};\n\nexport type GetExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tupsellType?: UpsellTypes | null;\n\t\tid: string;\n\t\tname: string;\n\t\tdescription?: string | null;\n\t\tupsellPlan?: {\n\t\t\t__typename?: \"PublicPlan\";\n\t\t\tid: string;\n\t\t\tbaseCurrency: Currencies;\n\t\t\trawRenewalPrice: number;\n\t\t\trawInitialPrice: number;\n\t\t\tinitialPriceDue: number;\n\t\t\tcreatedAt: number;\n\t\t\tupdatedAt: number;\n\t\t\tbillingPeriod?: number | null;\n\t\t\ttrialPeriodDays?: number | null;\n\t\t\texpirationDays?: number | null;\n\t\t\tunlimitedStock: boolean;\n\t\t\tpaymentLinkDescription?: string | null;\n\t\t\treleaseMethod: ReleaseMethod;\n\t\t\tstock?: number | null;\n\t\t\tvisibility: Visibility;\n\t\t\tplanType: PlanTypes;\n\t\t} | null;\n\t\tlogo?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tapp: {\n\t\t\t__typename?: \"PublicApp\";\n\t\t\tid: string;\n\t\t\tname: string;\n\t\t\ticon?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t\tcompany: {\n\t\t\t__typename?: \"PublicCompany\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\troute: string;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t\tbannerImage?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type ListAccessPassesForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListAccessPassesForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\texperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\texperienceId: string;\n\t\taccessPasses: Array<{\n\t\t\t__typename?: \"PublicAccessPass\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t\tshortenedDescription?: string | null;\n\t\t\tverified: boolean;\n\t\t\tvisibility: Visibility;\n\t\t\troute: string;\n\t\t\tactiveUsersCount: number;\n\t\t\tlogo?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t}>;\n\t};\n};\n\nexport type ListExperiencesQueryVariables = Exact<{\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\taccessPassId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\tappId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n\tonAccessPass?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListExperiencesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\texperiencesV2: {\n\t\t\t__typename?: \"ExperienceInterfaceConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"CustomPrivate\";\n\t\t\t\tid: string;\n\t\t\t\tname?: string | null;\n\t\t\t\tdescription?: string | null;\n\t\t\t\tlogo?: { __typename?: \"ImgSrcset\"; sourceUrl: string } | null;\n\t\t\t\tapp: {\n\t\t\t\t\t__typename?: \"PublicApp\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tname: string;\n\t\t\t\t\ticon?:\n\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t| null;\n\t\t\t\t};\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t};\n\t} | null;\n};\n\nexport type ListUsersForExperienceQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tdirection?: InputMaybe<Direction>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tsearchQuery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n}>;\n\nexport type ListUsersForExperienceQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicExperience: {\n\t\t__typename?: \"PublicExperience\";\n\t\tusers?: {\n\t\t\t__typename?: \"PublicProfileUserConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\tid: string;\n\t\t\t\tusername: string;\n\t\t\t\tprofilePicture?:\n\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t| null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t};\n\t\t} | null;\n\t};\n};\n\nexport type CreateForumPostMutationVariables = Exact<{\n\tinput: CreateForumPostInput;\n}>;\n\nexport type CreateForumPostMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateForumPost?: {\n\t\t__typename?: \"ForumPost\";\n\t\tid: string;\n\t\tcreatedAt: string;\n\t\tupdatedAt: string;\n\t\tcontent?: string | null;\n\t\trichContent?: string | null;\n\t\tisDeleted: boolean;\n\t\tisEdited: boolean;\n\t\tmentionedUserIds: Array<string>;\n\t\tparentId?: string | null;\n\t\tviewCount?: number | null;\n\t\tisPinned: boolean;\n\t\tattachments: Array<\n\t\t\t| {\n\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t  }\n\t\t>;\n\t\tuser: {\n\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\tid: string;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tphoneVerified: boolean;\n\t\t\tcity?: string | null;\n\t\t\tcountry?: string | null;\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t} | null;\n};\n\nexport type FindOrCreateForumMutationVariables = Exact<{\n\tinput: CreateForumInput;\n}>;\n\nexport type FindOrCreateForumMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateForum?: { __typename?: \"Experience\"; id: string; link: string } | null;\n};\n\nexport type ListForumPostsFromForumQueryVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListForumPostsFromForumQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| { __typename?: \"DmsPost\" }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"ForumPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tparentId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type CreateInvoiceMutationVariables = Exact<{\n\tinput: CreateInvoiceInput;\n}>;\n\nexport type CreateInvoiceMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateInvoice?: {\n\t\t__typename?: \"CreateInvoicePayload\";\n\t\tcheckoutJobId?: string | null;\n\t\tinvoice?: {\n\t\t\t__typename?: \"Invoice\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tstatus: InvoiceStatuses;\n\t\t\tnumber: string;\n\t\t\tdueDate?: number | null;\n\t\t\temailAddress?: string | null;\n\t\t\tfetchInvoiceToken: string;\n\t\t\tcurrentPlan: {\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t};\n\t\t\tmember?: {\n\t\t\t\t__typename?: \"Member\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername?: string | null;\n\t\t\t} | null;\n\t\t} | null;\n\t} | null;\n};\n\nexport type GetInvoiceQueryVariables = Exact<{\n\tinvoiceId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetInvoiceQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tinvoice: {\n\t\t\t__typename?: \"Invoice\";\n\t\t\tid: string;\n\t\t\tcreatedAt: number;\n\t\t\tstatus: InvoiceStatuses;\n\t\t\tnumber: string;\n\t\t\tdueDate?: number | null;\n\t\t\temailAddress?: string | null;\n\t\t\tfetchInvoiceToken: string;\n\t\t\tcurrentPlan: {\n\t\t\t\t__typename?: \"Plan\";\n\t\t\t\tid: string;\n\t\t\t\tformattedPrice: string;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t};\n\t\t\tmember?: {\n\t\t\t\t__typename?: \"Member\";\n\t\t\t\tid: string;\n\t\t\t\temail?: string | null;\n\t\t\t\tname?: string | null;\n\t\t\t\tusername?: string | null;\n\t\t\t} | null;\n\t\t};\n\t} | null;\n};\n\nexport type ListInvoicesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListInvoicesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tinvoices: {\n\t\t\t__typename?: \"InvoiceConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Invoice\";\n\t\t\t\tid: string;\n\t\t\t\tcreatedAt: number;\n\t\t\t\tstatus: InvoiceStatuses;\n\t\t\t\tnumber: string;\n\t\t\t\tdueDate?: number | null;\n\t\t\t\temailAddress?: string | null;\n\t\t\t\tfetchInvoiceToken: string;\n\t\t\t\tcurrentPlan: {\n\t\t\t\t\t__typename?: \"Plan\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tformattedPrice: string;\n\t\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\t};\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"Member\";\n\t\t\t\t\tid: string;\n\t\t\t\t\temail?: string | null;\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tusername?: string | null;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type FindOrCreateChatMutationVariables = Exact<{\n\tinput: CreateChatInput;\n}>;\n\nexport type FindOrCreateChatMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateChat?: { __typename?: \"Experience\"; id: string; link: string } | null;\n};\n\nexport type ListDirectMessageConversationsQueryVariables = Exact<{\n\tbeforeTimestamp?: InputMaybe<Scalars[\"BigInt\"][\"input\"]>;\n\tlimit?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tquery?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tstatus?: InputMaybe<DmsFeedMemberStatuses>;\n\tunread?: InputMaybe<Scalars[\"Boolean\"][\"input\"]>;\n}>;\n\nexport type ListDirectMessageConversationsQuery = {\n\t__typename?: \"PublicQuery\";\n\tmyDmsChannelsV2: Array<{\n\t\t__typename?: \"DmsChannel\";\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tisPinned: boolean;\n\t\tcustomName?: string | null;\n\t\tisGroupChat: boolean;\n\t\tisUnread: boolean;\n\t\tfeedMembers: Array<{\n\t\t\t__typename?: \"FeedMember\";\n\t\t\tusername: string;\n\t\t\tid: string;\n\t\t}>;\n\t\tlastMessage?: {\n\t\t\t__typename?: \"Post\";\n\t\t\tcontent?: string | null;\n\t\t\tuserId: string;\n\t\t} | null;\n\t}>;\n};\n\nexport type ListMessagesFromChatQueryVariables = Exact<{\n\tchatExperienceId?: InputMaybe<Scalars[\"ID\"][\"input\"]>;\n}>;\n\nexport type ListMessagesFromChatQuery = {\n\t__typename?: \"PublicQuery\";\n\tfeedPosts?: {\n\t\t__typename?: \"FeedPostsResponse\";\n\t\tposts: Array<\n\t\t\t| { __typename?: \"ChatFeed\" }\n\t\t\t| { __typename?: \"DmsFeed\" }\n\t\t\t| { __typename?: \"DmsFeedMember\" }\n\t\t\t| {\n\t\t\t\t\t__typename?: \"DmsPost\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcreatedAt: string;\n\t\t\t\t\tupdatedAt: string;\n\t\t\t\t\tcontent?: string | null;\n\t\t\t\t\trichContent?: string | null;\n\t\t\t\t\tisDeleted: boolean;\n\t\t\t\t\tisEdited: boolean;\n\t\t\t\t\tisPinned: boolean;\n\t\t\t\t\tisEveryoneMentioned: boolean;\n\t\t\t\t\tmentionedUserIds: Array<string>;\n\t\t\t\t\tmessageType: DmsPostTypes;\n\t\t\t\t\treplyingToPostId?: string | null;\n\t\t\t\t\tviewCount?: number | null;\n\t\t\t\t\tattachments: Array<\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"AudioAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"ImageAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"OtherAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t| {\n\t\t\t\t\t\t\t\t__typename?: \"VideoAttachment\";\n\t\t\t\t\t\t\t\tid: string;\n\t\t\t\t\t\t\t\tcontentType?: string | null;\n\t\t\t\t\t\t\t\tsourceUrl?: string | null;\n\t\t\t\t\t\t  }\n\t\t\t\t\t>;\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename?: \"PublicProfileUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tphoneVerified: boolean;\n\t\t\t\t\t\tcity?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tprofilePicture?:\n\t\t\t\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t\t\t\t| null;\n\t\t\t\t\t};\n\t\t\t  }\n\t\t\t| { __typename?: \"ForumFeed\" }\n\t\t\t| { __typename?: \"ForumPost\" }\n\t\t\t| { __typename?: \"LivestreamFeed\" }\n\t\t\t| { __typename?: \"MutedUser\" }\n\t\t\t| { __typename?: \"PublicLivestreamFeed\" }\n\t\t\t| { __typename?: \"Reaction\" }\n\t\t\t| { __typename?: \"ReactionCount\" }\n\t\t>;\n\t} | null;\n};\n\nexport type SendDirectMessageToUserMutationVariables = Exact<{\n\ttoUserIdOrUsername: Scalars[\"ID\"][\"input\"];\n\tmessage: Scalars[\"String\"][\"input\"];\n\tattachments?: InputMaybe<Array<AttachmentInput> | AttachmentInput>;\n}>;\n\nexport type SendDirectMessageToUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendMessage?: string | null;\n};\n\nexport type SendMessageToChatMutationVariables = Exact<{\n\texperienceId: Scalars[\"ID\"][\"input\"];\n\tmessage: Scalars[\"String\"][\"input\"];\n\tattachments?: InputMaybe<Array<AttachmentInput> | AttachmentInput>;\n}>;\n\nexport type SendMessageToChatMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendMessage?: string | null;\n};\n\nexport type SendPushNotificationMutationVariables = Exact<{\n\tinput: SendNotificationInput;\n}>;\n\nexport type SendPushNotificationMutation = {\n\t__typename?: \"PublicMutation\";\n\tsendNotification?: boolean | null;\n};\n\nexport type ChargeUserMutationVariables = Exact<{\n\tinput: ChargeUserInput;\n}>;\n\nexport type ChargeUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tchargeUser?: {\n\t\t__typename?: \"ChargeUserResponse\";\n\t\tstatus: ChargeUserResponseStatus;\n\t\tinAppPurchase?: {\n\t\t\t__typename?: \"CheckoutSession\";\n\t\t\tid: string;\n\t\t\tplanId: string;\n\t\t} | null;\n\t} | null;\n};\n\nexport type CreateCheckoutSessionMutationVariables = Exact<{\n\tinput: CreateCheckoutSessionInput;\n}>;\n\nexport type CreateCheckoutSessionMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCheckoutSession?: {\n\t\t__typename?: \"CheckoutSession\";\n\t\tid: string;\n\t\tplanId: string;\n\t} | null;\n};\n\nexport type ListReceiptsForCompanyQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfilter?: InputMaybe<ReceiptV2Filters>;\n}>;\n\nexport type ListReceiptsForCompanyQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\treceipts?: {\n\t\t\t__typename?: \"ReceiptConnection\";\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"Receipt\";\n\t\t\t\tid: string;\n\t\t\t\tsettledUsdAmount?: number | null;\n\t\t\t\tbillingReason?: string | null;\n\t\t\t\tlast4?: string | null;\n\t\t\t\tcurrency?: Currencies | null;\n\t\t\t\tstatus?: ReceiptStatus | null;\n\t\t\t\tcreatedAt: number;\n\t\t\t\ttotal?: number | null;\n\t\t\t\tbrand?: string | null;\n\t\t\t\tpaymentProcessor?: ReceiptPaymentProcessor | null;\n\t\t\t\tpaymentMethodType?: string | null;\n\t\t\t\tdisputeAlertedAt?: number | null;\n\t\t\t\tfinalAmount: number;\n\t\t\t\tpresentedFinalAmount?: number | null;\n\t\t\t\tpresentedSettledUsdAmount?: number | null;\n\t\t\t\trefundedAmount?: number | null;\n\t\t\t\tfriendlyStatus: FriendlyReceiptStatus;\n\t\t\t\tfailureMessage?: string | null;\n\t\t\t\trefundable: boolean;\n\t\t\t\tretryable: boolean;\n\t\t\t\tpaidAt?: number | null;\n\t\t\t\tamountAfterFees: number;\n\t\t\t\tchargeSkippedPriceTooLow: boolean;\n\t\t\t\tlastPaymentAttempt?: number | null;\n\t\t\t\tautoRefunded: boolean;\n\t\t\t\ttotalUsdAmount?: number | null;\n\t\t\t\tmostRecentRiskScore?: number | null;\n\t\t\t\taddress?: {\n\t\t\t\t\t__typename?: \"Address\";\n\t\t\t\t\tname?: string | null;\n\t\t\t\t\tline1?: string | null;\n\t\t\t\t\tline2?: string | null;\n\t\t\t\t\tcity?: string | null;\n\t\t\t\t\tstate?: string | null;\n\t\t\t\t\tpostalCode?: string | null;\n\t\t\t\t\tcountry?: string | null;\n\t\t\t\t} | null;\n\t\t\t\tmember?: {\n\t\t\t\t\t__typename?: \"CompanyMember\";\n\t\t\t\t\theader: string;\n\t\t\t\t\tuser?: {\n\t\t\t\t\t\t__typename?: \"CompanyMemberUser\";\n\t\t\t\t\t\tid: string;\n\t\t\t\t\t\tusername: string;\n\t\t\t\t\t\tname?: string | null;\n\t\t\t\t\t\temail?: string | null;\n\t\t\t\t\t\tcountry?: string | null;\n\t\t\t\t\t\tcountryName?: string | null;\n\t\t\t\t\t} | null;\n\t\t\t\t\timageSrcset: {\n\t\t\t\t\t\t__typename?: \"ImgSrcset\";\n\t\t\t\t\t\toriginal: string;\n\t\t\t\t\t\tdouble: string;\n\t\t\t\t\t\tisVideo: boolean;\n\t\t\t\t\t};\n\t\t\t\t} | null;\n\t\t\t\tplan?: {\n\t\t\t\t\t__typename?: \"Plan\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t\tformattedPrice: string;\n\t\t\t\t\tinitialPrice: number;\n\t\t\t\t\trenewalPrice: number;\n\t\t\t\t\tpaymentLinkDescription?: string | null;\n\t\t\t\t} | null;\n\t\t\t\tmembership?: {\n\t\t\t\t\t__typename?: \"Membership\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tstatus: MembershipStatus;\n\t\t\t\t} | null;\n\t\t\t\tpromoCode?: {\n\t\t\t\t\t__typename?: \"PromoCode\";\n\t\t\t\t\tid: string;\n\t\t\t\t\tcode?: string | null;\n\t\t\t\t\tamountOff: number;\n\t\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\t\tpromoType: PromoTypes;\n\t\t\t\t\tnumberOfIntervals?: number | null;\n\t\t\t\t} | null;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t} | null;\n\t} | null;\n};\n\nexport type PayUserMutationVariables = Exact<{\n\tinput: TransferFundsInput;\n}>;\n\nexport type PayUserMutation = {\n\t__typename?: \"PublicMutation\";\n\ttransferFunds?: boolean | null;\n};\n\nexport type CreatePromoCodeMutationVariables = Exact<{\n\tinput: CreatePromoCodeInput;\n}>;\n\nexport type CreatePromoCodeMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreatePromoCode?: {\n\t\t__typename?: \"PromoCode\";\n\t\tid: string;\n\t\tcode?: string | null;\n\t\tpromoType: PromoTypes;\n\t\tduration?: PromoDurations | null;\n\t\tcreatedAt: number;\n\t\texpirationDatetime?: number | null;\n\t\tbaseCurrency: Currencies;\n\t\tamountOff: number;\n\t\tdiscountOff: string;\n\t\texistingMembershipsOnly: boolean;\n\t\tnumberOfIntervals?: number | null;\n\t\tstatus: PromoCodeStatus;\n\t\tstock: number;\n\t\tunlimitedStock: boolean;\n\t\tuses: number;\n\t\tonePerCustomer: boolean;\n\t\tchurnedUsersOnly: boolean;\n\t\tnewUsersOnly: boolean;\n\t\taccessPass?: {\n\t\t\t__typename?: \"AccessPass\";\n\t\t\tid: string;\n\t\t\ttitle: string;\n\t\t} | null;\n\t} | null;\n};\n\nexport type DeletePromoCodeMutationVariables = Exact<{\n\tinput: DeletePromoCodeInput;\n}>;\n\nexport type DeletePromoCodeMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeletePromoCode?: boolean | null;\n};\n\nexport type GetPromoCodeQueryVariables = Exact<{\n\tcode: Scalars[\"String\"][\"input\"];\n\tplanId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetPromoCodeQuery = {\n\t__typename?: \"PublicQuery\";\n\tpromoCode: {\n\t\t__typename?: \"PublicPromoCode\";\n\t\tid: string;\n\t\tcode: string;\n\t\tcreatedAt: number;\n\t\tpromoType: PromoTypes;\n\t\tbaseCurrency: Currencies;\n\t\tduration: PromoDurations;\n\t\tamountOff: number;\n\t\tdiscountOff: string;\n\t\texistingMembershipsOnly: boolean;\n\t\tnumberOfIntervals: number;\n\t\tisPopupPromo: boolean;\n\t};\n};\n\nexport type ListPromoCodesQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tfilters?: InputMaybe<PromoCodeFilters>;\n}>;\n\nexport type ListPromoCodesQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\tpromoCodes: {\n\t\t\t__typename?: \"PromoCodeConnection\";\n\t\t\ttotalCount: number;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tstartCursor?: string | null;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\tendCursor?: string | null;\n\t\t\t};\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"PromoCode\";\n\t\t\t\tid: string;\n\t\t\t\tcode?: string | null;\n\t\t\t\tpromoType: PromoTypes;\n\t\t\t\tduration?: PromoDurations | null;\n\t\t\t\tcreatedAt: number;\n\t\t\t\texpirationDatetime?: number | null;\n\t\t\t\tbaseCurrency: Currencies;\n\t\t\t\tamountOff: number;\n\t\t\t\tdiscountOff: string;\n\t\t\t\texistingMembershipsOnly: boolean;\n\t\t\t\tnumberOfIntervals?: number | null;\n\t\t\t\tstatus: PromoCodeStatus;\n\t\t\t\tstock: number;\n\t\t\t\tunlimitedStock: boolean;\n\t\t\t\tuses: number;\n\t\t\t\tonePerCustomer: boolean;\n\t\t\t\tchurnedUsersOnly: boolean;\n\t\t\t\tnewUsersOnly: boolean;\n\t\t\t\taccessPass?: {\n\t\t\t\t\t__typename?: \"AccessPass\";\n\t\t\t\t\tid: string;\n\t\t\t\t\ttitle: string;\n\t\t\t\t} | null;\n\t\t\t} | null> | null;\n\t\t};\n\t} | null;\n};\n\nexport type BanUserMutationVariables = Exact<{\n\tinput: BanUserInput;\n}>;\n\nexport type BanUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tbanUser?: boolean | null;\n};\n\nexport type GetCurrentUserQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type GetCurrentUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tbio?: string | null;\n\t\t\tphoneVerified: boolean;\n\t\t\tbannerImage?: string | null;\n\t\t\tcreatedAt: number;\n\t\t\tdateOfBirthDay?: number | null;\n\t\t\tdateOfBirthMonth?: number | null;\n\t\t\tdateOfBirthYear?: number | null;\n\t\t\tid: string;\n\t\t\temail?: string | null;\n\t\t\tname?: string | null;\n\t\t\tusername: string;\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t\tprofilePicture?:\n\t\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t\t| null;\n\t\t};\n\t};\n};\n\nexport type GetUserLedgerAccountQueryVariables = Exact<{\n\t[key: string]: never;\n}>;\n\nexport type GetUserLedgerAccountQuery = {\n\t__typename?: \"PublicQuery\";\n\tviewer: {\n\t\t__typename?: \"Viewer\";\n\t\tuser: {\n\t\t\t__typename?: \"User\";\n\t\t\tledgerAccount: {\n\t\t\t\t__typename?: \"LedgerAccount\";\n\t\t\t\tid: string;\n\t\t\t\ttransferFee?: number | null;\n\t\t\t\tbalanceCaches: {\n\t\t\t\t\t__typename?: \"BalanceCacheConnection\";\n\t\t\t\t\tnodes?: Array<{\n\t\t\t\t\t\t__typename?: \"BalanceCache\";\n\t\t\t\t\t\tbalance: number;\n\t\t\t\t\t\tpendingBalance: number;\n\t\t\t\t\t\tcurrency: Currencies;\n\t\t\t\t\t} | null> | null;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type GetUserQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetUserQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tbio?: string | null;\n\t\tphoneVerified: boolean;\n\t\tcreatedAt: number;\n\t\tid: string;\n\t\tname?: string | null;\n\t\tusername: string;\n\t\tcity?: string | null;\n\t\tcountry?: string | null;\n\t\tbanner?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t\tuserStat?: {\n\t\t\t__typename?: \"UserStat\";\n\t\t\tmoneyEarned24Hours?: number | null;\n\t\t\tmoneyEarned30Days?: number | null;\n\t\t\tmoneyEarned7Days?: number | null;\n\t\t\tmoneyEarnedLifetime?: number | null;\n\t\t} | null;\n\t\tprofilePicture?:\n\t\t\t| { __typename?: \"AudioAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"ImageAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"OtherAttachment\"; sourceUrl?: string | null }\n\t\t\t| { __typename?: \"VideoAttachment\"; sourceUrl?: string | null }\n\t\t\t| null;\n\t};\n};\n\nexport type ListUserSocialsQueryVariables = Exact<{\n\tuserId: Scalars[\"ID\"][\"input\"];\n\tafter?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tbefore?: InputMaybe<Scalars[\"String\"][\"input\"]>;\n\tfirst?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n\tlast?: InputMaybe<Scalars[\"Int\"][\"input\"]>;\n}>;\n\nexport type ListUserSocialsQuery = {\n\t__typename?: \"PublicQuery\";\n\tpublicUser: {\n\t\t__typename?: \"PublicProfileUser\";\n\t\tsocialLinks: {\n\t\t\t__typename?: \"UserSocialLinksConnection\";\n\t\t\ttotalCount: number;\n\t\t\tnodes?: Array<{\n\t\t\t\t__typename?: \"UserSocialLinks\";\n\t\t\t\tid: string;\n\t\t\t\tprofilePic?: string | null;\n\t\t\t\turl: string;\n\t\t\t\tusername?: string | null;\n\t\t\t\twebsite: UserSocialLinkWebsites;\n\t\t\t\taccountId?: string | null;\n\t\t\t\tfullName?: string | null;\n\t\t\t\tverified: boolean;\n\t\t\t} | null> | null;\n\t\t\tpageInfo: {\n\t\t\t\t__typename?: \"PageInfo\";\n\t\t\t\tendCursor?: string | null;\n\t\t\t\thasNextPage: boolean;\n\t\t\t\thasPreviousPage: boolean;\n\t\t\t\tstartCursor?: string | null;\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport type MuteUserMutationVariables = Exact<{\n\tinput: CreateCompanyMutedUserInput;\n}>;\n\nexport type MuteUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateCompanyMutedUser?: boolean | null;\n};\n\nexport type UnbanUserMutationVariables = Exact<{\n\tinput: UnbanUserInput;\n}>;\n\nexport type UnbanUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tunbanUser?: boolean | null;\n};\n\nexport type UnmuteUserMutationVariables = Exact<{\n\tinput: DeleteCompanyMutedUserInput;\n}>;\n\nexport type UnmuteUserMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteCompanyMutedUser?: boolean | null;\n};\n\nexport type CreateWebhookMutationVariables = Exact<{\n\tinput: CreateWebhookInput;\n}>;\n\nexport type CreateWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tcreateWebhook?: {\n\t\t__typename?: \"Webhook\";\n\t\tid: string;\n\t\turl: string;\n\t\tapiVersion: ApiVersion;\n\t\tcreatedAt: number;\n\t\tenabled: boolean;\n\t\tevents: Array<WebhookEvent>;\n\t\tresourceId: string;\n\t\twebhookSecret: string;\n\t} | null;\n};\n\nexport type DeleteWebhookMutationVariables = Exact<{\n\tinput: DeleteWebhookInput;\n}>;\n\nexport type DeleteWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tdeleteWebhook?: boolean | null;\n};\n\nexport type GetWebhookQueryVariables = Exact<{\n\twebhookId: Scalars[\"ID\"][\"input\"];\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type GetWebhookQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\twebhook: {\n\t\t\t__typename?: \"Webhook\";\n\t\t\tid: string;\n\t\t\turl: string;\n\t\t\tapiVersion: ApiVersion;\n\t\t\tcreatedAt: number;\n\t\t\tenabled: boolean;\n\t\t\tevents: Array<WebhookEvent>;\n\t\t\tresourceId: string;\n\t\t\twebhookSecret: string;\n\t\t};\n\t} | null;\n};\n\nexport type ListWebhooksQueryVariables = Exact<{\n\tcompanyId: Scalars[\"ID\"][\"input\"];\n}>;\n\nexport type ListWebhooksQuery = {\n\t__typename?: \"PublicQuery\";\n\tcompany?: {\n\t\t__typename?: \"Company\";\n\t\twebhooks: Array<{\n\t\t\t__typename?: \"Webhook\";\n\t\t\tid: string;\n\t\t\turl: string;\n\t\t\tapiVersion: ApiVersion;\n\t\t\tcreatedAt: number;\n\t\t\tenabled: boolean;\n\t\t\tevents: Array<WebhookEvent>;\n\t\t\tresourceId: string;\n\t\t\twebhookSecret: string;\n\t\t}>;\n\t} | null;\n};\n\nexport type TestWebhookMutationVariables = Exact<{\n\tinput: TestWebhookV2Input;\n}>;\n\nexport type TestWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\ttestWebhookV2?: {\n\t\t__typename?: \"WebhookTestResult\";\n\t\tbody: { [key: string]: any };\n\t\tstatus: number;\n\t\tsuccess: boolean;\n\t} | null;\n};\n\nexport type UpdateWebhookMutationVariables = Exact<{\n\tinput: UpdateWebhookInput;\n}>;\n\nexport type UpdateWebhookMutation = {\n\t__typename?: \"PublicMutation\";\n\tupdateWebhook?: {\n\t\t__typename?: \"Webhook\";\n\t\tid: string;\n\t\turl: string;\n\t\tapiVersion: ApiVersion;\n\t\tcreatedAt: number;\n\t\tenabled: boolean;\n\t\tevents: Array<WebhookEvent>;\n\t\tresourceId: string;\n\t\twebhookSecret: string;\n\t} | null;\n};\n\nexport type Requester<C = {}> = <R, V>(\n\toperationId: string,\n\toperationName: string,\n\toperationType: \"query\" | \"mutation\",\n\tvars?: V,\n\toptions?: C,\n) => Promise<R>;\n\nexport type WithError<T> = T extends object ? T & { _error?: Error } : T;\nexport function carryErrors<Full, Extracted>(\n\tres: Full,\n\tdata: Extracted,\n): WithError<Extracted> {\n\tif (\n\t\ttypeof res === \"object\" &&\n\t\tres &&\n\t\t\"_error\" in res &&\n\t\tres._error &&\n\t\tres._error instanceof Error &&\n\t\ttypeof data === \"object\" &&\n\t\tdata\n\t) {\n\t\t(data as any)._error = res._error;\n\t}\n\treturn data as WithError<Extracted>;\n}\n\nexport function getSdk<C>(requester: Requester<C>) {\n\treturn {\n\t\taccessPasses: {\n\t\t\tcreateAccessPass(\n\t\t\t\tvariables: CreateAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAccessPassMutation[\"createAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAccessPassMutation,\n\t\t\t\t\tCreateAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:20ae526780e39f4766202cec9041775e39dcf12c6254d9ce3c80ceeed146ad9c\",\n\t\t\t\t\t\"createAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAccessPass));\n\t\t\t},\n\t\t\tdeleteAccessPass(\n\t\t\t\tvariables: DeleteAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteAccessPassMutation[\"deleteAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAccessPassMutation,\n\t\t\t\t\tDeleteAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cc4cb9f78f298bfc5067091adca56a07833d22f4011255aedd317a9c78b2a3ba\",\n\t\t\t\t\t\"deleteAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAccessPass));\n\t\t\t},\n\t\t\tgetAccessPass(\n\t\t\t\tvariables: GetAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAccessPassQuery[\"accessPass\"]>> {\n\t\t\t\treturn requester<GetAccessPassQuery, GetAccessPassQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fa2b3d0ff6975e2e05c1e649fb853892460355f2a4e9bd33a67ef9bcdf6ed686\",\n\t\t\t\t\t\"getAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.accessPass));\n\t\t\t},\n\t\t\tupdateAccessPass(\n\t\t\t\tvariables: UpdateAccessPassMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAccessPassMutation[\"updateAccessPass\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAccessPassMutation,\n\t\t\t\t\tUpdateAccessPassMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:45e0d72fec2c61a8763e7febcdfeea44c780fb657358614e5d6fa18d68b46aed\",\n\t\t\t\t\t\"updateAccessPass\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAccessPass));\n\t\t\t},\n\t\t},\n\t\taccess: {\n\t\t\tcheckIfUserHasAccessToAccessPass(\n\t\t\t\tvariables: CheckIfUserHasAccessToAccessPassQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQuery[\"hasAccessToAccessPass\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQuery,\n\t\t\t\t\tCheckIfUserHasAccessToAccessPassQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a5ee1715113ab68b87dcfd5b578b6c20d1ca1fe50d8c0e2ec43e462a9b86632d\",\n\t\t\t\t\t\"checkIfUserHasAccessToAccessPass\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToAccessPass));\n\t\t\t},\n\t\t\tcheckIfUserHasAccessToCompany(\n\t\t\t\tvariables: CheckIfUserHasAccessToCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CheckIfUserHasAccessToCompanyQuery[\"hasAccessToCompany\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToCompanyQuery,\n\t\t\t\t\tCheckIfUserHasAccessToCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b894321dc004894f993e91f5e7451554b0ae8af7da950a5c84ac69180599edc2\",\n\t\t\t\t\t\"checkIfUserHasAccessToCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToCompany));\n\t\t\t},\n\t\t\tcheckIfUserHasAccessToExperience(\n\t\t\t\tvariables: CheckIfUserHasAccessToExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQuery[\"hasAccessToExperience\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQuery,\n\t\t\t\t\tCheckIfUserHasAccessToExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b16d7fe717171fb936dfb6de679558e149f5070bbe25ade44e38af83c330ad71\",\n\t\t\t\t\t\"checkIfUserHasAccessToExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.hasAccessToExperience));\n\t\t\t},\n\t\t},\n\t\taffiliates: {\n\t\t\tcreateAffiliate(\n\t\t\t\tvariables: CreateAffiliateMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAffiliateMutation[\"createAffiliate\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAffiliateMutation,\n\t\t\t\t\tCreateAffiliateMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a8aab2d61c40493e5fe0c03979c9f252412d37ac4c4034d4dfc9391d4f71368d\",\n\t\t\t\t\t\"createAffiliate\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAffiliate));\n\t\t\t},\n\t\t\tgetAffiliate(\n\t\t\t\tvariables: GetAffiliateQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAffiliateQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetAffiliateQuery, GetAffiliateQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:0361bff066bcb4ec9d86ae9ce45d812b5b0978252fbeb347418e16c8d6c56de2\",\n\t\t\t\t\t\"getAffiliate\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAffiliates(\n\t\t\t\tvariables: ListAffiliatesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAffiliatesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAffiliatesQuery, ListAffiliatesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:85622f8b63f7b6e23dbaa6c04a58e3fb5e3237cb03fa112ee17c98ebf925285c\",\n\t\t\t\t\t\"listAffiliates\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tupdateAffiliate(\n\t\t\t\tvariables: UpdateAffiliateMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAffiliateMutation[\"updateAffiliate\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAffiliateMutation,\n\t\t\t\t\tUpdateAffiliateMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:781a4e1b84f64748e882eb8f5e09aa3962fdbafee01874b3eb96fe1fbb261f1d\",\n\t\t\t\t\t\"updateAffiliate\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAffiliate));\n\t\t\t},\n\t\t},\n\t\tapps: {\n\t\t\tcreateAppBuild(\n\t\t\t\tvariables: CreateAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAppBuildMutation[\"createAppBuild\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAppBuildMutation,\n\t\t\t\t\tCreateAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:221275dcd40898079c1e7bc1510b364a487581d6cdfc1a9524da74f2f82689cc\",\n\t\t\t\t\t\"createAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAppBuild));\n\t\t\t},\n\t\t\tcreateApp(\n\t\t\t\tvariables: CreateAppMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateAppMutation[\"createApp\"]>> {\n\t\t\t\treturn requester<CreateAppMutation, CreateAppMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:be663b827a8dabcf7b9cbd0f65e80972811c1bc86009cc6a420b66d8e1c36f40\",\n\t\t\t\t\t\"createApp\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createApp));\n\t\t\t},\n\t\t\tgetApp(\n\t\t\t\tvariables: GetAppQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAppQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetAppQuery, GetAppQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07248adff9447a8ddc20c810fbb780eddb10f9c3b4de9c2e8cc125de5735c9ef\",\n\t\t\t\t\t\"getApp\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistApps(\n\t\t\t\tvariables: ListAppsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAppsQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAppsQuery, ListAppsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:46bbea222f2bb22c7622d0554383c50246d97daf9dc92bb54790b6a330810628\",\n\t\t\t\t\t\"listApps\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tpromoteAppBuild(\n\t\t\t\tvariables: PromoteAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<PromoteAppBuildMutation[\"promoteAppBuildToProduction\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tPromoteAppBuildMutation,\n\t\t\t\t\tPromoteAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:dea1f52e9a4e332c258517b6bd0905ea8c2a738d861a9e9bb648f7ecead843a9\",\n\t\t\t\t\t\"promoteAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.promoteAppBuildToProduction));\n\t\t\t},\n\t\t\tunassignAppBuild(\n\t\t\t\tvariables: UnassignAppBuildMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<UnassignAppBuildMutation[\"unassignProductionAppBuild\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUnassignAppBuildMutation,\n\t\t\t\t\tUnassignAppBuildMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fb574bc621e2dee1d3bebddf5a6f3b438337778e9e66370a9dbe8163dc7c23bc\",\n\t\t\t\t\t\"unassignAppBuild\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.unassignProductionAppBuild));\n\t\t\t},\n\t\t\tupdateAppPermissions(\n\t\t\t\tvariables: UpdateAppPermissionsMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tUpdateAppPermissionsMutation[\"updateAppPermissionRequirements\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateAppPermissionsMutation,\n\t\t\t\t\tUpdateAppPermissionsMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:20a225127a6164553f5eebef17ac8447e8f8a4f220483f4922874def2a7fe423\",\n\t\t\t\t\t\"updateAppPermissions\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateAppPermissionRequirements));\n\t\t\t},\n\t\t\tupdateApp(\n\t\t\t\tvariables: UpdateAppMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateAppMutation[\"updateApp\"]>> {\n\t\t\t\treturn requester<UpdateAppMutation, UpdateAppMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:b8d41fdc2d5d3c0cd850bc4f8dedc81a3d65a59da3cc70b50397aaba2be3894a\",\n\t\t\t\t\t\"updateApp\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateApp));\n\t\t\t},\n\t\t},\n\t\tattachments: {\n\t\t\tgetAttachment(\n\t\t\t\tvariables: GetAttachmentQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetAttachmentQuery[\"attachment\"]>> {\n\t\t\t\treturn requester<GetAttachmentQuery, GetAttachmentQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07f48fb0c1292fda5a8dd5f54b5d1b637635a87b6012769819ebcf7795a045ba\",\n\t\t\t\t\t\"getAttachment\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.attachment));\n\t\t\t},\n\t\t\tprocessAttachment(\n\t\t\t\tvariables: ProcessAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ProcessAttachmentMutation[\"mediaAnalyzeAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tProcessAttachmentMutation,\n\t\t\t\t\tProcessAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:396c5803051b3c9bcedd3ce310505a4f57a6b94bc190e7142e897d9aa5036ece\",\n\t\t\t\t\t\"processAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaAnalyzeAttachment));\n\t\t\t},\n\t\t\tuploadMedia(\n\t\t\t\tvariables: UploadMediaMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UploadMediaMutation[\"mediaDirectUpload\"]>> {\n\t\t\t\treturn requester<UploadMediaMutation, UploadMediaMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a3d06ed16e52126d96aae83cad3400471246f37fc275e4c8f4836c98bf8e9d59\",\n\t\t\t\t\t\"uploadMedia\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.mediaDirectUpload));\n\t\t\t},\n\t\t},\n\t\tcompanies: {\n\t\t\tgetCompanyLedgerAccount(\n\t\t\t\tvariables: GetCompanyLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyLedgerAccountQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetCompanyLedgerAccountQuery,\n\t\t\t\t\tGetCompanyLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:38c83c1105b29a010208830b29d38af3d87a885b9c54a3da65d6dd2749128773\",\n\t\t\t\t\t\"getCompanyLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tgetCompany(\n\t\t\t\tvariables: GetCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetCompanyQuery, GetCompanyQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e640d46816020225ad7ec377936056cabb7e8e07a88ba376e926ba18aca1cc5c\",\n\t\t\t\t\t\"getCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tgetMember(\n\t\t\t\tvariables: GetMemberQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetMemberQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetMemberQuery, GetMemberQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e2628bcd1daff66d27443145965cc34f26a76da715d9781174316be703b0ac02\",\n\t\t\t\t\t\"getMember\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAccessPasses(\n\t\t\t\tvariables: ListAccessPassesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAccessPassesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListAccessPassesQuery, ListAccessPassesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d3c047dfcf88fae7603b04a3f46c9a7abd6638c13591ac64d7f86226a5edb438\",\n\t\t\t\t\t\"listAccessPasses\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistAuthorizedUsers(\n\t\t\t\tvariables: ListAuthorizedUsersQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAuthorizedUsersQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListAuthorizedUsersQuery,\n\t\t\t\t\tListAuthorizedUsersQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c8c7d8e926bba8ecd46f9976cc1ce265ac666570706606295931f19c622c50dc\",\n\t\t\t\t\t\"listAuthorizedUsers\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistMembers(\n\t\t\t\tvariables: ListMembersQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMembersQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListMembersQuery, ListMembersQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d71ca5f1a332e7b42f405eb284aaf5d8ba094c99fd6a9d5ac503dff9a927d301\",\n\t\t\t\t\t\"listMembers\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistMemberships(\n\t\t\t\tvariables: ListMembershipsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMembershipsQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListMembershipsQuery, ListMembershipsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cfa788e5edcaf72ae9cb749035cf7bca20fd380c7d0d548c02d6ae978262f5cf\",\n\t\t\t\t\t\"listMemberships\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistPlans(\n\t\t\t\tvariables: ListPlansQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListPlansQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListPlansQuery, ListPlansQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:51d610ed0e4994b2c6f3514f9f478fb301366adc33c3e09166b3de3801c9c26a\",\n\t\t\t\t\t\"listPlans\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistWaitlistEntries(\n\t\t\t\tvariables: ListWaitlistEntriesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListWaitlistEntriesQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListWaitlistEntriesQuery,\n\t\t\t\t\tListWaitlistEntriesQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:14e1c30b9e364214d378cdb0b8ebf929397295e3644ffc22205ebe915b79e79f\",\n\t\t\t\t\t\"listWaitlistEntries\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tcourses: {\n\t\t\tcreateAssessmentQuestion(\n\t\t\t\tvariables: CreateAssessmentQuestionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateAssessmentQuestionMutation[\"createAssessmentQuestion\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateAssessmentQuestionMutation,\n\t\t\t\t\tCreateAssessmentQuestionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:52902016f3a8cf2b819038945ded34a0caafd80c9a867403ca36451c39f56ac6\",\n\t\t\t\t\t\"createAssessmentQuestion\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createAssessmentQuestion));\n\t\t\t},\n\t\t\tcreateChapter(\n\t\t\t\tvariables: CreateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateChapterMutation[\"createChapter\"]>> {\n\t\t\t\treturn requester<CreateChapterMutation, CreateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:8ebe9533278b00eded622eef765baeebf70fccedcd5d60854f8777812da20311\",\n\t\t\t\t\t\"createChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChapter));\n\t\t\t},\n\t\t\tcreateCourse(\n\t\t\t\tvariables: CreateCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateCourseMutation[\"createCourse\"]>> {\n\t\t\t\treturn requester<CreateCourseMutation, CreateCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:41f957dfc0e147131265e62e4b5ae6f743256f6bf7a4e28e042a3469777e9c35\",\n\t\t\t\t\t\"createCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCourse));\n\t\t\t},\n\t\t\tcreateLesson(\n\t\t\t\tvariables: CreateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateLessonMutation[\"createLesson\"]>> {\n\t\t\t\treturn requester<CreateLessonMutation, CreateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:33069f4d2b756d6a9a2a486d0ac6d91272c9acbd9d3774c15e12d7b39f3df6f4\",\n\t\t\t\t\t\"createLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createLesson));\n\t\t\t},\n\t\t\tdeleteAssessmentQuestionImage(\n\t\t\t\tvariables: DeleteAssessmentQuestionImageMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation[\"deleteAssessmentQuestionImage\"]\n\t\t\t\t>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteAssessmentQuestionImageMutation,\n\t\t\t\t\tDeleteAssessmentQuestionImageMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:07563fb79b45fd9fbe7ef7d14923014e5f3407dae067d0393b84bd6724970aaa\",\n\t\t\t\t\t\"deleteAssessmentQuestionImage\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteAssessmentQuestionImage));\n\t\t\t},\n\t\t\tdeleteChapter(\n\t\t\t\tvariables: DeleteChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteChapterMutation[\"deleteChapter\"]>> {\n\t\t\t\treturn requester<DeleteChapterMutation, DeleteChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:021c10ea5b5f776e229d4c2cd25578b8aec3c869c898c747d4dcb889ddad32b6\",\n\t\t\t\t\t\"deleteChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteChapter));\n\t\t\t},\n\t\t\tdeleteLessonAttachment(\n\t\t\t\tvariables: DeleteLessonAttachmentMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<DeleteLessonAttachmentMutation[\"deleteLessonAttachment\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeleteLessonAttachmentMutation,\n\t\t\t\t\tDeleteLessonAttachmentMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:7af840d8ddbf664a04ec3da2283e9a540f68da24adedbe7a2af9718f1c70f10c\",\n\t\t\t\t\t\"deleteLessonAttachment\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLessonAttachment));\n\t\t\t},\n\t\t\tdeleteLesson(\n\t\t\t\tvariables: DeleteLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteLessonMutation[\"deleteLesson\"]>> {\n\t\t\t\treturn requester<DeleteLessonMutation, DeleteLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6be8fd89af64aec7db125bac7d67bad8530cc8f5b8ee98c879351acd59aa6fac\",\n\t\t\t\t\t\"deleteLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteLesson));\n\t\t\t},\n\t\t\tgetCourse(\n\t\t\t\tvariables: GetCourseQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCourseQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetCourseQuery, GetCourseQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5e81c304ac7c4c19b2d07ea7c2a32b2fd8998774bf90900a81999b9077b383a1\",\n\t\t\t\t\t\"getCourse\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetLesson(\n\t\t\t\tvariables: GetLessonQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetLessonQuery[\"course\"]>> {\n\t\t\t\treturn requester<GetLessonQuery, GetLessonQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:372989bc0ffb7ff3c36d1325f1af4115c06205e95378a2e344d91a857e732630\",\n\t\t\t\t\t\"getLesson\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tgetUserLessonInteractions(\n\t\t\t\tvariables: GetUserLessonInteractionsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLessonInteractionsQuery[\"course\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLessonInteractionsQuery,\n\t\t\t\t\tGetUserLessonInteractionsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6b12c8ccabe59b65d8869029d4e4e56ddbeac7256137e5e79012a3e33aa81523\",\n\t\t\t\t\t\"getUserLessonInteractions\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.course));\n\t\t\t},\n\t\t\tlistCoursesForCompany(\n\t\t\t\tvariables: ListCoursesForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForCompanyQuery,\n\t\t\t\t\tListCoursesForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:76dd2b0b09b6083392dcce8c1df423cc6e6eb290e58bdd2d830f50ef1a4828b3\",\n\t\t\t\t\t\"listCoursesForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistCoursesForExperience(\n\t\t\t\tvariables: ListCoursesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListCoursesForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListCoursesForExperienceQuery,\n\t\t\t\t\tListCoursesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:a579fee2663d841a23be014b234d89eadb097dac387722dfe9d0e87911a7598e\",\n\t\t\t\t\t\"listCoursesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t\tmarkLessonAsCompleted(\n\t\t\t\tvariables: MarkLessonAsCompletedMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<MarkLessonAsCompletedMutation[\"markLessonAsCompleted\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tMarkLessonAsCompletedMutation,\n\t\t\t\t\tMarkLessonAsCompletedMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:941178d021bd72247401d347d5dd969036579147777e0a754f5102cddc5074c7\",\n\t\t\t\t\t\"markLessonAsCompleted\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.markLessonAsCompleted));\n\t\t\t},\n\t\t\tmoveCourse(\n\t\t\t\tvariables: MoveCourseMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MoveCourseMutation[\"moveCourse\"]>> {\n\t\t\t\treturn requester<MoveCourseMutation, MoveCourseMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:ce7d38029113792bf1ff544db18f000732fed4db3ebc766767a367cef5691c2b\",\n\t\t\t\t\t\"moveCourse\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.moveCourse));\n\t\t\t},\n\t\t\tupdateChapterOrder(\n\t\t\t\tvariables: UpdateChapterOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterOrderMutation[\"updateChapterOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateChapterOrderMutation,\n\t\t\t\t\tUpdateChapterOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c749c5c4907afd39ab2d3f8c44b3e65c8c9928e0cf06f8687deaa40d144a0df6\",\n\t\t\t\t\t\"updateChapterOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapterOrder));\n\t\t\t},\n\t\t\tupdateChapter(\n\t\t\t\tvariables: UpdateChapterMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateChapterMutation[\"updateChapter\"]>> {\n\t\t\t\treturn requester<UpdateChapterMutation, UpdateChapterMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9fda8d867b07c1b31622cb73084523577519ca35822d8ce3938fa2b07efaf6e5\",\n\t\t\t\t\t\"updateChapter\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateChapter));\n\t\t\t},\n\t\t\tupdateLessonOrder(\n\t\t\t\tvariables: UpdateLessonOrderMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonOrderMutation[\"updateLessonOrder\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tUpdateLessonOrderMutation,\n\t\t\t\t\tUpdateLessonOrderMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:8ae83382f97b182c08bf5851e3bbed05fd8269856c00b82b5577939c00e39e43\",\n\t\t\t\t\t\"updateLessonOrder\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLessonOrder));\n\t\t\t},\n\t\t\tupdateLesson(\n\t\t\t\tvariables: UpdateLessonMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateLessonMutation[\"updateLesson\"]>> {\n\t\t\t\treturn requester<UpdateLessonMutation, UpdateLessonMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c872c79e5469f162f4de0f64ed6decc489cc3e05d66781a2f33ae1eef4d762bd\",\n\t\t\t\t\t\"updateLesson\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateLesson));\n\t\t\t},\n\t\t},\n\t\texperiences: {\n\t\t\tgetExperience(\n\t\t\t\tvariables: GetExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<GetExperienceQuery, GetExperienceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:61d7778965bc84e700a681ec856251c59070ebc6b0e00b6e5c91568df734db7e\",\n\t\t\t\t\t\"getExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistAccessPassesForExperience(\n\t\t\t\tvariables: ListAccessPassesForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListAccessPassesForExperienceQuery[\"experience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListAccessPassesForExperienceQuery,\n\t\t\t\t\tListAccessPassesForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:699621f62be7675bfaf9fc49cb6d7abfe244bf691aee274cb492036f0b59bddc\",\n\t\t\t\t\t\"listAccessPassesForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.experience));\n\t\t\t},\n\t\t\tlistExperiences(\n\t\t\t\tvariables: ListExperiencesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListExperiencesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListExperiencesQuery, ListExperiencesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6ca8515118d4710204bb2e32ea020bb98de8ea1cada4929ecfe7cae606cf6e79\",\n\t\t\t\t\t\"listExperiences\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistUsersForExperience(\n\t\t\t\tvariables: ListUsersForExperienceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUsersForExperienceQuery[\"publicExperience\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListUsersForExperienceQuery,\n\t\t\t\t\tListUsersForExperienceQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:85c827d8660dc2a97e8b930e213b83493ae132c00988e0f03e02c5dc99559a5a\",\n\t\t\t\t\t\"listUsersForExperience\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicExperience));\n\t\t\t},\n\t\t},\n\t\tforums: {\n\t\t\tcreateForumPost(\n\t\t\t\tvariables: CreateForumPostMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateForumPostMutation[\"createForumPost\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateForumPostMutation,\n\t\t\t\t\tCreateForumPostMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:e6253ed15def017eef4bc2e2f8b01ecd9cf480b5c54fffed439d0afe01a864f2\",\n\t\t\t\t\t\"createForumPost\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createForumPost));\n\t\t\t},\n\t\t\tfindOrCreateForum(\n\t\t\t\tvariables: FindOrCreateForumMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<FindOrCreateForumMutation[\"createForum\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tFindOrCreateForumMutation,\n\t\t\t\t\tFindOrCreateForumMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5219219796ebdeb29023d098bd9498cf8c64b3536dc9d42cbc4e19708e0b317d\",\n\t\t\t\t\t\"findOrCreateForum\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createForum));\n\t\t\t},\n\t\t\tlistForumPostsFromForum(\n\t\t\t\tvariables: ListForumPostsFromForumQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListForumPostsFromForumQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListForumPostsFromForumQuery,\n\t\t\t\t\tListForumPostsFromForumQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:97a7d797f3a5f6f83bf4628cc7c586d529b90e54c0a8e193493a55b4ad05df46\",\n\t\t\t\t\t\"listForumPostsFromForum\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t},\n\t\tinvoices: {\n\t\t\tcreateInvoice(\n\t\t\t\tvariables: CreateInvoiceMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateInvoiceMutation[\"createInvoice\"]>> {\n\t\t\t\treturn requester<CreateInvoiceMutation, CreateInvoiceMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:58c3f4ebbb92ebf44d07d781d8f27250f497516c0b492f1ad155ee4f00c64cca\",\n\t\t\t\t\t\"createInvoice\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createInvoice));\n\t\t\t},\n\t\t\tgetInvoice(\n\t\t\t\tvariables: GetInvoiceQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetInvoiceQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetInvoiceQuery, GetInvoiceQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d38c77f13bb55a0b427a0e5f5c5f4121c9f2679a7ac5b35a6c98af6d9e819702\",\n\t\t\t\t\t\"getInvoice\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistInvoices(\n\t\t\t\tvariables: ListInvoicesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListInvoicesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListInvoicesQuery, ListInvoicesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:3cb820ba6eab6d1557eb842140f5b54701c6046f51e663f8a12fdff7142f1941\",\n\t\t\t\t\t\"listInvoices\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tmessages: {\n\t\t\tfindOrCreateChat(\n\t\t\t\tvariables: FindOrCreateChatMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<FindOrCreateChatMutation[\"createChat\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tFindOrCreateChatMutation,\n\t\t\t\t\tFindOrCreateChatMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:f69684c08f79192b7a4722a3c24a347fd0074e04e1c940517e54b52a9c27f40c\",\n\t\t\t\t\t\"findOrCreateChat\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createChat));\n\t\t\t},\n\t\t\tlistDirectMessageConversations(\n\t\t\t\tvariables?: ListDirectMessageConversationsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<ListDirectMessageConversationsQuery[\"myDmsChannelsV2\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListDirectMessageConversationsQuery,\n\t\t\t\t\tListDirectMessageConversationsQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:ea4457aace3d29d8c376dd9de3629cee00d4a76ff0fc9b9d51b6ffeab1cc6ead\",\n\t\t\t\t\t\"listDirectMessageConversations\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.myDmsChannelsV2));\n\t\t\t},\n\t\t\tlistMessagesFromChat(\n\t\t\t\tvariables?: ListMessagesFromChatQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListMessagesFromChatQuery[\"feedPosts\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListMessagesFromChatQuery,\n\t\t\t\t\tListMessagesFromChatQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5fdbf50fe489888e5b0a98e9fe6170584bf47ab38f87d1e0b7fce8f523513894\",\n\t\t\t\t\t\"listMessagesFromChat\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.feedPosts));\n\t\t\t},\n\t\t\tsendDirectMessageToUser(\n\t\t\t\tvariables: SendDirectMessageToUserMutationVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendDirectMessageToUserMutation[\"sendMessage\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendDirectMessageToUserMutation,\n\t\t\t\t\tSendDirectMessageToUserMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:f538092a21961a949a75e07b02d58dc05666535c8c8e03aed867fd82d98a58d4\",\n\t\t\t\t\t\"sendDirectMessageToUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendMessage));\n\t\t\t},\n\t\t\tsendMessageToChat(\n\t\t\t\tvariables: SendMessageToChatMutationVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendMessageToChatMutation[\"sendMessage\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendMessageToChatMutation,\n\t\t\t\t\tSendMessageToChatMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:4c25b180736d2868e65ab97791a12bb22e80d2bc03f29ecba86ccd1d91da292c\",\n\t\t\t\t\t\"sendMessageToChat\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendMessage));\n\t\t\t},\n\t\t},\n\t\tnotifications: {\n\t\t\tsendPushNotification(\n\t\t\t\tvariables: SendPushNotificationMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<SendPushNotificationMutation[\"sendNotification\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tSendPushNotificationMutation,\n\t\t\t\t\tSendPushNotificationMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:6239cbdb659f0698ed81ca9533740337b4d2d44e25e22297188d7d1e1a7037d2\",\n\t\t\t\t\t\"sendPushNotification\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.sendNotification));\n\t\t\t},\n\t\t},\n\t\tpayments: {\n\t\t\tchargeUser(\n\t\t\t\tvariables: ChargeUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ChargeUserMutation[\"chargeUser\"]>> {\n\t\t\t\treturn requester<ChargeUserMutation, ChargeUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:2392cef9bb6e08d243f102a52c4a6a6e6bd9371e2fced2ad598b2dc14685af81\",\n\t\t\t\t\t\"chargeUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.chargeUser));\n\t\t\t},\n\t\t\tcreateCheckoutSession(\n\t\t\t\tvariables: CreateCheckoutSessionMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<\n\t\t\t\tWithError<CreateCheckoutSessionMutation[\"createCheckoutSession\"]>\n\t\t\t> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreateCheckoutSessionMutation,\n\t\t\t\t\tCreateCheckoutSessionMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:498eba2f4b9b6b8fe4ed5f93423af054ea1c4995bf2f3258089c40b68a4919e8\",\n\t\t\t\t\t\"createCheckoutSession\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCheckoutSession));\n\t\t\t},\n\t\t\tlistReceiptsForCompany(\n\t\t\t\tvariables: ListReceiptsForCompanyQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListReceiptsForCompanyQuery[\"company\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tListReceiptsForCompanyQuery,\n\t\t\t\t\tListReceiptsForCompanyQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:4b5163aa1e6398851da21ce465640243418d36bb26e7b1a87287cddcf677e6ca\",\n\t\t\t\t\t\"listReceiptsForCompany\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tpayUser(\n\t\t\t\tvariables: PayUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<PayUserMutation[\"transferFunds\"]>> {\n\t\t\t\treturn requester<PayUserMutation, PayUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d8cbac8b275a7c41e05ab4daa01084b0e54c31c6b5375261f8aee241e5f6c794\",\n\t\t\t\t\t\"payUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.transferFunds));\n\t\t\t},\n\t\t},\n\t\tpromoCodes: {\n\t\t\tcreatePromoCode(\n\t\t\t\tvariables: CreatePromoCodeMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreatePromoCodeMutation[\"createPromoCode\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tCreatePromoCodeMutation,\n\t\t\t\t\tCreatePromoCodeMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c80f3d5230cb85c4e47cd1521e607c1f58cf393dfc73fce813bc584acd3e0f4b\",\n\t\t\t\t\t\"createPromoCode\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createPromoCode));\n\t\t\t},\n\t\t\tdeletePromoCode(\n\t\t\t\tvariables: DeletePromoCodeMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeletePromoCodeMutation[\"deletePromoCode\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tDeletePromoCodeMutation,\n\t\t\t\t\tDeletePromoCodeMutationVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:bcd719e36f0a392a4aca1cd2bcaa758327cba282531dcf18220f24cc92d6210c\",\n\t\t\t\t\t\"deletePromoCode\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deletePromoCode));\n\t\t\t},\n\t\t\tgetPromoCode(\n\t\t\t\tvariables: GetPromoCodeQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetPromoCodeQuery[\"promoCode\"]>> {\n\t\t\t\treturn requester<GetPromoCodeQuery, GetPromoCodeQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:29fb69c7df1cb36af0db92cc3951cc84fbbaad8166733158667f0136483bb0ca\",\n\t\t\t\t\t\"getPromoCode\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.promoCode));\n\t\t\t},\n\t\t\tlistPromoCodes(\n\t\t\t\tvariables: ListPromoCodesQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListPromoCodesQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListPromoCodesQuery, ListPromoCodesQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:5722ed2369ad9f1c62eb2579de00b765a7b5857e9340f366fb5d6612fb97633f\",\n\t\t\t\t\t\"listPromoCodes\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t},\n\t\tusers: {\n\t\t\tbanUser(\n\t\t\t\tvariables: BanUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<BanUserMutation[\"banUser\"]>> {\n\t\t\t\treturn requester<BanUserMutation, BanUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cb1bc4d8fada30e5cecd68182f98129c24da6f252b60829e5b680b1c45b95be3\",\n\t\t\t\t\t\"banUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.banUser));\n\t\t\t},\n\t\t\tgetCurrentUser(\n\t\t\t\tvariables?: GetCurrentUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetCurrentUserQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<GetCurrentUserQuery, GetCurrentUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9f7cc9ff353a2778e55b674cfd5737a7dcaff19be9ac13d6f79aabd5d8ef69ff\",\n\t\t\t\t\t\"getCurrentUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUserLedgerAccount(\n\t\t\t\tvariables?: GetUserLedgerAccountQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserLedgerAccountQuery[\"viewer\"]>> {\n\t\t\t\treturn requester<\n\t\t\t\t\tGetUserLedgerAccountQuery,\n\t\t\t\t\tGetUserLedgerAccountQueryVariables\n\t\t\t\t>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:d7eeaf0a388395edb82220877e72a7fc91d1f06a6d89f1cfa5e56bb400d2aa49\",\n\t\t\t\t\t\"getUserLedgerAccount\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.viewer));\n\t\t\t},\n\t\t\tgetUser(\n\t\t\t\tvariables: GetUserQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetUserQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<GetUserQuery, GetUserQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c6cd0172ca06b30e54b818c216ccb00023ffa4d6392becd6fb80a5a0312b1b65\",\n\t\t\t\t\t\"getUser\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t\tlistUserSocials(\n\t\t\t\tvariables: ListUserSocialsQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListUserSocialsQuery[\"publicUser\"]>> {\n\t\t\t\treturn requester<ListUserSocialsQuery, ListUserSocialsQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:37ac821ca48a89c91a53f91cbba77d0ffa401807815a88e1e1d25819baf8d877\",\n\t\t\t\t\t\"listUserSocials\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.publicUser));\n\t\t\t},\n\t\t\tmuteUser(\n\t\t\t\tvariables: MuteUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<MuteUserMutation[\"createCompanyMutedUser\"]>> {\n\t\t\t\treturn requester<MuteUserMutation, MuteUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:57e050f6c8afa900a0e947157ee629d1435bfb8455ee0aebcc27d82d43ee26bb\",\n\t\t\t\t\t\"muteUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createCompanyMutedUser));\n\t\t\t},\n\t\t\tunbanUser(\n\t\t\t\tvariables: UnbanUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UnbanUserMutation[\"unbanUser\"]>> {\n\t\t\t\treturn requester<UnbanUserMutation, UnbanUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:fa0ff56a45a8dc977e12814ad25bee498fdb6adc280ce30722df8ff4f4c1a4d8\",\n\t\t\t\t\t\"unbanUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.unbanUser));\n\t\t\t},\n\t\t\tunmuteUser(\n\t\t\t\tvariables: UnmuteUserMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UnmuteUserMutation[\"deleteCompanyMutedUser\"]>> {\n\t\t\t\treturn requester<UnmuteUserMutation, UnmuteUserMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:9c1f64ede76760c37850648c4541d50186d28dd656e4f69dd94501ae3babf8c7\",\n\t\t\t\t\t\"unmuteUser\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteCompanyMutedUser));\n\t\t\t},\n\t\t},\n\t\twebhooks: {\n\t\t\tcreateWebhook(\n\t\t\t\tvariables: CreateWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<CreateWebhookMutation[\"createWebhook\"]>> {\n\t\t\t\treturn requester<CreateWebhookMutation, CreateWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:203020195489ea56d6c664b7c4483367ba438db78f5ab057ccb8bcb3d6804186\",\n\t\t\t\t\t\"createWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.createWebhook));\n\t\t\t},\n\t\t\tdeleteWebhook(\n\t\t\t\tvariables: DeleteWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<DeleteWebhookMutation[\"deleteWebhook\"]>> {\n\t\t\t\treturn requester<DeleteWebhookMutation, DeleteWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:84d542a9790c9ba9da706cee4cadeb8932fab37daf23775489066ca6f5ead1f2\",\n\t\t\t\t\t\"deleteWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.deleteWebhook));\n\t\t\t},\n\t\t\tgetWebhook(\n\t\t\t\tvariables: GetWebhookQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<GetWebhookQuery[\"company\"]>> {\n\t\t\t\treturn requester<GetWebhookQuery, GetWebhookQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:c8b6985c11fe9dafc0117d6ae57b27a8331427bf93844dbedf6376bc51800545\",\n\t\t\t\t\t\"getWebhook\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\tlistWebhooks(\n\t\t\t\tvariables: ListWebhooksQueryVariables,\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<ListWebhooksQuery[\"company\"]>> {\n\t\t\t\treturn requester<ListWebhooksQuery, ListWebhooksQueryVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:eef881aaf99c3cad84eb3b113552d3272712562ce13cc487b6a38c6099ee4498\",\n\t\t\t\t\t\"listWebhooks\",\n\t\t\t\t\t\"query\",\n\t\t\t\t\tvariables,\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.company));\n\t\t\t},\n\t\t\ttestWebhook(\n\t\t\t\tvariables: TestWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<TestWebhookMutation[\"testWebhookV2\"]>> {\n\t\t\t\treturn requester<TestWebhookMutation, TestWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:cc8b4c644a503d29ebb1c62f812b2292a83298813d5d1ce0a66f667d27039e4c\",\n\t\t\t\t\t\"testWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.testWebhookV2));\n\t\t\t},\n\t\t\tupdateWebhook(\n\t\t\t\tvariables: UpdateWebhookMutationVariables[\"input\"],\n\t\t\t\toptions?: C,\n\t\t\t): Promise<WithError<UpdateWebhookMutation[\"updateWebhook\"]>> {\n\t\t\t\treturn requester<UpdateWebhookMutation, UpdateWebhookMutationVariables>(\n\t\t\t\t\t\"whop-sdk-ts-server/sha256:362bc60c363078102712be7cd0483cfa5ed01a745046a041b98dc3846100eaf3\",\n\t\t\t\t\t\"updateWebhook\",\n\t\t\t\t\t\"mutation\",\n\t\t\t\t\t{ input: variables },\n\t\t\t\t\toptions,\n\t\t\t\t).then((res) => carryErrors(res, res.updateWebhook));\n\t\t\t},\n\t\t},\n\t};\n}\n\nexport type Sdk = ReturnType<typeof getSdk>;\n","import type { AppValidScopes } from \"@/codegen/graphql/server\";\nimport type { OAuth2Config } from \"@auth/core/providers\";\n\nexport interface WhopOAuthProfile {\n\tid: string;\n\tusername?: string;\n\temail: string;\n\tprofile_pic_url?: string;\n}\n\n/**\n * The authorization tokens returned from the Whop OAuth2 API.\n */\nexport interface WhopOAuthTokens {\n\t/**\n\t * The primary access token for the user.\n\t */\n\taccess_token: string;\n\t/**\n\t * The number of seconds until the access token expires.\n\t */\n\texpires_in: number;\n\t/**\n\t * The timestamp of when the access token was created (in s).\n\t */\n\tcreated_at: number;\n}\n\n/**\n * The OAuth2 class is used to interact with the Whop OAuth2 API.\n *\n * @see https://dev.whop.com/features/oauth-guide\n */\nexport class WhopOAuth {\n\tpublic static readonly OAUTH_URL = \"https://whop.com/oauth/\";\n\n\tconstructor(\n\t\t/**\n\t\t * Your Whop app id. This can be found in your developer dashboard\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tprivate readonly appId: string,\n\t\t/**\n\t\t * Your Whop app api key. This can be found in your developer dashboard\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tprivate readonly appApiKey: string,\n\t\t/**\n\t\t * **optional** - The origin of the Whop API. This is used to make API requests to the Whop API.\n\t\t *\n\t\t * @default https://api.whop.com\n\t\t */\n\t\tprivate readonly apiOrigin = \"https://api.whop.com\",\n\t) {}\n\n\t/**\n\t * Get an authorization url to start the OAuth2 flow.\n\t *\n\t * ```ts\n\t * const { url, state } = whopOAuth.getAuthorizationUrl({\n\t * \tredirectUri: \"http://localhost:3000/api/oauth/callback\",\n\t * \tscope: [\"read_user\"],\n\t * })\n\t * ```\n\t */\n\tpublic getAuthorizationUrl({\n\t\tstate = crypto.randomUUID(),\n\t\tredirectUri,\n\t\tscope = [\"read_user\"],\n\t}: {\n\t\t/**\n\t\t * The state to be used in the OAuth2 flow. This is used to prevent CSRF attacks.\n\t\t *\n\t\t * **optional** - defaults to a random uuid\n\t\t */\n\t\tstate?: string;\n\t\t/**\n\t\t * The redirect uri to be used in the OAuth2 flow. This is used to redirect the user back to your app after authorization.\n\t\t *\n\t\t * **NOTE** - the redirect uri you are using here must be defined in your app's settings in the developer dashboard.\n\t\t *\n\t\t * @see https://whop.com/dashboard/developer/\n\t\t */\n\t\tredirectUri: string | URL;\n\t\t/**\n\t\t * The scopes to be used in the OAuth2 flow. This is used to request permissions from the user.\n\t\t *\n\t\t * @see https://dev.whop.com/api-reference/graphql/scopes\n\t\t */\n\t\tscope?: AppValidScopes[];\n\t}): {\n\t\t/**\n\t\t * The url to redirect the user to for authorization\n\t\t */\n\t\turl: string;\n\t\t/**\n\t\t * The state to be used in the OAuth2 flow. This is used to prevent CSRF attacks.\n\t\t */\n\t\tstate: string;\n\t} {\n\t\tconst oAuthUrl = new URL(WhopOAuth.OAUTH_URL);\n\n\t\toAuthUrl.searchParams.set(\"client_id\", this.appId);\n\t\toAuthUrl.searchParams.set(\"response_type\", \"code\");\n\t\toAuthUrl.searchParams.set(\"scope\", scope.join(\" \"));\n\t\toAuthUrl.searchParams.set(\"state\", state);\n\n\t\tif (redirectUri instanceof URL) {\n\t\t\toAuthUrl.searchParams.set(\"redirect_uri\", redirectUri.toString());\n\t\t} else {\n\t\t\toAuthUrl.searchParams.set(\"redirect_uri\", redirectUri);\n\t\t}\n\n\t\treturn {\n\t\t\turl: oAuthUrl.toString(),\n\t\t\tstate,\n\t\t};\n\t}\n\n\t/**\n\t * Exchange a code for a token.\n\t *\n\t * ```ts\n\t * const authResponse = await whopOAuth.exchangeCode({\n\t * \tcode: \"1234\",\n\t * \tredirectUri: \"http://localhost:3000/api/oauth/callback\",\n\t * })\n\t *\n\t * if (!authResponse.ok) {\n\t * \tthrow new Error(`Failed to exchange code for token. Status: ${authResponse.code}`);\n\t * }\n\t *\n\t * const { access_token } = authResponse.tokens;\n\t * ```\n\t */\n\tpublic async exchangeCode({\n\t\tcode,\n\t\tredirectUri,\n\t}: {\n\t\t/**\n\t\t * The code you received when the user was redirected back to your app.\n\t\t */\n\t\tcode: string;\n\t\t/**\n\t\t * The redirect uri you used when getting the authorization url.\n\t\t *\n\t\t * **NOTE** - this must be the same as the redirect uri you used when getting the authorization url.\n\t\t */\n\t\tredirectUri: string | URL;\n\t}): Promise<\n\t\t| {\n\t\t\t\tok: true;\n\t\t\t\t/**\n\t\t\t\t * The authorization token you received from the user to make request to the Whop API\n\t\t\t\t */\n\t\t\t\ttokens: WhopOAuthTokens;\n\t\t  }\n\t\t| {\n\t\t\t\tok: false;\n\t\t\t\t/**\n\t\t\t\t * The status code of the response\n\t\t\t\t */\n\t\t\t\tcode: number;\n\t\t\t\t/**\n\t\t\t\t * The raw response from the Whop API\n\t\t\t\t */\n\t\t\t\traw: Response;\n\t\t  }\n\t> {\n\t\tconst resolvedRedirectUri =\n\t\t\tredirectUri instanceof URL ? redirectUri.toString() : redirectUri;\n\n\t\tconst tokensEndpoint = new URL(\"/api/oauth/token\", this.apiOrigin);\n\t\tconst tokensResponse = await fetch(tokensEndpoint, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcode,\n\t\t\t\tclient_id: this.appId,\n\t\t\t\tclient_secret: this.appApiKey,\n\t\t\t\tgrant_type: \"authorization_code\",\n\t\t\t\tredirect_uri: resolvedRedirectUri,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t\t\"cache-control\": \"no-cache\",\n\t\t\t\tpragma: \"no-cache\",\n\t\t\t},\n\t\t\tcache: \"no-store\",\n\t\t});\n\n\t\tif (!tokensResponse.ok) {\n\t\t\treturn {\n\t\t\t\tok: false,\n\t\t\t\tcode: tokensResponse.status,\n\t\t\t\traw: tokensResponse,\n\t\t\t};\n\t\t}\n\n\t\tconst tokens = await tokensResponse.json();\n\n\t\treturn {\n\t\t\tok: true,\n\t\t\ttokens,\n\t\t};\n\t}\n\n\t/**\n\t * Get an Auth.js provider for the Whop OAuth2 API.\n\t *\n\t * Works with any Auth.js compatible client:\n\t * - [`next-auth`](https://www.npmjs.com/package/next-auth)\n\t * - [`@auth/qwik`](https://www.npmjs.com/package/@auth/qwik)\n\t * - [`@auth/sveltekit`](https://www.npmjs.com/package/@auth/sveltekit)\n\t * - [`@auth/express`](https://www.npmjs.com/package/@auth/express)\n\t * - etc.\n\t *\n\t * ```ts\n\t * const WhopProvider = whopOAuth.authJsProvider({\n\t * \tscope: [\"read_user\"],\n\t * })\n\t *\n\t * export const auth = Auth({\n\t *\t\tproviders: [WhopProvider],\n\t *\t});\n\t * ```\n\t */\n\tpublic authJsProvider({\n\t\tscope = [\"read_user\"],\n\t}: {\n\t\t/**\n\t\t * The scopes to be used in the OAuth2 flow. This is used to request permissions from the user.\n\t\t *\n\t\t * @see https://dev.whop.com/api-reference/graphql/scopes\n\t\t */\n\t\tscope?: AppValidScopes[];\n\t}): OAuth2Config<WhopOAuthProfile> {\n\t\treturn {\n\t\t\tid: \"whop\",\n\t\t\tname: \"Whop\",\n\t\t\ttype: \"oauth\" as const,\n\t\t\tclientId: this.appId,\n\t\t\tclientSecret: this.appApiKey,\n\t\t\tauthorization: {\n\t\t\t\turl: WhopOAuth.OAUTH_URL,\n\t\t\t\tparams: {\n\t\t\t\t\tscope: scope.join(\" \"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tchecks: [\"state\" as const],\n\t\t\ttoken: new URL(\"/api/oauth/token\", this.apiOrigin).href,\n\t\t\tuserinfo: new URL(\"/api/v5/me\", this.apiOrigin).href,\n\t\t\tprofile(profile: WhopOAuthProfile) {\n\t\t\t\treturn {\n\t\t\t\t\tid: profile.id,\n\t\t\t\t\tname: profile.username || profile.email,\n\t\t\t\t\temail: profile.email,\n\t\t\t\t\timage: profile.profile_pic_url,\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t}\n}\n","import type { WhopServerSdkOptions } from \"@/sdk/server-sdk-shared\";\n\nexport const DEFAULT_WEBSOCKET_ORIGIN = \"https://ws-prod.whop.com\";\n\ntype SendWebsocketMessageInput = {\n\tmessage: string;\n\ttarget:\n\t\t| {\n\t\t\t\texperience: string;\n\t\t  }\n\t\t| {\n\t\t\t\tuser: string;\n\t\t  }\n\t\t| {\n\t\t\t\tcustom: string;\n\t\t  }\n\t\t| \"everyone\";\n};\n\nexport function sendWebsocketMessageFunction(apiOptions: WhopServerSdkOptions) {\n\tconst origin = apiOptions.websocketOrigin ?? DEFAULT_WEBSOCKET_ORIGIN;\n\tconst path = \"/v1/websockets/send\";\n\tconst url = new URL(path, origin);\n\tconst headers = new Headers();\n\theaders.set(\"Content-Type\", \"application/json\");\n\theaders.set(\"Authorization\", `Bearer ${apiOptions.appApiKey}`);\n\n\treturn async function SendWebsocketMessage(input: SendWebsocketMessageInput) {\n\t\tconst response = await fetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(input),\n\t\t\theaders,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tconst error = await response.text();\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to send websocket message. Code: ${response.status}. Message: ${error}`,\n\t\t\t);\n\t\t}\n\n\t\tconst data = (await response.json()) as { ok: boolean };\n\n\t\tif (!data.ok) {\n\t\t\tthrow new Error(\"Failed to send websocket message\");\n\t\t}\n\t};\n}\n","import type { WhopServerSdkOptions } from \"@/sdk/server-sdk-shared\";\nimport { WhopWebsocketClientBase } from \"./client.common\";\nimport { DEFAULT_WEBSOCKET_ORIGIN } from \"./server\";\n\nexport class WhopWebsocketClientServer extends WhopWebsocketClientBase {\n\tprivate keys: WhopServerSdkOptions;\n\n\tconstructor(keys: WhopServerSdkOptions) {\n\t\tsuper();\n\t\tthis.keys = keys;\n\t}\n\n\tprotected makeWebsocket(): WebSocket {\n\t\tconst path = \"/v1/websockets/connect\";\n\t\tconst origin = this.keys.websocketOrigin ?? DEFAULT_WEBSOCKET_ORIGIN;\n\t\tconst url = new URL(path, origin);\n\t\turl.protocol = url.protocol.replace(\"http\", \"ws\");\n\n\t\tconst headers = {\n\t\t\tAuthorization: `Bearer ${this.keys.appApiKey}`,\n\t\t\t\"x-on-behalf-of\": this.keys.onBehalfOfUserId,\n\t\t};\n\n\t\t// NodeJS 22 has a built in websocket client,\n\t\t// instead of passing protocols as a string, the second parameter accepts an object with headers.\n\t\t// However the types don't know about this yet, hence the weird casting...\n\t\treturn new WebSocket(url, { headers } as unknown as string[]);\n\t}\n}\n\nexport function makeConnectToWebsocketFunction(options: WhopServerSdkOptions) {\n\treturn function connectToWebsocket() {\n\t\treturn new WhopWebsocketClientServer(options);\n\t};\n}\n","import { fileSdkExtensions } from \"@/attachments/file-sdk-extensions\";\nimport type { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { type Requester, getSdk } from \"@/codegen/graphql/server\";\nimport { WhopOAuth } from \"@/oauth\";\nimport { DEFAULT_API_ORIGIN, graphqlFetch } from \"@/sdk/sdk-common\";\nimport { makeUserTokenVerifier } from \"@/verify-user-token\";\nimport { makeConnectToWebsocketFunction } from \"@/websockets/client.server\";\nimport { sendWebsocketMessageFunction } from \"@/websockets/server\";\n\n/**\n * SDK options for server side use\n */\nexport interface WhopServerSdkOptions {\n\t/** The API key to use for API calls */\n\tappApiKey: string;\n\t/** Required when using the oauth module. Defaults to `NEXT_PUBLIC_WHOP_APP_ID` */\n\tappId: string;\n\t/** Use this to make the API calls on behalf of a user */\n\tonBehalfOfUserId?: string;\n\t/** Use this to make the API calls on behalf of a company */\n\tcompanyId?: string;\n\t/** the origin of the API */\n\tapiOrigin?: string;\n\t/** the path of the API */\n\tapiPath?: string;\n\t/** the origin of the server to server websocket api */\n\twebsocketOrigin?: string;\n}\n\nfunction BaseWhopServerSdk(\n\toptions: WhopServerSdkOptions,\n\tuploadFile: ReturnType<typeof makeUploadAttachmentFunction>,\n) {\n\tconst baseSdk = getSdk(makeRequester(options));\n\n\tconst sendWebsocketMessage = sendWebsocketMessageFunction(options);\n\tconst websocketClient = makeConnectToWebsocketFunction(options);\n\n\tconst fileSdk = fileSdkExtensions(baseSdk, uploadFile);\n\tconst oauth = new WhopOAuth(\n\t\toptions.appId,\n\t\toptions.appApiKey,\n\t\toptions.apiOrigin,\n\t);\n\tconst verifyUserToken = makeUserTokenVerifier({\n\t\tappId: options.appId,\n\t\tdontThrow: false,\n\t});\n\n\treturn {\n\t\t...baseSdk,\n\t\tattachments: {\n\t\t\t...baseSdk.attachments,\n\t\t\t...fileSdk,\n\t\t},\n\t\twebsockets: {\n\t\t\tsendMessage: sendWebsocketMessage,\n\t\t\tclient: websocketClient,\n\t\t},\n\t\toauth,\n\t\tverifyUserToken,\n\t};\n}\n\nexport function makeWhopServerSdk({\n\tuploadFile,\n}: { uploadFile: ReturnType<typeof makeUploadAttachmentFunction> }) {\n\treturn function WhopServerSdk(options: WhopServerSdkOptions): WhopServerSdk {\n\t\tconst baseSdk = BaseWhopServerSdk(options, uploadFile);\n\n\t\treturn {\n\t\t\t...baseSdk,\n\t\t\twithUser: (userId: string) =>\n\t\t\t\tWhopServerSdk({ ...options, onBehalfOfUserId: userId }),\n\t\t\twithCompany: (companyId: string) =>\n\t\t\t\tWhopServerSdk({ ...options, companyId }),\n\t\t};\n\t};\n}\n\nexport type WhopServerSdk = ReturnType<typeof BaseWhopServerSdk> & {\n\twithUser: (userId: string) => WhopServerSdk;\n\twithCompany: (companyId: string) => WhopServerSdk;\n};\n\nfunction makeRequester(\n\tapiOptions: WhopServerSdkOptions,\n): Requester<RequestInit> {\n\tconst endpoint = getEndpoint(apiOptions);\n\tconst headers = getHeaders(apiOptions);\n\treturn async function fetcher<R, V>(\n\t\toperationId: string,\n\t\toperationName: string,\n\t\toperationType: \"query\" | \"mutation\",\n\t\tvars?: V,\n\t\toptions?: RequestInit,\n\t): Promise<R> {\n\t\tconst customHeaders = new Headers(options?.headers);\n\t\tconst actualHeaders = new Headers(headers);\n\t\tfor (const [key, value] of customHeaders.entries()) {\n\t\t\tactualHeaders.set(key, value);\n\t\t}\n\t\treturn graphqlFetch<R, V>(\n\t\t\tendpoint,\n\t\t\toperationId,\n\t\t\toperationName,\n\t\t\toperationType,\n\t\t\tvars,\n\t\t\tactualHeaders,\n\t\t);\n\t};\n}\n\nfunction getEndpoint(apiOptions: WhopServerSdkOptions) {\n\tconst url = new URL(\n\t\tapiOptions.apiPath ?? \"/public-graphql\",\n\t\tapiOptions.apiOrigin ?? DEFAULT_API_ORIGIN,\n\t);\n\treturn url.href;\n}\n\nexport function getHeaders(options: WhopServerSdkOptions) {\n\tconst headers = new Headers();\n\n\theaders.set(\"Authorization\", `Bearer ${options.appApiKey}`);\n\tif (options.onBehalfOfUserId)\n\t\theaders.set(\"x-on-behalf-of\", options.onBehalfOfUserId);\n\tif (options.companyId) headers.set(\"x-company-id\", options.companyId);\n\n\treturn headers;\n}\n"],"names":["verifyUserToken","args","prepareAttachmentForUpload","analyzeAttachment","carryErrors","getSdk","makeConnectToWebsocketFunction","getSdk","makeRequester","makeConnectToWebsocketFunction","verifyUserToken","getEndpoint"],"mappings":"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","debugId":null}},
    {"offset": {"line": 5004, "column": 0}, "map": {"version":3,"sources":["file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/attachments/upload-part-node.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/client-sdk-node.ts","file:///Users/danielnogueira/whopWorkoutPlanner/workout-planner/node_modules/%40whop/api/src/sdk/server-sdk-node.ts"],"sourcesContent":["import { request } from \"node:https\";\nimport { Readable } from \"node:stream\";\nimport type { ReadableStream as NodeReadableStream } from \"node:stream/web\";\nimport {\n\tMULTIPART_UPLOAD_CHUNK_SIZE,\n\ttype MultipartUploadTask,\n} from \"@/attachments/common\";\n\n/**\n * Uploads a part of a file in a node.js environment.\n * @param task The task to upload.\n * @returns The etag of the uploaded part.\n */\nexport async function uploadPartImpl({\n\turl,\n\tfullData,\n\tpartNumber,\n\theaders,\n\tonProgress,\n\tsignal,\n}: MultipartUploadTask) {\n\tconst offset = (partNumber - 1) * MULTIPART_UPLOAD_CHUNK_SIZE;\n\tconst data = fullData.slice(\n\t\toffset,\n\t\tMath.min(offset + MULTIPART_UPLOAD_CHUNK_SIZE, fullData.size),\n\t);\n\n\tsignal?.throwIfAborted();\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\tconst fullURL = new URL(url);\n\t\tconst req = request(fullURL, {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t...headers,\n\t\t\t\thost: fullURL.host,\n\t\t\t\t\"content-length\": data.size.toString(),\n\t\t\t},\n\t\t\tsignal,\n\t\t});\n\n\t\tlet uploadedBytes = 0;\n\n\t\treq.on(\"response\", async (res) => {\n\t\t\tconst statusCode = res.statusCode ?? 0;\n\t\t\tif (statusCode >= 200 && statusCode < 300) {\n\t\t\t\tconst etag = res.headers.etag;\n\t\t\t\tif (!etag) {\n\t\t\t\t\treject(new Error(\"Missing etag on upload response\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(etag.slice(1, -1));\n\t\t\t} else {\n\t\t\t\tlet chunks = \"\";\n\t\t\t\tfor await (const chunk of res) {\n\t\t\t\t\tchunks += chunk.toString();\n\t\t\t\t}\n\t\t\t\treject(\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t`Failed to upload part with ${statusCode}: ${res.statusMessage}`,\n\t\t\t\t\t\t{ cause: chunks },\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\treq.on(\"error\", (error) => {\n\t\t\treject(error);\n\t\t});\n\n\t\treq.on(\"drain\", () => {\n\t\t\tonProgress?.({\n\t\t\t\ttotal: data.size,\n\t\t\t\tloaded: uploadedBytes,\n\t\t\t});\n\t\t});\n\n\t\tReadable.fromWeb(data.stream() as NodeReadableStream)\n\t\t\t.on(\"data\", (chunk) => {\n\t\t\t\tuploadedBytes += chunk.length;\n\t\t\t\tonProgress?.({\n\t\t\t\t\ttotal: data.size,\n\t\t\t\t\tloaded: uploadedBytes,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.pipe(req);\n\n\t\tonProgress?.({ total: data.size, loaded: 0 });\n\t});\n}\n","import { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { uploadPartImpl } from \"@/attachments/upload-part-node\";\nimport { makeWhopClientSdk } from \"./client-sdk-shared\";\n\nconst uploadFile = makeUploadAttachmentFunction({ uploadPart: uploadPartImpl });\n\nconst sdk = makeWhopClientSdk({ uploadFile });\n\nimport type { WhopClientSdkOptions } from \"./client-sdk-shared\";\n\nexport function WhopClientSdk(options?: WhopClientSdkOptions) {\n\treturn sdk(options);\n}\n\nexport type WhopClientSdk = ReturnType<typeof WhopClientSdk>;\nexport type { WhopClientSdkOptions };\n","import { makeUploadAttachmentFunction } from \"@/attachments/upload\";\nimport { uploadPartImpl } from \"@/attachments/upload-part-node\";\n\nconst uploadFile = makeUploadAttachmentFunction({ uploadPart: uploadPartImpl });\n\nconst sdk = makeWhopServerSdk({ uploadFile });\n\nimport type { WhopServerSdkOptions } from \"./server-sdk-shared\";\nimport { makeWhopServerSdk } from \"./server-sdk-shared\";\n\nexport function WhopServerSdk(options: WhopServerSdkOptions) {\n\treturn sdk(options);\n}\n\nexport type WhopServerSdk = ReturnType<typeof WhopServerSdk>;\nexport type { WhopServerSdkOptions };\n"],"names":["uploadFile","sdk"],"mappings":";;;;;;;;AAAA,SAAS,eAAe;AACxB,SAAS,gBAAgB;;;;AAYzB,eAAsB,eAAe,EACpC,GAAA,EACA,QAAA,EACA,UAAA,EACA,OAAA,EACA,UAAA,EACA,MAAA,EACD,EAAwB;IACvB,MAAM,SAAA,CAAU,aAAa,CAAA,IAAK,sOAAA;IAClC,MAAM,OAAO,SAAS,KAAA,CACrB,QACA,KAAK,GAAA,CAAI,SAAS,sOAAA,EAA6B,SAAS,IAAI;IAG7D,QAAQ,eAAe;IAEvB,OAAO,IAAI,QAAgB,CAAC,SAAS,WAAW;QAC/C,MAAM,UAAU,IAAI,IAAI,GAAG;QAC3B,MAAM,UAAM,8GAAA,EAAQ,SAAS;YAC5B,QAAQ;YACR,SAAS;gBACR,GAAG,OAAA;gBACH,MAAM,QAAQ,IAAA;gBACd,kBAAkB,KAAK,IAAA,CAAK,QAAA,CAAS;YACtC;YACA;QACD,CAAC;QAED,IAAI,gBAAgB;QAEpB,IAAI,EAAA,CAAG,YAAY,OAAO,QAAQ;YACjC,MAAM,aAAa,IAAI,UAAA,IAAc;YACrC,IAAI,cAAc,OAAO,aAAa,KAAK;gBAC1C,MAAM,OAAO,IAAI,OAAA,CAAQ,IAAA;gBACzB,IAAI,CAAC,MAAM;oBACV,OAAO,IAAI,MAAM,iCAAiC,CAAC;oBACnD;gBACD;gBACA,QAAQ,KAAK,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC;YAC1B,OAAO;gBACN,IAAI,SAAS;gBACb,WAAA,MAAiB,SAAS,IAAK;oBAC9B,UAAU,MAAM,QAAA,CAAS;gBAC1B;gBACA,OACC,IAAI,MACH,CAAA,2BAAA,EAA8B,UAAU,CAAA,EAAA,EAAK,IAAI,aAAa,EAAA,EAC9D;oBAAE,OAAO;gBAAO;YAGnB;QACD,CAAC;QAED,IAAI,EAAA,CAAG,SAAS,CAAC,UAAU;YAC1B,OAAO,KAAK;QACb,CAAC;QAED,IAAI,EAAA,CAAG,SAAS,MAAM;YACrB,aAAa;gBACZ,OAAO,KAAK,IAAA;gBACZ,QAAQ;YACT,CAAC;QACF,CAAC;QAED,iHAAA,CAAS,OAAA,CAAQ,KAAK,MAAA,CAAO,CAAuB,EAClD,EAAA,CAAG,QAAQ,CAAC,UAAU;YACtB,iBAAiB,MAAM,MAAA;YACvB,aAAa;gBACZ,OAAO,KAAK,IAAA;gBACZ,QAAQ;YACT,CAAC;QACF,CAAC,EACA,IAAA,CAAK,GAAG;QAEV,aAAa;YAAE,OAAO,KAAK,IAAA;YAAM,QAAQ;QAAE,CAAC;IAC7C,CAAC;AACF;;ACrFA,IAAM,iBAAa,uOAAA,EAA6B;IAAE,YAAY;AAAe,CAAC;AAE9E,IAAM,UAAM,4NAAA,EAAkB;IAAE;AAAW,CAAC;AAIrC,SAAS,cAAc,OAAA,EAAgC;IAC7D,OAAO,IAAI,OAAO;AACnB;;ACTA,IAAMA,kBAAa,uOAAA,EAA6B;IAAE,YAAY;AAAe,CAAC;AAE9E,IAAMC,WAAM,4NAAA,EAAkB;IAAE,YAAAD;AAAW,CAAC;AAKrC,SAAS,cAAc,OAAA,EAA+B;IAC5D,OAAOC,KAAI,OAAO;AACnB","debugId":null}}]
}